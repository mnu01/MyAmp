

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 18 20:49:59 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   129                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,delta=1
   140                           	psect	text122,global,reloc=2,class=CODE,delta=1
   141                           	psect	text123,global,reloc=2,class=CODE,delta=1
   142                           	psect	text124,global,reloc=2,class=CODE,delta=1
   143                           	psect	text125,global,reloc=2,class=CODE,delta=1
   144                           	psect	text126,global,reloc=2,class=CODE,delta=1
   145                           	psect	text127,global,reloc=2,class=CODE,delta=1
   146                           	psect	text128,global,reloc=2,class=CODE,delta=1
   147                           	psect	text129,global,reloc=2,class=CODE,delta=1
   148                           	psect	text130,global,reloc=2,class=CODE,delta=1
   149                           	psect	text131,global,reloc=2,class=CODE,delta=1
   150                           	psect	text132,global,reloc=2,class=CODE,delta=1
   151                           	psect	text133,global,reloc=2,class=CODE,delta=1
   152                           	psect	text134,global,reloc=2,class=CODE,delta=1
   153                           	psect	text135,global,reloc=2,class=CODE,delta=1
   154                           	psect	text136,global,reloc=2,class=CODE,delta=1
   155                           	psect	text137,global,reloc=2,class=CODE,delta=1
   156                           	psect	text138,global,reloc=2,class=CODE,delta=1
   157                           	psect	text139,global,reloc=2,class=CODE,delta=1
   158                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   161                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   162                           	dabs	1,0x400,48,_BDT
   163                           	dabs	1,0x438,8,_CtrlTrfData
   164                           	dabs	1,0x430,8,_SetupPkt
   165  0000                     
   166                           ; Version 1.45
   167                           ; Generated 16/11/2017 GMT
   168                           ; 
   169                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   170                           ; All rights reserved.
   171                           ; 
   172                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   173                           ; 
   174                           ; Redistribution and use in source and binary forms, with or without modification, are
   175                           ; permitted provided that the following conditions are met:
   176                           ; 
   177                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   178                           ;        conditions and the following disclaimer.
   179                           ; 
   180                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   181                           ;        of conditions and the following disclaimer in the documentation and/or other
   182                           ;        materials provided with the distribution.
   183                           ; 
   184                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   185                           ;        software without specific prior written permission.
   186                           ; 
   187                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   188                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   189                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   190                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   191                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   192                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   193                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   194                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   195                           ; 
   196                           ; 
   197                           ; Code-generator required, PIC18F2550 Definitions
   198                           ; 
   199                           ; SFR Addresses
   200  0000                     
   201                           	psect	idataBANK2
   202  005584                     __pidataBANK2:
   203                           	opt stack 0
   204                           
   205                           ;initializer for __Digits
   206  005584  77                 	db	119
   207  005585  06                 	db	6
   208  005586  B3                 	db	179
   209  005587  97                 	db	151
   210  005588  C6                 	db	198
   211  005589  D5                 	db	213
   212  00558A  F5                 	db	245
   213  00558B  07                 	db	7
   214  00558C  F7                 	db	247
   215  00558D  D7                 	db	215
   216                           
   217                           	psect	smallconst
   218  000800                     __psmallconst:
   219                           	opt stack 0
   220  000800  00                 	db	0
   221  000801                     _USB_SD_Ptr:
   222                           	opt stack 0
   223  000801  E5                 	db	low _sd000
   224  000802  08                 	db	high _sd000
   225  000803  4C                 	db	low _sd001
   226  000804  08                 	db	high _sd001
   227  000805  B9                 	db	low _sd002
   228  000806  08                 	db	high _sd002
   229  000807                     __end_of_USB_SD_Ptr:
   230                           	opt stack 0
   231  000807                     _USB_CD_Ptr:
   232                           	opt stack 0
   233  000807  09                 	db	low _configDescriptor1
   234  000808  08                 	db	high _configDescriptor1
   235  000809                     __end_of_USB_CD_Ptr:
   236                           	opt stack 0
   237  000809                     _configDescriptor1:
   238                           	opt stack 0
   239  000809  09                 	db	9
   240  00080A  02                 	db	2
   241  00080B  43                 	db	67
   242  00080C  00                 	db	0
   243  00080D  02                 	db	2
   244  00080E  01                 	db	1
   245  00080F  00                 	db	0
   246  000810  C0                 	db	192
   247  000811  32                 	db	50
   248  000812  09                 	db	9
   249  000813  04                 	db	4
   250  000814  00                 	db	0
   251  000815  00                 	db	0
   252  000816  01                 	db	1
   253  000817  02                 	db	2
   254  000818  02                 	db	2
   255  000819  01                 	db	1
   256  00081A  00                 	db	0
   257  00081B  05                 	db	5
   258  00081C  24                 	db	36
   259  00081D  00                 	db	0
   260  00081E  10                 	db	16
   261  00081F  01                 	db	1
   262  000820  04                 	db	4
   263  000821  24                 	db	36
   264  000822  02                 	db	2
   265  000823  02                 	db	2
   266  000824  05                 	db	5
   267  000825  24                 	db	36
   268  000826  06                 	db	6
   269  000827  00                 	db	0
   270  000828  01                 	db	1
   271  000829  05                 	db	5
   272  00082A  24                 	db	36
   273  00082B  01                 	db	1
   274  00082C  00                 	db	0
   275  00082D  01                 	db	1
   276  00082E  07                 	db	7
   277  00082F  05                 	db	5
   278  000830  81                 	db	129
   279  000831  03                 	db	3
   280  000832  08                 	db	8
   281  000833  00                 	db	0
   282  000834  02                 	db	2
   283  000835  09                 	db	9
   284  000836  04                 	db	4
   285  000837  01                 	db	1
   286  000838  00                 	db	0
   287  000839  02                 	db	2
   288  00083A  0A                 	db	10
   289  00083B  00                 	db	0
   290  00083C  00                 	db	0
   291  00083D  00                 	db	0
   292  00083E  07                 	db	7
   293  00083F  05                 	db	5
   294  000840  02                 	db	2
   295  000841  02                 	db	2
   296  000842  40                 	db	64
   297  000843  00                 	db	0
   298  000844  00                 	db	0
   299  000845  07                 	db	7
   300  000846  05                 	db	5
   301  000847  82                 	db	130
   302  000848  02                 	db	2
   303  000849  40                 	db	64
   304  00084A  00                 	db	0
   305  00084B  00                 	db	0
   306  00084C                     __end_of_configDescriptor1:
   307                           	opt stack 0
   308  00084C                     _sd001:
   309                           	opt stack 0
   310  00084C  34                 	db	52
   311  00084D  03                 	db	3
   312  00084E  004D               	dw	77
   313  000850  0069               	dw	105
   314  000852  0063               	dw	99
   315  000854  0072               	dw	114
   316  000856  006F               	dw	111
   317  000858  0063               	dw	99
   318  00085A  0068               	dw	104
   319  00085C  0069               	dw	105
   320  00085E  0070               	dw	112
   321  000860  0020               	dw	32
   322  000862  0054               	dw	84
   323  000864  0065               	dw	101
   324  000866  0063               	dw	99
   325  000868  0068               	dw	104
   326  00086A  006E               	dw	110
   327  00086C  006F               	dw	111
   328  00086E  006C               	dw	108
   329  000870  006F               	dw	111
   330  000872  0067               	dw	103
   331  000874  0079               	dw	121
   332  000876  0020               	dw	32
   333  000878  0049               	dw	73
   334  00087A  006E               	dw	110
   335  00087C  0063               	dw	99
   336  00087E  002E               	dw	46
   337  000880                     __end_of_sd001:
   338                           	opt stack 0
   339  000880                     exp@coeff:
   340                           	opt stack 0
   341  000880  00                 	db	0
   342  000881  80                 	db	128
   343  000882  3F                 	db	63
   344  000883  72                 	db	114
   345  000884  31                 	db	49
   346  000885  3F                 	db	63
   347  000886  FE                 	db	254
   348  000887  75                 	db	117
   349  000888  3E                 	db	62
   350  000889  58                 	db	88
   351  00088A  63                 	db	99
   352  00088B  3D                 	db	61
   353  00088C  95                 	db	149
   354  00088D  1D                 	db	29
   355  00088E  3C                 	db	60
   356  00088F  C5                 	db	197
   357  000890  AE                 	db	174
   358  000891  3A                 	db	58
   359  000892  79                 	db	121
   360  000893  21                 	db	33
   361  000894  39                 	db	57
   362  000895  94                 	db	148
   363  000896  80                 	db	128
   364  000897  37                 	db	55
   365  000898  93                 	db	147
   366  000899  A7                 	db	167
   367  00089A  35                 	db	53
   368  00089B  56                 	db	86
   369  00089C  15                 	db	21
   370  00089D  34                 	db	52
   371  00089E                     __end_ofexp@coeff:
   372                           	opt stack 0
   373  00089E                     log@coeff:
   374                           	opt stack 0
   375  00089E  00                 	db	0
   376  00089F  00                 	db	0
   377  0008A0  00                 	db	0
   378  0008A1  00                 	db	0
   379  0008A2  80                 	db	128
   380  0008A3  3F                 	db	63
   381  0008A4  F0                 	db	240
   382  0008A5  FF                 	db	255
   383  0008A6  BE                 	db	190
   384  0008A7  E2                 	db	226
   385  0008A8  A9                 	db	169
   386  0008A9  3E                 	db	62
   387  0008AA  83                 	db	131
   388  0008AB  76                 	db	118
   389  0008AC  BE                 	db	190
   390  0008AD  AE                 	db	174
   391  0008AE  2B                 	db	43
   392  0008AF  3E                 	db	62
   393  0008B0  3C                 	db	60
   394  0008B1  C3                 	db	195
   395  0008B2  BD                 	db	189
   396  0008B3  D2                 	db	210
   397  0008B4  13                 	db	19
   398  0008B5  3D                 	db	61
   399  0008B6  78                 	db	120
   400  0008B7  D3                 	db	211
   401  0008B8  BB                 	db	187
   402  0008B9                     __end_oflog@coeff:
   403                           	opt stack 0
   404  0008B9                     _sd002:
   405                           	opt stack 0
   406  0008B9  1A                 	db	26
   407  0008BA  03                 	db	3
   408  0008BB  004D               	dw	77
   409  0008BD  0079               	dw	121
   410  0008BF  0041               	dw	65
   411  0008C1  004D               	dw	77
   412  0008C3  0050               	dw	80
   413  0008C5  002D               	dw	45
   414  0008C7  0043               	dw	67
   415  0008C9  006F               	dw	111
   416  0008CB  006E               	dw	110
   417  0008CD  0066               	dw	102
   418  0008CF  0069               	dw	105
   419  0008D1  0067               	dw	103
   420  0008D3                     __end_of_sd002:
   421                           	opt stack 0
   422  0008D3                     _device_dsc:
   423                           	opt stack 0
   424  0008D3  12                 	db	18
   425  0008D4  01                 	db	1
   426  0008D5  0200               	dw	512
   427  0008D7  02                 	db	2
   428  0008D8  00                 	db	0
   429  0008D9  00                 	db	0
   430  0008DA  08                 	db	8
   431  0008DB  04D8               	dw	1240
   432  0008DD  000A               	dw	10
   433  0008DF  0100               	dw	256
   434  0008E1  01                 	db	1
   435  0008E2  02                 	db	2
   436  0008E3  00                 	db	0
   437  0008E4  01                 	db	1
   438  0008E5                     __end_of_device_dsc:
   439                           	opt stack 0
   440  0008E5                     _sd000:
   441                           	opt stack 0
   442  0008E5  04                 	db	4
   443  0008E6  03                 	db	3
   444  0008E7  0409               	dw	1033
   445  0008E9                     __end_of_sd000:
   446                           	opt stack 0
   447  0000                     _SSPBUF	set	4041
   448  0000                     _SSPCON2	set	4037
   449  0000                     _SSPADD	set	4040
   450  0000                     _SSPCON1	set	4038
   451  0000                     _SSPSTAT	set	4039
   452  0000                     _PIE1bits	set	3997
   453  0000                     _SPBRG	set	4015
   454  0000                     _TMR1L	set	4046
   455  0000                     _TMR1H	set	4047
   456  0000                     _EECON2	set	4007
   457  0000                     _INTCONbits	set	4082
   458  0000                     _EEDATA	set	4008
   459  0000                     _EECON1bits	set	4006
   460  0000                     _EEADR	set	4009
   461  0000                     _PORTBbits	set	3969
   462  0000                     _ADCON1	set	4033
   463  0000                     _RCSTAbits	set	4011
   464  0000                     _RCREG	set	4014
   465  0000                     _PIR1bits	set	3998
   466  0000                     _UEP0bits	set	3952
   467  0000                     _USTAT	set	3948
   468  0000                     _UIEbits	set	3945
   469  0000                     _PIR2bits	set	4001
   470  0000                     _UCON	set	3949
   471  0000                     _UIRbits	set	3944
   472  0000                     _UADDR	set	3950
   473  0000                     _UCONbits	set	3949
   474  0000                     _UIE	set	3945
   475  0000                     _UEIE	set	3947
   476  0000                     _UCFG	set	3951
   477  0000                     _UIR	set	3944
   478  0000                     _UEIR	set	3946
   479  0000                     _PIE2bits	set	4000
   480  0000                     _UEP1	set	3953
   481  0000                     _UEP0	set	3952
   482  0000                     _RCEN	set	32299
   483  0000                     _ACKEN	set	32300
   484  0000                     _ACKDT	set	32301
   485  0000                     _PEN	set	32298
   486  0000                     _RSEN	set	32297
   487  0000                     _SEN	set	32296
   488  0000                     _SSPIF	set	31987
   489  0000                     _RW	set	32314
   490  0000                     _TRISB1	set	31897
   491  0000                     _TRISB0	set	31896
   492  0000                     _TX9	set	32102
   493  0000                     _TXEN	set	32101
   494  0000                     _RX9	set	32094
   495  0000                     _SPEN	set	32095
   496  0000                     _SYNC	set	32100
   497  0000                     _TRISC6	set	31910
   498  0000                     _TRISC7	set	31911
   499  0000                     _BRGH	set	32098
   500  0000                     _RCIE	set	31981
   501  0000                     _RCIP	set	31997
   502  0000                     _RCIF	set	31989
   503  0000                     _LATA2	set	31818
   504  0000                     _LATA3	set	31819
   505  0000                     _LATA4	set	31820
   506  0000                     _TRISA4	set	31892
   507  0000                     _TRISA3	set	31891
   508  0000                     _TRISA2	set	31890
   509  0000                     _TMR1IE	set	31976
   510  0000                     _TMR1CS	set	32361
   511  0000                     _T1SYNC	set	32362
   512  0000                     _T1OSCEN	set	32363
   513  0000                     _T1CKPS0	set	32364
   514  0000                     _TMR1ON	set	32360
   515  0000                     _TMR0ON	set	32431
   516  0000                     _TMR0IE	set	32661
   517  0000                     _T08BIT	set	32430
   518  0000                     _T0CS	set	32429
   519  0000                     _PSA	set	32427
   520  0000                     _T0PS2	set	32426
   521  0000                     _T0PS1	set	32425
   522  0000                     _T0PS0	set	32424
   523  0000                     _LATB3	set	31827
   524  0000                     _TRISB3	set	31899
   525  0000                     _TRISB2	set	31898
   526  0000                     _LATA5	set	31821
   527  0000                     _LATC2	set	31834
   528  0000                     _TRISB4	set	31900
   529  0000                     _TRISC2	set	31906
   530  0000                     _TRISA5	set	31893
   531  0000                     _GIE	set	32663
   532  0000                     _PEIE	set	32662
   533  0000                     _CREN	set	32092
   534  0000                     _LATB4	set	31828
   535  0000                     _TMR1IF	set	31984
   536  0000                     _TMR0IF	set	32658
   537                           
   538                           ; #config settings
   539  0008E9  00                 	db	0	; dummy byte at the end
   540  0000                     
   541                           	psect	cinit
   542  0045CC                     __pcinit:
   543                           	opt stack 0
   544  0045CC                     start_initialization:
   545                           	opt stack 0
   546  0045CC                     __initialization:
   547                           	opt stack 0
   548                           
   549                           ; Initialize objects allocated to BANK2 (10 bytes)
   550                           ; load TBLPTR registers with __pidataBANK2
   551  0045CC  0E84               	movlw	low __pidataBANK2
   552  0045CE  6EF6               	movwf	tblptrl,c
   553  0045D0  0E55               	movlw	high __pidataBANK2
   554  0045D2  6EF7               	movwf	tblptrh,c
   555  0045D4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   556  0045D6  6EF8               	movwf	tblptru,c
   557  0045D8  EE02  F0EC         	lfsr	0,__pdataBANK2
   558  0045DC  EE10 F00A          	lfsr	1,10
   559  0045E0                     copy_data0:
   560  0045E0  0009               	tblrd		*+
   561  0045E2  CFF5 FFEE          	movff	tablat,postinc0
   562  0045E6  50E5               	movf	postdec1,w,c
   563  0045E8  50E1               	movf	fsr1l,w,c
   564  0045EA  E1FA               	bnz	copy_data0
   565                           
   566                           ; Clear objects allocated to BIGRAMl (648 bytes)
   567  0045EC  EE04  F040         	lfsr	0,__pbssBIGRAMl
   568  0045F0  EE12 F088          	lfsr	1,648
   569  0045F4                     clear_0:
   570  0045F4  6AEE               	clrf	postinc0,c
   571  0045F6  50E5               	movf	postdec1,w,c
   572  0045F8  50E1               	movf	fsr1l,w,c
   573  0045FA  E1FC               	bnz	clear_0
   574  0045FC  50E2               	movf	fsr1h,w,c
   575  0045FE  E1FA               	bnz	clear_0
   576                           
   577                           ; Clear objects allocated to BANK3 (128 bytes)
   578  004600  EE03  F000         	lfsr	0,__pbssBANK3
   579  004604  0E80               	movlw	128
   580  004606                     clear_1:
   581  004606  6AEE               	clrf	postinc0,c
   582  004608  06E8               	decf	wreg,f,c
   583  00460A  E1FD               	bnz	clear_1
   584                           
   585                           ; Clear objects allocated to BANK2 (236 bytes)
   586  00460C  EE02  F000         	lfsr	0,__pbssBANK2
   587  004610  0EEC               	movlw	236
   588  004612                     clear_2:
   589  004612  6AEE               	clrf	postinc0,c
   590  004614  06E8               	decf	wreg,f,c
   591  004616  E1FD               	bnz	clear_2
   592                           
   593                           ; Clear objects allocated to BANK1 (248 bytes)
   594  004618  EE01  F000         	lfsr	0,__pbssBANK1
   595  00461C  0EF8               	movlw	248
   596  00461E                     clear_3:
   597  00461E  6AEE               	clrf	postinc0,c
   598  004620  06E8               	decf	wreg,f,c
   599  004622  E1FD               	bnz	clear_3
   600                           
   601                           ; Clear objects allocated to BANK0 (28 bytes)
   602  004624  EE00  F0E4         	lfsr	0,__pbssBANK0
   603  004628  0E1C               	movlw	28
   604  00462A                     clear_4:
   605  00462A  6AEE               	clrf	postinc0,c
   606  00462C  06E8               	decf	wreg,f,c
   607  00462E  E1FD               	bnz	clear_4
   608                           
   609                           ; Clear objects allocated to COMRAM (3 bytes)
   610  004630  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   611  004632  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   612  004634  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   613  004636                     end_of_initialization:
   614                           	opt stack 0
   615  004636                     __end_of__initialization:
   616                           	opt stack 0
   617  004636  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   618  004638  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   619  00463A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   620  00463C  6EF8               	movwf	tblptru,c
   621  00463E  0100               	movlb	0
   622  004640  EF75  F004         	goto	_main	;jump to C main() function
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           postinc0	equ	0xFEE
   628                           wreg	equ	0xFE8
   629                           postdec1	equ	0xFE5
   630                           fsr1h	equ	0xFE2
   631                           fsr1l	equ	0xFE1
   632                           
   633                           	psect	bssCOMRAM
   634  00005C                     __pbssCOMRAM:
   635                           	opt stack 0
   636  00005C                     _CDCDataOutHandle:
   637                           	opt stack 0
   638  00005C                     	ds	2
   639  00005E                     _cdc_tx_len:
   640                           	opt stack 0
   641  00005E                     	ds	1
   642                           tblptru	equ	0xFF8
   643                           tblptrh	equ	0xFF7
   644                           tblptrl	equ	0xFF6
   645                           tablat	equ	0xFF5
   646                           postinc0	equ	0xFEE
   647                           wreg	equ	0xFE8
   648                           postdec1	equ	0xFE5
   649                           fsr1h	equ	0xFE2
   650                           fsr1l	equ	0xFE1
   651                           
   652                           	psect	bssBANK0
   653  0000E4                     __pbssBANK0:
   654                           	opt stack 0
   655  0000E4                     _inPipes:
   656                           	opt stack 0
   657  0000E4                     	ds	6
   658  0000EA                     _pBDTEntryIn:
   659                           	opt stack 0
   660  0000EA                     	ds	6
   661  0000F0                     _pBDTEntryEP0OutNext:
   662                           	opt stack 0
   663  0000F0                     	ds	2
   664  0000F2                     _pBDTEntryEP0OutCurrent:
   665                           	opt stack 0
   666  0000F2                     	ds	2
   667  0000F4                     __Saving:
   668                           	opt stack 0
   669  0000F4                     	ds	1
   670  0000F5                     _cdc_trf_state:
   671                           	opt stack 0
   672  0000F5                     	ds	1
   673  0000F6                     _cdc_rx_len:
   674                           	opt stack 0
   675  0000F6                     	ds	1
   676  0000F7                     _USBDeferStatusStagePacket:
   677                           	opt stack 0
   678  0000F7                     	ds	1
   679  0000F8                     _USBStatusStageTimeoutCounter:
   680                           	opt stack 0
   681  0000F8                     	ds	1
   682  0000F9                     _endpoint_number:
   683                           	opt stack 0
   684  0000F9                     	ds	1
   685  0000FA                     _controlTransferState:
   686                           	opt stack 0
   687  0000FA                     	ds	1
   688  0000FB                     _shortPacketStatus:
   689                           	opt stack 0
   690  0000FB                     	ds	1
   691  0000FC                     _USBDeviceState:
   692                           	opt stack 0
   693  0000FC                     	ds	1
   694  0000FD                     __USBBufferIn:
   695                           	opt stack 0
   696  0000FD                     	ds	1
   697  0000FE                     _USTATcopy:
   698                           	opt stack 0
   699  0000FE                     	ds	1
   700  0000FF                     _USBActiveConfiguration:
   701                           	opt stack 0
   702  0000FF                     	ds	1
   703                           tblptru	equ	0xFF8
   704                           tblptrh	equ	0xFF7
   705                           tblptrl	equ	0xFF6
   706                           tablat	equ	0xFF5
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           postdec1	equ	0xFE5
   710                           fsr1h	equ	0xFE2
   711                           fsr1l	equ	0xFE1
   712                           
   713                           	psect	bssBANK1
   714  000100                     __pbssBANK1:
   715                           	opt stack 0
   716  000100                     _outPipes:
   717                           	opt stack 0
   718  000100                     	ds	8
   719  000108                     __Timer:
   720                           	opt stack 0
   721  000108                     	ds	6
   722  00010E                     _pBDTEntryOut:
   723                           	opt stack 0
   724  00010E                     	ds	6
   725  000114                     _BaudRateGen:
   726                           	opt stack 0
   727  000114                     	ds	4
   728  000118                     _USB1msTickCount:
   729                           	opt stack 0
   730  000118                     	ds	4
   731  00011C                     _pCDCDst:
   732                           	opt stack 0
   733  00011C                     	ds	3
   734  00011F                     _pCDCSrc:
   735                           	opt stack 0
   736  00011F                     	ds	3
   737  000122                     _ep_data_out:
   738                           	opt stack 0
   739  000122                     	ds	3
   740  000125                     _ep_data_in:
   741                           	opt stack 0
   742  000125                     	ds	3
   743  000128                     _errno:
   744                           	opt stack 0
   745  000128                     	ds	2
   746  00012A                     __I2CCount:
   747                           	opt stack 0
   748  00012A                     	ds	2
   749  00012C                     __I2CResult:
   750                           	opt stack 0
   751  00012C                     	ds	2
   752  00012E                     _CDCDataInHandle:
   753                           	opt stack 0
   754  00012E                     	ds	2
   755  000130                     _pDst:
   756                           	opt stack 0
   757  000130                     	ds	2
   758  000132                     	ds	1
   759  000133                     _iUpdate:
   760                           	opt stack 0
   761  000133                     	ds	1
   762  000134                     __Modified:
   763                           	opt stack 0
   764  000134                     	ds	1
   765  000135                     _control_signal_bitmap:
   766                           	opt stack 0
   767  000135                     	ds	1
   768  000136                     _cdc_mem_type:
   769                           	opt stack 0
   770  000136                     	ds	1
   771  000137                     _USBTicksSinceSuspendEnd:
   772                           	opt stack 0
   773  000137                     	ds	1
   774  000138                     _USBDeferOUTDataStagePackets:
   775                           	opt stack 0
   776  000138                     	ds	1
   777  000139                     _USBDeferINDataStagePackets:
   778                           	opt stack 0
   779  000139                     	ds	1
   780  00013A                     _USBStatusStageEnabledFlag2:
   781                           	opt stack 0
   782  00013A                     	ds	1
   783  00013B                     _USBStatusStageEnabledFlag1:
   784                           	opt stack 0
   785  00013B                     	ds	1
   786  00013C                     _BothEP0OutUOWNsSet:
   787                           	opt stack 0
   788  00013C                     	ds	1
   789  00013D                     _USBBusIsSuspended:
   790                           	opt stack 0
   791  00013D                     	ds	1
   792  00013E                     _RemoteWakeup:
   793                           	opt stack 0
   794  00013E                     	ds	1
   795  00013F                     __Hub:
   796                           	opt stack 0
   797  00013F                     	ds	154
   798  0001D9                     __DigiPot:
   799                           	opt stack 0
   800  0001D9                     	ds	14
   801  0001E7                     _dummy_encapsulated_cmd_response:
   802                           	opt stack 0
   803  0001E7                     	ds	8
   804  0001EF                     _line_coding:
   805                           	opt stack 0
   806  0001EF                     	ds	7
   807  0001F6                     _USBAlternateInterface:
   808                           	opt stack 0
   809  0001F6                     	ds	2
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           postdec1	equ	0xFE5
   817                           fsr1h	equ	0xFE2
   818                           fsr1l	equ	0xFE1
   819                           
   820                           	psect	bssBANK2
   821  000200                     __pbssBANK2:
   822                           	opt stack 0
   823  000200                     _cdc_notice:
   824                           	opt stack 0
   825  000200                     	ds	10
   826  00020A                     __Display:
   827                           	opt stack 0
   828  00020A                     	ds	214
   829  0002E0                     __Config:
   830                           	opt stack 0
   831  0002E0                     	ds	12
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1h	equ	0xFE2
   840                           fsr1l	equ	0xFE1
   841                           
   842                           	psect	dataBANK2
   843  0002EC                     __pdataBANK2:
   844                           	opt stack 0
   845  0002EC                     __Digits:
   846                           	opt stack 0
   847  0002EC                     	ds	10
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1h	equ	0xFE2
   856                           fsr1l	equ	0xFE1
   857                           
   858                           	psect	bssBANK3
   859  000300                     __pbssBANK3:
   860                           	opt stack 0
   861  000300                     _cdc_data_rx:
   862                           	opt stack 0
   863  000300                     	ds	64
   864  000340                     _cdc_data_tx:
   865                           	opt stack 0
   866  000340                     	ds	64
   867                           tblptru	equ	0xFF8
   868                           tblptrh	equ	0xFF7
   869                           tblptrl	equ	0xFF6
   870                           tablat	equ	0xFF5
   871                           postinc0	equ	0xFEE
   872                           wreg	equ	0xFE8
   873                           postdec1	equ	0xFE5
   874                           fsr1h	equ	0xFE2
   875                           fsr1l	equ	0xFE1
   876                           
   877                           	psect	bssBIGRAMl
   878  000440                     __pbssBIGRAMl:
   879                           	opt stack 0
   880  000440                     __MidiOutput:
   881                           	opt stack 0
   882  000440                     	ds	324
   883  000584                     __MidiInput:
   884                           	opt stack 0
   885  000584                     	ds	324
   886                           tblptru	equ	0xFF8
   887                           tblptrh	equ	0xFF7
   888                           tblptrl	equ	0xFF6
   889                           tablat	equ	0xFF5
   890                           postinc0	equ	0xFEE
   891                           wreg	equ	0xFE8
   892                           postdec1	equ	0xFE5
   893                           fsr1h	equ	0xFE2
   894                           fsr1l	equ	0xFE1
   895                           
   896                           	psect	cstackBANK0
   897  000060                     __pcstackBANK0:
   898                           	opt stack 0
   899  000060                     ??_USBStdGetDscHandler:
   900  000060                     ??_USBStdGetStatusHandler:
   901  000060                     ??_I2C_Wait:
   902  000060                     ?_USBTransferOnePacket:
   903                           	opt stack 0
   904  000060                     ?_memcmp:
   905                           	opt stack 0
   906  000060                     ?___wmul:
   907                           	opt stack 0
   908  000060                     ?___awdiv:
   909                           	opt stack 0
   910  000060                     ?___ftpack:
   911                           	opt stack 0
   912  000060                     ?_frexp:
   913                           	opt stack 0
   914  000060                     ?___ftneg:
   915                           	opt stack 0
   916  000060                     ?___lldiv:
   917                           	opt stack 0
   918  000060                     USBTransferOnePacket@dir:
   919                           	opt stack 0
   920  000060                     USBConfigureEndpoint@direction:
   921                           	opt stack 0
   922  000060                     USBCtrlTrfTxService@byteToSend:
   923                           	opt stack 0
   924  000060                     USBCtrlTrfRxService@i:
   925                           	opt stack 0
   926  000060                     Display_ClockWrite@value:
   927                           	opt stack 0
   928  000060                     Display_LatchWrite@value:
   929                           	opt stack 0
   930  000060                     Display_DataWrite@value:
   931                           	opt stack 0
   932  000060                     Hub_ClockWrite@value:
   933                           	opt stack 0
   934  000060                     Hub_LatchWrite@value:
   935                           	opt stack 0
   936  000060                     DigiPot_ClockWrite@value:
   937                           	opt stack 0
   938  000060                     DigiPot_LatchWrite@value:
   939                           	opt stack 0
   940  000060                     DigiPot_DataWrite@value:
   941                           	opt stack 0
   942  000060                     ___lbdiv@divisor:
   943                           	opt stack 0
   944  000060                     ___lbmod@divisor:
   945                           	opt stack 0
   946  000060                     InitPin@APin:
   947                           	opt stack 0
   948  000060                     Midi_ResetBuffer@AMidiBuffer:
   949                           	opt stack 0
   950  000060                     Midi_Write@AMidiBuffer:
   951                           	opt stack 0
   952  000060                     Midi_Read@AData:
   953                           	opt stack 0
   954  000060                     ___wmul@multiplier:
   955                           	opt stack 0
   956  000060                     ___awdiv@dividend:
   957                           	opt stack 0
   958  000060                     memcmp@s1:
   959                           	opt stack 0
   960  000060                     memcpy@d1:
   961                           	opt stack 0
   962  000060                     memset@p1:
   963                           	opt stack 0
   964  000060                     ___ftpack@arg:
   965                           	opt stack 0
   966  000060                     ___ftge@ff1:
   967                           	opt stack 0
   968  000060                     ___ftneg@f1:
   969                           	opt stack 0
   970  000060                     frexp@value:
   971                           	opt stack 0
   972  000060                     ___lldiv@dividend:
   973                           	opt stack 0
   974                           
   975                           ; 4 bytes @ 0x0
   976  000060                     	ds	1
   977  000061                     ??_USBConfigureEndpoint:
   978  000061                     USBCtrlTrfRxService@byteToRead:
   979                           	opt stack 0
   980  000061                     USBCtrlTrfInHandler@lastDTS:
   981                           	opt stack 0
   982  000061                     ___lbdiv@dividend:
   983                           	opt stack 0
   984  000061                     ___lbmod@dividend:
   985                           	opt stack 0
   986  000061                     USBTransferOnePacket@data:
   987                           	opt stack 0
   988  000061                     USBStdGetStatusHandler@p:
   989                           	opt stack 0
   990  000061                     LatchOn@AIO:
   991                           	opt stack 0
   992  000061                     LatchOff@AIO:
   993                           	opt stack 0
   994  000061                     ClockUp@AIO:
   995                           	opt stack 0
   996  000061                     ClockDown@AIO:
   997                           	opt stack 0
   998                           
   999                           ; 12 bytes @ 0x1
  1000  000061                     	ds	1
  1001  000062                     ??_Midi_ResetBuffer:
  1002  000062                     ??_Midi_Write:
  1003  000062                     ___lbdiv@counter:
  1004                           	opt stack 0
  1005  000062                     ___lbmod@counter:
  1006                           	opt stack 0
  1007  000062                     InitConnector@AConnector:
  1008                           	opt stack 0
  1009  000062                     Midi_Read@AMidiBuffer:
  1010                           	opt stack 0
  1011  000062                     I2C_Wait@LTimeOut:
  1012                           	opt stack 0
  1013  000062                     ___wmul@multiplicand:
  1014                           	opt stack 0
  1015  000062                     ___awdiv@divisor:
  1016                           	opt stack 0
  1017  000062                     memcmp@s2:
  1018                           	opt stack 0
  1019  000062                     memcpy@s1:
  1020                           	opt stack 0
  1021  000062                     memset@c:
  1022                           	opt stack 0
  1023                           
  1024                           ; 2 bytes @ 0x2
  1025  000062                     	ds	1
  1026  000063                     USBTransferOnePacket@len:
  1027                           	opt stack 0
  1028  000063                     ___ftpack@exp:
  1029                           	opt stack 0
  1030  000063                     ___lbdiv@quotient:
  1031                           	opt stack 0
  1032  000063                     ___lbmod@rem:
  1033                           	opt stack 0
  1034  000063                     frexp@eptr:
  1035                           	opt stack 0
  1036  000063                     ___ftge@ff2:
  1037                           	opt stack 0
  1038                           
  1039                           ; 3 bytes @ 0x3
  1040  000063                     	ds	1
  1041  000064                     ??_USBTransferOnePacket:
  1042  000064                     ??_Midi_Read:
  1043  000064                     ?___awmod:
  1044                           	opt stack 0
  1045  000064                     Midi_ResetBuffer@j:
  1046                           	opt stack 0
  1047  000064                     I2C_Wait@LResult:
  1048                           	opt stack 0
  1049  000064                     ___awdiv@counter:
  1050                           	opt stack 0
  1051  000064                     ___ftpack@sign:
  1052                           	opt stack 0
  1053  000064                     ___wmul@product:
  1054                           	opt stack 0
  1055  000064                     ___awmod@dividend:
  1056                           	opt stack 0
  1057  000064                     memcmp@n:
  1058                           	opt stack 0
  1059  000064                     memcpy@n:
  1060                           	opt stack 0
  1061  000064                     memset@n:
  1062                           	opt stack 0
  1063  000064                     ___lldiv@divisor:
  1064                           	opt stack 0
  1065                           
  1066                           ; 4 bytes @ 0x4
  1067  000064                     	ds	1
  1068  000065                     ??___ftpack:
  1069  000065                     ??_frexp:
  1070  000065                     USBConfigureEndpoint@EPNum:
  1071                           	opt stack 0
  1072  000065                     Midi_ResetBuffer@i:
  1073                           	opt stack 0
  1074  000065                     I2C_Ack@AAck:
  1075                           	opt stack 0
  1076  000065                     I2C_Write@b:
  1077                           	opt stack 0
  1078  000065                     ___awdiv@sign:
  1079                           	opt stack 0
  1080                           
  1081                           ; 1 bytes @ 0x5
  1082  000065                     	ds	1
  1083  000066                     ??_memcmp:
  1084  000066                     ??___ftge:
  1085  000066                     I2C_Read@LData:
  1086                           	opt stack 0
  1087  000066                     USBConfigureEndpoint@handle:
  1088                           	opt stack 0
  1089  000066                     Persistant_ControlByte@AAddress:
  1090                           	opt stack 0
  1091  000066                     ___awdiv@quotient:
  1092                           	opt stack 0
  1093  000066                     ___awmod@divisor:
  1094                           	opt stack 0
  1095  000066                     memcpy@d:
  1096                           	opt stack 0
  1097  000066                     memset@p:
  1098                           	opt stack 0
  1099                           
  1100                           ; 2 bytes @ 0x6
  1101  000066                     	ds	2
  1102  000068                     ?___altoft:
  1103                           	opt stack 0
  1104  000068                     ?___awtoft:
  1105                           	opt stack 0
  1106  000068                     ?___lbtoft:
  1107                           	opt stack 0
  1108  000068                     ?___lltoft:
  1109                           	opt stack 0
  1110  000068                     USBDeviceInit@i:
  1111                           	opt stack 0
  1112  000068                     USBEnableEndpoint@options:
  1113                           	opt stack 0
  1114  000068                     USBTransferOnePacket@ep:
  1115                           	opt stack 0
  1116  000068                     Persistant_ControlByte@ARead:
  1117                           	opt stack 0
  1118  000068                     ___awmod@counter:
  1119                           	opt stack 0
  1120  000068                     Persistant_ReadInternalMemory@AAddress:
  1121                           	opt stack 0
  1122  000068                     ___awtoft@c:
  1123                           	opt stack 0
  1124  000068                     memcpy@s:
  1125                           	opt stack 0
  1126  000068                     ___altoft@c:
  1127                           	opt stack 0
  1128  000068                     ___lldiv@quotient:
  1129                           	opt stack 0
  1130  000068                     ___lltoft@c:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x8
  1134  000068                     	ds	1
  1135  000069                     ??_Persistant_ControlByte:
  1136  000069                     Midi_Write@AData:
  1137                           	opt stack 0
  1138  000069                     ___awmod@sign:
  1139                           	opt stack 0
  1140  000069                     USBEnableEndpoint@p:
  1141                           	opt stack 0
  1142  000069                     USBTransferOnePacket@handle:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x9
  1146  000069                     	ds	1
  1147  00006A                     memcpy@tmp:
  1148                           	opt stack 0
  1149  00006A                     Display_ProcessData@AValues:
  1150                           	opt stack 0
  1151  00006A                     Persistant_WriteInternalMemory@AAddress:
  1152                           	opt stack 0
  1153                           
  1154                           ; 2 bytes @ 0xA
  1155  00006A                     	ds	1
  1156  00006B                     USBEnableEndpoint@ep:
  1157                           	opt stack 0
  1158  00006B                     ___awtoft@sign:
  1159                           	opt stack 0
  1160  00006B                     ___lbtoft@c:
  1161                           	opt stack 0
  1162  00006B                     getsUSBUSART@buffer:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0xB
  1166  00006B                     	ds	1
  1167  00006C                     ??___altoft:
  1168  00006C                     ??___lltoft:
  1169  00006C                     Display_ProcessData@ALoaded:
  1170                           	opt stack 0
  1171  00006C                     Persistant_WriteInternalMemory@AData:
  1172                           	opt stack 0
  1173  00006C                     ___lldiv@counter:
  1174                           	opt stack 0
  1175  00006C                     Persistant_Address@AAddress:
  1176                           	opt stack 0
  1177  00006C                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  1178                           	opt stack 0
  1179                           
  1180                           ; 2 bytes @ 0xC
  1181  00006C                     	ds	1
  1182  00006D                     ??_Midi_Init:
  1183  00006D                     getsUSBUSART@len:
  1184                           	opt stack 0
  1185  00006D                     Display_ProcessData@APushed:
  1186                           	opt stack 0
  1187  00006D                     Persistant_WriteInternalMemory@LState:
  1188                           	opt stack 0
  1189  00006D                     WriteChar@AIO:
  1190                           	opt stack 0
  1191  00006D                     ReadBit@AIO:
  1192                           	opt stack 0
  1193                           
  1194                           ; 12 bytes @ 0xD
  1195  00006D                     	ds	1
  1196  00006E                     ??_Display_ProcessData:
  1197  00006E                     Persistant_Address@ARead:
  1198                           	opt stack 0
  1199  00006E                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0xE
  1203  00006E                     	ds	1
  1204  00006F                     Persistant_ReadExternalMemory@AAddress:
  1205                           	opt stack 0
  1206                           
  1207                           ; 2 bytes @ 0xF
  1208  00006F                     	ds	1
  1209  000070                     ___altoft@exp:
  1210                           	opt stack 0
  1211  000070                     ___lltoft@exp:
  1212                           	opt stack 0
  1213  000070                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x10
  1217  000070                     	ds	1
  1218  000071                     Display_ProcessData@ADigitalValue:
  1219                           	opt stack 0
  1220  000071                     Persistant_ReadExternalMemory@LResult:
  1221                           	opt stack 0
  1222  000071                     ___altoft@sign:
  1223                           	opt stack 0
  1224  000071                     Midi_Init@LBaudRate:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x11
  1228  000071                     	ds	1
  1229  000072                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  1230  000072                     ?___ftmul:
  1231                           	opt stack 0
  1232  000072                     Display_ProcessData@LData:
  1233                           	opt stack 0
  1234  000072                     Persistant_WriteExternalMemory@AAddress:
  1235                           	opt stack 0
  1236  000072                     ___ftmul@f1:
  1237                           	opt stack 0
  1238                           
  1239                           ; 3 bytes @ 0x12
  1240  000072                     	ds	1
  1241  000073                     Display_ProcessData@LBit:
  1242                           	opt stack 0
  1243                           
  1244                           ; 1 bytes @ 0x13
  1245  000073                     	ds	1
  1246  000074                     ??_USBStdFeatureReqHandler:
  1247  000074                     USBStdSetCfgHandler@i:
  1248                           	opt stack 0
  1249  000074                     Display_ProcessData@iDataIndex:
  1250                           	opt stack 0
  1251  000074                     Persistant_WriteExternalMemory@AData:
  1252                           	opt stack 0
  1253                           
  1254                           ; 1 bytes @ 0x14
  1255  000074                     	ds	1
  1256  000075                     ??_Persistant_WriteExternalMemory:
  1257  000075                     USBStdFeatureReqHandler@pUEP:
  1258                           	opt stack 0
  1259  000075                     Display_ProcessData@k:
  1260                           	opt stack 0
  1261  000075                     ___ftmul@f2:
  1262                           	opt stack 0
  1263  000075                     Midi_Init@LPeriod:
  1264                           	opt stack 0
  1265                           
  1266                           ; 4 bytes @ 0x15
  1267  000075                     	ds	2
  1268  000077                     USBStdFeatureReqHandler@current_ep_data:
  1269                           	opt stack 0
  1270  000077                     Display_ProcessData@i_2672:
  1271                           	opt stack 0
  1272                           
  1273                           ; 2 bytes @ 0x17
  1274  000077                     	ds	1
  1275  000078                     ??___ftmul:
  1276  000078                     USBStdFeatureReqHandler@p:
  1277                           	opt stack 0
  1278                           
  1279                           ; 2 bytes @ 0x18
  1280  000078                     	ds	1
  1281  000079                     ??_WriteChar:
  1282  000079                     ReadBit@LBit:
  1283                           	opt stack 0
  1284  000079                     Display_ProcessData@i:
  1285                           	opt stack 0
  1286                           
  1287                           ; 2 bytes @ 0x19
  1288  000079                     	ds	1
  1289  00007A                     ??_USBCtrlEPService:
  1290  00007A                     ReadBitArray@AData:
  1291                           	opt stack 0
  1292                           
  1293                           ; 2 bytes @ 0x1A
  1294  00007A                     	ds	1
  1295  00007B                     USBDeviceTasks@i:
  1296                           	opt stack 0
  1297  00007B                     WriteChar@AChar:
  1298                           	opt stack 0
  1299  00007B                     ___ftmul@exp:
  1300                           	opt stack 0
  1301  00007B                     Display_ProcessData@i_2670:
  1302                           	opt stack 0
  1303                           
  1304                           ; 2 bytes @ 0x1B
  1305  00007B                     	ds	1
  1306  00007C                     WriteChar@i:
  1307                           	opt stack 0
  1308  00007C                     ___ftmul@f3_as_product:
  1309                           	opt stack 0
  1310  00007C                     ReadBitArray@AIO:
  1311                           	opt stack 0
  1312                           
  1313                           ; 12 bytes @ 0x1C
  1314  00007C                     	ds	1
  1315  00007D                     Display_ProcessData@j:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0x1D
  1319  00007D                     	ds	1
  1320  00007E                     WriteData@AData:
  1321                           	opt stack 0
  1322                           
  1323                           ; 2 bytes @ 0x1E
  1324  00007E                     	ds	1
  1325  00007F                     ___ftmul@cntr:
  1326                           	opt stack 0
  1327  00007F                     Display_ProcessData@i_2676:
  1328                           	opt stack 0
  1329                           
  1330                           ; 2 bytes @ 0x1F
  1331  00007F                     	ds	1
  1332  000080                     WriteData@ASize:
  1333                           	opt stack 0
  1334  000080                     ___ftmul@sign:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x20
  1338  000080                     	ds	1
  1339  000081                     ?___ftdiv:
  1340                           	opt stack 0
  1341  000081                     ___ftdiv@f1:
  1342                           	opt stack 0
  1343  000081                     WriteData@AIO:
  1344                           	opt stack 0
  1345                           
  1346                           ; 12 bytes @ 0x21
  1347  000081                     	ds	3
  1348  000084                     ___ftdiv@f2:
  1349                           	opt stack 0
  1350                           
  1351                           ; 3 bytes @ 0x24
  1352  000084                     	ds	3
  1353  000087                     ??___ftdiv:
  1354                           
  1355                           ; 1 bytes @ 0x27
  1356  000087                     	ds	1
  1357  000088                     ??_ReadBitArray:
  1358                           
  1359                           ; 1 bytes @ 0x28
  1360  000088                     	ds	1
  1361  000089                     ReadBitArray@i:
  1362                           	opt stack 0
  1363                           
  1364                           ; 2 bytes @ 0x29
  1365  000089                     	ds	1
  1366  00008A                     ___ftdiv@cntr:
  1367                           	opt stack 0
  1368                           
  1369                           ; 1 bytes @ 0x2A
  1370  00008A                     	ds	1
  1371  00008B                     ___ftdiv@f3:
  1372                           	opt stack 0
  1373  00008B                     Hub_ReadSwitch@LBitArray:
  1374                           	opt stack 0
  1375                           
  1376                           ; 24 bytes @ 0x2B
  1377  00008B                     	ds	2
  1378  00008D                     WriteData@i:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x2D
  1382  00008D                     	ds	1
  1383  00008E                     ___ftdiv@exp:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x2E
  1387  00008E                     	ds	1
  1388  00008F                     ___ftdiv@sign:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x2F
  1392  00008F                     	ds	1
  1393  000090                     ?___ftadd:
  1394                           	opt stack 0
  1395  000090                     ?___fttol:
  1396                           	opt stack 0
  1397  000090                     ___ftadd@f1:
  1398                           	opt stack 0
  1399  000090                     ___fttol@f1:
  1400                           	opt stack 0
  1401                           
  1402                           ; 3 bytes @ 0x30
  1403  000090                     	ds	3
  1404  000093                     ___ftadd@f2:
  1405                           	opt stack 0
  1406                           
  1407                           ; 3 bytes @ 0x33
  1408  000093                     	ds	1
  1409  000094                     ??___fttol:
  1410                           
  1411                           ; 1 bytes @ 0x34
  1412  000094                     	ds	2
  1413  000096                     ??___ftadd:
  1414                           
  1415                           ; 1 bytes @ 0x36
  1416  000096                     	ds	3
  1417  000099                     ___ftadd@sign:
  1418                           	opt stack 0
  1419  000099                     ___fttol@sign1:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x39
  1423  000099                     	ds	1
  1424  00009A                     ___ftadd@exp2:
  1425                           	opt stack 0
  1426  00009A                     ___fttol@lval:
  1427                           	opt stack 0
  1428                           
  1429                           ; 4 bytes @ 0x3A
  1430  00009A                     	ds	1
  1431  00009B                     ___ftadd@exp1:
  1432                           	opt stack 0
  1433                           
  1434                           ; 1 bytes @ 0x3B
  1435  00009B                     	ds	1
  1436  00009C                     ?___ftsub:
  1437                           	opt stack 0
  1438  00009C                     ?_eval_poly:
  1439                           	opt stack 0
  1440  00009C                     ___ftsub@f1:
  1441                           	opt stack 0
  1442  00009C                     eval_poly@x:
  1443                           	opt stack 0
  1444                           
  1445                           ; 3 bytes @ 0x3C
  1446  00009C                     	ds	2
  1447  00009E                     ___fttol@exp1:
  1448                           	opt stack 0
  1449                           
  1450                           ; 1 bytes @ 0x3E
  1451  00009E                     	ds	1
  1452  00009F                     ?_floor:
  1453                           	opt stack 0
  1454  00009F                     Zip@AZip:
  1455                           	opt stack 0
  1456  00009F                     UnZip@AZip:
  1457                           	opt stack 0
  1458  00009F                     eval_poly@d:
  1459                           	opt stack 0
  1460  00009F                     Sequencer_StartTimer@ATime:
  1461                           	opt stack 0
  1462  00009F                     ___ftsub@f2:
  1463                           	opt stack 0
  1464  00009F                     floor@x:
  1465                           	opt stack 0
  1466  00009F                     I2C_Init@AFrequency:
  1467                           	opt stack 0
  1468                           
  1469                           ; 4 bytes @ 0x3F
  1470  00009F                     	ds	2
  1471  0000A1                     ??_Zip:
  1472  0000A1                     ??_UnZip:
  1473  0000A1                     eval_poly@n:
  1474                           	opt stack 0
  1475                           
  1476                           ; 2 bytes @ 0x41
  1477  0000A1                     	ds	1
  1478  0000A2                     Sequencer_StartTimer@ALoop:
  1479                           	opt stack 0
  1480  0000A2                     floor@i:
  1481                           	opt stack 0
  1482                           
  1483                           ; 3 bytes @ 0x42
  1484  0000A2                     	ds	1
  1485  0000A3                     ??_Hub_Init:
  1486  0000A3                     ??_eval_poly:
  1487  0000A3                     I2C_Init@LRatio:
  1488                           	opt stack 0
  1489                           
  1490                           ; 3 bytes @ 0x43
  1491  0000A3                     	ds	2
  1492  0000A5                     UnZip@LValue:
  1493                           	opt stack 0
  1494  0000A5                     Hub_Init@i:
  1495                           	opt stack 0
  1496  0000A5                     floor@expon:
  1497                           	opt stack 0
  1498  0000A5                     eval_poly@res:
  1499                           	opt stack 0
  1500                           
  1501                           ; 3 bytes @ 0x45
  1502  0000A5                     	ds	1
  1503  0000A6                     UnZip@LIndex:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x46
  1507  0000A6                     	ds	1
  1508  0000A7                     UnZip@i:
  1509                           	opt stack 0
  1510                           
  1511                           ; 2 bytes @ 0x47
  1512  0000A7                     	ds	1
  1513  0000A8                     ?_log:
  1514                           	opt stack 0
  1515  0000A8                     ?_ldexp:
  1516                           	opt stack 0
  1517  0000A8                     Zip@LBytes:
  1518                           	opt stack 0
  1519  0000A8                     ldexp@value:
  1520                           	opt stack 0
  1521  0000A8                     log@x:
  1522                           	opt stack 0
  1523                           
  1524                           ; 3 bytes @ 0x48
  1525  0000A8                     	ds	1
  1526  0000A9                     UnZip@j:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x49
  1530  0000A9                     	ds	1
  1531  0000AA                     Zip@LIndex:
  1532                           	opt stack 0
  1533                           
  1534                           ; 1 bytes @ 0x4A
  1535  0000AA                     	ds	1
  1536  0000AB                     Persistant_LoadBuffer@ABuffer:
  1537                           	opt stack 0
  1538  0000AB                     Zip@i:
  1539                           	opt stack 0
  1540  0000AB                     ldexp@newexp:
  1541                           	opt stack 0
  1542  0000AB                     log@exponent:
  1543                           	opt stack 0
  1544                           
  1545                           ; 2 bytes @ 0x4B
  1546  0000AB                     	ds	2
  1547  0000AD                     ??_ldexp:
  1548  0000AD                     Persistant_LoadBuffer@LResult:
  1549                           	opt stack 0
  1550  0000AD                     Zip@i_3504:
  1551                           	opt stack 0
  1552                           
  1553                           ; 2 bytes @ 0x4D
  1554  0000AD                     	ds	1
  1555  0000AE                     Persistant_LoadBuffer@LZip:
  1556                           	opt stack 0
  1557                           
  1558                           ; 10 bytes @ 0x4E
  1559  0000AE                     	ds	1
  1560  0000AF                     ?_exp:
  1561                           	opt stack 0
  1562  0000AF                     Zip@j:
  1563                           	opt stack 0
  1564  0000AF                     exp@x:
  1565                           	opt stack 0
  1566                           
  1567                           ; 3 bytes @ 0x4F
  1568  0000AF                     	ds	2
  1569  0000B1                     Persistant_SaveBuffer@ABuffer:
  1570                           	opt stack 0
  1571                           
  1572                           ; 12 bytes @ 0x51
  1573  0000B1                     	ds	1
  1574  0000B2                     _exp$4460:
  1575                           	opt stack 0
  1576                           
  1577                           ; 3 bytes @ 0x52
  1578  0000B2                     	ds	3
  1579  0000B5                     exp@exponent:
  1580                           	opt stack 0
  1581                           
  1582                           ; 2 bytes @ 0x55
  1583  0000B5                     	ds	2
  1584  0000B7                     exp@sign:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x57
  1588  0000B7                     	ds	1
  1589  0000B8                     ?_pow:
  1590                           	opt stack 0
  1591  0000B8                     Persistant_LoadBuffer@LChannel:
  1592                           	opt stack 0
  1593  0000B8                     pow@x:
  1594                           	opt stack 0
  1595                           
  1596                           ; 3 bytes @ 0x58
  1597  0000B8                     	ds	1
  1598  0000B9                     Persistant_LoadBuffer@i:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x59
  1602  0000B9                     	ds	1
  1603  0000BA                     Load@LBuffer:
  1604                           	opt stack 0
  1605                           
  1606                           ; 12 bytes @ 0x5A
  1607  0000BA                     	ds	1
  1608  0000BB                     pow@y:
  1609                           	opt stack 0
  1610                           
  1611                           ; 3 bytes @ 0x5B
  1612  0000BB                     	ds	2
  1613  0000BD                     Persistant_SaveBuffer@LResult:
  1614                           	opt stack 0
  1615                           
  1616                           ; 1 bytes @ 0x5D
  1617  0000BD                     	ds	1
  1618  0000BE                     _pow$4458:
  1619                           	opt stack 0
  1620  0000BE                     Persistant_SaveBuffer@LZip:
  1621                           	opt stack 0
  1622                           
  1623                           ; 10 bytes @ 0x5E
  1624  0000BE                     	ds	3
  1625  0000C1                     _pow$4459:
  1626                           	opt stack 0
  1627                           
  1628                           ; 3 bytes @ 0x61
  1629  0000C1                     	ds	3
  1630  0000C4                     pow@sign:
  1631                           	opt stack 0
  1632                           
  1633                           ; 1 bytes @ 0x64
  1634  0000C4                     	ds	1
  1635  0000C5                     pow@yi:
  1636                           	opt stack 0
  1637                           
  1638                           ; 4 bytes @ 0x65
  1639  0000C5                     	ds	1
  1640  0000C6                     Load@AChannel:
  1641                           	opt stack 0
  1642                           
  1643                           ; 1 bytes @ 0x66
  1644  0000C6                     	ds	1
  1645  0000C7                     Load@i:
  1646                           	opt stack 0
  1647                           
  1648                           ; 2 bytes @ 0x67
  1649  0000C7                     	ds	1
  1650  0000C8                     Persistant_SaveBuffer@i:
  1651                           	opt stack 0
  1652                           
  1653                           ; 1 bytes @ 0x68
  1654  0000C8                     	ds	1
  1655  0000C9                     ??_Display_Init:
  1656  0000C9                     Load@i_2411:
  1657                           	opt stack 0
  1658  0000C9                     InitDigiPot@LTickCount:
  1659                           	opt stack 0
  1660                           
  1661                           ; 4 bytes @ 0x69
  1662  0000C9                     	ds	2
  1663  0000CB                     _Display_Init$4455:
  1664                           	opt stack 0
  1665                           
  1666                           ; 3 bytes @ 0x6B
  1667  0000CB                     	ds	2
  1668  0000CD                     InitDigiPot@LPeriod:
  1669                           	opt stack 0
  1670                           
  1671                           ; 3 bytes @ 0x6D
  1672  0000CD                     	ds	1
  1673  0000CE                     _Display_Init$4456:
  1674                           	opt stack 0
  1675                           
  1676                           ; 3 bytes @ 0x6E
  1677  0000CE                     	ds	2
  1678  0000D0                     _InitDigiPot$4457:
  1679                           	opt stack 0
  1680                           
  1681                           ; 3 bytes @ 0x70
  1682  0000D0                     	ds	1
  1683  0000D1                     Display_Init@i:
  1684                           	opt stack 0
  1685                           
  1686                           ; 2 bytes @ 0x71
  1687  0000D1                     	ds	2
  1688  0000D3                     InitDigiPot@LPrescaler:
  1689                           	opt stack 0
  1690  0000D3                     Display_Init@i_2656:
  1691                           	opt stack 0
  1692                           
  1693                           ; 2 bytes @ 0x73
  1694  0000D3                     	ds	2
  1695  0000D5                     InitApp@LResult:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x75
  1699  0000D5                     	ds	1
  1700  0000D6                     InitApp@test:
  1701                           	opt stack 0
  1702                           
  1703                           ; 1 bytes @ 0x76
  1704  0000D6                     	ds	1
  1705  0000D7                     main@LResult:
  1706                           	opt stack 0
  1707                           
  1708                           ; 2 bytes @ 0x77
  1709  0000D7                     	ds	2
  1710  0000D9                     _main$2436:
  1711                           	opt stack 0
  1712                           
  1713                           ; 2 bytes @ 0x79
  1714  0000D9                     	ds	2
  1715  0000DB                     main@LChannelSwitchOld:
  1716                           	opt stack 0
  1717                           
  1718                           ; 1 bytes @ 0x7B
  1719  0000DB                     	ds	1
  1720  0000DC                     main@LEncSwitchPushed:
  1721                           	opt stack 0
  1722                           
  1723                           ; 1 bytes @ 0x7C
  1724  0000DC                     	ds	1
  1725  0000DD                     main@LChannelSwitch:
  1726                           	opt stack 0
  1727                           
  1728                           ; 1 bytes @ 0x7D
  1729  0000DD                     	ds	1
  1730  0000DE                     main@LValue:
  1731                           	opt stack 0
  1732                           
  1733                           ; 1 bytes @ 0x7E
  1734  0000DE                     	ds	1
  1735  0000DF                     main@LMidiData:
  1736                           	opt stack 0
  1737                           
  1738                           ; 5 bytes @ 0x7F
  1739  0000DF                     	ds	5
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           postdec1	equ	0xFE5
  1747                           fsr1h	equ	0xFE2
  1748                           fsr1l	equ	0xFE1
  1749                           
  1750                           	psect	cstackCOMRAM
  1751  000001                     __pcstackCOMRAM:
  1752                           	opt stack 0
  1753  000001                     Hub_DecodeSwitch@AIndex2:
  1754                           	opt stack 0
  1755  000001                     i2Display_ClockWrite@value:
  1756                           	opt stack 0
  1757  000001                     i2Display_LatchWrite@value:
  1758                           	opt stack 0
  1759  000001                     i2Display_DataWrite@value:
  1760                           	opt stack 0
  1761  000001                     i2Hub_ClockWrite@value:
  1762                           	opt stack 0
  1763  000001                     i2Hub_LatchWrite@value:
  1764                           	opt stack 0
  1765  000001                     i2DigiPot_ClockWrite@value:
  1766                           	opt stack 0
  1767  000001                     i2DigiPot_LatchWrite@value:
  1768                           	opt stack 0
  1769  000001                     i2DigiPot_DataWrite@value:
  1770                           	opt stack 0
  1771  000001                     Display_SwapBuffer@LSwap:
  1772                           	opt stack 0
  1773  000001                     i2Midi_ResetBuffer@AMidiBuffer:
  1774                           	opt stack 0
  1775  000001                     i2Midi_Write@AMidiBuffer:
  1776                           	opt stack 0
  1777  000001                     i2memcpy@d1:
  1778                           	opt stack 0
  1779                           
  1780                           ; 2 bytes @ 0x0
  1781  000001                     	ds	1
  1782  000002                     ??_Hub_DecodeSwitch:
  1783  000002                     i2LatchOn@AIO:
  1784                           	opt stack 0
  1785  000002                     i2LatchOff@AIO:
  1786                           	opt stack 0
  1787  000002                     i2ClockUp@AIO:
  1788                           	opt stack 0
  1789  000002                     i2ClockDown@AIO:
  1790                           	opt stack 0
  1791                           
  1792                           ; 12 bytes @ 0x1
  1793  000002                     	ds	1
  1794  000003                     ??i2_Midi_ResetBuffer:
  1795  000003                     ??i2_Midi_Write:
  1796  000003                     i2memcpy@s1:
  1797                           	opt stack 0
  1798                           
  1799                           ; 2 bytes @ 0x2
  1800  000003                     	ds	1
  1801  000004                     Hub_DecodeSwitch@AIndex1:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x3
  1805  000004                     	ds	1
  1806  000005                     i2Midi_ResetBuffer@j:
  1807                           	opt stack 0
  1808  000005                     Hub_SetValue@ASourceValue:
  1809                           	opt stack 0
  1810  000005                     i2memcpy@n:
  1811                           	opt stack 0
  1812                           
  1813                           ; 2 bytes @ 0x4
  1814  000005                     	ds	1
  1815  000006                     i2Midi_ResetBuffer@i:
  1816                           	opt stack 0
  1817                           
  1818                           ; 1 bytes @ 0x5
  1819  000006                     	ds	1
  1820  000007                     Hub_SetValue@AMinValue:
  1821                           	opt stack 0
  1822  000007                     i2memcpy@d:
  1823                           	opt stack 0
  1824                           
  1825                           ; 2 bytes @ 0x6
  1826  000007                     	ds	1
  1827  000008                     Hub_SetValue@AMaxValue:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0x7
  1831  000008                     	ds	1
  1832  000009                     i2memcpy@s:
  1833                           	opt stack 0
  1834                           
  1835                           ; 2 bytes @ 0x8
  1836  000009                     	ds	1
  1837  00000A                     Hub_SetValue@AIncrement:
  1838                           	opt stack 0
  1839  00000A                     i2Midi_Write@AData:
  1840                           	opt stack 0
  1841                           
  1842                           ; 1 bytes @ 0x9
  1843  00000A                     	ds	1
  1844  00000B                     ??_Hub_SetValue:
  1845  00000B                     i2memcpy@tmp:
  1846                           	opt stack 0
  1847                           
  1848                           ; 1 bytes @ 0xA
  1849  00000B                     	ds	1
  1850  00000C                     Hub_SetValue@LValue:
  1851                           	opt stack 0
  1852                           
  1853                           ; 2 bytes @ 0xB
  1854  00000C                     	ds	2
  1855  00000E                     i2WriteChar@AIO:
  1856                           	opt stack 0
  1857  00000E                     i2ReadBit@AIO:
  1858                           	opt stack 0
  1859                           
  1860                           ; 12 bytes @ 0xD
  1861  00000E                     	ds	12
  1862  00001A                     ??i2_WriteChar:
  1863  00001A                     i2ReadBit@LBit:
  1864                           	opt stack 0
  1865                           
  1866                           ; 1 bytes @ 0x19
  1867  00001A                     	ds	1
  1868  00001B                     i2ReadBitArray@AData:
  1869                           	opt stack 0
  1870                           
  1871                           ; 2 bytes @ 0x1A
  1872  00001B                     	ds	1
  1873  00001C                     i2WriteChar@AChar:
  1874                           	opt stack 0
  1875                           
  1876                           ; 1 bytes @ 0x1B
  1877  00001C                     	ds	1
  1878  00001D                     i2WriteChar@i:
  1879                           	opt stack 0
  1880  00001D                     i2ReadBitArray@AIO:
  1881                           	opt stack 0
  1882                           
  1883                           ; 12 bytes @ 0x1C
  1884  00001D                     	ds	2
  1885  00001F                     i2WriteData@AData:
  1886                           	opt stack 0
  1887                           
  1888                           ; 2 bytes @ 0x1E
  1889  00001F                     	ds	2
  1890  000021                     i2WriteData@ASize:
  1891                           	opt stack 0
  1892                           
  1893                           ; 1 bytes @ 0x20
  1894  000021                     	ds	1
  1895  000022                     i2WriteData@AIO:
  1896                           	opt stack 0
  1897                           
  1898                           ; 12 bytes @ 0x21
  1899  000022                     	ds	7
  1900  000029                     ??i2_ReadBitArray:
  1901                           
  1902                           ; 1 bytes @ 0x28
  1903  000029                     	ds	1
  1904  00002A                     i2ReadBitArray@i:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x29
  1908  00002A                     	ds	2
  1909  00002C                     i2Hub_ReadSwitch@LBitArray:
  1910                           	opt stack 0
  1911                           
  1912                           ; 24 bytes @ 0x2B
  1913  00002C                     	ds	2
  1914  00002E                     i2WriteData@i:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0x2D
  1918  00002E                     	ds	22
  1919  000044                     ??_Hub_UpdateValues:
  1920                           
  1921                           ; 1 bytes @ 0x43
  1922  000044                     	ds	2
  1923  000046                     Hub_UpdateValues@i:
  1924                           	opt stack 0
  1925                           
  1926                           ; 2 bytes @ 0x45
  1927  000046                     	ds	2
  1928  000048                     ??_Interrupt:
  1929                           
  1930                           ; 1 bytes @ 0x47
  1931  000048                     	ds	19
  1932  00005B                     Interrupt@LData:
  1933                           	opt stack 0
  1934                           
  1935                           ; 1 bytes @ 0x5A
  1936  00005B                     	ds	1
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           postdec1	equ	0xFE5
  1944                           fsr1h	equ	0xFE2
  1945                           fsr1l	equ	0xFE1
  1946                           
  1947 ;;
  1948 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1949 ;;
  1950 ;; *************** function _main *****************
  1951 ;; Defined at:
  1952 ;;		line 155 in file "main.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;		None
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  LValue          1  126[BANK0 ] unsigned char 
  1957 ;;  LMidiData       5  127[BANK0 ] struct .
  1958 ;;  LResult         2  119[BANK0 ] int 
  1959 ;;  LChannelSwit    1  125[BANK0 ] unsigned char 
  1960 ;;  LEncSwitchPu    1  124[BANK0 ] unsigned char 
  1961 ;;  LChannelSwit    1  123[BANK0 ] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1971 ;;      Params:         0       0       0       0       0       0       0       0       0
  1972 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1974 ;;      Totals:         0      13       0       0       0       0       0       0       0
  1975 ;;Total ram usage:       13 bytes
  1976 ;; Hardware stack levels required when called:   16
  1977 ;; This function calls:
  1978 ;;		_ConfigureOscillator
  1979 ;;		_Display_ProcessData
  1980 ;;		_InitApp
  1981 ;;		_Load
  1982 ;;		_Midi_Read
  1983 ;;		_Midi_Write
  1984 ;;		_PauseHub
  1985 ;;		_Persistant_SaveBuffer
  1986 ;;		_RunHub
  1987 ;;		_Sequencer_StartTimer
  1988 ;;		_Sequencer_StopTimer
  1989 ;;		_USBDeviceInit
  1990 ;;		_USBDeviceTasks
  1991 ;;		_WriteData
  1992 ;;		___awdiv
  1993 ;;		_getsUSBUSART
  1994 ;;		_memcmp
  1995 ;; This function is called by:
  1996 ;;		Startup code after reset
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text0
  2001  0008EA                     __ptext0:
  2002                           	opt stack 0
  2003  0008EA                     _main:
  2004                           	opt stack 15
  2005                           
  2006                           ;main.c: 158: ConfigureOscillator();
  2007                           
  2008                           ;incstack = 0
  2009  0008EA  ECC8  F02A         	call	_ConfigureOscillator
  2010                           
  2011                           ;main.c: 161: InitApp();
  2012  0008EE  EC6C  F022         	call	_InitApp	;wreg free
  2013                           
  2014                           ;main.c: 163: USBDeviceInit();
  2015  0008F2  ECEE  F00F         	call	_USBDeviceInit	;wreg free
  2016                           
  2017                           ;main.c: 164: ;
  2018                           ;main.c: 166: bool LEncSwitchPushed = 0;
  2019  0008F6  0E00               	movlw	0
  2020  0008F8  0100               	movlb	0	; () banked
  2021  0008FA  6FDC               	movwf	main@LEncSwitchPushed& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024                           ;main.c: 167: bool LChannelSwitch;
  2025                           ;main.c: 168: bool LChannelSwitchOld = _Hub.SecondaryBuffer.ActionButton;
  2026  0008FC  C1AD  F0DB         	movff	__Hub+110,main@LChannelSwitchOld
  2027  000900                     
  2028                           ;main.c: 170: {
  2029                           ;main.c: 172: USBDeviceTasks();
  2030                           
  2031                           ; BSR set to: 0
  2032  000900  EC38  F00F         	call	_USBDeviceTasks	;wreg free
  2033                           
  2034                           ;main.c: 175: if( USBDeviceState >= CONFIGURED_STATE )
  2035  000904  0E1F               	movlw	31
  2036  000906  0100               	movlb	0	; () banked
  2037  000908  65FC               	cpfsgt	_USBDeviceState& (0+255),b
  2038  00090A  D020               	goto	l641
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;main.c: 176: {
  2042                           ;main.c: 177: if( (cdc_trf_state == 0) == 1)
  2043  00090C  51F5               	movf	_cdc_trf_state& (0+255),w,b
  2044  00090E  A4D8               	btfss	status,2,c
  2045  000910  D01D               	goto	l641
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;main.c: 178: {
  2049                           ;main.c: 179: if (getsUSBUSART(_USBBufferIn, 1) > 0)
  2050  000912  0EFD               	movlw	low __USBBufferIn
  2051  000914  6F6B               	movwf	getsUSBUSART@buffer& (0+255),b
  2052  000916  0E00               	movlw	high __USBBufferIn
  2053  000918  6F6C               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
  2054  00091A  0E01               	movlw	1
  2055  00091C  6F6D               	movwf	getsUSBUSART@len& (0+255),b
  2056  00091E  EC40  F020         	call	_getsUSBUSART	;wreg free
  2057  000922  0900               	iorlw	0
  2058  000924  B4D8               	btfsc	status,2,c
  2059  000926  D012               	goto	l641
  2060                           
  2061                           ;main.c: 180: {
  2062                           ;main.c: 181: PauseHub();
  2063  000928  EC6F  F02A         	call	_PauseHub	;wreg free
  2064                           
  2065                           ;main.c: 182: Midi_Write(_USBBufferIn, &_MidiInput);
  2066  00092C  0E84               	movlw	low __MidiInput
  2067  00092E  0100               	movlb	0	; () banked
  2068  000930  6F60               	movwf	Midi_Write@AMidiBuffer& (0+255),b
  2069  000932  0E05               	movlw	high __MidiInput
  2070  000934  6F61               	movwf	(Midi_Write@AMidiBuffer+1)& (0+255),b
  2071  000936  0EFD               	movlw	__USBBufferIn& (0+255)
  2072  000938  EC79  F008         	call	_Midi_Write
  2073                           
  2074                           ;main.c: 183: Load(_USBBufferIn[0] * 2);
  2075  00093C  0100               	movlb	0	; () banked
  2076  00093E  51FD               	movf	__USBBufferIn& (0+255),w,b
  2077  000940  0D02               	mullw	2
  2078  000942  50F3               	movf	prodl,w,c
  2079  000944  ECB5  F01C         	call	_Load
  2080                           
  2081                           ;main.c: 186: RunHub();
  2082  000948  EC4D  F02A         	call	_RunHub	;wreg free
  2083  00094C                     l641:
  2084                           
  2085                           ;main.c: 187: }
  2086                           ;main.c: 188: }
  2087                           ;main.c: 189: }
  2088                           ;main.c: 191: _Hub.ReadyToWrite = 1;
  2089  00094C  0E01               	movlw	1
  2090  00094E  0101               	movlb	1	; () banked
  2091  000950  6FC5               	movwf	(__Hub+134)& (0+255),b
  2092  000952                     
  2093                           ; BSR set to: 1
  2094                           
  2095                           ; BSR set to: 1
  2096                           
  2097                           ; BSR set to: 1
  2098  000952  51C5               	movf	(__Hub+134)& (0+255),w,b
  2099  000954  A4D8               	btfss	status,2,c
  2100  000956  D7FD               	goto	l643
  2101                           
  2102                           ; BSR set to: 1
  2103                           ;main.c: 194: LChannelSwitch = _Hub.SecondaryBuffer.ActionButton;
  2104  000958  C1AD  F0DD         	movff	__Hub+110,main@LChannelSwitch
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;main.c: 196: if (LChannelSwitch != LChannelSwitchOld)
  2108  00095C  0100               	movlb	0	; () banked
  2109  00095E  51DB               	movf	main@LChannelSwitchOld& (0+255),w,b
  2110  000960  19DD               	xorwf	main@LChannelSwitch& (0+255),w,b
  2111  000962  A4D8               	btfss	status,2,c
  2112  000964  D03E               	goto	l646
  2113  000966  D046               	goto	l645
  2114  000968                     
  2115                           ; BSR set to: 0
  2116                           ;main.c: 201: Sequencer_StopTimer();
  2117                           
  2118                           ; BSR set to: 0
  2119  000968  EC68  F02A         	call	_Sequencer_StopTimer	;wreg free
  2120                           
  2121                           ;main.c: 202: if (_Saving)
  2122  00096C  0100               	movlb	0	; () banked
  2123  00096E  51F4               	movf	__Saving& (0+255),w,b
  2124  000970  B4D8               	btfsc	status,2,c
  2125  000972  D014               	goto	l648
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;main.c: 203: {
  2129                           ;main.c: 205: Persistant_SaveBuffer(_Hub.SecondaryBuffer);
  2130  000974  EE21  F0AD         	lfsr	2,__Hub+110
  2131  000978  EE00  F0B1         	lfsr	0,Persistant_SaveBuffer@ABuffer
  2132  00097C  0E0B               	movlw	11
  2133  00097E                     u10101:
  2134  00097E  CFDB FFEB          	movff	plusw2,plusw0
  2135  000982  06E8               	decf	wreg,f,c
  2136  000984  E2FC               	bc	u10101
  2137  000986  ECBB  F01E         	call	_Persistant_SaveBuffer	;wreg free
  2138                           
  2139                           ;main.c: 208: _Modified = 0;
  2140  00098A  0E00               	movlw	0
  2141  00098C  0101               	movlb	1	; () banked
  2142  00098E  6F34               	movwf	__Modified& (0+255),b
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;main.c: 209: _Saving = 0;
  2146  000990  0E00               	movlw	0
  2147  000992  0100               	movlb	0	; () banked
  2148  000994  6FF4               	movwf	__Saving& (0+255),b
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 210: _Display.SavingMask = 0xFF;
  2152  000996  0102               	movlb	2	; () banked
  2153  000998  69D1               	setf	(__Display+199)& (0+255),b
  2154                           
  2155                           ;main.c: 211: }
  2156  00099A  D046               	goto	l654
  2157  00099C                     l648:
  2158                           
  2159                           ;main.c: 212: else
  2160                           ;main.c: 213: {
  2161                           ;main.c: 215: LEncSwitchPushed = 1;
  2162                           
  2163                           ; BSR set to: 2
  2164  00099C  0E01               	movlw	1
  2165  00099E  0100               	movlb	0	; () banked
  2166  0009A0  6FDC               	movwf	main@LEncSwitchPushed& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 216: Sequencer_StartTimer(2.0f, 0);
  2170  0009A2  0E00               	movlw	0
  2171  0009A4  6F9F               	movwf	Sequencer_StartTimer@ATime& (0+255),b
  2172  0009A6  0E00               	movlw	0
  2173  0009A8  6FA0               	movwf	(Sequencer_StartTimer@ATime+1)& (0+255),b
  2174  0009AA  0E40               	movlw	64
  2175  0009AC  6FA1               	movwf	(Sequencer_StartTimer@ATime+2)& (0+255),b
  2176  0009AE  0E00               	movlw	0
  2177  0009B0  6FA2               	movwf	Sequencer_StartTimer@ALoop& (0+255),b
  2178  0009B2  EC9E  F025         	call	_Sequencer_StartTimer	;wreg free
  2179                           
  2180                           ;main.c: 217: }
  2181                           ;main.c: 218: break;
  2182  0009B6  D038               	goto	l654
  2183  0009B8                     
  2184                           ;main.c: 220: LEncSwitchPushed = 0;
  2185  0009B8  0E00               	movlw	0
  2186  0009BA  0100               	movlb	0	; () banked
  2187  0009BC  6FDC               	movwf	main@LEncSwitchPushed& (0+255),b
  2188                           
  2189                           ;main.c: 221: if (!_Saving && !_Timer.Elapsed)
  2190  0009BE  51F4               	movf	__Saving& (0+255),w,b
  2191  0009C0  A4D8               	btfss	status,2,c
  2192  0009C2  D032               	goto	l654
  2193                           
  2194                           ; BSR set to: 0
  2195  0009C4  0101               	movlb	1	; () banked
  2196  0009C6  5108               	movf	__Timer& (0+255),w,b
  2197  0009C8  A4D8               	btfss	status,2,c
  2198  0009CA  D02E               	goto	l654
  2199                           
  2200                           ; BSR set to: 1
  2201                           ;main.c: 222: {
  2202                           ;main.c: 224: Sequencer_StopTimer();
  2203  0009CC  EC68  F02A         	call	_Sequencer_StopTimer	;wreg free
  2204                           
  2205                           ;main.c: 225: PauseHub();
  2206  0009D0  EC6F  F02A         	call	_PauseHub	;wreg free
  2207                           
  2208                           ;main.c: 226: Load(_Hub.PrimaryBuffer.Channel);
  2209  0009D4  0101               	movlb	1	; () banked
  2210  0009D6  51A3               	movf	(__Hub+100)& (0+255),w,b
  2211  0009D8  ECB5  F01C         	call	_Load
  2212                           
  2213                           ;main.c: 227: RunHub();
  2214  0009DC  EC4D  F02A         	call	_RunHub	;wreg free
  2215                           
  2216                           ;main.c: 230: }
  2217                           
  2218                           ;main.c: 228: }
  2219                           ;main.c: 229: break;
  2220  0009E0  D023               	goto	l654
  2221  0009E2                     l646:
  2222  0009E2  0100               	movlb	0	; () banked
  2223  0009E4  51DD               	movf	main@LChannelSwitch& (0+255),w,b
  2224                           
  2225                           ; Switch size 1, requested type "space"
  2226                           ; Number of cases is 2, Range of values is 0 to 1
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte            7     4 (average)
  2230                           ;	Chosen strategy is simple_byte
  2231  0009E6  0A00               	xorlw	0	; case 0
  2232  0009E8  B4D8               	btfsc	status,2,c
  2233  0009EA  D7BE               	goto	l647
  2234  0009EC  0A01               	xorlw	1	; case 1
  2235  0009EE  B4D8               	btfsc	status,2,c
  2236  0009F0  D7E3               	goto	l651
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 231: }
  2240  0009F2  D01A               	goto	l654
  2241  0009F4                     l645:
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;main.c: 232: else
  2245                           ;main.c: 233: {
  2246                           ;main.c: 235: if (LEncSwitchPushed && _Timer.Elapsed && !_Saving)
  2247                           
  2248                           ; BSR set to: 0
  2249  0009F4  51DC               	movf	main@LEncSwitchPushed& (0+255),w,b
  2250  0009F6  B4D8               	btfsc	status,2,c
  2251  0009F8  D017               	goto	l654
  2252                           
  2253                           ; BSR set to: 0
  2254  0009FA  0101               	movlb	1	; () banked
  2255  0009FC  5108               	movf	__Timer& (0+255),w,b
  2256  0009FE  B4D8               	btfsc	status,2,c
  2257  000A00  D013               	goto	l654
  2258                           
  2259                           ; BSR set to: 1
  2260  000A02  0100               	movlb	0	; () banked
  2261  000A04  51F4               	movf	__Saving& (0+255),w,b
  2262  000A06  A4D8               	btfss	status,2,c
  2263  000A08  D00F               	goto	l654
  2264                           
  2265                           ; BSR set to: 0
  2266                           ;main.c: 236: {
  2267                           ;main.c: 237: Sequencer_StopTimer();
  2268  000A0A  EC68  F02A         	call	_Sequencer_StopTimer	;wreg free
  2269                           
  2270                           ;main.c: 238: _Saving = 1;
  2271  000A0E  0E01               	movlw	1
  2272  000A10  0100               	movlb	0	; () banked
  2273  000A12  6FF4               	movwf	__Saving& (0+255),b
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;main.c: 239: Sequencer_StartTimer(0.3f, 1);
  2277  000A14  0E9A               	movlw	154
  2278  000A16  6F9F               	movwf	Sequencer_StartTimer@ATime& (0+255),b
  2279  000A18  0E99               	movlw	153
  2280  000A1A  6FA0               	movwf	(Sequencer_StartTimer@ATime+1)& (0+255),b
  2281  000A1C  0E3E               	movlw	62
  2282  000A1E  6FA1               	movwf	(Sequencer_StartTimer@ATime+2)& (0+255),b
  2283  000A20  0E01               	movlw	1
  2284  000A22  6FA2               	movwf	Sequencer_StartTimer@ALoop& (0+255),b
  2285  000A24  EC9E  F025         	call	_Sequencer_StartTimer	;wreg free
  2286  000A28                     l654:
  2287                           
  2288                           ;main.c: 240: }
  2289                           ;main.c: 241: }
  2290                           ;main.c: 243: MidiData LMidiData;
  2291                           ;main.c: 244: if (Midi_Read(&LMidiData, &_MidiInput))
  2292  000A28  0EDF               	movlw	low main@LMidiData
  2293  000A2A  0100               	movlb	0	; () banked
  2294  000A2C  6F60               	movwf	Midi_Read@AData& (0+255),b
  2295  000A2E  0E00               	movlw	high main@LMidiData
  2296  000A30  6F61               	movwf	(Midi_Read@AData+1)& (0+255),b
  2297  000A32  0E84               	movlw	low __MidiInput
  2298  000A34  6F62               	movwf	Midi_Read@AMidiBuffer& (0+255),b
  2299  000A36  0E05               	movlw	high __MidiInput
  2300  000A38  6F63               	movwf	(Midi_Read@AMidiBuffer+1)& (0+255),b
  2301  000A3A  EC1E  F021         	call	_Midi_Read	;wreg free
  2302  000A3E  0900               	iorlw	0
  2303  000A40  B4D8               	btfsc	status,2,c
  2304  000A42  D040               	goto	l655
  2305                           
  2306                           ;main.c: 245: {
  2307                           ;main.c: 246: PauseHub();
  2308  000A44  EC6F  F02A         	call	_PauseHub	;wreg free
  2309                           
  2310                           ;main.c: 247: switch(LMidiData.Code)
  2311  000A48  D033               	goto	l656
  2312  000A4A                     
  2313                           ;main.c: 250: Load(LMidiData.Data[0]);
  2314  000A4A  0100               	movlb	0	; () banked
  2315  000A4C  51E1               	movf	(main@LMidiData+2)& (0+255),w,b
  2316  000A4E  ECB5  F01C         	call	_Load
  2317                           
  2318                           ;main.c: 251: break;
  2319  000A52  D036               	goto	l658
  2320  000A54                     
  2321                           ;main.c: 253: {
  2322                           ;main.c: 254: unsigned char LValue = LMidiData.Data[1] / 2;
  2323  000A54  C0E2  F060         	movff	main@LMidiData+3,___awdiv@dividend
  2324  000A58  0100               	movlb	0	; () banked
  2325  000A5A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  2326  000A5C  0E00               	movlw	0
  2327  000A5E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  2328  000A60  0E02               	movlw	2
  2329  000A62  6F62               	movwf	___awdiv@divisor& (0+255),b
  2330  000A64  ECA7  F021         	call	___awdiv	;wreg free
  2331  000A68  0100               	movlb	0	; () banked
  2332  000A6A  5160               	movf	?___awdiv& (0+255),w,b
  2333  000A6C  6FDE               	movwf	main@LValue& (0+255),b
  2334                           
  2335                           ;main.c: 255: switch(LMidiData.Data[0])
  2336  000A6E  D00F               	goto	l660
  2337  000A70                     l661:
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;main.c: 258: _Hub.PrimaryBuffer.Values[4] = LValue;
  2341  000A70  C0DE  F1A9         	movff	main@LValue,__Hub+106
  2342                           
  2343                           ;main.c: 259: break;
  2344  000A74  D025               	goto	l658
  2345  000A76                     l663:
  2346                           
  2347                           ; BSR set to: 0
  2348                           ;main.c: 261: _Hub.PrimaryBuffer.Values[0] = LValue;
  2349  000A76  C0DE  F1A5         	movff	main@LValue,__Hub+102
  2350                           
  2351                           ;main.c: 262: break;
  2352  000A7A  D022               	goto	l658
  2353  000A7C                     l664:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;main.c: 264: _Hub.PrimaryBuffer.Values[1] = LValue;
  2357  000A7C  C0DE  F1A6         	movff	main@LValue,__Hub+103
  2358                           
  2359                           ;main.c: 265: break;
  2360  000A80  D01F               	goto	l658
  2361  000A82                     l665:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;main.c: 267: _Hub.PrimaryBuffer.Values[2] = LValue;
  2365  000A82  C0DE  F1A7         	movff	main@LValue,__Hub+104
  2366                           
  2367                           ;main.c: 268: break;
  2368  000A86  D01C               	goto	l658
  2369  000A88                     l666:
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;main.c: 270: _Hub.PrimaryBuffer.Values[3] = LValue;
  2373  000A88  C0DE  F1A8         	movff	main@LValue,__Hub+105
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 272: }
  2377                           
  2378                           ;main.c: 271: break;
  2379  000A8C  D019               	goto	l658
  2380  000A8E                     l660:
  2381                           
  2382                           ; BSR set to: 0
  2383                           
  2384                           ; BSR set to: 0
  2385  000A8E  51E1               	movf	(main@LMidiData+2)& (0+255),w,b
  2386                           
  2387                           ; Switch size 1, requested type "space"
  2388                           ; Number of cases is 5, Range of values is 7 to 78
  2389                           ; switch strategies available:
  2390                           ; Name         Instructions Cycles
  2391                           ; simple_byte           16     9 (average)
  2392                           ;	Chosen strategy is simple_byte
  2393  000A90  0A07               	xorlw	7	; case 7
  2394  000A92  B4D8               	btfsc	status,2,c
  2395  000A94  D7ED               	goto	l661
  2396  000A96  0A4C               	xorlw	76	; case 75
  2397  000A98  B4D8               	btfsc	status,2,c
  2398  000A9A  D7ED               	goto	l663
  2399  000A9C  0A07               	xorlw	7	; case 76
  2400  000A9E  B4D8               	btfsc	status,2,c
  2401  000AA0  D7ED               	goto	l664
  2402  000AA2  0A01               	xorlw	1	; case 77
  2403  000AA4  B4D8               	btfsc	status,2,c
  2404  000AA6  D7ED               	goto	l665
  2405  000AA8  0A03               	xorlw	3	; case 78
  2406  000AAA  B4D8               	btfsc	status,2,c
  2407  000AAC  D7ED               	goto	l666
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;main.c: 274: }
  2411                           ;main.c: 275: }
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;main.c: 273: break;
  2415  000AAE  D008               	goto	l658
  2416  000AB0                     l656:
  2417                           
  2418                           ; BSR set to: 0
  2419  000AB0  0100               	movlb	0	; () banked
  2420  000AB2  51DF               	movf	main@LMidiData& (0+255),w,b
  2421                           
  2422                           ; Switch size 1, requested type "space"
  2423                           ; Number of cases is 2, Range of values is 176 to 192
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            7     4 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428  000AB4  0AB0               	xorlw	176	; case 176
  2429  000AB6  B4D8               	btfsc	status,2,c
  2430  000AB8  D7CD               	goto	l659
  2431  000ABA  0A70               	xorlw	112	; case 192
  2432  000ABC  B4D8               	btfsc	status,2,c
  2433  000ABE  D7C5               	goto	l657
  2434  000AC0                     l658:
  2435                           
  2436                           ;main.c: 276: RunHub();
  2437                           
  2438                           ; BSR set to: 0
  2439  000AC0  EC4D  F02A         	call	_RunHub	;wreg free
  2440  000AC4                     l655:
  2441                           
  2442                           ;main.c: 277: }
  2443                           ;main.c: 283: signed int LResult = memcmp(_Hub.SecondaryBuffer.Values, _Hub.BackupBuffer
      +                          .Values, sizeof(_Hub.SecondaryBuffer.Values));
  2444  000AC4  0EB1               	movlw	low (__Hub+114)
  2445  000AC6  0100               	movlb	0	; () banked
  2446  000AC8  6F60               	movwf	memcmp@s1& (0+255),b
  2447  000ACA  0E01               	movlw	high (__Hub+114)
  2448  000ACC  6F61               	movwf	(memcmp@s1+1)& (0+255),b
  2449  000ACE  0EBD               	movlw	low (__Hub+126)
  2450  000AD0  6F62               	movwf	memcmp@s2& (0+255),b
  2451  000AD2  0E01               	movlw	high (__Hub+126)
  2452  000AD4  6F63               	movwf	(memcmp@s2+1)& (0+255),b
  2453  000AD6  0E00               	movlw	0
  2454  000AD8  6F65               	movwf	(memcmp@n+1)& (0+255),b
  2455  000ADA  0E08               	movlw	8
  2456  000ADC  6F64               	movwf	memcmp@n& (0+255),b
  2457  000ADE  EC5D  F023         	call	_memcmp	;wreg free
  2458  000AE2  C060  F0D7         	movff	?_memcmp,main@LResult
  2459  000AE6  C061  F0D8         	movff	?_memcmp+1,main@LResult+1
  2460                           
  2461                           ;main.c: 285: if (!_Modified && (2 > 1) && ((LResult != 0) || (_Hub.SecondaryBuffer.Push
      +                          edButton != _Hub.BackupBuffer.PushedButton)))
  2462  000AEA  0101               	movlb	1	; () banked
  2463  000AEC  5134               	movf	__Modified& (0+255),w,b
  2464  000AEE  A4D8               	btfss	status,2,c
  2465  000AF0  D01D               	goto	l667
  2466                           
  2467                           ; BSR set to: 1
  2468  000AF2  0100               	movlb	0	; () banked
  2469  000AF4  51D7               	movf	main@LResult& (0+255),w,b
  2470  000AF6  11D8               	iorwf	(main@LResult+1)& (0+255),w,b
  2471  000AF8  A4D8               	btfss	status,2,c
  2472  000AFA  D005               	goto	u10190
  2473                           
  2474                           ; BSR set to: 0
  2475  000AFC  0101               	movlb	1	; () banked
  2476  000AFE  51BA               	movf	(__Hub+123)& (0+255),w,b
  2477  000B00  19AE               	xorwf	(__Hub+111)& (0+255),w,b
  2478  000B02  B4D8               	btfsc	status,2,c
  2479  000B04  D013               	goto	l667
  2480  000B06                     u10190:
  2481                           
  2482                           ;main.c: 286: {
  2483                           ;main.c: 287: Sequencer_StopTimer();
  2484                           
  2485                           ; BSR set to: 1
  2486  000B06  EC68  F02A         	call	_Sequencer_StopTimer	;wreg free
  2487                           
  2488                           ;main.c: 288: _Modified = 1;
  2489  000B0A  0E01               	movlw	1
  2490  000B0C  0101               	movlb	1	; () banked
  2491  000B0E  6F34               	movwf	__Modified& (0+255),b
  2492                           
  2493                           ; BSR set to: 1
  2494                           ;main.c: 289: _Display.PointMask[1] = 0x08;
  2495  000B10  0E08               	movlw	8
  2496  000B12  0102               	movlb	2	; () banked
  2497  000B14  6FD3               	movwf	(__Display+201)& (0+255),b
  2498                           
  2499                           ; BSR set to: 2
  2500                           ;main.c: 290: Sequencer_StartTimer(0.3f, 1);
  2501  000B16  0E9A               	movlw	154
  2502  000B18  0100               	movlb	0	; () banked
  2503  000B1A  6F9F               	movwf	Sequencer_StartTimer@ATime& (0+255),b
  2504  000B1C  0E99               	movlw	153
  2505  000B1E  6FA0               	movwf	(Sequencer_StartTimer@ATime+1)& (0+255),b
  2506  000B20  0E3E               	movlw	62
  2507  000B22  6FA1               	movwf	(Sequencer_StartTimer@ATime+2)& (0+255),b
  2508  000B24  0E01               	movlw	1
  2509  000B26  6FA2               	movwf	Sequencer_StartTimer@ALoop& (0+255),b
  2510  000B28  EC9E  F025         	call	_Sequencer_StartTimer	;wreg free
  2511  000B2C                     l667:
  2512                           
  2513                           ;main.c: 291: }
  2514                           ;main.c: 293: Display_ProcessData(_Hub.SecondaryBuffer.PushedButton ? _Hub.SecondaryBuff
      +                          er.Sound : _Hub.SecondaryBuffer.Channel, _Hub.SecondaryBuffer.Values, _Hub.CurrentChanne
      +                          l == _Hub.SecondaryBuffer.Channel, _Hub.SecondaryBuffer.PushedButton);
  2515  000B2C  0101               	movlb	1	; () banked
  2516  000B2E  51AE               	movf	(__Hub+111)& (0+255),w,b
  2517  000B30  A4D8               	btfss	status,2,c
  2518  000B32  D003               	goto	l671
  2519                           
  2520                           ; BSR set to: 1
  2521  000B34  C1AF  F0D9         	movff	__Hub+112,_main$2436
  2522  000B38  D002               	goto	L1
  2523  000B3A                     l671:
  2524                           
  2525                           ; BSR set to: 1
  2526  000B3A  C1B0  F0D9         	movff	__Hub+113,_main$2436
  2527  000B3E                     L1:
  2528  000B3E  0100               	movlb	0	; () banked
  2529  000B40  6BDA               	clrf	(_main$2436+1)& (0+255),b
  2530                           
  2531                           ; BSR set to: 0
  2532                           
  2533                           ; BSR set to: 0
  2534  000B42  0EB1               	movlw	low (__Hub+114)
  2535  000B44  6F6A               	movwf	Display_ProcessData@AValues& (0+255),b
  2536  000B46  0E01               	movlw	high (__Hub+114)
  2537  000B48  6F6B               	movwf	(Display_ProcessData@AValues+1)& (0+255),b
  2538  000B4A  0101               	movlb	1	; () banked
  2539  000B4C  51AF               	movf	(__Hub+112)& (0+255),w,b
  2540  000B4E  19CB               	xorwf	(__Hub+140)& (0+255),w,b
  2541  000B50  A4D8               	btfss	status,2,c
  2542  000B52  D002               	goto	u10210
  2543  000B54  0E01               	movlw	1
  2544  000B56  D001               	goto	u10220
  2545  000B58                     u10210:
  2546  000B58  0E00               	movlw	0
  2547  000B5A                     u10220:
  2548  000B5A  0100               	movlb	0	; () banked
  2549  000B5C  6F6C               	movwf	Display_ProcessData@ALoaded& (0+255),b
  2550  000B5E  C1AE  F06D         	movff	__Hub+111,Display_ProcessData@APushed
  2551  000B62  51D9               	movf	_main$2436& (0+255),w,b
  2552  000B64  EC29  F007         	call	_Display_ProcessData
  2553                           
  2554                           ;main.c: 295: if (_DigiPot.Counter >= _DigiPot.CounterRef)
  2555  000B68  0101               	movlb	1	; () banked
  2556  000B6A  51D9               	movf	__DigiPot& (0+255),w,b
  2557  000B6C  5DDA               	subwf	(__DigiPot+1)& (0+255),w,b
  2558  000B6E  A0D8               	btfss	status,0,c
  2559  000B70  D015               	goto	l674
  2560                           
  2561                           ; BSR set to: 1
  2562                           ;main.c: 296: {
  2563                           ;main.c: 297: WriteData(_Hub.SecondaryBuffer.Values, 8, _DigiPot.IO);
  2564  000B72  0EB1               	movlw	low (__Hub+114)
  2565  000B74  0100               	movlb	0	; () banked
  2566  000B76  6F7E               	movwf	WriteData@AData& (0+255),b
  2567  000B78  0E01               	movlw	high (__Hub+114)
  2568  000B7A  6F7F               	movwf	(WriteData@AData+1)& (0+255),b
  2569  000B7C  0E08               	movlw	8
  2570  000B7E  6F80               	movwf	WriteData@ASize& (0+255),b
  2571  000B80  EE21  F0DB         	lfsr	2,__DigiPot+2
  2572  000B84  EE00  F081         	lfsr	0,WriteData@AIO
  2573  000B88  0E0B               	movlw	11
  2574  000B8A                     u10241:
  2575  000B8A  CFDB FFEB          	movff	plusw2,plusw0
  2576  000B8E  06E8               	decf	wreg,f,c
  2577  000B90  E2FC               	bc	u10241
  2578  000B92  ECCF  F023         	call	_WriteData	;wreg free
  2579                           
  2580                           ;main.c: 298: _DigiPot.Counter = 0;
  2581  000B96  0E00               	movlw	0
  2582  000B98  0101               	movlb	1	; () banked
  2583  000B9A  6FDA               	movwf	(__DigiPot+1)& (0+255),b
  2584  000B9C                     l674:
  2585                           
  2586                           ; BSR set to: 1
  2587                           ;main.c: 299: }
  2588                           ;main.c: 301: LChannelSwitchOld = LChannelSwitch;
  2589                           
  2590                           ; BSR set to: 1
  2591  000B9C  C0DD  F0DB         	movff	main@LChannelSwitch,main@LChannelSwitchOld
  2592                           
  2593                           ; BSR set to: 1
  2594  000BA0  D6AF               	goto	l638
  2595  000BA2                     __end_of_main:
  2596                           	opt stack 0
  2597                           tblptru	equ	0xFF8
  2598                           tblptrh	equ	0xFF7
  2599                           tblptrl	equ	0xFF6
  2600                           tablat	equ	0xFF5
  2601                           prodl	equ	0xFF3
  2602                           postinc0	equ	0xFEE
  2603                           plusw0	equ	0xFEB
  2604                           wreg	equ	0xFE8
  2605                           postdec1	equ	0xFE5
  2606                           fsr1h	equ	0xFE2
  2607                           fsr1l	equ	0xFE1
  2608                           plusw2	equ	0xFDB
  2609                           status	equ	0xFD8
  2610                           
  2611 ;; *************** function _memcmp *****************
  2612 ;; Defined at:
  2613 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcmp.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;  s1              2    0[BANK0 ] PTR const void 
  2616 ;;		 -> _Hub.SecondaryBuffer.Values(8), _Hub.SecondaryBuffer(12), 
  2617 ;;  s2              2    2[BANK0 ] PTR const void 
  2618 ;;		 -> _Hub.BackupBuffer.Values(8), _Hub.BackupBuffer(12), 
  2619 ;;  n               2    4[BANK0 ] unsigned int 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  2    0[BANK0 ] int 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2631 ;;      Params:         0       6       0       0       0       0       0       0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2633 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2634 ;;      Totals:         0       9       0       0       0       0       0       0       0
  2635 ;;Total ram usage:        9 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    7
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_main
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           	psect	text1
  2646  0046BA                     __ptext1:
  2647                           	opt stack 0
  2648  0046BA                     _memcmp:
  2649                           	opt stack 23
  2650                           
  2651                           ; BSR set to: 1
  2652                           ;incstack = 0
  2653  0046BA  D02A               	goto	l1743
  2654  0046BC                     l7785:
  2655  0046BC  C062  FFD9         	movff	memcmp@s2,fsr2l
  2656  0046C0  C063  FFDA         	movff	memcmp@s2+1,fsr2h
  2657  0046C4  C060  FFE1         	movff	memcmp@s1,fsr1l
  2658  0046C8  C061  FFE2         	movff	memcmp@s1+1,fsr1h
  2659  0046CC  50DE               	movf	postinc2,w,c
  2660  0046CE  18E6               	xorwf	postinc1,w,c
  2661  0046D0  B4D8               	btfsc	status,2,c
  2662  0046D2  D019               	goto	l1745
  2663  0046D4  C062  FFD9         	movff	memcmp@s2,fsr2l
  2664  0046D8  C063  FFDA         	movff	memcmp@s2+1,fsr2h
  2665  0046DC  50DF               	movf	indf2,w,c
  2666  0046DE  0100               	movlb	0	; () banked
  2667  0046E0  6F66               	movwf	??_memcmp& (0+255),b
  2668  0046E2  6B67               	clrf	(??_memcmp+1)& (0+255),b
  2669  0046E4  1F66               	comf	??_memcmp& (0+255),f,b
  2670  0046E6  1F67               	comf	(??_memcmp+1)& (0+255),f,b
  2671  0046E8  4B66               	infsnz	??_memcmp& (0+255),f,b
  2672  0046EA  2B67               	incf	(??_memcmp+1)& (0+255),f,b
  2673  0046EC  C060  FFD9         	movff	memcmp@s1,fsr2l
  2674  0046F0  C061  FFDA         	movff	memcmp@s1+1,fsr2h
  2675  0046F4  50DF               	movf	indf2,w,c
  2676  0046F6  6F68               	movwf	(??_memcmp+2)& (0+255),b
  2677  0046F8  5168               	movf	(??_memcmp+2)& (0+255),w,b
  2678  0046FA  2566               	addwf	??_memcmp& (0+255),w,b
  2679  0046FC  6F60               	movwf	?_memcmp& (0+255),b
  2680  0046FE  0E00               	movlw	0
  2681  004700  2167               	addwfc	(??_memcmp+1)& (0+255),w,b
  2682  004702  6F61               	movwf	(?_memcmp+1)& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685  004704  0012               	return	
  2686  004706                     l1745:
  2687                           
  2688                           ; BSR set to: 0
  2689  004706  0100               	movlb	0	; () banked
  2690  004708  4B60               	infsnz	memcmp@s1& (0+255),f,b
  2691  00470A  2B61               	incf	(memcmp@s1+1)& (0+255),f,b
  2692  00470C  4B62               	infsnz	memcmp@s2& (0+255),f,b
  2693  00470E  2B63               	incf	(memcmp@s2+1)& (0+255),f,b
  2694  004710                     l1743:
  2695                           
  2696                           ; BSR set to: 0
  2697  004710  0100               	movlb	0	; () banked
  2698  004712  0764               	decf	memcmp@n& (0+255),f,b
  2699  004714  A0D8               	btfss	status,0,c
  2700  004716  0765               	decf	(memcmp@n+1)& (0+255),f,b
  2701  004718  2964               	incf	memcmp@n& (0+255),w,b
  2702  00471A  E1D0               	bnz	l7785
  2703  00471C  2965               	incf	(memcmp@n+1)& (0+255),w,b
  2704  00471E  A4D8               	btfss	status,2,c
  2705  004720  D7CD               	goto	l1744
  2706                           
  2707                           ; BSR set to: 0
  2708                           
  2709                           ; BSR set to: 0
  2710  004722  0E00               	movlw	0
  2711  004724  6F61               	movwf	(?_memcmp+1)& (0+255),b
  2712  004726  0E00               	movlw	0
  2713  004728  6F60               	movwf	?_memcmp& (0+255),b
  2714  00472A  0012               	return	
  2715  00472C                     __end_of_memcmp:
  2716                           	opt stack 0
  2717                           tblptru	equ	0xFF8
  2718                           tblptrh	equ	0xFF7
  2719                           tblptrl	equ	0xFF6
  2720                           tablat	equ	0xFF5
  2721                           prodl	equ	0xFF3
  2722                           postinc0	equ	0xFEE
  2723                           plusw0	equ	0xFEB
  2724                           wreg	equ	0xFE8
  2725                           postinc1	equ	0xFE6
  2726                           postdec1	equ	0xFE5
  2727                           fsr1h	equ	0xFE2
  2728                           fsr1l	equ	0xFE1
  2729                           indf2	equ	0xFDF
  2730                           postinc2	equ	0xFDE
  2731                           plusw2	equ	0xFDB
  2732                           fsr2h	equ	0xFDA
  2733                           fsr2l	equ	0xFD9
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _getsUSBUSART *****************
  2737 ;; Defined at:
  2738 ;;		line 485 in file "framework/usb/src/usb_device_cdc.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
  2741 ;;		 -> _USBBufferIn(1), 
  2742 ;;  len             1   13[BANK0 ] unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      unsigned char 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2754 ;;      Params:         0       3       0       0       0       0       0       0       0
  2755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2756 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2757 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        4 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    8
  2761 ;; This function calls:
  2762 ;;		_USBTransferOnePacket
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text2
  2769  004080                     __ptext2:
  2770                           	opt stack 0
  2771  004080                     _getsUSBUSART:
  2772                           	opt stack 22
  2773                           
  2774                           ;usb_device_cdc.c: 487: cdc_rx_len = 0;
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;incstack = 0
  2778  004080  0E00               	movlw	0
  2779  004082  0100               	movlb	0	; () banked
  2780  004084  6FF6               	movwf	_cdc_rx_len& (0+255),b
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;usb_device_cdc.c: 489: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
  2784  004086  505C               	movf	_CDCDataOutHandle,w,c
  2785  004088  105D               	iorwf	_CDCDataOutHandle+1,w,c
  2786  00408A  B4D8               	btfsc	status,2,c
  2787  00408C  D006               	goto	u9180
  2788                           
  2789                           ; BSR set to: 0
  2790  00408E  C05C  FFD9         	movff	_CDCDataOutHandle,fsr2l
  2791  004092  C05D  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
  2792  004096  BEDF               	btfsc	indf2,7,c
  2793  004098  D03B               	goto	l453
  2794  00409A                     u9180:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;usb_device_cdc.c: 490: {
  2798                           ;usb_device_cdc.c: 495: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
  2799                           
  2800                           ; BSR set to: 0
  2801  00409A  EE20 F001          	lfsr	2,1
  2802  00409E  505C               	movf	_CDCDataOutHandle,w,c
  2803  0040A0  26D9               	addwf	fsr2l,f,c
  2804  0040A2  505D               	movf	_CDCDataOutHandle+1,w,c
  2805  0040A4  22DA               	addwfc	fsr2h,f,c
  2806  0040A6  516D               	movf	getsUSBUSART@len& (0+255),w,b
  2807  0040A8  5CDE               	subwf	postinc2,w,c
  2808  0040AA  B0D8               	btfsc	status,0,c
  2809  0040AC  D008               	goto	l456
  2810                           
  2811                           ; BSR set to: 0
  2812                           ;usb_device_cdc.c: 496: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
  2813  0040AE  EE20 F001          	lfsr	2,1
  2814  0040B2  505C               	movf	_CDCDataOutHandle,w,c
  2815  0040B4  26D9               	addwf	fsr2l,f,c
  2816  0040B6  505D               	movf	_CDCDataOutHandle+1,w,c
  2817  0040B8  22DA               	addwfc	fsr2h,f,c
  2818  0040BA  50DF               	movf	indf2,w,c
  2819  0040BC  6F6D               	movwf	getsUSBUSART@len& (0+255),b
  2820  0040BE                     l456:
  2821                           
  2822                           ; BSR set to: 0
  2823                           ;usb_device_cdc.c: 501: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
  2824                           
  2825                           ; BSR set to: 0
  2826  0040BE  0E00               	movlw	0
  2827  0040C0  6FF6               	movwf	_cdc_rx_len& (0+255),b
  2828  0040C2  D013               	goto	l457
  2829  0040C4                     
  2830                           ; BSR set to: 0
  2831                           ;usb_device_cdc.c: 502: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
  2832                           
  2833                           ; BSR set to: 0
  2834  0040C4  51F6               	movf	_cdc_rx_len& (0+255),w,b
  2835  0040C6  0D01               	mullw	1
  2836  0040C8  0E00               	movlw	low _cdc_data_rx
  2837  0040CA  24F3               	addwf	prodl,w,c
  2838  0040CC  6ED9               	movwf	fsr2l,c
  2839  0040CE  0E03               	movlw	high _cdc_data_rx
  2840  0040D0  20F4               	addwfc	prodh,w,c
  2841  0040D2  6EDA               	movwf	fsr2h,c
  2842  0040D4  51F6               	movf	_cdc_rx_len& (0+255),w,b
  2843  0040D6  0D01               	mullw	1
  2844  0040D8  50F3               	movf	prodl,w,c
  2845  0040DA  256B               	addwf	getsUSBUSART@buffer& (0+255),w,b
  2846  0040DC  6EE1               	movwf	fsr1l,c
  2847  0040DE  50F4               	movf	prodh,w,c
  2848  0040E0  216C               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
  2849  0040E2  6EE2               	movwf	fsr1h,c
  2850  0040E4  CFDF FFE7          	movff	indf2,indf1
  2851                           
  2852                           ; BSR set to: 0
  2853  0040E8  2BF6               	incf	_cdc_rx_len& (0+255),f,b
  2854  0040EA                     l457:
  2855                           
  2856                           ; BSR set to: 0
  2857                           
  2858                           ; BSR set to: 0
  2859  0040EA  516D               	movf	getsUSBUSART@len& (0+255),w,b
  2860  0040EC  5DF6               	subwf	_cdc_rx_len& (0+255),w,b
  2861  0040EE  A0D8               	btfss	status,0,c
  2862  0040F0  D7E9               	goto	l458
  2863                           
  2864                           ; BSR set to: 0
  2865                           ;usb_device_cdc.c: 508: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  2866                           
  2867                           ; BSR set to: 0
  2868  0040F2  0E00               	movlw	0
  2869  0040F4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  2870  0040F6  0E00               	movlw	low _cdc_data_rx
  2871  0040F8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  2872  0040FA  0E03               	movlw	high _cdc_data_rx
  2873  0040FC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  2874  0040FE  0E40               	movlw	64
  2875  004100  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  2876  004102  0E02               	movlw	2
  2877  004104  EC40  F015         	call	_USBTransferOnePacket
  2878  004108  C060  F05C         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  2879  00410C  C061  F05D         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  2880  004110                     l453:
  2881                           
  2882                           ;usb_device_cdc.c: 510: }
  2883                           ;usb_device_cdc.c: 512: return cdc_rx_len;
  2884  004110  0100               	movlb	0	; () banked
  2885  004112  51F6               	movf	_cdc_rx_len& (0+255),w,b
  2886  004114  0012               	return	
  2887  004116                     __end_of_getsUSBUSART:
  2888                           	opt stack 0
  2889                           tblptru	equ	0xFF8
  2890                           tblptrh	equ	0xFF7
  2891                           tblptrl	equ	0xFF6
  2892                           tablat	equ	0xFF5
  2893                           prodh	equ	0xFF4
  2894                           prodl	equ	0xFF3
  2895                           postinc0	equ	0xFEE
  2896                           plusw0	equ	0xFEB
  2897                           wreg	equ	0xFE8
  2898                           indf1	equ	0xFE7
  2899                           postinc1	equ	0xFE6
  2900                           postdec1	equ	0xFE5
  2901                           fsr1h	equ	0xFE2
  2902                           fsr1l	equ	0xFE1
  2903                           indf2	equ	0xFDF
  2904                           postinc2	equ	0xFDE
  2905                           plusw2	equ	0xFDB
  2906                           fsr2h	equ	0xFDA
  2907                           fsr2l	equ	0xFD9
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _WriteData *****************
  2911 ;; Defined at:
  2912 ;;		line 37 in file "harware.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  AData           2   30[BANK0 ] PTR unsigned char 
  2915 ;;		 -> _Display.Buffer2(90), _Display.Buffer1(90), _Hub.SecondaryBuffer(12), _Hub(154), 
  2916 ;;		 -> _Display(214), 
  2917 ;;  ASize           1   32[BANK0 ] unsigned char 
  2918 ;;  AIO            12   33[BANK0 ] struct .
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  i               2   45[BANK0 ] int 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2930 ;;      Params:         0      15       0       0       0       0       0       0       0
  2931 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2933 ;;      Totals:         0      17       0       0       0       0       0       0       0
  2934 ;;Total ram usage:       17 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:   10
  2937 ;; This function calls:
  2938 ;;		_LatchOff
  2939 ;;		_LatchOn
  2940 ;;		_WriteChar
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text3
  2947  00479E                     __ptext3:
  2948                           	opt stack 0
  2949  00479E                     _WriteData:
  2950                           	opt stack 20
  2951                           
  2952                           ;harware.c: 39: LatchOn(AIO);
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;incstack = 0
  2956  00479E  EE20  F081         	lfsr	2,WriteData@AIO
  2957  0047A2  EE00  F061         	lfsr	0,LatchOn@AIO
  2958  0047A6  0E0B               	movlw	11
  2959  0047A8                     u9231:
  2960  0047A8  CFDB FFEB          	movff	plusw2,plusw0
  2961  0047AC  06E8               	decf	wreg,f,c
  2962  0047AE  E2FC               	bc	u9231
  2963  0047B0  EC4B  F029         	call	_LatchOn	;wreg free
  2964                           
  2965                           ;harware.c: 40: for (int i = ASize - 1; i >= 0; i--)
  2966  0047B4  0EFF               	movlw	255
  2967  0047B6  0100               	movlb	0	; () banked
  2968  0047B8  2580               	addwf	WriteData@ASize& (0+255),w,b
  2969  0047BA  6F8D               	movwf	WriteData@i& (0+255),b
  2970  0047BC  6B8E               	clrf	(WriteData@i+1)& (0+255),b
  2971  0047BE  0EFF               	movlw	255
  2972  0047C0  238E               	addwfc	(WriteData@i+1)& (0+255),f,b
  2973  0047C2                     l7551:
  2974                           
  2975                           ; BSR set to: 0
  2976  0047C2  BF8E               	btfsc	(WriteData@i+1)& (0+255),7,b
  2977  0047C4  D017               	goto	u9260
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;harware.c: 41: WriteChar(AData[i], AIO);
  2981                           
  2982                           ; BSR set to: 0
  2983                           
  2984                           ; BSR set to: 0
  2985  0047C6  EE20  F081         	lfsr	2,WriteData@AIO
  2986  0047CA  EE00  F06D         	lfsr	0,WriteChar@AIO
  2987  0047CE  0E0B               	movlw	11
  2988  0047D0                     u9251:
  2989  0047D0  CFDB FFEB          	movff	plusw2,plusw0
  2990  0047D4  06E8               	decf	wreg,f,c
  2991  0047D6  E2FC               	bc	u9251
  2992  0047D8  518D               	movf	WriteData@i& (0+255),w,b
  2993  0047DA  257E               	addwf	WriteData@AData& (0+255),w,b
  2994  0047DC  6ED9               	movwf	fsr2l,c
  2995  0047DE  518E               	movf	(WriteData@i+1)& (0+255),w,b
  2996  0047E0  217F               	addwfc	(WriteData@AData+1)& (0+255),w,b
  2997  0047E2  6EDA               	movwf	fsr2h,c
  2998  0047E4  50DF               	movf	indf2,w,c
  2999  0047E6  EC2C  F022         	call	_WriteChar
  3000  0047EA  0100               	movlb	0	; () banked
  3001  0047EC  078D               	decf	WriteData@i& (0+255),f,b
  3002  0047EE  A0D8               	btfss	status,0,c
  3003  0047F0  078E               	decf	(WriteData@i+1)& (0+255),f,b
  3004  0047F2  D7E7               	goto	l7551
  3005  0047F4                     u9260:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;harware.c: 42: LatchOff(AIO);
  3009                           
  3010                           ; BSR set to: 0
  3011  0047F4  EE20  F081         	lfsr	2,WriteData@AIO
  3012  0047F8  EE00  F061         	lfsr	0,LatchOff@AIO
  3013  0047FC  0E0B               	movlw	11
  3014  0047FE                     u9271:
  3015  0047FE  CFDB FFEB          	movff	plusw2,plusw0
  3016  004802  06E8               	decf	wreg,f,c
  3017  004804  E2FC               	bc	u9271
  3018  004806  EC5A  F029         	call	_LatchOff	;wreg free
  3019  00480A  0012               	return		;funcret
  3020  00480C                     __end_of_WriteData:
  3021                           	opt stack 0
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           postinc0	equ	0xFEE
  3029                           plusw0	equ	0xFEB
  3030                           wreg	equ	0xFE8
  3031                           indf1	equ	0xFE7
  3032                           postinc1	equ	0xFE6
  3033                           postdec1	equ	0xFE5
  3034                           fsr1h	equ	0xFE2
  3035                           fsr1l	equ	0xFE1
  3036                           indf2	equ	0xFDF
  3037                           postinc2	equ	0xFDE
  3038                           plusw2	equ	0xFDB
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function _WriteChar *****************
  3044 ;; Defined at:
  3045 ;;		line 27 in file "harware.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  AChar           1    wreg     unsigned char 
  3048 ;;  AIO            12   13[BANK0 ] struct .
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  AChar           1   27[BANK0 ] unsigned char 
  3051 ;;  i               2   28[BANK0 ] int 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3061 ;;      Params:         0      12       0       0       0       0       0       0       0
  3062 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3063 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3064 ;;      Totals:         0      17       0       0       0       0       0       0       0
  3065 ;;Total ram usage:       17 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; Hardware stack levels required when called:    9
  3068 ;; This function calls:
  3069 ;;		_ClockDown
  3070 ;;		_ClockUp
  3071 ;;		_DigiPot_ClockWrite
  3072 ;;		_DigiPot_DataWrite
  3073 ;;		_DigiPot_LatchWrite
  3074 ;;		_Display_ClockWrite
  3075 ;;		_Display_DataWrite
  3076 ;;		_Display_LatchWrite
  3077 ;;		_Hub_ClockWrite
  3078 ;;		_Hub_LatchWrite
  3079 ;; This function is called by:
  3080 ;;		_WriteData
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text4
  3085  004458                     __ptext4:
  3086                           	opt stack 0
  3087  004458                     _WriteChar:
  3088                           	opt stack 20
  3089                           
  3090                           ;incstack = 0
  3091                           ;WriteChar@AChar stored from wreg
  3092  004458  0100               	movlb	0	; () banked
  3093  00445A  6F7B               	movwf	WriteChar@AChar& (0+255),b
  3094                           
  3095                           ;harware.c: 29: for (int i = 7; i >= 0; i--)
  3096  00445C  0E00               	movlw	0
  3097  00445E  0100               	movlb	0	; () banked
  3098  004460  6F7D               	movwf	(WriteChar@i+1)& (0+255),b
  3099  004462  0E07               	movlw	7
  3100  004464  6F7C               	movwf	WriteChar@i& (0+255),b
  3101  004466                     l7361:
  3102                           
  3103                           ; BSR set to: 0
  3104  004466  BF7D               	btfsc	(WriteChar@i+1)& (0+255),7,b
  3105  004468  0012               	return	
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;harware.c: 30: {
  3109                           ;harware.c: 31: ClockUp(AIO);
  3110                           
  3111                           ; BSR set to: 0
  3112                           
  3113                           ; BSR set to: 0
  3114  00446A  EE20  F06D         	lfsr	2,WriteChar@AIO
  3115  00446E  EE00  F061         	lfsr	0,ClockUp@AIO
  3116  004472  0E0B               	movlw	11
  3117  004474                     u8771:
  3118  004474  CFDB FFEB          	movff	plusw2,plusw0
  3119  004478  06E8               	decf	wreg,f,c
  3120  00447A  E2FC               	bc	u8771
  3121  00447C  EC87  F029         	call	_ClockUp	;wreg free
  3122                           
  3123                           ;harware.c: 32: AIO.DataPin.Write((AChar >> i) & 0x01);
  3124  004480  EE20  F073         	lfsr	2,WriteChar@AIO+6
  3125  004484  D801               	call	u8788
  3126  004486  D018               	goto	u8789
  3127  004488                     u8788:
  3128  004488  0005               	push	
  3129  00448A  6EFA               	movwf	pclath,c
  3130  00448C  50DE               	movf	postinc2,w,c
  3131  00448E  6EFD               	movwf	tosl,c
  3132  004490  50DE               	movf	postinc2,w,c
  3133  004492  6EFE               	movwf	tosh,c
  3134  004494  50F8               	movf	tblptru,w,c
  3135  004496  6EFF               	movwf	tosu,c
  3136  004498  50FA               	movf	pclath,w,c
  3137  00449A  C07C  F079         	movff	WriteChar@i,??_WriteChar
  3138  00449E  C07B  F07A         	movff	WriteChar@AChar,??_WriteChar+1
  3139  0044A2  0100               	movlb	0	; () banked
  3140  0044A4  2B79               	incf	??_WriteChar& (0+255),f,b
  3141  0044A6  D002               	goto	u8794
  3142  0044A8                     u8795:
  3143  0044A8  90D8               	bcf	status,0,c
  3144  0044AA  337A               	rrcf	(??_WriteChar+1)& (0+255),f,b
  3145  0044AC                     u8794:
  3146  0044AC  2F79               	decfsz	??_WriteChar& (0+255),f,b
  3147  0044AE  D7FC               	goto	u8795
  3148  0044B0  0100               	movlb	0	; () banked
  3149  0044B2  517A               	movf	(??_WriteChar+1)& (0+255),w,b
  3150  0044B4  0B01               	andlw	1
  3151  0044B6  0012               	return		;indir
  3152  0044B8                     u8789:
  3153                           
  3154                           ;harware.c: 33: ClockDown(AIO);
  3155  0044B8  EE20  F06D         	lfsr	2,WriteChar@AIO
  3156  0044BC  EE00  F061         	lfsr	0,ClockDown@AIO
  3157  0044C0  0E0B               	movlw	11
  3158  0044C2                     u8801:
  3159  0044C2  CFDB FFEB          	movff	plusw2,plusw0
  3160  0044C6  06E8               	decf	wreg,f,c
  3161  0044C8  E2FC               	bc	u8801
  3162  0044CA  EC96  F029         	call	_ClockDown
  3163  0044CE  0100               	movlb	0	; () banked
  3164  0044D0  077C               	decf	WriteChar@i& (0+255),f,b
  3165  0044D2  A0D8               	btfss	status,0,c
  3166  0044D4  077D               	decf	(WriteChar@i+1)& (0+255),f,b
  3167  0044D6  D7C7               	goto	l7361
  3168  0044D8                     __end_of_WriteChar:
  3169                           	opt stack 0
  3170                           tosu	equ	0xFFF
  3171                           tosh	equ	0xFFE
  3172                           tosl	equ	0xFFD
  3173                           pclath	equ	0xFFA
  3174                           tblptru	equ	0xFF8
  3175                           tblptrh	equ	0xFF7
  3176                           tblptrl	equ	0xFF6
  3177                           tablat	equ	0xFF5
  3178                           prodh	equ	0xFF4
  3179                           prodl	equ	0xFF3
  3180                           postinc0	equ	0xFEE
  3181                           plusw0	equ	0xFEB
  3182                           wreg	equ	0xFE8
  3183                           indf1	equ	0xFE7
  3184                           postinc1	equ	0xFE6
  3185                           postdec1	equ	0xFE5
  3186                           fsr1h	equ	0xFE2
  3187                           fsr1l	equ	0xFE1
  3188                           indf2	equ	0xFDF
  3189                           postinc2	equ	0xFDE
  3190                           plusw2	equ	0xFDB
  3191                           fsr2h	equ	0xFDA
  3192                           fsr2l	equ	0xFD9
  3193                           status	equ	0xFD8
  3194                           
  3195 ;; *************** function _LatchOn *****************
  3196 ;; Defined at:
  3197 ;;		line 79 in file "harware.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;  AIO            12    1[BANK0 ] struct .
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3211 ;;      Params:         0      12       0       0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3214 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3215 ;;Total ram usage:       12 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    8
  3218 ;; This function calls:
  3219 ;;		_DigiPot_ClockWrite
  3220 ;;		_DigiPot_DataWrite
  3221 ;;		_DigiPot_LatchWrite
  3222 ;;		_Display_ClockWrite
  3223 ;;		_Display_DataWrite
  3224 ;;		_Display_LatchWrite
  3225 ;;		_Hub_ClockWrite
  3226 ;;		_Hub_LatchWrite
  3227 ;; This function is called by:
  3228 ;;		_WriteData
  3229 ;;		_ReadData
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text5
  3234  005296                     __ptext5:
  3235                           	opt stack 0
  3236  005296                     _LatchOn:
  3237                           	opt stack 21
  3238                           
  3239                           ;harware.c: 81: AIO.LatchPin.Write(0x00);
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;incstack = 0
  3243  005296  EE20  F06B         	lfsr	2,LatchOn@AIO+10
  3244  00529A  D801               	call	u8668
  3245  00529C  0012               	return	
  3246  00529E                     u8668:
  3247  00529E  0005               	push	
  3248  0052A0  6EFA               	movwf	pclath,c
  3249  0052A2  50DE               	movf	postinc2,w,c
  3250  0052A4  6EFD               	movwf	tosl,c
  3251  0052A6  50DE               	movf	postinc2,w,c
  3252  0052A8  6EFE               	movwf	tosh,c
  3253  0052AA  50F8               	movf	tblptru,w,c
  3254  0052AC  6EFF               	movwf	tosu,c
  3255  0052AE  50FA               	movf	pclath,w,c
  3256  0052B0  0E00               	movlw	0
  3257  0052B2  0012               	return		;indir
  3258  0052B4                     __end_of_LatchOn:
  3259                           	opt stack 0
  3260                           tosu	equ	0xFFF
  3261                           tosh	equ	0xFFE
  3262                           tosl	equ	0xFFD
  3263                           pclath	equ	0xFFA
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           prodh	equ	0xFF4
  3269                           prodl	equ	0xFF3
  3270                           postinc0	equ	0xFEE
  3271                           plusw0	equ	0xFEB
  3272                           wreg	equ	0xFE8
  3273                           indf1	equ	0xFE7
  3274                           postinc1	equ	0xFE6
  3275                           postdec1	equ	0xFE5
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           indf2	equ	0xFDF
  3279                           postinc2	equ	0xFDE
  3280                           plusw2	equ	0xFDB
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function _LatchOff *****************
  3286 ;; Defined at:
  3287 ;;		line 84 in file "harware.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  AIO            12    1[BANK0 ] struct .
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;		None
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3301 ;;      Params:         0      12       0       0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3304 ;;      Totals:         0      12       0       0       0       0       0       0       0
  3305 ;;Total ram usage:       12 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    8
  3308 ;; This function calls:
  3309 ;;		_DigiPot_ClockWrite
  3310 ;;		_DigiPot_DataWrite
  3311 ;;		_DigiPot_LatchWrite
  3312 ;;		_Display_ClockWrite
  3313 ;;		_Display_DataWrite
  3314 ;;		_Display_LatchWrite
  3315 ;;		_Hub_ClockWrite
  3316 ;;		_Hub_LatchWrite
  3317 ;; This function is called by:
  3318 ;;		_WriteData
  3319 ;;		_ReadData
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	text6
  3324  0052B4                     __ptext6:
  3325                           	opt stack 0
  3326  0052B4                     _LatchOff:
  3327                           	opt stack 21
  3328                           
  3329                           ;harware.c: 86: AIO.LatchPin.Write(0x01);
  3330                           
  3331                           ;incstack = 0
  3332  0052B4  EE20  F06B         	lfsr	2,LatchOff@AIO+10
  3333  0052B8  D801               	call	u8678
  3334  0052BA  0012               	return	
  3335  0052BC                     u8678:
  3336  0052BC  0005               	push	
  3337  0052BE  6EFA               	movwf	pclath,c
  3338  0052C0  50DE               	movf	postinc2,w,c
  3339  0052C2  6EFD               	movwf	tosl,c
  3340  0052C4  50DE               	movf	postinc2,w,c
  3341  0052C6  6EFE               	movwf	tosh,c
  3342  0052C8  50F8               	movf	tblptru,w,c
  3343  0052CA  6EFF               	movwf	tosu,c
  3344  0052CC  50FA               	movf	pclath,w,c
  3345  0052CE  0E01               	movlw	1
  3346  0052D0  0012               	return		;indir
  3347  0052D2                     __end_of_LatchOff:
  3348                           	opt stack 0
  3349                           tosu	equ	0xFFF
  3350                           tosh	equ	0xFFE
  3351                           tosl	equ	0xFFD
  3352                           pclath	equ	0xFFA
  3353                           tblptru	equ	0xFF8
  3354                           tblptrh	equ	0xFF7
  3355                           tblptrl	equ	0xFF6
  3356                           tablat	equ	0xFF5
  3357                           prodh	equ	0xFF4
  3358                           prodl	equ	0xFF3
  3359                           postinc0	equ	0xFEE
  3360                           plusw0	equ	0xFEB
  3361                           wreg	equ	0xFE8
  3362                           indf1	equ	0xFE7
  3363                           postinc1	equ	0xFE6
  3364                           postdec1	equ	0xFE5
  3365                           fsr1h	equ	0xFE2
  3366                           fsr1l	equ	0xFE1
  3367                           indf2	equ	0xFDF
  3368                           postinc2	equ	0xFDE
  3369                           plusw2	equ	0xFDB
  3370                           fsr2h	equ	0xFDA
  3371                           fsr2l	equ	0xFD9
  3372                           status	equ	0xFD8
  3373                           
  3374 ;; *************** function _USBDeviceTasks *****************
  3375 ;; Defined at:
  3376 ;;		line 477 in file "framework/usb/src/usb_device.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  i               1   27[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0
  3391 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3393 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3394 ;;Total ram usage:        1 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:   15
  3397 ;; This function calls:
  3398 ;;		_USBCtrlEPAllowStatusStage
  3399 ;;		_USBCtrlEPService
  3400 ;;		_USBDeviceInit
  3401 ;;		_USBIncrement1msInternalTimers
  3402 ;;		_USBStallHandler
  3403 ;;		_USBSuspend
  3404 ;;		_USBWakeFromSuspend
  3405 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text7
  3412  001E70                     __ptext7:
  3413                           	opt stack 0
  3414  001E70                     _USBDeviceTasks:
  3415                           	opt stack 15
  3416                           
  3417                           ;usb_device.c: 544: }
  3418                           ;usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
  3419                           
  3420                           ; BSR set to: 0
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;usb_device.c: 543: return;
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
  3427                           
  3428                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
  3429                           
  3430                           ;usb_device.c: 511: UIE = 0;
  3431                           
  3432                           ;usb_device.c: 506: {
  3433                           ;usb_device.c: 508: UCON = 0;
  3434                           
  3435                           ;usb_device.c: 479: uint8_t i;
  3436                           ;usb_device.c: 505: if (1 != 1)
  3437                           
  3438                           ;incstack = 0
  3439  001E70  0100               	movlb	0	; () banked
  3440  001E72  51FC               	movf	_USBDeviceState& (0+255),w,b
  3441  001E74  A4D8               	btfss	status,2,c
  3442  001E76  D011               	goto	l144
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;usb_device.c: 567: {
  3446                           ;usb_device.c: 569: UCON = 0;
  3447  001E78  0E00               	movlw	0
  3448  001E7A  6E6D               	movwf	3949,c	;volatile
  3449                           
  3450                           ;usb_device.c: 572: UIE = 0;
  3451  001E7C  0E00               	movlw	0
  3452  001E7E  6E69               	movwf	3945,c	;volatile
  3453                           
  3454                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  3455  001E80  0E16               	movlw	22
  3456  001E82  6E6F               	movwf	3951,c	;volatile
  3457  001E84  0E9F               	movlw	159
  3458  001E86  6E6B               	movwf	3947,c	;volatile
  3459  001E88  0E7B               	movlw	123
  3460  001E8A  6E69               	movwf	3945,c	;volatile
  3461                           
  3462                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  3463  001E8C  D001               	goto	l145
  3464  001E8E                     l146:
  3465  001E8E  866D               	bsf	3949,3,c	;volatile
  3466  001E90                     l145:
  3467  001E90  A66D               	btfss	3949,3,c	;volatile
  3468  001E92  D7FD               	goto	l146
  3469                           
  3470                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
  3471  001E94  0E01               	movlw	1
  3472  001E96  0100               	movlb	0	; () banked
  3473  001E98  6FFC               	movwf	_USBDeviceState& (0+255),b
  3474  001E9A                     l144:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;usb_device.c: 587: }
  3478                           ;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
  3479                           
  3480                           ; BSR set to: 0
  3481  001E9A  05FC               	decf	_USBDeviceState& (0+255),w,b
  3482  001E9C  B4D8               	btfsc	status,2,c
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;usb_device.c: 591: {
  3486                           ;usb_device.c: 601: if(!UCONbits.SE0)
  3487  001E9E  BA6D               	btfsc	3949,5,c	;volatile
  3488  001EA0  D008               	goto	l149
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;usb_device.c: 602: {
  3492                           ;usb_device.c: 608: {UIR = 0;};
  3493  001EA2  0E00               	movlw	0
  3494  001EA4  6E68               	movwf	3944,c	;volatile
  3495                           
  3496                           ;usb_device.c: 612: UIE=0;
  3497  001EA6  0E00               	movlw	0
  3498  001EA8  6E69               	movwf	3945,c	;volatile
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
  3502  001EAA  8069               	bsf	3945,0,c	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
  3506  001EAC  8869               	bsf	3945,4,c	;volatile
  3507                           
  3508                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
  3509  001EAE  0E02               	movlw	2
  3510  001EB0  6FFC               	movwf	_USBDeviceState& (0+255),b
  3511  001EB2                     l149:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;usb_device.c: 617: }
  3515                           ;usb_device.c: 618: }
  3516                           ;usb_device.c: 634: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  3517                           
  3518                           ; BSR set to: 0
  3519                           
  3520                           ; BSR set to: 0
  3521  001EB2  B468               	btfsc	3944,2,c	;volatile
  3522                           
  3523                           ; BSR set to: 0
  3524  001EB4  A469               	btfss	3945,2,c	;volatile
  3525  001EB6  D003               	goto	l150
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;usb_device.c: 635: {
  3529                           ;usb_device.c: 636: (UIR &= 0xFB);
  3530  001EB8  9468               	bcf	3944,2,c	;volatile
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;usb_device.c: 640: USBWakeFromSuspend();
  3534  001EBA  ECF8  F027         	call	_USBWakeFromSuspend
  3535  001EBE                     l150:
  3536                           
  3537                           ;usb_device.c: 642: }
  3538                           ;usb_device.c: 647: if(UCONbits.SUSPND==1)
  3539  001EBE  A26D               	btfss	3949,1,c	;volatile
  3540  001EC0  D002               	goto	l151
  3541                           
  3542                           ;usb_device.c: 648: {
  3543                           ;usb_device.c: 649: {PIR2bits.USBIF = 0;};
  3544  001EC2  9AA1               	bcf	4001,5,c	;volatile
  3545                           
  3546                           ;usb_device.c: 650: return;
  3547  001EC4  0012               	return	
  3548  001EC6                     l151:
  3549                           
  3550                           ;usb_device.c: 651: }
  3551                           ;usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
  3552  001EC6  B068               	btfsc	3944,0,c	;volatile
  3553  001EC8  A069               	btfss	3945,0,c	;volatile
  3554  001ECA  D006               	goto	l152
  3555                           
  3556                           ;usb_device.c: 664: {
  3557                           ;usb_device.c: 665: USBDeviceInit();
  3558  001ECC  ECEE  F00F         	call	_USBDeviceInit	;wreg free
  3559                           
  3560                           ;usb_device.c: 669: ;
  3561                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
  3562  001ED0  0E04               	movlw	4
  3563  001ED2  0100               	movlb	0	; () banked
  3564  001ED4  6FFC               	movwf	_USBDeviceState& (0+255),b
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;usb_device.c: 681: (UIR &= 0xFE);
  3568  001ED6  9068               	bcf	3944,0,c	;volatile
  3569  001ED8                     l152:
  3570                           
  3571                           ;usb_device.c: 682: }
  3572                           ;usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  3573                           
  3574                           ; BSR set to: 0
  3575  001ED8  B868               	btfsc	3944,4,c	;volatile
  3576  001EDA  A869               	btfss	3945,4,c	;volatile
  3577  001EDC  D002               	goto	l153
  3578                           
  3579                           ;usb_device.c: 688: {
  3580                           ;usb_device.c: 694: USBSuspend();
  3581  001EDE  EC48  F028         	call	_USBSuspend	;wreg free
  3582  001EE2                     l153:
  3583                           
  3584                           ;usb_device.c: 696: }
  3585                           ;usb_device.c: 708: if(UIRbits.SOFIF)
  3586  001EE2  AC68               	btfss	3944,6,c	;volatile
  3587  001EE4  D01C               	goto	l157
  3588                           
  3589                           ;usb_device.c: 709: {
  3590                           ;usb_device.c: 711: if(UIEbits.SOFIE)
  3591  001EE6  AC69               	btfss	3945,6,c	;volatile
  3592  001EE8  D00F               	goto	l155
  3593                           
  3594                           ;usb_device.c: 712: {
  3595                           ;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  3596  001EEA  0E00               	movlw	0
  3597  001EEC  0100               	movlb	0	; () banked
  3598  001EEE  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  3599  001EF0  0E73               	movlw	115
  3600  001EF2  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  3601  001EF4  0E00               	movlw	0
  3602  001EF6  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  3603  001EF8  0E00               	movlw	0
  3604  001EFA  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  3605  001EFC  0E00               	movlw	0
  3606  001EFE  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  3607  001F00  0E01               	movlw	1
  3608  001F02  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  3609  001F04  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3610  001F08                     l155:
  3611                           
  3612                           ;usb_device.c: 714: }
  3613                           ;usb_device.c: 715: (UIR &= 0xBF);
  3614  001F08  9C68               	bcf	3944,6,c	;volatile
  3615                           
  3616                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
  3617  001F0A  EC3B  F029         	call	_USBIncrement1msInternalTimers	;wreg free
  3618                           
  3619                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
  3620  001F0E  0100               	movlb	0	; () banked
  3621  001F10  51F8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  3622  001F12  A4D8               	btfss	status,2,c
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;usb_device.c: 736: {
  3626                           ;usb_device.c: 737: USBStatusStageTimeoutCounter--;
  3627  001F14  07F8               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;usb_device.c: 738: }
  3631                           ;usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
  3632                           
  3633                           ; BSR set to: 0
  3634  001F16  51F8               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  3635  001F18  B4D8               	btfsc	status,2,c
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;usb_device.c: 745: {
  3639                           ;usb_device.c: 746: USBCtrlEPAllowStatusStage();
  3640  001F1A  EC5B  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
  3641  001F1E                     l157:
  3642                           
  3643                           ;usb_device.c: 747: }
  3644                           ;usb_device.c: 749: }
  3645                           ;usb_device.c: 751: if(UIRbits.STALLIF && UIEbits.STALLIE)
  3646  001F1E  BA68               	btfsc	3944,5,c	;volatile
  3647  001F20  AA69               	btfss	3945,5,c	;volatile
  3648  001F22  D002               	goto	l158
  3649                           
  3650                           ;usb_device.c: 752: {
  3651                           ;usb_device.c: 753: USBStallHandler();
  3652  001F24  EC40  F027         	call	_USBStallHandler	;wreg free
  3653  001F28                     l158:
  3654                           
  3655                           ;usb_device.c: 754: }
  3656                           ;usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
  3657  001F28  B268               	btfsc	3944,1,c	;volatile
  3658  001F2A  A269               	btfss	3945,1,c	;volatile
  3659  001F2C  D010               	goto	l159
  3660                           
  3661                           ;usb_device.c: 757: {
  3662                           ;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  3663  001F2E  0E7F               	movlw	127
  3664  001F30  0100               	movlb	0	; () banked
  3665  001F32  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  3666  001F34  696C               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  3667  001F36  0E00               	movlw	0
  3668  001F38  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  3669  001F3A  0E00               	movlw	0
  3670  001F3C  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  3671  001F3E  0E00               	movlw	0
  3672  001F40  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  3673  001F42  0E01               	movlw	1
  3674  001F44  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  3675  001F46  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3676                           
  3677                           ;usb_device.c: 759: {UEIR = 0;};
  3678  001F4A  0E00               	movlw	0
  3679  001F4C  6E6A               	movwf	3946,c	;volatile
  3680  001F4E                     l159:
  3681                           
  3682                           ;usb_device.c: 767: }
  3683                           ;usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
  3684  001F4E  0E04               	movlw	4
  3685  001F50  0100               	movlb	0	; () banked
  3686  001F52  61FC               	cpfslt	_USBDeviceState& (0+255),b
  3687  001F54  D002               	goto	l160
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;usb_device.c: 775: {
  3691                           ;usb_device.c: 776: {PIR2bits.USBIF = 0;};
  3692  001F56  9AA1               	bcf	4001,5,c	;volatile
  3693                           
  3694                           ;usb_device.c: 777: return;
  3695  001F58  0012               	return	
  3696  001F5A                     l160:
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;usb_device.c: 778: }
  3700                           ;usb_device.c: 783: if(UIEbits.TRNIE)
  3701  001F5A  A669               	btfss	3945,3,c	;volatile
  3702  001F5C  D03D               	goto	u9160
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;usb_device.c: 784: {
  3706                           ;usb_device.c: 785: for(i = 0; i < 4u; i++)
  3707  001F5E  0E00               	movlw	0
  3708  001F60  6F7B               	movwf	USBDeviceTasks@i& (0+255),b
  3709  001F62                     l7489:
  3710                           
  3711                           ; BSR set to: 0
  3712  001F62  0E03               	movlw	3
  3713  001F64  657B               	cpfsgt	USBDeviceTasks@i& (0+255),b
  3714  001F66  D001               	goto	l162
  3715  001F68  D037               	goto	u9160
  3716  001F6A                     l162:
  3717                           
  3718                           ; BSR set to: 0
  3719                           ;usb_device.c: 786: {
  3720                           ;usb_device.c: 787: if(UIRbits.TRNIF)
  3721  001F6A  A668               	btfss	3944,3,c	;volatile
  3722  001F6C  D035               	goto	u9160
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;usb_device.c: 788: {
  3726                           ;usb_device.c: 790: USTATcopy.Val = USTAT;
  3727  001F6E  CF6C F0FE          	movff	3948,_USTATcopy	;volatile
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
  3731  001F72  31FE               	rrcf	_USTATcopy& (0+255),w,b
  3732  001F74  32E8               	rrcf	wreg,f,c
  3733  001F76  32E8               	rrcf	wreg,f,c
  3734  001F78  0B0F               	andlw	15
  3735  001F7A  6FF9               	movwf	_endpoint_number& (0+255),b
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;usb_device.c: 793: (UIR &= 0xF7);
  3739  001F7C  9668               	bcf	3944,3,c	;volatile
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
  3743  001F7E  B5FE               	btfsc	_USTATcopy& (0+255),2,b
  3744  001F80  D007               	goto	l165
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;usb_device.c: 799: {
  3748                           ;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  3749  001F82  51F9               	movf	_endpoint_number& (0+255),w,b
  3750  001F84  0D01               	mullw	1
  3751  001F86  0E22               	movlw	low _ep_data_out
  3752  001F88  24F3               	addwf	prodl,w,c
  3753  001F8A  6ED9               	movwf	fsr2l,c
  3754  001F8C  0E01               	movlw	high _ep_data_out
  3755  001F8E  D007               	goto	L2
  3756  001F90                     l165:
  3757                           
  3758                           ;usb_device.c: 802: else
  3759                           ;usb_device.c: 803: {
  3760                           ;usb_device.c: 804: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  3761                           
  3762                           ; BSR set to: 1
  3763  001F90  0100               	movlb	0	; () banked
  3764  001F92  51F9               	movf	_endpoint_number& (0+255),w,b
  3765  001F94  0D01               	mullw	1
  3766  001F96  0E25               	movlw	low _ep_data_in
  3767  001F98  24F3               	addwf	prodl,w,c
  3768  001F9A  6ED9               	movwf	fsr2l,c
  3769  001F9C  0E01               	movlw	high _ep_data_in
  3770  001F9E                     L2:
  3771  001F9E  20F4               	addwfc	prodh,w,c
  3772  001FA0  6EDA               	movwf	fsr2h,c
  3773  001FA2  0101               	movlb	1	; () banked
  3774  001FA4  70DF               	btg	indf2,0,c
  3775                           
  3776                           ; BSR set to: 1
  3777                           ;usb_device.c: 805: }
  3778                           ;usb_device.c: 810: if(endpoint_number == 0)
  3779                           
  3780                           ; BSR set to: 1
  3781  001FA6  0100               	movlb	0	; () banked
  3782  001FA8  51F9               	movf	_endpoint_number& (0+255),w,b
  3783  001FAA  A4D8               	btfss	status,2,c
  3784  001FAC  D003               	goto	l167
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;usb_device.c: 811: {
  3788                           ;usb_device.c: 812: USBCtrlEPService();
  3789  001FAE  EC5B  F01F         	call	_USBCtrlEPService	;wreg free
  3790                           
  3791                           ;usb_device.c: 813: }
  3792  001FB2  D00F               	goto	l169
  3793  001FB4                     l167:
  3794                           
  3795                           ;usb_device.c: 814: else
  3796                           ;usb_device.c: 815: {
  3797                           ;usb_device.c: 816: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  3798  001FB4  0E00               	movlw	0
  3799  001FB6  0100               	movlb	0	; () banked
  3800  001FB8  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  3801  001FBA  0E72               	movlw	114
  3802  001FBC  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  3803  001FBE  0EFE               	movlw	low _USTATcopy
  3804  001FC0  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  3805  001FC2  0E00               	movlw	high _USTATcopy
  3806  001FC4  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  3807  001FC6  0E00               	movlw	0
  3808  001FC8  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  3809  001FCA  0E00               	movlw	0
  3810  001FCC  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  3811  001FCE  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3812  001FD2                     l169:
  3813  001FD2  0100               	movlb	0	; () banked
  3814  001FD4  2B7B               	incf	USBDeviceTasks@i& (0+255),f,b
  3815  001FD6  D7C5               	goto	l7489
  3816  001FD8                     u9160:
  3817                           
  3818                           ;usb_device.c: 822: }
  3819                           ;usb_device.c: 823: }
  3820                           ;usb_device.c: 824: }
  3821                           ;usb_device.c: 826: {PIR2bits.USBIF = 0;};
  3822                           
  3823                           ; BSR set to: 0
  3824  001FD8  9AA1               	bcf	4001,5,c	;volatile
  3825  001FDA  0012               	return		;funcret
  3826  001FDC                     __end_of_USBDeviceTasks:
  3827                           	opt stack 0
  3828                           tosu	equ	0xFFF
  3829                           tosh	equ	0xFFE
  3830                           tosl	equ	0xFFD
  3831                           pclath	equ	0xFFA
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           postinc0	equ	0xFEE
  3839                           plusw0	equ	0xFEB
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           postinc1	equ	0xFE6
  3843                           postdec1	equ	0xFE5
  3844                           fsr1h	equ	0xFE2
  3845                           fsr1l	equ	0xFE1
  3846                           indf2	equ	0xFDF
  3847                           postinc2	equ	0xFDE
  3848                           plusw2	equ	0xFDB
  3849                           fsr2h	equ	0xFDA
  3850                           fsr2l	equ	0xFD9
  3851                           status	equ	0xFD8
  3852                           
  3853 ;; *************** function _USBWakeFromSuspend *****************
  3854 ;; Defined at:
  3855 ;;		line 2303 in file "framework/usb/src/usb_device.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:   11
  3876 ;; This function calls:
  3877 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3878 ;; This function is called by:
  3879 ;;		_USBDeviceTasks
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text8
  3884  004FF0                     __ptext8:
  3885                           	opt stack 0
  3886  004FF0                     _USBWakeFromSuspend:
  3887                           	opt stack 18
  3888                           
  3889                           ;usb_device.c: 2305: USBBusIsSuspended = 0;
  3890                           
  3891                           ;incstack = 0
  3892  004FF0  0E00               	movlw	0
  3893  004FF2  0101               	movlb	1	; () banked
  3894  004FF4  6F3D               	movwf	_USBBusIsSuspended& (0+255),b
  3895                           
  3896                           ; BSR set to: 1
  3897                           ;usb_device.c: 2311: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  3898  004FF6  0E00               	movlw	0
  3899  004FF8  0100               	movlb	0	; () banked
  3900  004FFA  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  3901  004FFC  0E74               	movlw	116
  3902  004FFE  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  3903  005000  0E00               	movlw	0
  3904  005002  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  3905  005004  0E00               	movlw	0
  3906  005006  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  3907  005008  0E00               	movlw	0
  3908  00500A  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  3909  00500C  0E00               	movlw	0
  3910  00500E  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  3911  005010  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  3912                           
  3913                           ;usb_device.c: 2318: UCONbits.SUSPND = 0;
  3914  005014  926D               	bcf	3949,1,c	;volatile
  3915                           
  3916                           ;usb_device.c: 2323: UIEbits.ACTVIE = 0;
  3917  005016  9469               	bcf	3945,2,c	;volatile
  3918                           
  3919                           ;usb_device.c: 2341: while(UIRbits.ACTVIF)
  3920  005018  D001               	goto	l297
  3921  00501A                     
  3922                           ;usb_device.c: 2343: {
  3923                           ;usb_device.c: 2344: (UIR &= 0xFB);
  3924  00501A  9468               	bcf	3944,2,c	;volatile
  3925  00501C                     l297:
  3926  00501C  B468               	btfsc	3944,2,c	;volatile
  3927  00501E  D7FD               	goto	l298
  3928                           
  3929                           ;usb_device.c: 2345: }
  3930                           ;usb_device.c: 2347: USBTicksSinceSuspendEnd = 0;
  3931  005020  0E00               	movlw	0
  3932  005022  0101               	movlb	1	; () banked
  3933  005024  6F37               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  3934                           
  3935                           ; BSR set to: 1
  3936  005026  0012               	return		;funcret
  3937  005028                     __end_of_USBWakeFromSuspend:
  3938                           	opt stack 0
  3939                           tosu	equ	0xFFF
  3940                           tosh	equ	0xFFE
  3941                           tosl	equ	0xFFD
  3942                           pclath	equ	0xFFA
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           postinc0	equ	0xFEE
  3950                           plusw0	equ	0xFEB
  3951                           wreg	equ	0xFE8
  3952                           indf1	equ	0xFE7
  3953                           postinc1	equ	0xFE6
  3954                           postdec1	equ	0xFE5
  3955                           fsr1h	equ	0xFE2
  3956                           fsr1l	equ	0xFE1
  3957                           indf2	equ	0xFDF
  3958                           postinc2	equ	0xFDE
  3959                           plusw2	equ	0xFDB
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           
  3964 ;; *************** function _USBSuspend *****************
  3965 ;; Defined at:
  3966 ;;		line 2245 in file "framework/usb/src/usb_device.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3980 ;;      Params:         0       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        0 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:   11
  3987 ;; This function calls:
  3988 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  3989 ;; This function is called by:
  3990 ;;		_USBDeviceTasks
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text9
  3995  005090                     __ptext9:
  3996                           	opt stack 0
  3997  005090                     _USBSuspend:
  3998                           	opt stack 18
  3999                           
  4000                           ;usb_device.c: 2270: UIEbits.ACTVIE = 1;
  4001                           
  4002                           ; BSR set to: 1
  4003                           ;incstack = 0
  4004  005090  8469               	bsf	3945,2,c	;volatile
  4005                           
  4006                           ;usb_device.c: 2271: (UIR &= 0xEF);
  4007  005092  9868               	bcf	3944,4,c	;volatile
  4008                           
  4009                           ;usb_device.c: 2274: UCONbits.SUSPND = 1;
  4010  005094  826D               	bsf	3949,1,c	;volatile
  4011                           
  4012                           ;usb_device.c: 2277: USBBusIsSuspended = 1;
  4013  005096  0E01               	movlw	1
  4014  005098  0101               	movlb	1	; () banked
  4015  00509A  6F3D               	movwf	_USBBusIsSuspended& (0+255),b
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;usb_device.c: 2278: USBTicksSinceSuspendEnd = 0;
  4019  00509C  0E00               	movlw	0
  4020  00509E  6F37               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  4021                           
  4022                           ; BSR set to: 1
  4023                           ;usb_device.c: 2285: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  4024  0050A0  0E00               	movlw	0
  4025  0050A2  0100               	movlb	0	; () banked
  4026  0050A4  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4027  0050A6  0E75               	movlw	117
  4028  0050A8  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4029  0050AA  0E00               	movlw	0
  4030  0050AC  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4031  0050AE  0E00               	movlw	0
  4032  0050B0  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4033  0050B2  0E00               	movlw	0
  4034  0050B4  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4035  0050B6  0E00               	movlw	0
  4036  0050B8  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4037  0050BA  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4038  0050BE  0012               	return		;funcret
  4039  0050C0                     __end_of_USBSuspend:
  4040                           	opt stack 0
  4041                           tosu	equ	0xFFF
  4042                           tosh	equ	0xFFE
  4043                           tosl	equ	0xFFD
  4044                           pclath	equ	0xFFA
  4045                           tblptru	equ	0xFF8
  4046                           tblptrh	equ	0xFF7
  4047                           tblptrl	equ	0xFF6
  4048                           tablat	equ	0xFF5
  4049                           prodh	equ	0xFF4
  4050                           prodl	equ	0xFF3
  4051                           postinc0	equ	0xFEE
  4052                           plusw0	equ	0xFEB
  4053                           wreg	equ	0xFE8
  4054                           indf1	equ	0xFE7
  4055                           postinc1	equ	0xFE6
  4056                           postdec1	equ	0xFE5
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           indf2	equ	0xFDF
  4060                           postinc2	equ	0xFDE
  4061                           plusw2	equ	0xFDB
  4062                           fsr2h	equ	0xFDA
  4063                           fsr2l	equ	0xFD9
  4064                           status	equ	0xFD8
  4065                           
  4066 ;; *************** function _USBStallHandler *****************
  4067 ;; Defined at:
  4068 ;;		line 2202 in file "framework/usb/src/usb_device.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;		None
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;		None
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      void 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4082 ;;      Params:         0       0       0       0       0       0       0       0       0
  4083 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4084 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4085 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4086 ;;Total ram usage:        1 bytes
  4087 ;; Hardware stack levels used:    1
  4088 ;; Hardware stack levels required when called:    7
  4089 ;; This function calls:
  4090 ;;		Nothing
  4091 ;; This function is called by:
  4092 ;;		_USBDeviceTasks
  4093 ;; This function uses a non-reentrant model
  4094 ;;
  4095                           
  4096                           	psect	text10
  4097  004E80                     __ptext10:
  4098                           	opt stack 0
  4099  004E80                     _USBStallHandler:
  4100                           	opt stack 22
  4101                           
  4102                           ;usb_device.c: 2214: if(UEP0bits.EPSTALL == 1)
  4103                           
  4104                           ;incstack = 0
  4105  004E80  A070               	btfss	3952,0,c	;volatile
  4106  004E82  D01D               	goto	l289
  4107                           
  4108                           ;usb_device.c: 2215: {
  4109                           ;usb_device.c: 2217: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  4110  004E84  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4111  004E88  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4112  004E8C  0E80               	movlw	128
  4113  004E8E  18DE               	xorwf	postinc2,w,c
  4114  004E90  A4D8               	btfss	status,2,c
  4115  004E92  D014               	goto	l290
  4116  004E94  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  4117  004E98  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4118  004E9C  0E84               	movlw	132
  4119  004E9E  18DE               	xorwf	postinc2,w,c
  4120  004EA0  A4D8               	btfss	status,2,c
  4121  004EA2  D00C               	goto	l290
  4122                           
  4123                           ;usb_device.c: 2218: {
  4124                           ;usb_device.c: 2220: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  4125  004EA4  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4126  004EA8  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4127  004EAC  0E0C               	movlw	12
  4128  004EAE  6EDF               	movwf	indf2,c
  4129                           
  4130                           ;usb_device.c: 2221: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  4131  004EB0  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4132  004EB4  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4133  004EB8  0E00               	movlw	0
  4134  004EBA  8EDB               	bsf	plusw2,7,c
  4135  004EBC                     l290:
  4136                           
  4137                           ;usb_device.c: 2222: }
  4138                           ;usb_device.c: 2223: UEP0bits.EPSTALL = 0;
  4139  004EBC  9070               	bcf	3952,0,c	;volatile
  4140  004EBE                     l289:
  4141                           
  4142                           ;usb_device.c: 2224: }
  4143                           ;usb_device.c: 2226: (UIR &= 0xDF);
  4144  004EBE  9A68               	bcf	3944,5,c	;volatile
  4145  004EC0  0012               	return		;funcret
  4146  004EC2                     __end_of_USBStallHandler:
  4147                           	opt stack 0
  4148                           tosu	equ	0xFFF
  4149                           tosh	equ	0xFFE
  4150                           tosl	equ	0xFFD
  4151                           pclath	equ	0xFFA
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           prodh	equ	0xFF4
  4157                           prodl	equ	0xFF3
  4158                           postinc0	equ	0xFEE
  4159                           plusw0	equ	0xFEB
  4160                           wreg	equ	0xFE8
  4161                           indf1	equ	0xFE7
  4162                           postinc1	equ	0xFE6
  4163                           postdec1	equ	0xFE5
  4164                           fsr1h	equ	0xFE2
  4165                           fsr1l	equ	0xFE1
  4166                           indf2	equ	0xFDF
  4167                           postinc2	equ	0xFDE
  4168                           plusw2	equ	0xFDB
  4169                           fsr2h	equ	0xFDA
  4170                           fsr2l	equ	0xFD9
  4171                           status	equ	0xFD8
  4172                           
  4173 ;; *************** function _USBIncrement1msInternalTimers *****************
  4174 ;; Defined at:
  4175 ;;		line 3025 in file "framework/usb/src/usb_device.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;		None
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4189 ;;      Params:         0       0       0       0       0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4193 ;;Total ram usage:        0 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    7
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_USBDeviceTasks
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text11
  4204  005276                     __ptext11:
  4205                           	opt stack 0
  4206  005276                     _USBIncrement1msInternalTimers:
  4207                           	opt stack 22
  4208                           
  4209                           ;usb_device.c: 3033: USB1msTickCount++;
  4210                           
  4211                           ;incstack = 0
  4212  005276  0E01               	movlw	1
  4213  005278  0101               	movlb	1	; () banked
  4214  00527A  2718               	addwf	_USB1msTickCount& (0+255),f,b
  4215  00527C  0E00               	movlw	0
  4216  00527E  2319               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  4217  005280  231A               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  4218  005282  231B               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  4219                           
  4220                           ; BSR set to: 1
  4221                           ;usb_device.c: 3034: if(USBBusIsSuspended == 0)
  4222  005284  513D               	movf	_USBBusIsSuspended& (0+255),w,b
  4223  005286  A4D8               	btfss	status,2,c
  4224  005288  0012               	return	
  4225                           
  4226                           ; BSR set to: 1
  4227                           ;usb_device.c: 3035: {
  4228                           ;usb_device.c: 3036: USBTicksSinceSuspendEnd++;
  4229  00528A  2B37               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  4230                           
  4231                           ; BSR set to: 1
  4232                           ;usb_device.c: 3038: if(USBTicksSinceSuspendEnd == 0)
  4233  00528C  5137               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  4234  00528E  A4D8               	btfss	status,2,c
  4235  005290  0012               	return	
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;usb_device.c: 3039: {
  4239                           ;usb_device.c: 3040: USBTicksSinceSuspendEnd = 255;
  4240  005292  6937               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  4241                           
  4242                           ; BSR set to: 1
  4243  005294  0012               	return	
  4244  005296                     __end_of_USBIncrement1msInternalTimers:
  4245                           	opt stack 0
  4246                           tosu	equ	0xFFF
  4247                           tosh	equ	0xFFE
  4248                           tosl	equ	0xFFD
  4249                           pclath	equ	0xFFA
  4250                           tblptru	equ	0xFF8
  4251                           tblptrh	equ	0xFF7
  4252                           tblptrl	equ	0xFF6
  4253                           tablat	equ	0xFF5
  4254                           prodh	equ	0xFF4
  4255                           prodl	equ	0xFF3
  4256                           postinc0	equ	0xFEE
  4257                           plusw0	equ	0xFEB
  4258                           wreg	equ	0xFE8
  4259                           indf1	equ	0xFE7
  4260                           postinc1	equ	0xFE6
  4261                           postdec1	equ	0xFE5
  4262                           fsr1h	equ	0xFE2
  4263                           fsr1l	equ	0xFE1
  4264                           indf2	equ	0xFDF
  4265                           postinc2	equ	0xFDE
  4266                           plusw2	equ	0xFDB
  4267                           fsr2h	equ	0xFDA
  4268                           fsr2l	equ	0xFD9
  4269                           status	equ	0xFD8
  4270                           
  4271 ;; *************** function _USBDeviceInit *****************
  4272 ;; Defined at:
  4273 ;;		line 277 in file "framework/usb/src/usb_device.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;		None
  4276 ;; Auto vars:     Size  Location     Type
  4277 ;;  i               1    8[BANK0 ] unsigned char 
  4278 ;; Return value:  Size  Location     Type
  4279 ;;                  1    wreg      void 
  4280 ;; Registers used:
  4281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4282 ;; Tracked objects:
  4283 ;;		On entry : 0/0
  4284 ;;		On exit  : 0/0
  4285 ;;		Unchanged: 0/0
  4286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4287 ;;      Params:         0       0       0       0       0       0       0       0       0
  4288 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4289 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4290 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4291 ;;Total ram usage:        1 bytes
  4292 ;; Hardware stack levels used:    1
  4293 ;; Hardware stack levels required when called:    8
  4294 ;; This function calls:
  4295 ;;		_memset
  4296 ;; This function is called by:
  4297 ;;		_USBDeviceTasks
  4298 ;;		_main
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text12
  4303  001FDC                     __ptext12:
  4304                           	opt stack 0
  4305  001FDC                     _USBDeviceInit:
  4306                           	opt stack 21
  4307                           
  4308                           ;usb_device.c: 279: uint8_t i;
  4309                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;incstack = 0
  4313  001FDC  9AA0               	bcf	4000,5,c	;volatile
  4314                           
  4315                           ;usb_device.c: 285: ;
  4316                           ;usb_device.c: 288: {UEIR = 0;};
  4317  001FDE  0E00               	movlw	0
  4318  001FE0  6E6A               	movwf	3946,c	;volatile
  4319                           
  4320                           ;usb_device.c: 291: {UIR = 0;};
  4321  001FE2  0E00               	movlw	0
  4322  001FE4  6E68               	movwf	3944,c	;volatile
  4323                           
  4324                           ;usb_device.c: 294: UEP0 = 0;
  4325  001FE6  0E00               	movlw	0
  4326  001FE8  6E70               	movwf	3952,c	;volatile
  4327                           
  4328                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  4329  001FEA  0E71               	movlw	113
  4330  001FEC  0100               	movlb	0	; () banked
  4331  001FEE  6F60               	movwf	memset@p1& (0+255),b
  4332  001FF0  0E0F               	movlw	15
  4333  001FF2  6F61               	movwf	(memset@p1+1)& (0+255),b
  4334  001FF4  0E00               	movlw	0
  4335  001FF6  6F63               	movwf	(memset@c+1)& (0+255),b
  4336  001FF8  0E00               	movlw	0
  4337  001FFA  6F62               	movwf	memset@c& (0+255),b
  4338  001FFC  0E00               	movlw	0
  4339  001FFE  6F65               	movwf	(memset@n+1)& (0+255),b
  4340  002000  0E02               	movlw	2
  4341  002002  6F64               	movwf	memset@n& (0+255),b
  4342  002004  EC60  F028         	call	_memset	;wreg free
  4343                           
  4344                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  4345  002008  0E16               	movlw	22
  4346  00200A  6E6F               	movwf	3951,c	;volatile
  4347  00200C  0E9F               	movlw	159
  4348  00200E  6E6B               	movwf	3947,c	;volatile
  4349  002010  0E7B               	movlw	123
  4350  002012  6E69               	movwf	3945,c	;volatile
  4351                           
  4352                           ;usb_device.c: 301: ;
  4353                           ;usb_device.c: 304: ;
  4354                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  4355  002014  0E00               	movlw	0
  4356  002016  0100               	movlb	0	; () banked
  4357  002018  6F68               	movwf	USBDeviceInit@i& (0+255),b
  4358  00201A                     l6843:
  4359                           
  4360                           ; BSR set to: 0
  4361  00201A  0E0B               	movlw	11
  4362  00201C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  4363  00201E  D001               	goto	l133
  4364  002020  D00E               	goto	u7890
  4365  002022                     l133:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;usb_device.c: 308: {
  4369                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  4370                           
  4371                           ; BSR set to: 0
  4372  002022  5168               	movf	USBDeviceInit@i& (0+255),w,b
  4373  002024  0D04               	mullw	4
  4374  002026  0E00               	movlw	0
  4375  002028  24F3               	addwf	prodl,w,c
  4376  00202A  6ED9               	movwf	fsr2l,c
  4377  00202C  0E04               	movlw	4
  4378  00202E  20F4               	addwfc	prodh,w,c
  4379  002030  6EDA               	movwf	fsr2h,c
  4380  002032  6ADE               	clrf	postinc2,c
  4381  002034  6ADE               	clrf	postinc2,c
  4382  002036  6ADE               	clrf	postinc2,c
  4383  002038  6ADD               	clrf	postdec2,c
  4384                           
  4385                           ; BSR set to: 0
  4386  00203A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  4387  00203C  D7EE               	goto	l6843
  4388  00203E                     u7890:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;usb_device.c: 310: }
  4392                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  4393  00203E  8C6D               	bsf	3949,6,c	;volatile
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;usb_device.c: 316: UADDR = 0x00;
  4397  002040  0E00               	movlw	0
  4398  002042  6E6E               	movwf	3950,c	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  4402  002044  986D               	bcf	3949,4,c	;volatile
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  4406  002046  9C6D               	bcf	3949,6,c	;volatile
  4407  002048                     
  4408                           ;usb_device.c: 326: {
  4409                           ;usb_device.c: 327: (UIR &= 0xF7);
  4410                           
  4411                           ; BSR set to: 0
  4412  002048  9668               	bcf	3944,3,c	;volatile
  4413                           
  4414                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  4415  00204A  0E00               	movlw	0
  4416  00204C  0100               	movlb	0	; () banked
  4417  00204E  6FE7               	movwf	(_inPipes+3)& (0+255),b
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  4421  002050  0E00               	movlw	0
  4422  002052  0101               	movlb	1	; () banked
  4423  002054  6F03               	movwf	(_outPipes+3)& (0+255),b
  4424                           
  4425                           ; BSR set to: 1
  4426                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  4427  002056  0E00               	movlw	0
  4428  002058  6F05               	movwf	(_outPipes+5)& (0+255),b
  4429  00205A  0E00               	movlw	0
  4430  00205C  6F04               	movwf	(_outPipes+4)& (0+255),b
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  4434  00205E  B668               	btfsc	3944,3,c	;volatile
  4435  002060  D7F3               	goto	l135
  4436                           
  4437                           ; BSR set to: 1
  4438                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  4439                           
  4440                           ; BSR set to: 1
  4441  002062  0E01               	movlw	1
  4442  002064  6F3B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  4443                           
  4444                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  4445  002066  0E01               	movlw	1
  4446  002068  6F3A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  4447                           
  4448                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  4449  00206A  0E00               	movlw	0
  4450  00206C  6F39               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  4451                           
  4452                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  4453  00206E  0E00               	movlw	0
  4454  002070  6F38               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  4455                           
  4456                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  4457  002072  0E00               	movlw	0
  4458  002074  6F3D               	movwf	_USBBusIsSuspended& (0+255),b
  4459                           
  4460                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  4461  002076  0E00               	movlw	0
  4462  002078  0100               	movlb	0	; () banked
  4463  00207A  6F68               	movwf	USBDeviceInit@i& (0+255),b
  4464  00207C                     l6871:
  4465                           
  4466                           ; BSR set to: 0
  4467  00207C  0E02               	movlw	2
  4468  00207E  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  4469  002080  D001               	goto	l137
  4470  002082  D02E               	goto	u7920
  4471  002084                     l137:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;usb_device.c: 346: {
  4475                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  4476                           
  4477                           ; BSR set to: 0
  4478  002084  5168               	movf	USBDeviceInit@i& (0+255),w,b
  4479  002086  0D02               	mullw	2
  4480  002088  0EEA               	movlw	low _pBDTEntryIn
  4481  00208A  24F3               	addwf	prodl,w,c
  4482  00208C  6ED9               	movwf	fsr2l,c
  4483  00208E  0E00               	movlw	high _pBDTEntryIn
  4484  002090  20F4               	addwfc	prodh,w,c
  4485  002092  6EDA               	movwf	fsr2h,c
  4486  002094  0E00               	movlw	0
  4487  002096  6EDE               	movwf	postinc2,c
  4488  002098  0E00               	movlw	0
  4489  00209A  6EDD               	movwf	postdec2,c
  4490                           
  4491                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  4492  00209C  5168               	movf	USBDeviceInit@i& (0+255),w,b
  4493  00209E  0D02               	mullw	2
  4494  0020A0  0E0E               	movlw	low _pBDTEntryOut
  4495  0020A2  24F3               	addwf	prodl,w,c
  4496  0020A4  6ED9               	movwf	fsr2l,c
  4497  0020A6  0E01               	movlw	high _pBDTEntryOut
  4498  0020A8  20F4               	addwfc	prodh,w,c
  4499  0020AA  6EDA               	movwf	fsr2h,c
  4500  0020AC  0E00               	movlw	0
  4501  0020AE  6EDE               	movwf	postinc2,c
  4502  0020B0  0E00               	movlw	0
  4503  0020B2  6EDD               	movwf	postdec2,c
  4504                           
  4505                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  4506  0020B4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  4507  0020B6  0D01               	mullw	1
  4508  0020B8  0E25               	movlw	low _ep_data_in
  4509  0020BA  24F3               	addwf	prodl,w,c
  4510  0020BC  6ED9               	movwf	fsr2l,c
  4511  0020BE  0E01               	movlw	high _ep_data_in
  4512  0020C0  20F4               	addwfc	prodh,w,c
  4513  0020C2  6EDA               	movwf	fsr2h,c
  4514  0020C4  0E00               	movlw	0
  4515  0020C6  6EDF               	movwf	indf2,c
  4516                           
  4517                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  4518  0020C8  5168               	movf	USBDeviceInit@i& (0+255),w,b
  4519  0020CA  0D01               	mullw	1
  4520  0020CC  0E22               	movlw	low _ep_data_out
  4521  0020CE  24F3               	addwf	prodl,w,c
  4522  0020D0  6ED9               	movwf	fsr2l,c
  4523  0020D2  0E01               	movlw	high _ep_data_out
  4524  0020D4  20F4               	addwfc	prodh,w,c
  4525  0020D6  6EDA               	movwf	fsr2h,c
  4526  0020D8  0E00               	movlw	0
  4527  0020DA  6EDF               	movwf	indf2,c
  4528                           
  4529                           ; BSR set to: 0
  4530  0020DC  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  4531  0020DE  D7CE               	goto	l6871
  4532  0020E0                     u7920:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;usb_device.c: 351: }
  4536                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  4537                           
  4538                           ; BSR set to: 0
  4539  0020E0  0E08               	movlw	8
  4540  0020E2  6FEA               	movwf	_pBDTEntryIn& (0+255),b
  4541  0020E4  0E04               	movlw	4
  4542  0020E6  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  4546  0020E8  0E16               	movlw	22
  4547  0020EA  6E70               	movwf	3952,c	;volatile
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  4551  0020EC  0E04               	movlw	4
  4552  0020EE  0104               	movlb	4	; () banked
  4553  0020F0  6F03               	movwf	3,b	;volatile
  4554  0020F2  0E30               	movlw	48
  4555  0020F4  6F02               	movwf	2,b	;volatile
  4556                           
  4557                           ; BSR set to: 4
  4558                           ;usb_device.c: 359: BDT[0].CNT = 8;
  4559  0020F6  0E08               	movlw	8
  4560  0020F8  6F01               	movwf	1,b	;volatile
  4561                           
  4562                           ; BSR set to: 4
  4563                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  4564  0020FA  0E04               	movlw	4
  4565  0020FC  6F00               	movwf	0,b	;volatile
  4566                           
  4567                           ; BSR set to: 4
  4568                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  4569  0020FE  8F00               	bsf	0,7,b	;volatile
  4570                           
  4571                           ; BSR set to: 4
  4572                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  4573  002100  0E00               	movlw	0
  4574  002102  0100               	movlb	0	; () banked
  4575  002104  6FFF               	movwf	_USBActiveConfiguration& (0+255),b
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;usb_device.c: 366: USB1msTickCount = 0;
  4579  002106  0E00               	movlw	0
  4580  002108  0101               	movlb	1	; () banked
  4581  00210A  6F18               	movwf	_USB1msTickCount& (0+255),b
  4582  00210C  0E00               	movlw	0
  4583  00210E  6F19               	movwf	(_USB1msTickCount+1)& (0+255),b
  4584  002110  0E00               	movlw	0
  4585  002112  6F1A               	movwf	(_USB1msTickCount+2)& (0+255),b
  4586  002114  0E00               	movlw	0
  4587  002116  6F1B               	movwf	(_USB1msTickCount+3)& (0+255),b
  4588                           
  4589                           ; BSR set to: 1
  4590                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  4591  002118  0E00               	movlw	0
  4592  00211A  6F37               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  4596  00211C  0E00               	movlw	0
  4597  00211E  0100               	movlb	0	; () banked
  4598  002120  6FFC               	movwf	_USBDeviceState& (0+255),b
  4599                           
  4600                           ; BSR set to: 0
  4601  002122  0012               	return		;funcret
  4602  002124                     __end_of_USBDeviceInit:
  4603                           	opt stack 0
  4604                           tosu	equ	0xFFF
  4605                           tosh	equ	0xFFE
  4606                           tosl	equ	0xFFD
  4607                           pclath	equ	0xFFA
  4608                           tblptru	equ	0xFF8
  4609                           tblptrh	equ	0xFF7
  4610                           tblptrl	equ	0xFF6
  4611                           tablat	equ	0xFF5
  4612                           prodh	equ	0xFF4
  4613                           prodl	equ	0xFF3
  4614                           postinc0	equ	0xFEE
  4615                           plusw0	equ	0xFEB
  4616                           wreg	equ	0xFE8
  4617                           indf1	equ	0xFE7
  4618                           postinc1	equ	0xFE6
  4619                           postdec1	equ	0xFE5
  4620                           fsr1h	equ	0xFE2
  4621                           fsr1l	equ	0xFE1
  4622                           indf2	equ	0xFDF
  4623                           postinc2	equ	0xFDE
  4624                           postdec2	equ	0xFDD
  4625                           plusw2	equ	0xFDB
  4626                           fsr2h	equ	0xFDA
  4627                           fsr2l	equ	0xFD9
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function _USBCtrlEPService *****************
  4631 ;; Defined at:
  4632 ;;		line 2372 in file "framework/usb/src/usb_device.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;		None
  4637 ;; Return value:  Size  Location     Type
  4638 ;;                  1    wreg      void 
  4639 ;; Registers used:
  4640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4641 ;; Tracked objects:
  4642 ;;		On entry : 0/0
  4643 ;;		On exit  : 0/0
  4644 ;;		Unchanged: 0/0
  4645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4646 ;;      Params:         0       0       0       0       0       0       0       0       0
  4647 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4648 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4649 ;;      Totals:         0       1       0       0       0       0       0       0       0
  4650 ;;Total ram usage:        1 bytes
  4651 ;; Hardware stack levels used:    1
  4652 ;; Hardware stack levels required when called:   14
  4653 ;; This function calls:
  4654 ;;		_USBCtrlTrfInHandler
  4655 ;;		_USBCtrlTrfOutHandler
  4656 ;;		_USBCtrlTrfSetupHandler
  4657 ;;		_memcpy
  4658 ;; This function is called by:
  4659 ;;		_USBDeviceTasks
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text13
  4664  003EB6                     __ptext13:
  4665                           	opt stack 0
  4666  003EB6                     _USBCtrlEPService:
  4667                           	opt stack 15
  4668                           
  4669                           ;usb_device.c: 2378: USBStatusStageTimeoutCounter = (uint8_t)45;
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;incstack = 0
  4673  003EB6  0E2D               	movlw	45
  4674  003EB8  0100               	movlb	0	; () banked
  4675  003EBA  6FF8               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;usb_device.c: 2382: if((USTATcopy.Val & ~0x02) == 0x00)
  4679  003EBC  C0FE  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  4680  003EC0  0EFD               	movlw	253
  4681  003EC2  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  4682  003EC4  A4D8               	btfss	status,2,c
  4683  003EC6  D03B               	goto	l303
  4684                           
  4685                           ; BSR set to: 0
  4686                           ;usb_device.c: 2383: {
  4687                           ;usb_device.c: 2386: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  4688  003EC8  C0FE  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  4689  003ECC  90D8               	bcf	status,0,c
  4690  003ECE  337A               	rrcf	??_USBCtrlEPService& (0+255),f,b
  4691  003ED0  0E3F               	movlw	63
  4692  003ED2  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  4693  003ED4  517A               	movf	??_USBCtrlEPService& (0+255),w,b
  4694  003ED6  0D04               	mullw	4
  4695  003ED8  0E00               	movlw	0
  4696  003EDA  24F3               	addwf	prodl,w,c
  4697  003EDC  6FF2               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  4698  003EDE  0E04               	movlw	4
  4699  003EE0  20F4               	addwfc	prodh,w,c
  4700  003EE2  6FF3               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;usb_device.c: 2394: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  4704  003EE4  C0F2  F0F0         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  4705  003EE8  C0F3  F0F1         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
  4709  003EEC  0E04               	movlw	4
  4710  003EEE  19F0               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
  4711  003EF0  6FF0               	movwf	_pBDTEntryEP0OutNext& (0+255),b
  4712  003EF2  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  4713  003EF4  6FF1               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;usb_device.c: 2399: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  4717  003EF6  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  4718  003EFA  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  4719  003EFE  30DF               	rrcf	223,w,c
  4720  003F00  32E8               	rrcf	wreg,f,c
  4721  003F02  0B0F               	andlw	15
  4722  003F04  0A0D               	xorlw	13
  4723  003F06  A4D8               	btfss	status,2,c
  4724  003F08  D017               	goto	l304
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;usb_device.c: 2400: {
  4728                           ;usb_device.c: 2405: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  4729  003F0A  0E30               	movlw	48
  4730  003F0C  6F60               	movwf	memcpy@d1& (0+255),b
  4731  003F0E  0E04               	movlw	4
  4732  003F10  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4733  003F12  EE20 F002          	lfsr	2,2
  4734  003F16  51F2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  4735  003F18  26D9               	addwf	fsr2l,f,c
  4736  003F1A  51F3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  4737  003F1C  22DA               	addwfc	fsr2h,f,c
  4738  003F1E  CFDE F062          	movff	postinc2,memcpy@s1
  4739  003F22  CFDD F063          	movff	postdec2,memcpy@s1+1
  4740  003F26  0E00               	movlw	0
  4741  003F28  6F65               	movwf	(memcpy@n+1)& (0+255),b
  4742  003F2A  0E08               	movlw	8
  4743  003F2C  6F64               	movwf	memcpy@n& (0+255),b
  4744  003F2E  ECB4  F026         	call	_memcpy	;wreg free
  4745                           
  4746                           ;usb_device.c: 2408: USBCtrlTrfSetupHandler();
  4747  003F32  ECA8  F01F         	call	_USBCtrlTrfSetupHandler	;wreg free
  4748                           
  4749                           ;usb_device.c: 2409: }
  4750  003F36  0012               	return	
  4751  003F38                     l304:
  4752                           
  4753                           ;usb_device.c: 2410: else
  4754                           ;usb_device.c: 2411: {
  4755                           ;usb_device.c: 2413: USBCtrlTrfOutHandler();
  4756  003F38  ECDC  F024         	call	_USBCtrlTrfOutHandler	;wreg free
  4757                           
  4758                           ;usb_device.c: 2414: }
  4759                           ;usb_device.c: 2415: }
  4760  003F3C  0012               	return	
  4761  003F3E                     l303:
  4762                           
  4763                           ;usb_device.c: 2416: else if((USTATcopy.Val & ~0x02) == 0x04)
  4764  003F3E  0100               	movlb	0	; () banked
  4765  003F40  51FE               	movf	_USTATcopy& (0+255),w,b
  4766  003F42  0BFD               	andlw	253
  4767  003F44  0A04               	xorlw	4
  4768  003F46  A4D8               	btfss	status,2,c
  4769  003F48  0012               	return	
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;usb_device.c: 2417: {
  4773                           ;usb_device.c: 2420: USBCtrlTrfInHandler();
  4774  003F4A  ECF2  F01B         	call	_USBCtrlTrfInHandler	;wreg free
  4775  003F4E  0012               	return	
  4776  003F50                     __end_of_USBCtrlEPService:
  4777                           	opt stack 0
  4778                           tosu	equ	0xFFF
  4779                           tosh	equ	0xFFE
  4780                           tosl	equ	0xFFD
  4781                           pclath	equ	0xFFA
  4782                           tblptru	equ	0xFF8
  4783                           tblptrh	equ	0xFF7
  4784                           tblptrl	equ	0xFF6
  4785                           tablat	equ	0xFF5
  4786                           prodh	equ	0xFF4
  4787                           prodl	equ	0xFF3
  4788                           postinc0	equ	0xFEE
  4789                           plusw0	equ	0xFEB
  4790                           wreg	equ	0xFE8
  4791                           indf1	equ	0xFE7
  4792                           postinc1	equ	0xFE6
  4793                           postdec1	equ	0xFE5
  4794                           fsr1h	equ	0xFE2
  4795                           fsr1l	equ	0xFE1
  4796                           indf2	equ	0xFDF
  4797                           postinc2	equ	0xFDE
  4798                           postdec2	equ	0xFDD
  4799                           plusw2	equ	0xFDB
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804 ;; *************** function _USBCtrlTrfSetupHandler *****************
  4805 ;; Defined at:
  4806 ;;		line 2465 in file "framework/usb/src/usb_device.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4820 ;;      Params:         0       0       0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used:    1
  4826 ;; Hardware stack levels required when called:   13
  4827 ;; This function calls:
  4828 ;;		_USBCheckStdRequest
  4829 ;;		_USBCtrlEPServiceComplete
  4830 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  4831 ;; This function is called by:
  4832 ;;		_USBCtrlEPService
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text14
  4837  003F50                     __ptext14:
  4838                           	opt stack 0
  4839  003F50                     _USBCtrlTrfSetupHandler:
  4840                           	opt stack 15
  4841                           
  4842                           ;usb_device.c: 2470: shortPacketStatus = 0;
  4843                           
  4844                           ;incstack = 0
  4845  003F50  0E00               	movlw	0
  4846  003F52  0100               	movlb	0	; () banked
  4847  003F54  6FFB               	movwf	_shortPacketStatus& (0+255),b
  4848                           
  4849                           ;usb_device.c: 2471: USBDeferStatusStagePacket = 0;
  4850  003F56  0E00               	movlw	0
  4851  003F58  6FF7               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  4852                           
  4853                           ;usb_device.c: 2472: USBDeferINDataStagePackets = 0;
  4854  003F5A  0E00               	movlw	0
  4855  003F5C  0101               	movlb	1	; () banked
  4856  003F5E  6F39               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  4857                           
  4858                           ;usb_device.c: 2473: USBDeferOUTDataStagePackets = 0;
  4859  003F60  0E00               	movlw	0
  4860  003F62  6F38               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  4861                           
  4862                           ;usb_device.c: 2474: BothEP0OutUOWNsSet = 0;
  4863  003F64  0E00               	movlw	0
  4864  003F66  6F3C               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  4865                           
  4866                           ;usb_device.c: 2475: controlTransferState = 0;
  4867  003F68  0E00               	movlw	0
  4868  003F6A  0100               	movlb	0	; () banked
  4869  003F6C  6FFA               	movwf	_controlTransferState& (0+255),b
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;usb_device.c: 2484: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4873  003F6E  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  4874  003F72  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4875  003F76  0E7F               	movlw	127
  4876  003F78  16DF               	andwf	indf2,f,c
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;usb_device.c: 2486: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4880  003F7A  0E04               	movlw	4
  4881  003F7C  19EA               	xorwf	_pBDTEntryIn& (0+255),w,b
  4882  003F7E  6FEA               	movwf	_pBDTEntryIn& (0+255),b
  4883  003F80  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  4884  003F82  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;usb_device.c: 2487: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  4888  003F84  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  4889  003F88  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  4890  003F8C  0E7F               	movlw	127
  4891  003F8E  16DF               	andwf	indf2,f,c
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  4895  003F90  0E04               	movlw	4
  4896  003F92  19EA               	xorwf	_pBDTEntryIn& (0+255),w,b
  4897  003F94  6FEA               	movwf	_pBDTEntryIn& (0+255),b
  4898  003F96  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  4899  003F98  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;usb_device.c: 2489: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  4903  003F9A  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  4904  003F9E  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  4905  003FA2  0E7F               	movlw	127
  4906  003FA4  16DF               	andwf	indf2,f,c
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;usb_device.c: 2491: inPipes[0].info.Val = 0;
  4910  003FA6  0E00               	movlw	0
  4911  003FA8  6FE7               	movwf	(_inPipes+3)& (0+255),b
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;usb_device.c: 2492: inPipes[0].wCount.Val = 0;
  4915  003FAA  0E00               	movlw	0
  4916  003FAC  6FE9               	movwf	(_inPipes+5)& (0+255),b
  4917  003FAE  0E00               	movlw	0
  4918  003FB0  6FE8               	movwf	(_inPipes+4)& (0+255),b
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;usb_device.c: 2493: outPipes[0].info.Val = 0;
  4922  003FB2  0E00               	movlw	0
  4923  003FB4  0101               	movlb	1	; () banked
  4924  003FB6  6F03               	movwf	(_outPipes+3)& (0+255),b
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;usb_device.c: 2494: outPipes[0].wCount.Val = 0;
  4928  003FB8  0E00               	movlw	0
  4929  003FBA  6F05               	movwf	(_outPipes+5)& (0+255),b
  4930  003FBC  0E00               	movlw	0
  4931  003FBE  6F04               	movwf	(_outPipes+4)& (0+255),b
  4932                           
  4933                           ; BSR set to: 1
  4934                           ;usb_device.c: 2500: USBCheckStdRequest();
  4935  003FC0  EC9D  F018         	call	_USBCheckStdRequest	;wreg free
  4936                           
  4937                           ;usb_device.c: 2501: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  4938  003FC4  0E00               	movlw	0
  4939  003FC6  0100               	movlb	0	; () banked
  4940  003FC8  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  4941  003FCA  0E03               	movlw	3
  4942  003FCC  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  4943  003FCE  0E00               	movlw	0
  4944  003FD0  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  4945  003FD2  0E00               	movlw	0
  4946  003FD4  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  4947  003FD6  0E00               	movlw	0
  4948  003FD8  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  4949  003FDA  0E00               	movlw	0
  4950  003FDC  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  4951  003FDE  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  4952                           
  4953                           ;usb_device.c: 2514: USBCtrlEPServiceComplete();
  4954  003FE2  ECBB  F014         	call	_USBCtrlEPServiceComplete	;wreg free
  4955  003FE6  0012               	return		;funcret
  4956  003FE8                     __end_of_USBCtrlTrfSetupHandler:
  4957                           	opt stack 0
  4958                           tosu	equ	0xFFF
  4959                           tosh	equ	0xFFE
  4960                           tosl	equ	0xFFD
  4961                           pclath	equ	0xFFA
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           prodh	equ	0xFF4
  4967                           prodl	equ	0xFF3
  4968                           postinc0	equ	0xFEE
  4969                           plusw0	equ	0xFEB
  4970                           wreg	equ	0xFE8
  4971                           indf1	equ	0xFE7
  4972                           postinc1	equ	0xFE6
  4973                           postdec1	equ	0xFE5
  4974                           fsr1h	equ	0xFE2
  4975                           fsr1l	equ	0xFE1
  4976                           indf2	equ	0xFDF
  4977                           postinc2	equ	0xFDE
  4978                           postdec2	equ	0xFDD
  4979                           plusw2	equ	0xFDB
  4980                           fsr2h	equ	0xFDA
  4981                           fsr2l	equ	0xFD9
  4982                           status	equ	0xFD8
  4983                           
  4984 ;; *************** function _USBCtrlEPServiceComplete *****************
  4985 ;; Defined at:
  4986 ;;		line 1616 in file "framework/usb/src/usb_device.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;		None
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  1    wreg      void 
  4993 ;; Registers used:
  4994 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5000 ;;      Params:         0       0       0       0       0       0       0       0       0
  5001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5004 ;;Total ram usage:        0 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; Hardware stack levels required when called:    9
  5007 ;; This function calls:
  5008 ;;		_USBCtrlEPAllowDataStage
  5009 ;;		_USBCtrlEPAllowStatusStage
  5010 ;; This function is called by:
  5011 ;;		_USBCtrlTrfSetupHandler
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text15
  5016  002976                     __ptext15:
  5017                           	opt stack 0
  5018  002976                     _USBCtrlEPServiceComplete:
  5019                           	opt stack 18
  5020                           
  5021                           ;usb_device.c: 1622: UCONbits.PKTDIS = 0;
  5022                           
  5023                           ;incstack = 0
  5024  002976  986D               	bcf	3949,4,c	;volatile
  5025                           
  5026                           ;usb_device.c: 1628: if(inPipes[0].info.bits.busy == 0)
  5027  002978  0100               	movlb	0	; () banked
  5028  00297A  BFE7               	btfsc	(_inPipes+3)& (0+255),7,b
  5029  00297C  D03D               	goto	l213
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;usb_device.c: 1629: {
  5033                           ;usb_device.c: 1630: if(outPipes[0].info.bits.busy == 1)
  5034  00297E  0101               	movlb	1	; () banked
  5035  002980  AF03               	btfss	(_outPipes+3)& (0+255),7,b
  5036  002982  D00E               	goto	l214
  5037                           
  5038                           ; BSR set to: 1
  5039                           ;usb_device.c: 1631: {
  5040                           ;usb_device.c: 1632: controlTransferState = 2;
  5041  002984  0E02               	movlw	2
  5042  002986  0100               	movlb	0	; () banked
  5043  002988  6FFA               	movwf	_controlTransferState& (0+255),b
  5044                           
  5045                           ;usb_device.c: 1643: if(USBDeferOUTDataStagePackets == 0)
  5046  00298A  0101               	movlb	1	; () banked
  5047  00298C  5138               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  5048  00298E  B4D8               	btfsc	status,2,c
  5049                           
  5050                           ; BSR set to: 1
  5051                           ;usb_device.c: 1644: {
  5052                           ;usb_device.c: 1645: USBCtrlEPAllowDataStage();
  5053  002990  EC6B  F01E         	call	_USBCtrlEPAllowDataStage	;wreg free
  5054                           
  5055                           ;usb_device.c: 1646: }
  5056                           ;usb_device.c: 1650: USBStatusStageEnabledFlag2 = 0;
  5057  002994  0E00               	movlw	0
  5058  002996  0101               	movlb	1	; () banked
  5059  002998  6F3A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5060                           
  5061                           ; BSR set to: 1
  5062                           ;usb_device.c: 1651: USBStatusStageEnabledFlag1 = 0;
  5063  00299A  0E00               	movlw	0
  5064  00299C  6F3B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5065                           
  5066                           ;usb_device.c: 1652: }
  5067  00299E  0012               	return	
  5068  0029A0                     l214:
  5069                           
  5070                           ; BSR set to: 1
  5071                           ;usb_device.c: 1653: else
  5072                           ;usb_device.c: 1654: {
  5073                           ;usb_device.c: 1659: pBDTEntryEP0OutNext->CNT = 8;
  5074                           
  5075                           ; BSR set to: 1
  5076  0029A0  0100               	movlb	0	; () banked
  5077  0029A2  EE20 F001          	lfsr	2,1
  5078  0029A6  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5079  0029A8  26D9               	addwf	fsr2l,f,c
  5080  0029AA  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5081  0029AC  22DA               	addwfc	fsr2h,f,c
  5082  0029AE  0E08               	movlw	8
  5083  0029B0  6EDF               	movwf	indf2,c
  5084                           
  5085                           ;usb_device.c: 1660: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5086  0029B2  EE20 F002          	lfsr	2,2
  5087  0029B6  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5088  0029B8  26D9               	addwf	fsr2l,f,c
  5089  0029BA  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5090  0029BC  22DA               	addwfc	fsr2h,f,c
  5091  0029BE  0E30               	movlw	48
  5092  0029C0  6EDE               	movwf	postinc2,c
  5093  0029C2  0E04               	movlw	4
  5094  0029C4  6EDD               	movwf	postdec2,c
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;usb_device.c: 1661: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  5098  0029C6  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5099  0029CA  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5100  0029CE  0E0C               	movlw	12
  5101  0029D0  6EDF               	movwf	indf2,c
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5105  0029D2  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5106  0029D6  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5107  0029DA  0E00               	movlw	0
  5108  0029DC  8EDB               	bsf	plusw2,7,c
  5109                           
  5110                           ;usb_device.c: 1663: pBDTEntryIn[0]->STAT.Val = 0x04;
  5111  0029DE  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  5112  0029E2  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5113  0029E6  0E04               	movlw	4
  5114  0029E8  6EDF               	movwf	indf2,c
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;usb_device.c: 1664: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5118  0029EA  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  5119  0029EE  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5120  0029F2  0E00               	movlw	0
  5121  0029F4  8EDB               	bsf	plusw2,7,c
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;usb_device.c: 1665: }
  5125                           ;usb_device.c: 1666: }
  5126  0029F6  0012               	return	
  5127  0029F8                     l213:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;usb_device.c: 1667: else
  5131                           ;usb_device.c: 1668: {
  5132                           ;usb_device.c: 1669: if(SetupPkt.DataDir == (0x80>>7))
  5133  0029F8  0104               	movlb	4	; () banked
  5134  0029FA  AF30               	btfss	48,7,b	;volatile
  5135  0029FC  D014               	goto	l218
  5136                           
  5137                           ; BSR set to: 4
  5138                           ;usb_device.c: 1670: {
  5139                           ;usb_device.c: 1671: controlTransferState = 1;
  5140  0029FE  0E01               	movlw	1
  5141  002A00  0100               	movlb	0	; () banked
  5142  002A02  6FFA               	movwf	_controlTransferState& (0+255),b
  5143                           
  5144                           ;usb_device.c: 1685: if(USBDeferINDataStagePackets == 0)
  5145  002A04  0101               	movlb	1	; () banked
  5146  002A06  5139               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  5147  002A08  B4D8               	btfsc	status,2,c
  5148                           
  5149                           ; BSR set to: 1
  5150                           ;usb_device.c: 1686: {
  5151                           ;usb_device.c: 1687: USBCtrlEPAllowDataStage();
  5152  002A0A  EC6B  F01E         	call	_USBCtrlEPAllowDataStage	;wreg free
  5153                           
  5154                           ;usb_device.c: 1688: }
  5155                           ;usb_device.c: 1710: USBStatusStageEnabledFlag2 = 0;
  5156  002A0E  0E00               	movlw	0
  5157  002A10  0101               	movlb	1	; () banked
  5158  002A12  6F3A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5159                           
  5160                           ; BSR set to: 1
  5161                           ;usb_device.c: 1711: USBStatusStageEnabledFlag1 = 0;
  5162  002A14  0E00               	movlw	0
  5163  002A16  6F3B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5164                           
  5165                           ; BSR set to: 1
  5166                           ;usb_device.c: 1712: if(USBDeferStatusStagePacket == 0)
  5167  002A18  0100               	movlb	0	; () banked
  5168  002A1A  51F7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  5169  002A1C  A4D8               	btfss	status,2,c
  5170  002A1E  0012               	return	
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;usb_device.c: 1713: {
  5174                           ;usb_device.c: 1714: USBCtrlEPAllowStatusStage();
  5175  002A20  EC5B  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5176                           
  5177                           ;usb_device.c: 1715: }
  5178                           ;usb_device.c: 1716: }
  5179  002A24  0012               	return	
  5180  002A26                     l218:
  5181                           
  5182                           ;usb_device.c: 1717: else
  5183                           ;usb_device.c: 1718: {
  5184                           ;usb_device.c: 1729: controlTransferState = 2;
  5185  002A26  0E02               	movlw	2
  5186  002A28  0100               	movlb	0	; () banked
  5187  002A2A  6FFA               	movwf	_controlTransferState& (0+255),b
  5188                           
  5189                           ; BSR set to: 0
  5190                           ;usb_device.c: 1732: pBDTEntryEP0OutNext->CNT = 8;
  5191  002A2C  EE20 F001          	lfsr	2,1
  5192  002A30  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5193  002A32  26D9               	addwf	fsr2l,f,c
  5194  002A34  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5195  002A36  22DA               	addwfc	fsr2h,f,c
  5196  002A38  0E08               	movlw	8
  5197  002A3A  6EDF               	movwf	indf2,c
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;usb_device.c: 1733: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  5201  002A3C  EE20 F002          	lfsr	2,2
  5202  002A40  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5203  002A42  26D9               	addwf	fsr2l,f,c
  5204  002A44  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5205  002A46  22DA               	addwfc	fsr2h,f,c
  5206  002A48  0E30               	movlw	48
  5207  002A4A  6EDE               	movwf	postinc2,c
  5208  002A4C  0E04               	movlw	4
  5209  002A4E  6EDD               	movwf	postdec2,c
  5210                           
  5211                           ; BSR set to: 0
  5212                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  5213  002A50  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5214  002A54  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5215  002A58  0E04               	movlw	4
  5216  002A5A  6EDF               	movwf	indf2,c
  5217                           
  5218                           ; BSR set to: 0
  5219                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5220  002A5C  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5221  002A60  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5222  002A64  0E00               	movlw	0
  5223  002A66  8EDB               	bsf	plusw2,7,c
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;usb_device.c: 1738: USBStatusStageEnabledFlag2 = 0;
  5227  002A68  0E00               	movlw	0
  5228  002A6A  0101               	movlb	1	; () banked
  5229  002A6C  6F3A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;usb_device.c: 1739: USBStatusStageEnabledFlag1 = 0;
  5233  002A6E  0E00               	movlw	0
  5234  002A70  6F3B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  5235                           
  5236                           ; BSR set to: 1
  5237                           ;usb_device.c: 1740: if(USBDeferStatusStagePacket == 0)
  5238  002A72  0100               	movlb	0	; () banked
  5239  002A74  51F7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  5240  002A76  A4D8               	btfss	status,2,c
  5241  002A78  0012               	return	
  5242                           
  5243                           ; BSR set to: 0
  5244                           ;usb_device.c: 1741: {
  5245                           ;usb_device.c: 1742: USBCtrlEPAllowStatusStage();
  5246  002A7A  EC5B  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5247  002A7E  0012               	return	
  5248  002A80                     __end_of_USBCtrlEPServiceComplete:
  5249                           	opt stack 0
  5250                           tosu	equ	0xFFF
  5251                           tosh	equ	0xFFE
  5252                           tosl	equ	0xFFD
  5253                           pclath	equ	0xFFA
  5254                           tblptru	equ	0xFF8
  5255                           tblptrh	equ	0xFF7
  5256                           tblptrl	equ	0xFF6
  5257                           tablat	equ	0xFF5
  5258                           prodh	equ	0xFF4
  5259                           prodl	equ	0xFF3
  5260                           postinc0	equ	0xFEE
  5261                           plusw0	equ	0xFEB
  5262                           wreg	equ	0xFE8
  5263                           indf1	equ	0xFE7
  5264                           postinc1	equ	0xFE6
  5265                           postdec1	equ	0xFE5
  5266                           fsr1h	equ	0xFE2
  5267                           fsr1l	equ	0xFE1
  5268                           indf2	equ	0xFDF
  5269                           postinc2	equ	0xFDE
  5270                           postdec2	equ	0xFDD
  5271                           plusw2	equ	0xFDB
  5272                           fsr2h	equ	0xFDA
  5273                           fsr2l	equ	0xFD9
  5274                           status	equ	0xFD8
  5275                           
  5276 ;; *************** function _USBCtrlEPAllowDataStage *****************
  5277 ;; Defined at:
  5278 ;;		line 1488 in file "framework/usb/src/usb_device.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5292 ;;      Params:         0       0       0       0       0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5294 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5295 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5296 ;;Total ram usage:        0 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; Hardware stack levels required when called:    8
  5299 ;; This function calls:
  5300 ;;		_USBCtrlTrfTxService
  5301 ;; This function is called by:
  5302 ;;		_USBCtrlEPServiceComplete
  5303 ;; This function uses a non-reentrant model
  5304 ;;
  5305                           
  5306                           	psect	text16
  5307  003CD6                     __ptext16:
  5308                           	opt stack 0
  5309  003CD6                     _USBCtrlEPAllowDataStage:
  5310                           	opt stack 18
  5311                           
  5312                           ;usb_device.c: 1490: USBDeferINDataStagePackets = 0;
  5313                           
  5314                           ;incstack = 0
  5315  003CD6  0E00               	movlw	0
  5316  003CD8  0101               	movlb	1	; () banked
  5317  003CDA  6F39               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  5318                           
  5319                           ;usb_device.c: 1491: USBDeferOUTDataStagePackets = 0;
  5320  003CDC  0E00               	movlw	0
  5321  003CDE  6F38               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  5322                           
  5323                           ; BSR set to: 1
  5324                           ;usb_device.c: 1493: if(controlTransferState == 2)
  5325  003CE0  0E02               	movlw	2
  5326  003CE2  0100               	movlb	0	; () banked
  5327  003CE4  19FA               	xorwf	_controlTransferState& (0+255),w,b
  5328  003CE6  A4D8               	btfss	status,2,c
  5329  003CE8  D01F               	goto	l202
  5330                           
  5331                           ; BSR set to: 0
  5332                           ;usb_device.c: 1494: {
  5333                           ;usb_device.c: 1496: pBDTEntryEP0OutNext->CNT = 8;
  5334  003CEA  EE20 F001          	lfsr	2,1
  5335  003CEE  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5336  003CF0  26D9               	addwf	fsr2l,f,c
  5337  003CF2  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5338  003CF4  22DA               	addwfc	fsr2h,f,c
  5339  003CF6  0E08               	movlw	8
  5340  003CF8  6EDF               	movwf	indf2,c
  5341                           
  5342                           ;usb_device.c: 1497: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  5343  003CFA  EE20 F002          	lfsr	2,2
  5344  003CFE  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  5345  003D00  26D9               	addwf	fsr2l,f,c
  5346  003D02  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  5347  003D04  22DA               	addwfc	fsr2h,f,c
  5348  003D06  0E38               	movlw	56
  5349  003D08  6EDE               	movwf	postinc2,c
  5350  003D0A  0E04               	movlw	4
  5351  003D0C  6EDD               	movwf	postdec2,c
  5352                           
  5353                           ; BSR set to: 0
  5354                           ;usb_device.c: 1498: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  5355  003D0E  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5356  003D12  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5357  003D16  0E48               	movlw	72
  5358  003D18  6EDF               	movwf	indf2,c
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  5362  003D1A  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  5363  003D1E  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  5364  003D22  0E00               	movlw	0
  5365  003D24  8EDB               	bsf	plusw2,7,c
  5366                           
  5367                           ;usb_device.c: 1500: }
  5368  003D26  0012               	return	
  5369  003D28                     l202:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;usb_device.c: 1501: else
  5373                           ;usb_device.c: 1502: {
  5374                           ;usb_device.c: 1505: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  5375                           
  5376                           ; BSR set to: 0
  5377  003D28  51E8               	movf	(_inPipes+4)& (0+255),w,b
  5378  003D2A  0104               	movlb	4	; () banked
  5379  003D2C  5D36               	subwf	54,w,b	;volatile
  5380  003D2E  0100               	movlb	0	; () banked
  5381  003D30  51E9               	movf	(_inPipes+5)& (0+255),w,b
  5382  003D32  0104               	movlb	4	; () banked
  5383  003D34  5937               	subwfb	55,w,b	;volatile
  5384  003D36  B0D8               	btfsc	status,0,c
  5385  003D38  D004               	goto	l204
  5386                           
  5387                           ; BSR set to: 4
  5388                           ;usb_device.c: 1506: {
  5389                           ;usb_device.c: 1507: inPipes[0].wCount.Val = SetupPkt.wLength;
  5390  003D3A  C436 F0E8          	movff	1078,_inPipes+4	;volatile
  5391  003D3E  C437 F0E9          	movff	1079,_inPipes+5	;volatile
  5392  003D42                     l204:
  5393                           
  5394                           ; BSR set to: 4
  5395                           ;usb_device.c: 1508: }
  5396                           ;usb_device.c: 1509: USBCtrlTrfTxService();
  5397                           
  5398                           ; BSR set to: 4
  5399  003D42  ECEF  F019         	call	_USBCtrlTrfTxService	;wreg free
  5400                           
  5401                           ;usb_device.c: 1514: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  5402  003D46  0100               	movlb	0	; () banked
  5403  003D48  EE20 F002          	lfsr	2,2
  5404  003D4C  51EA               	movf	_pBDTEntryIn& (0+255),w,b
  5405  003D4E  26D9               	addwf	fsr2l,f,c
  5406  003D50  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  5407  003D52  22DA               	addwfc	fsr2h,f,c
  5408  003D54  0E38               	movlw	56
  5409  003D56  6EDE               	movwf	postinc2,c
  5410  003D58  0E04               	movlw	4
  5411  003D5A  6EDD               	movwf	postdec2,c
  5412                           
  5413                           ; BSR set to: 0
  5414                           ;usb_device.c: 1515: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  5415  003D5C  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  5416  003D60  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5417  003D64  0E48               	movlw	72
  5418  003D66  6EDF               	movwf	indf2,c
  5419                           
  5420                           ; BSR set to: 0
  5421                           ;usb_device.c: 1516: pBDTEntryIn[0]->STAT.Val |= 0x80;
  5422  003D68  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  5423  003D6C  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  5424  003D70  0E00               	movlw	0
  5425  003D72  8EDB               	bsf	plusw2,7,c
  5426  003D74  0012               	return	
  5427  003D76                     __end_of_USBCtrlEPAllowDataStage:
  5428                           	opt stack 0
  5429                           tosu	equ	0xFFF
  5430                           tosh	equ	0xFFE
  5431                           tosl	equ	0xFFD
  5432                           pclath	equ	0xFFA
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           postinc0	equ	0xFEE
  5440                           plusw0	equ	0xFEB
  5441                           wreg	equ	0xFE8
  5442                           indf1	equ	0xFE7
  5443                           postinc1	equ	0xFE6
  5444                           postdec1	equ	0xFE5
  5445                           fsr1h	equ	0xFE2
  5446                           fsr1l	equ	0xFE1
  5447                           indf2	equ	0xFDF
  5448                           postinc2	equ	0xFDE
  5449                           postdec2	equ	0xFDD
  5450                           plusw2	equ	0xFDB
  5451                           fsr2h	equ	0xFDA
  5452                           fsr2l	equ	0xFD9
  5453                           status	equ	0xFD8
  5454                           
  5455 ;; *************** function _USBCheckStdRequest *****************
  5456 ;; Defined at:
  5457 ;;		line 2686 in file "framework/usb/src/usb_device.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;		None
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5471 ;;      Params:         0       0       0       0       0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5474 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5475 ;;Total ram usage:        0 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:   12
  5478 ;; This function calls:
  5479 ;;		_USBStdFeatureReqHandler
  5480 ;;		_USBStdGetDscHandler
  5481 ;;		_USBStdGetStatusHandler
  5482 ;;		_USBStdSetCfgHandler
  5483 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5484 ;; This function is called by:
  5485 ;;		_USBCtrlTrfSetupHandler
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text17
  5490  00313A                     __ptext17:
  5491                           	opt stack 0
  5492  00313A                     _USBCheckStdRequest:
  5493                           	opt stack 15
  5494                           
  5495                           ;usb_device.c: 2688: if(SetupPkt.RequestType != (0x00>>5)) return;
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;incstack = 0
  5499  00313A  0104               	movlb	4	; () banked
  5500  00313C  3930               	swapf	48,w,b	;volatile
  5501  00313E  32E8               	rrcf	wreg,f,c
  5502  003140  0B03               	andlw	3
  5503  003142  0900               	iorlw	0
  5504  003144  A4D8               	btfss	status,2,c
  5505  003146  0012               	return	
  5506  003148  D048               	goto	l337
  5507  00314A                     l338:
  5508                           
  5509                           ; BSR set to: 4
  5510                           ;usb_device.c: 2693: inPipes[0].info.bits.busy = 1;
  5511  00314A  0100               	movlb	0	; () banked
  5512  00314C  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  5513                           
  5514                           ; BSR set to: 0
  5515                           ;usb_device.c: 2694: USBDeviceState = ADR_PENDING_STATE;
  5516  00314E  0E08               	movlw	8
  5517  003150  6FFC               	movwf	_USBDeviceState& (0+255),b
  5518                           
  5519                           ;usb_device.c: 2696: break;
  5520  003152  0012               	return	
  5521  003154                     
  5522                           ;usb_device.c: 2698: USBStdGetDscHandler();
  5523                           
  5524                           ; BSR set to: 0
  5525  003154  EC6B  F012         	call	_USBStdGetDscHandler	;wreg free
  5526                           
  5527                           ;usb_device.c: 2699: break;
  5528  003158  0012               	return	
  5529  00315A                     
  5530                           ;usb_device.c: 2701: USBStdSetCfgHandler();
  5531  00315A  EC2A  F018         	call	_USBStdSetCfgHandler	;wreg free
  5532                           
  5533                           ;usb_device.c: 2702: break;
  5534  00315E  0012               	return	
  5535  003160                     
  5536                           ;usb_device.c: 2704: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  5537  003160  0EFF               	movlw	low _USBActiveConfiguration
  5538  003162  0100               	movlb	0	; () banked
  5539  003164  6FE4               	movwf	_inPipes& (0+255),b
  5540  003166  0E00               	movlw	high _USBActiveConfiguration
  5541  003168  6FE5               	movwf	(_inPipes+1)& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;usb_device.c: 2705: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5545  00316A  81E7               	bsf	(_inPipes+3)& (0+255),0,b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;usb_device.c: 2706: inPipes[0].wCount.v[0] = 1;
  5549  00316C  0E01               	movlw	1
  5550  00316E  6FE8               	movwf	(_inPipes+4)& (0+255),b
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;usb_device.c: 2707: inPipes[0].info.bits.busy = 1;
  5554  003170  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  5555                           
  5556                           ;usb_device.c: 2708: break;
  5557  003172  0012               	return	
  5558  003174                     
  5559                           ;usb_device.c: 2710: USBStdGetStatusHandler();
  5560                           
  5561                           ; BSR set to: 0
  5562  003174  EC11  F01D         	call	_USBStdGetStatusHandler	;wreg free
  5563                           
  5564                           ;usb_device.c: 2711: break;
  5565  003178  0012               	return	
  5566  00317A                     
  5567                           ;usb_device.c: 2713: case 3:
  5568                           ;usb_device.c: 2714: USBStdFeatureReqHandler();
  5569  00317A  ECD1  F005         	call	_USBStdFeatureReqHandler	;wreg free
  5570                           
  5571                           ;usb_device.c: 2715: break;
  5572  00317E  0012               	return	
  5573  003180                     
  5574                           ;usb_device.c: 2717: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  5575  003180  0104               	movlb	4	; () banked
  5576  003182  5134               	movf	52,w,b	;volatile
  5577  003184  0D01               	mullw	1
  5578  003186  0EF6               	movlw	low _USBAlternateInterface
  5579  003188  24F3               	addwf	prodl,w,c
  5580  00318A  0100               	movlb	0	; () banked
  5581  00318C  6FE4               	movwf	_inPipes& (0+255),b
  5582  00318E  0E01               	movlw	high _USBAlternateInterface
  5583  003190  20F4               	addwfc	prodh,w,c
  5584  003192  6FE5               	movwf	(_inPipes+1)& (0+255),b
  5585                           
  5586                           ; BSR set to: 0
  5587                           ;usb_device.c: 2718: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  5588  003194  81E7               	bsf	(_inPipes+3)& (0+255),0,b
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;usb_device.c: 2719: inPipes[0].wCount.v[0] = 1;
  5592  003196  0E01               	movlw	1
  5593  003198  6FE8               	movwf	(_inPipes+4)& (0+255),b
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;usb_device.c: 2720: inPipes[0].info.bits.busy = 1;
  5597  00319A  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  5598                           
  5599                           ;usb_device.c: 2721: break;
  5600  00319C  0012               	return	
  5601  00319E                     l347:
  5602                           
  5603                           ; BSR set to: 4
  5604                           ;usb_device.c: 2723: inPipes[0].info.bits.busy = 1;
  5605  00319E  0100               	movlb	0	; () banked
  5606  0031A0  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;usb_device.c: 2724: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  5610  0031A2  0104               	movlb	4	; () banked
  5611  0031A4  5134               	movf	52,w,b	;volatile
  5612  0031A6  0D01               	mullw	1
  5613  0031A8  0EF6               	movlw	low _USBAlternateInterface
  5614  0031AA  24F3               	addwf	prodl,w,c
  5615  0031AC  6ED9               	movwf	fsr2l,c
  5616  0031AE  0E01               	movlw	high _USBAlternateInterface
  5617  0031B0  20F4               	addwfc	prodh,w,c
  5618  0031B2  6EDA               	movwf	fsr2h,c
  5619  0031B4  C432 FFDF          	movff	1074,indf2	;volatile
  5620                           
  5621                           ;usb_device.c: 2725: break;
  5622  0031B8  0012               	return	
  5623  0031BA                     
  5624                           ; BSR set to: 4
  5625                           ;usb_device.c: 2727: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  5626                           
  5627                           ; BSR set to: 4
  5628  0031BA  0E00               	movlw	0
  5629  0031BC  0100               	movlb	0	; () banked
  5630  0031BE  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5631  0031C0  0E02               	movlw	2
  5632  0031C2  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5633  0031C4  0E00               	movlw	0
  5634  0031C6  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5635  0031C8  0E00               	movlw	0
  5636  0031CA  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5637  0031CC  0E00               	movlw	0
  5638  0031CE  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5639  0031D0  0E00               	movlw	0
  5640  0031D2  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5641  0031D4  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5642                           
  5643                           ;usb_device.c: 2732: }
  5644                           
  5645                           ;usb_device.c: 2731: break;
  5646                           
  5647                           ;usb_device.c: 2730: default:
  5648                           
  5649                           ;usb_device.c: 2729: case 12:
  5650                           
  5651                           ;usb_device.c: 2728: break;
  5652  0031D8  0012               	return	
  5653  0031DA                     l337:
  5654  0031DA  0104               	movlb	4	; () banked
  5655  0031DC  5131               	movf	49,w,b	;volatile
  5656                           
  5657                           ; Switch size 1, requested type "space"
  5658                           ; Number of cases is 11, Range of values is 0 to 12
  5659                           ; switch strategies available:
  5660                           ; Name         Instructions Cycles
  5661                           ; simple_byte           34    18 (average)
  5662                           ;	Chosen strategy is simple_byte
  5663  0031DE  0A00               	xorlw	0	; case 0
  5664  0031E0  B4D8               	btfsc	status,2,c
  5665  0031E2  D7C8               	goto	l343
  5666  0031E4  0A01               	xorlw	1	; case 1
  5667  0031E6  B4D8               	btfsc	status,2,c
  5668  0031E8  D7C8               	goto	l344
  5669  0031EA  0A02               	xorlw	2	; case 3
  5670  0031EC  B4D8               	btfsc	status,2,c
  5671  0031EE  D7C5               	goto	l344
  5672  0031F0  0A06               	xorlw	6	; case 5
  5673  0031F2  B4D8               	btfsc	status,2,c
  5674  0031F4  D7AA               	goto	l338
  5675  0031F6  0A03               	xorlw	3	; case 6
  5676  0031F8  B4D8               	btfsc	status,2,c
  5677  0031FA  D7AC               	goto	l340
  5678  0031FC  0A01               	xorlw	1	; case 7
  5679  0031FE  B4D8               	btfsc	status,2,c
  5680  003200  D7DC               	goto	l348
  5681  003202  0A0F               	xorlw	15	; case 8
  5682  003204  B4D8               	btfsc	status,2,c
  5683  003206  D7AC               	goto	l342
  5684  003208  0A01               	xorlw	1	; case 9
  5685  00320A  B4D8               	btfsc	status,2,c
  5686  00320C  D7A6               	goto	l341
  5687  00320E  0A03               	xorlw	3	; case 10
  5688  003210  B4D8               	btfsc	status,2,c
  5689  003212  D7B6               	goto	l346
  5690  003214  0A01               	xorlw	1	; case 11
  5691  003216  B4D8               	btfsc	status,2,c
  5692  003218  D7C2               	goto	l347
  5693  00321A  0A07               	xorlw	7	; case 12
  5694  00321C  0012               	return	
  5695  00321E                     __end_of_USBCheckStdRequest:
  5696                           	opt stack 0
  5697                           tosu	equ	0xFFF
  5698                           tosh	equ	0xFFE
  5699                           tosl	equ	0xFFD
  5700                           pclath	equ	0xFFA
  5701                           tblptru	equ	0xFF8
  5702                           tblptrh	equ	0xFF7
  5703                           tblptrl	equ	0xFF6
  5704                           tablat	equ	0xFF5
  5705                           prodh	equ	0xFF4
  5706                           prodl	equ	0xFF3
  5707                           postinc0	equ	0xFEE
  5708                           plusw0	equ	0xFEB
  5709                           wreg	equ	0xFE8
  5710                           indf1	equ	0xFE7
  5711                           postinc1	equ	0xFE6
  5712                           postdec1	equ	0xFE5
  5713                           fsr1h	equ	0xFE2
  5714                           fsr1l	equ	0xFE1
  5715                           indf2	equ	0xFDF
  5716                           postinc2	equ	0xFDE
  5717                           postdec2	equ	0xFDD
  5718                           plusw2	equ	0xFDB
  5719                           fsr2h	equ	0xFDA
  5720                           fsr2l	equ	0xFD9
  5721                           status	equ	0xFD8
  5722                           
  5723 ;; *************** function _USBStdSetCfgHandler *****************
  5724 ;; Defined at:
  5725 ;;		line 1968 in file "framework/usb/src/usb_device.c"
  5726 ;; Parameters:    Size  Location     Type
  5727 ;;		None
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  i               1   20[BANK0 ] unsigned char 
  5730 ;; Return value:  Size  Location     Type
  5731 ;;                  1    wreg      void 
  5732 ;; Registers used:
  5733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5734 ;; Tracked objects:
  5735 ;;		On entry : 0/0
  5736 ;;		On exit  : 0/0
  5737 ;;		Unchanged: 0/0
  5738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5739 ;;      Params:         0       0       0       0       0       0       0       0       0
  5740 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5741 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5742 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5743 ;;Total ram usage:        1 bytes
  5744 ;; Hardware stack levels used:    1
  5745 ;; Hardware stack levels required when called:   11
  5746 ;; This function calls:
  5747 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5748 ;;		_memset
  5749 ;; This function is called by:
  5750 ;;		_USBCheckStdRequest
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text18
  5755  003054                     __ptext18:
  5756                           	opt stack 0
  5757  003054                     _USBStdSetCfgHandler:
  5758                           	opt stack 15
  5759                           
  5760                           ;usb_device.c: 1970: uint8_t i;
  5761                           ;usb_device.c: 1973: inPipes[0].info.bits.busy = 1;
  5762                           
  5763                           ;incstack = 0
  5764  003054  0100               	movlb	0	; () banked
  5765  003056  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;usb_device.c: 1976: memset((void*)&UEP1,0x00,(2));;
  5769  003058  0E71               	movlw	113
  5770  00305A  6F60               	movwf	memset@p1& (0+255),b
  5771  00305C  0E0F               	movlw	15
  5772  00305E  6F61               	movwf	(memset@p1+1)& (0+255),b
  5773  003060  0E00               	movlw	0
  5774  003062  6F63               	movwf	(memset@c+1)& (0+255),b
  5775  003064  0E00               	movlw	0
  5776  003066  6F62               	movwf	memset@c& (0+255),b
  5777  003068  0E00               	movlw	0
  5778  00306A  6F65               	movwf	(memset@n+1)& (0+255),b
  5779  00306C  0E02               	movlw	2
  5780  00306E  6F64               	movwf	memset@n& (0+255),b
  5781  003070  EC60  F028         	call	_memset	;wreg free
  5782                           
  5783                           ;usb_device.c: 1979: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  5784  003074  0E00               	movlw	0
  5785  003076  0100               	movlb	0	; () banked
  5786  003078  6F60               	movwf	memset@p1& (0+255),b
  5787  00307A  0E04               	movlw	4
  5788  00307C  6F61               	movwf	(memset@p1+1)& (0+255),b
  5789  00307E  0E00               	movlw	0
  5790  003080  6F63               	movwf	(memset@c+1)& (0+255),b
  5791  003082  0E00               	movlw	0
  5792  003084  6F62               	movwf	memset@c& (0+255),b
  5793  003086  0E00               	movlw	0
  5794  003088  6F65               	movwf	(memset@n+1)& (0+255),b
  5795  00308A  0E30               	movlw	48
  5796  00308C  6F64               	movwf	memset@n& (0+255),b
  5797  00308E  EC60  F028         	call	_memset	;wreg free
  5798                           
  5799                           ;usb_device.c: 1982: UCONbits.PPBRST = 1;
  5800  003092  8C6D               	bsf	3949,6,c	;volatile
  5801                           
  5802                           ;usb_device.c: 1987: for(i = 0; i < (uint8_t)(2+1u); i++)
  5803  003094  0E00               	movlw	0
  5804  003096  0100               	movlb	0	; () banked
  5805  003098  6F74               	movwf	USBStdSetCfgHandler@i& (0+255),b
  5806  00309A                     l5797:
  5807                           
  5808                           ; BSR set to: 0
  5809  00309A  0E02               	movlw	2
  5810  00309C  6574               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  5811  00309E  D001               	goto	l254
  5812  0030A0  D016               	goto	u6390
  5813  0030A2                     l254:
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;usb_device.c: 1988: {
  5817                           ;usb_device.c: 1989: ep_data_in[i].Val = 0u;
  5818                           
  5819                           ; BSR set to: 0
  5820  0030A2  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  5821  0030A4  0D01               	mullw	1
  5822  0030A6  0E25               	movlw	low _ep_data_in
  5823  0030A8  24F3               	addwf	prodl,w,c
  5824  0030AA  6ED9               	movwf	fsr2l,c
  5825  0030AC  0E01               	movlw	high _ep_data_in
  5826  0030AE  20F4               	addwfc	prodh,w,c
  5827  0030B0  6EDA               	movwf	fsr2h,c
  5828  0030B2  0E00               	movlw	0
  5829  0030B4  6EDF               	movwf	indf2,c
  5830                           
  5831                           ;usb_device.c: 1990: ep_data_out[i].Val = 0u;
  5832  0030B6  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  5833  0030B8  0D01               	mullw	1
  5834  0030BA  0E22               	movlw	low _ep_data_out
  5835  0030BC  24F3               	addwf	prodl,w,c
  5836  0030BE  6ED9               	movwf	fsr2l,c
  5837  0030C0  0E01               	movlw	high _ep_data_out
  5838  0030C2  20F4               	addwfc	prodh,w,c
  5839  0030C4  6EDA               	movwf	fsr2h,c
  5840  0030C6  0E00               	movlw	0
  5841  0030C8  6EDF               	movwf	indf2,c
  5842                           
  5843                           ; BSR set to: 0
  5844  0030CA  2B74               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  5845  0030CC  D7E6               	goto	l5797
  5846  0030CE                     u6390:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;usb_device.c: 1991: }
  5850                           ;usb_device.c: 1994: memset((void*)&USBAlternateInterface,0x00,2);
  5851                           
  5852                           ; BSR set to: 0
  5853  0030CE  0EF6               	movlw	low _USBAlternateInterface
  5854  0030D0  6F60               	movwf	memset@p1& (0+255),b
  5855  0030D2  0E01               	movlw	high _USBAlternateInterface
  5856  0030D4  6F61               	movwf	(memset@p1+1)& (0+255),b
  5857  0030D6  0E00               	movlw	0
  5858  0030D8  6F63               	movwf	(memset@c+1)& (0+255),b
  5859  0030DA  0E00               	movlw	0
  5860  0030DC  6F62               	movwf	memset@c& (0+255),b
  5861  0030DE  0E00               	movlw	0
  5862  0030E0  6F65               	movwf	(memset@n+1)& (0+255),b
  5863  0030E2  0E02               	movlw	2
  5864  0030E4  6F64               	movwf	memset@n& (0+255),b
  5865  0030E6  EC60  F028         	call	_memset	;wreg free
  5866                           
  5867                           ;usb_device.c: 1997: UCONbits.PPBRST = 0;
  5868  0030EA  9C6D               	bcf	3949,6,c	;volatile
  5869                           
  5870                           ;usb_device.c: 1999: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  5871  0030EC  0E08               	movlw	8
  5872  0030EE  0100               	movlb	0	; () banked
  5873  0030F0  6FEA               	movwf	_pBDTEntryIn& (0+255),b
  5874  0030F2  0E04               	movlw	4
  5875  0030F4  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;usb_device.c: 2002: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  5879  0030F6  0E00               	movlw	0
  5880  0030F8  6FF2               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  5881  0030FA  0E04               	movlw	4
  5882  0030FC  6FF3               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  5883                           
  5884                           ; BSR set to: 0
  5885                           ;usb_device.c: 2003: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  5886  0030FE  C0F2  F0F0         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  5887  003102  C0F3  F0F1         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  5888                           
  5889                           ; BSR set to: 0
  5890                           ;usb_device.c: 2006: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  5891  003106  C432 F0FF          	movff	1074,_USBActiveConfiguration	;volatile
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;usb_device.c: 2009: if(USBActiveConfiguration == 0)
  5895  00310A  51FF               	movf	_USBActiveConfiguration& (0+255),w,b
  5896  00310C  A4D8               	btfss	status,2,c
  5897  00310E  D003               	goto	l256
  5898                           
  5899                           ; BSR set to: 0
  5900                           ;usb_device.c: 2010: {
  5901                           ;usb_device.c: 2012: USBDeviceState = ADDRESS_STATE;
  5902  003110  0E10               	movlw	16
  5903  003112  6FFC               	movwf	_USBDeviceState& (0+255),b
  5904                           
  5905                           ;usb_device.c: 2013: }
  5906  003114  0012               	return	
  5907  003116                     l256:
  5908                           
  5909                           ; BSR set to: 0
  5910                           ;usb_device.c: 2014: else
  5911                           ;usb_device.c: 2015: {
  5912                           ;usb_device.c: 2017: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  5913                           
  5914                           ; BSR set to: 0
  5915  003116  0E00               	movlw	0
  5916  003118  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5917  00311A  0E01               	movlw	1
  5918  00311C  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5919  00311E  0EFF               	movlw	low _USBActiveConfiguration
  5920  003120  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5921  003122  0E00               	movlw	high _USBActiveConfiguration
  5922  003124  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5923  003126  0E00               	movlw	0
  5924  003128  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5925  00312A  0E01               	movlw	1
  5926  00312C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5927  00312E  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5928                           
  5929                           ;usb_device.c: 2022: USBDeviceState = CONFIGURED_STATE;
  5930  003132  0E20               	movlw	32
  5931  003134  0100               	movlb	0	; () banked
  5932  003136  6FFC               	movwf	_USBDeviceState& (0+255),b
  5933  003138  0012               	return	
  5934  00313A                     __end_of_USBStdSetCfgHandler:
  5935                           	opt stack 0
  5936                           tosu	equ	0xFFF
  5937                           tosh	equ	0xFFE
  5938                           tosl	equ	0xFFD
  5939                           pclath	equ	0xFFA
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           postinc0	equ	0xFEE
  5947                           plusw0	equ	0xFEB
  5948                           wreg	equ	0xFE8
  5949                           indf1	equ	0xFE7
  5950                           postinc1	equ	0xFE6
  5951                           postdec1	equ	0xFE5
  5952                           fsr1h	equ	0xFE2
  5953                           fsr1l	equ	0xFE1
  5954                           indf2	equ	0xFDF
  5955                           postinc2	equ	0xFDE
  5956                           postdec2	equ	0xFDD
  5957                           plusw2	equ	0xFDB
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _memset *****************
  5963 ;; Defined at:
  5964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  p1              2    0[BANK0 ] PTR void 
  5967 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5968 ;;  c               2    2[BANK0 ] int 
  5969 ;;  n               2    4[BANK0 ] unsigned int 
  5970 ;; Auto vars:     Size  Location     Type
  5971 ;;  p               2    6[BANK0 ] PTR unsigned char 
  5972 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  2    0[BANK0 ] PTR void 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5982 ;;      Params:         0       6       0       0       0       0       0       0       0
  5983 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5985 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5986 ;;Total ram usage:        8 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    7
  5989 ;; This function calls:
  5990 ;;		Nothing
  5991 ;; This function is called by:
  5992 ;;		_USBDeviceInit
  5993 ;;		_USBStdSetCfgHandler
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           	psect	text19
  5998  0050C0                     __ptext19:
  5999                           	opt stack 0
  6000  0050C0                     _memset:
  6001                           	opt stack 21
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;incstack = 0
  6005  0050C0  C060  F066         	movff	memset@p1,memset@p
  6006  0050C4  C061  F067         	movff	memset@p1+1,memset@p+1
  6007  0050C8  D009               	goto	l1756
  6008  0050CA                     l5385:
  6009  0050CA  C066  FFD9         	movff	memset@p,fsr2l
  6010  0050CE  C067  FFDA         	movff	memset@p+1,fsr2h
  6011  0050D2  C062  FFDF         	movff	memset@c,indf2
  6012  0050D6  0100               	movlb	0	; () banked
  6013  0050D8  4B66               	infsnz	memset@p& (0+255),f,b
  6014  0050DA  2B67               	incf	(memset@p+1)& (0+255),f,b
  6015  0050DC                     l1756:
  6016                           
  6017                           ; BSR set to: 0
  6018  0050DC  0100               	movlb	0	; () banked
  6019  0050DE  0764               	decf	memset@n& (0+255),f,b
  6020  0050E0  A0D8               	btfss	status,0,c
  6021  0050E2  0765               	decf	(memset@n+1)& (0+255),f,b
  6022  0050E4  2964               	incf	memset@n& (0+255),w,b
  6023  0050E6  E1F1               	bnz	l5385
  6024  0050E8  2965               	incf	(memset@n+1)& (0+255),w,b
  6025  0050EA  B4D8               	btfsc	status,2,c
  6026  0050EC  0012               	return	
  6027  0050EE  D7ED               	goto	l1757
  6028  0050F0                     __end_of_memset:
  6029                           	opt stack 0
  6030                           tosu	equ	0xFFF
  6031                           tosh	equ	0xFFE
  6032                           tosl	equ	0xFFD
  6033                           pclath	equ	0xFFA
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           postinc0	equ	0xFEE
  6041                           plusw0	equ	0xFEB
  6042                           wreg	equ	0xFE8
  6043                           indf1	equ	0xFE7
  6044                           postinc1	equ	0xFE6
  6045                           postdec1	equ	0xFE5
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           plusw2	equ	0xFDB
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function _USBStdGetStatusHandler *****************
  6057 ;; Defined at:
  6058 ;;		line 2129 in file "framework/usb/src/usb_device.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  p               2    1[BANK0 ] PTR struct __BDT
  6063 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  1    wreg      void 
  6066 ;; Registers used:
  6067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6073 ;;      Params:         0       0       0       0       0       0       0       0       0
  6074 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6075 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6076 ;;      Totals:         0       3       0       0       0       0       0       0       0
  6077 ;;Total ram usage:        3 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; Hardware stack levels required when called:    7
  6080 ;; This function calls:
  6081 ;;		Nothing
  6082 ;; This function is called by:
  6083 ;;		_USBCheckStdRequest
  6084 ;; This function uses a non-reentrant model
  6085 ;;
  6086                           
  6087                           	psect	text20
  6088  003A22                     __ptext20:
  6089                           	opt stack 0
  6090  003A22                     _USBStdGetStatusHandler:
  6091                           	opt stack 19
  6092                           
  6093                           ;usb_device.c: 2131: CtrlTrfData[0] = 0;
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;incstack = 0
  6097  003A22  0E00               	movlw	0
  6098  003A24  0104               	movlb	4	; () banked
  6099  003A26  6F38               	movwf	56,b	;volatile
  6100                           
  6101                           ;usb_device.c: 2132: CtrlTrfData[1] = 0;
  6102  003A28  0E00               	movlw	0
  6103  003A2A  6F39               	movwf	57,b	;volatile
  6104                           
  6105                           ;usb_device.c: 2134: switch(SetupPkt.Recipient)
  6106  003A2C  D03D               	goto	l275
  6107  003A2E                     l276:
  6108                           
  6109                           ; BSR set to: 4
  6110                           ;usb_device.c: 2137: inPipes[0].info.bits.busy = 1;
  6111  003A2E  0100               	movlb	0	; () banked
  6112  003A30  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  6113                           
  6114                           ;usb_device.c: 2145: }
  6115                           ;usb_device.c: 2147: if(RemoteWakeup == 1)
  6116                           
  6117                           ; BSR set to: 4
  6118                           
  6119                           ; BSR set to: 0
  6120                           ;usb_device.c: 2143: {
  6121                           ;usb_device.c: 2144: CtrlTrfData[0]|=0x01;
  6122                           
  6123                           ;usb_device.c: 2142: if(0 == 1)
  6124  003A32  0101               	movlb	1	; () banked
  6125  003A34  053E               	decf	_RemoteWakeup& (0+255),w,b
  6126  003A36  A4D8               	btfss	status,2,c
  6127  003A38  D042               	goto	l279
  6128                           
  6129                           ; BSR set to: 1
  6130                           ;usb_device.c: 2148: {
  6131                           ;usb_device.c: 2149: CtrlTrfData[0]|=0x02;
  6132  003A3A  0104               	movlb	4	; () banked
  6133  003A3C  8338               	bsf	56,1,b	;volatile
  6134                           
  6135                           ; BSR set to: 4
  6136                           ;usb_device.c: 2150: }
  6137                           ;usb_device.c: 2151: break;
  6138  003A3E  D03F               	goto	l279
  6139  003A40                     l280:
  6140                           
  6141                           ; BSR set to: 4
  6142                           ;usb_device.c: 2153: inPipes[0].info.bits.busy = 1;
  6143  003A40  0100               	movlb	0	; () banked
  6144  003A42  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  6145                           
  6146                           ;usb_device.c: 2154: break;
  6147  003A44  D03C               	goto	l279
  6148  003A46                     l281:
  6149                           
  6150                           ; BSR set to: 4
  6151                           ;usb_device.c: 2156: inPipes[0].info.bits.busy = 1;
  6152  003A46  0100               	movlb	0	; () banked
  6153  003A48  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  6154                           
  6155                           ;usb_device.c: 2160: {
  6156                           ;usb_device.c: 2161: BDT_ENTRY *p;
  6157                           ;usb_device.c: 2163: if(SetupPkt.EPDir == 0)
  6158  003A4A  0104               	movlb	4	; () banked
  6159  003A4C  BF34               	btfsc	52,7,b	;volatile
  6160  003A4E  D00B               	goto	l282
  6161                           
  6162                           ; BSR set to: 4
  6163                           ;usb_device.c: 2164: {
  6164                           ;usb_device.c: 2165: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6165  003A50  5134               	movf	52,w,b	;volatile
  6166  003A52  0B0F               	andlw	15
  6167  003A54  0100               	movlb	0	; () banked
  6168  003A56  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  6169  003A58  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  6170  003A5A  0D02               	mullw	2
  6171  003A5C  0E0E               	movlw	low _pBDTEntryOut
  6172  003A5E  24F3               	addwf	prodl,w,c
  6173  003A60  6ED9               	movwf	fsr2l,c
  6174  003A62  0E01               	movlw	high _pBDTEntryOut
  6175  003A64  D00B               	goto	L3
  6176  003A66                     l282:
  6177                           
  6178                           ;usb_device.c: 2167: else
  6179                           ;usb_device.c: 2168: {
  6180                           ;usb_device.c: 2169: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6181                           
  6182                           ; BSR set to: 0
  6183  003A66  0104               	movlb	4	; () banked
  6184  003A68  5134               	movf	52,w,b	;volatile
  6185  003A6A  0B0F               	andlw	15
  6186  003A6C  0100               	movlb	0	; () banked
  6187  003A6E  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  6188  003A70  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  6189  003A72  0D02               	mullw	2
  6190  003A74  0EEA               	movlw	low _pBDTEntryIn
  6191  003A76  24F3               	addwf	prodl,w,c
  6192  003A78  6ED9               	movwf	fsr2l,c
  6193  003A7A  0E00               	movlw	high _pBDTEntryIn
  6194  003A7C                     L3:
  6195  003A7C  20F4               	addwfc	prodh,w,c
  6196  003A7E  6EDA               	movwf	fsr2h,c
  6197  003A80  CFDE F061          	movff	postinc2,USBStdGetStatusHandler@p
  6198  003A84  CFDD F062          	movff	postdec2,USBStdGetStatusHandler@p+1
  6199                           
  6200                           ; BSR set to: 0
  6201                           ;usb_device.c: 2170: }
  6202                           ;usb_device.c: 2172: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  6203                           
  6204                           ; BSR set to: 0
  6205  003A88  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6206  003A8C  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6207  003A90  AEDF               	btfss	indf2,7,c
  6208  003A92  D015               	goto	l279
  6209                           
  6210                           ; BSR set to: 0
  6211  003A94  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  6212  003A98  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  6213  003A9C  A4DF               	btfss	indf2,2,c
  6214  003A9E  D00F               	goto	l279
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;usb_device.c: 2173: CtrlTrfData[0]=0x01;
  6218  003AA0  0E01               	movlw	1
  6219  003AA2  0104               	movlb	4	; () banked
  6220  003AA4  6F38               	movwf	56,b	;volatile
  6221                           
  6222                           ; BSR set to: 4
  6223                           ;usb_device.c: 2175: }
  6224                           ;usb_device.c: 2176: }
  6225                           
  6226                           ; BSR set to: 4
  6227                           ;usb_device.c: 2174: break;
  6228  003AA6  D00B               	goto	l279
  6229  003AA8                     l275:
  6230                           
  6231                           ; BSR set to: 4
  6232                           
  6233                           ; BSR set to: 4
  6234  003AA8  5130               	movf	48,w,b	;volatile
  6235  003AAA  0B1F               	andlw	31
  6236                           
  6237                           ; Switch size 1, requested type "space"
  6238                           ; Number of cases is 3, Range of values is 0 to 2
  6239                           ; switch strategies available:
  6240                           ; Name         Instructions Cycles
  6241                           ; simple_byte           10     6 (average)
  6242                           ;	Chosen strategy is simple_byte
  6243  003AAC  0A00               	xorlw	0	; case 0
  6244  003AAE  B4D8               	btfsc	status,2,c
  6245  003AB0  D7BE               	goto	l276
  6246  003AB2  0A01               	xorlw	1	; case 1
  6247  003AB4  B4D8               	btfsc	status,2,c
  6248  003AB6  D7C4               	goto	l280
  6249  003AB8  0A03               	xorlw	3	; case 2
  6250  003ABA  B4D8               	btfsc	status,2,c
  6251  003ABC  D7C4               	goto	l281
  6252  003ABE                     l279:
  6253                           
  6254                           ;usb_device.c: 2178: if(inPipes[0].info.bits.busy == 1)
  6255  003ABE  0100               	movlb	0	; () banked
  6256  003AC0  AFE7               	btfss	(_inPipes+3)& (0+255),7,b
  6257  003AC2  0012               	return	
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;usb_device.c: 2179: {
  6261                           ;usb_device.c: 2180: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  6262  003AC4  0E38               	movlw	56
  6263  003AC6  6FE4               	movwf	_inPipes& (0+255),b
  6264  003AC8  0E04               	movlw	4
  6265  003ACA  6FE5               	movwf	(_inPipes+1)& (0+255),b
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;usb_device.c: 2181: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  6269  003ACC  81E7               	bsf	(_inPipes+3)& (0+255),0,b
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;usb_device.c: 2182: inPipes[0].wCount.v[0] = 2;
  6273  003ACE  0E02               	movlw	2
  6274  003AD0  6FE8               	movwf	(_inPipes+4)& (0+255),b
  6275  003AD2  0012               	return	
  6276  003AD4                     __end_of_USBStdGetStatusHandler:
  6277                           	opt stack 0
  6278                           tosu	equ	0xFFF
  6279                           tosh	equ	0xFFE
  6280                           tosl	equ	0xFFD
  6281                           pclath	equ	0xFFA
  6282                           tblptru	equ	0xFF8
  6283                           tblptrh	equ	0xFF7
  6284                           tblptrl	equ	0xFF6
  6285                           tablat	equ	0xFF5
  6286                           prodh	equ	0xFF4
  6287                           prodl	equ	0xFF3
  6288                           postinc0	equ	0xFEE
  6289                           plusw0	equ	0xFEB
  6290                           wreg	equ	0xFE8
  6291                           indf1	equ	0xFE7
  6292                           postinc1	equ	0xFE6
  6293                           postdec1	equ	0xFE5
  6294                           fsr1h	equ	0xFE2
  6295                           fsr1l	equ	0xFE1
  6296                           indf2	equ	0xFDF
  6297                           postinc2	equ	0xFDE
  6298                           postdec2	equ	0xFDD
  6299                           plusw2	equ	0xFDB
  6300                           fsr2h	equ	0xFDA
  6301                           fsr2l	equ	0xFD9
  6302                           status	equ	0xFD8
  6303                           
  6304 ;; *************** function _USBStdGetDscHandler *****************
  6305 ;; Defined at:
  6306 ;;		line 2043 in file "framework/usb/src/usb_device.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;		None
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;		None
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6320 ;;      Params:         0       0       0       0       0       0       0       0       0
  6321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6322 ;;      Temps:          0       2       0       0       0       0       0       0       0
  6323 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6324 ;;Total ram usage:        2 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    7
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_USBCheckStdRequest
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text21
  6335  0024D6                     __ptext21:
  6336                           	opt stack 0
  6337  0024D6                     _USBStdGetDscHandler:
  6338                           	opt stack 19
  6339                           
  6340                           ;usb_device.c: 2045: if(SetupPkt.bmRequestType == 0x80)
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;incstack = 0
  6344  0024D6  0E80               	movlw	128
  6345  0024D8  0104               	movlb	4	; () banked
  6346  0024DA  1930               	xorwf	48,w,b	;volatile
  6347  0024DC  A4D8               	btfss	status,2,c
  6348  0024DE  0012               	return	
  6349                           
  6350                           ; BSR set to: 4
  6351                           ;usb_device.c: 2046: {
  6352                           ;usb_device.c: 2047: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  6353  0024E0  0EC0               	movlw	192
  6354  0024E2  0100               	movlb	0	; () banked
  6355  0024E4  6FE7               	movwf	(_inPipes+3)& (0+255),b
  6356                           
  6357                           ;usb_device.c: 2049: switch(SetupPkt.bDescriptorType)
  6358  0024E6  D082               	goto	l262
  6359  0024E8                     
  6360                           ;usb_device.c: 2055: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  6361                           
  6362                           ; BSR set to: 0
  6363  0024E8  0ED3               	movlw	low _device_dsc
  6364  0024EA  0100               	movlb	0	; () banked
  6365  0024EC  6FE4               	movwf	_inPipes& (0+255),b
  6366  0024EE  0E08               	movlw	high _device_dsc
  6367  0024F0  6FE5               	movwf	(_inPipes+1)& (0+255),b
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;usb_device.c: 2057: inPipes[0].wCount.Val = sizeof(device_dsc);
  6371  0024F2  0E00               	movlw	0
  6372  0024F4  6FE9               	movwf	(_inPipes+5)& (0+255),b
  6373  0024F6  0E12               	movlw	18
  6374  0024F8  6FE8               	movwf	(_inPipes+4)& (0+255),b
  6375                           
  6376                           ;usb_device.c: 2058: break;
  6377  0024FA  0012               	return	
  6378  0024FC                     
  6379                           ;usb_device.c: 2063: if(SetupPkt.bDscIndex < 1)
  6380                           
  6381                           ; BSR set to: 0
  6382  0024FC  0104               	movlb	4	; () banked
  6383  0024FE  5132               	movf	50,w,b	;volatile
  6384  002500  A4D8               	btfss	status,2,c
  6385  002502  D040               	goto	l266
  6386                           
  6387                           ; BSR set to: 4
  6388                           ;usb_device.c: 2064: {
  6389                           ;usb_device.c: 2068: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  6390  002504  5132               	movf	50,w,b	;volatile
  6391  002506  0D02               	mullw	2
  6392  002508  0E07               	movlw	low _USB_CD_Ptr
  6393  00250A  24F3               	addwf	prodl,w,c
  6394  00250C  6EF6               	movwf	tblptrl,c
  6395  00250E  0E08               	movlw	high _USB_CD_Ptr
  6396  002510  20F4               	addwfc	prodh,w,c
  6397  002512  6EF7               	movwf	tblptrh,c
  6398  002514                     	if	0	;There are less than 3 active tblptr bytes
  6399  002514                     	endif
  6400  002514  0009               	tblrd		*+
  6401  002516  CFF5 F0E4          	movff	tablat,_inPipes
  6402  00251A  000A               	tblrd		*-
  6403  00251C  CFF5 F0E5          	movff	tablat,_inPipes+1
  6404                           
  6405                           ; BSR set to: 4
  6406                           ;usb_device.c: 2074: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  6407  002520  0E02               	movlw	2
  6408  002522  0100               	movlb	0	; () banked
  6409  002524  25E4               	addwf	_inPipes& (0+255),w,b
  6410  002526  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  6411  002528  0E00               	movlw	0
  6412  00252A  21E5               	addwfc	(_inPipes+1)& (0+255),w,b
  6413  00252C  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  6414  00252E  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6415  002532  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6416  002536  6AF8               	clrf	tblptru,c
  6417  002538  0E07               	movlw	(high __ramtop+-1)
  6418  00253A  64F7               	cpfsgt	tblptrh,c
  6419  00253C  D003               	bra	u6437
  6420  00253E  0008               	tblrd		*
  6421  002540  50F5               	movf	tablat,w,c
  6422  002542  D005               	bra	u6430
  6423  002544                     u6437:
  6424  002544  CFF6 FFE9          	movff	tblptrl,fsr0l
  6425  002548  CFF7 FFEA          	movff	tblptrh,fsr0h
  6426  00254C  50EF               	movf	indf0,w,c
  6427  00254E                     u6430:
  6428  00254E  0100               	movlb	0	; () banked
  6429  002550  6FE8               	movwf	(_inPipes+4)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;usb_device.c: 2075: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  6433  002552  0E03               	movlw	3
  6434  002554  25E4               	addwf	_inPipes& (0+255),w,b
  6435  002556  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  6436  002558  0E00               	movlw	0
  6437  00255A  21E5               	addwfc	(_inPipes+1)& (0+255),w,b
  6438  00255C  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  6439  00255E  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  6440  002562  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  6441  002566  6AF8               	clrf	tblptru,c
  6442  002568  0E07               	movlw	(high __ramtop+-1)
  6443  00256A  64F7               	cpfsgt	tblptrh,c
  6444  00256C  D003               	bra	u6447
  6445  00256E  0008               	tblrd		*
  6446  002570  50F5               	movf	tablat,w,c
  6447  002572  D005               	bra	u6440
  6448  002574                     u6447:
  6449  002574  CFF6 FFE9          	movff	tblptrl,fsr0l
  6450  002578  CFF7 FFEA          	movff	tblptrh,fsr0h
  6451  00257C  50EF               	movf	indf0,w,c
  6452  00257E                     u6440:
  6453  00257E  0100               	movlb	0	; () banked
  6454  002580  6FE9               	movwf	(_inPipes+5)& (0+255),b
  6455                           
  6456                           ;usb_device.c: 2076: }
  6457  002582  0012               	return	
  6458  002584                     l266:
  6459                           
  6460                           ;usb_device.c: 2077: else
  6461                           ;usb_device.c: 2078: {
  6462                           ;usb_device.c: 2079: inPipes[0].info.Val = 0;
  6463                           
  6464                           ; BSR set to: 0
  6465  002584  0E00               	movlw	0
  6466  002586  0100               	movlb	0	; () banked
  6467  002588  6FE7               	movwf	(_inPipes+3)& (0+255),b
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;usb_device.c: 2080: }
  6471                           ;usb_device.c: 2081: break;
  6472  00258A  0012               	return	
  6473  00258C                     
  6474                           ;usb_device.c: 2086: if(SetupPkt.bDscIndex<3)
  6475                           
  6476                           ; BSR set to: 0
  6477  00258C  0E03               	movlw	3
  6478  00258E  0104               	movlb	4	; () banked
  6479  002590  6132               	cpfslt	50,b	;volatile
  6480  002592  D024               	goto	l269
  6481                           
  6482                           ; BSR set to: 4
  6483                           ;usb_device.c: 2087: {
  6484                           ;usb_device.c: 2089: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  6485  002594  5132               	movf	50,w,b	;volatile
  6486  002596  0D02               	mullw	2
  6487  002598  0E01               	movlw	low _USB_SD_Ptr
  6488  00259A  24F3               	addwf	prodl,w,c
  6489  00259C  6EF6               	movwf	tblptrl,c
  6490  00259E  0E08               	movlw	high _USB_SD_Ptr
  6491  0025A0  20F4               	addwfc	prodh,w,c
  6492  0025A2  6EF7               	movwf	tblptrh,c
  6493  0025A4                     	if	0	;There are less than 3 active tblptr bytes
  6494  0025A4                     	endif
  6495  0025A4  0009               	tblrd		*+
  6496  0025A6  CFF5 F0E4          	movff	tablat,_inPipes
  6497  0025AA  000A               	tblrd		*-
  6498  0025AC  CFF5 F0E5          	movff	tablat,_inPipes+1
  6499                           
  6500                           ; BSR set to: 4
  6501                           ;usb_device.c: 2091: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  6502  0025B0  C0E4  FFF6         	movff	_inPipes,tblptrl
  6503  0025B4  C0E5  FFF7         	movff	_inPipes+1,tblptrh
  6504  0025B8  6AF8               	clrf	tblptru,c
  6505  0025BA  0E07               	movlw	(high __ramtop+-1)
  6506  0025BC  64F7               	cpfsgt	tblptrh,c
  6507  0025BE  D003               	bra	u6467
  6508  0025C0  0008               	tblrd		*
  6509  0025C2  50F5               	movf	tablat,w,c
  6510  0025C4  D005               	bra	u6460
  6511  0025C6                     u6467:
  6512  0025C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6513  0025CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6514  0025CE  50EF               	movf	indf0,w,c
  6515  0025D0                     u6460:
  6516  0025D0  0100               	movlb	0	; () banked
  6517  0025D2  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  6518  0025D4  5160               	movf	??_USBStdGetDscHandler& (0+255),w,b
  6519  0025D6  6FE8               	movwf	(_inPipes+4)& (0+255),b
  6520  0025D8  6BE9               	clrf	(_inPipes+5)& (0+255),b
  6521                           
  6522                           ;usb_device.c: 2092: }
  6523  0025DA  0012               	return	
  6524  0025DC                     l269:
  6525                           
  6526                           ;usb_device.c: 2102: else
  6527                           ;usb_device.c: 2103: {
  6528                           ;usb_device.c: 2104: inPipes[0].info.Val = 0;
  6529                           
  6530                           ; BSR set to: 0
  6531  0025DC  0E00               	movlw	0
  6532  0025DE  0100               	movlb	0	; () banked
  6533  0025E0  6FE7               	movwf	(_inPipes+3)& (0+255),b
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;usb_device.c: 2105: }
  6537                           ;usb_device.c: 2106: break;
  6538  0025E2  0012               	return	
  6539  0025E4                     
  6540                           ;usb_device.c: 2108: inPipes[0].info.Val = 0;
  6541                           
  6542                           ; BSR set to: 0
  6543  0025E4  0E00               	movlw	0
  6544  0025E6  0100               	movlb	0	; () banked
  6545  0025E8  6FE7               	movwf	(_inPipes+3)& (0+255),b
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;usb_device.c: 2110: }
  6549                           
  6550                           ;usb_device.c: 2109: break;
  6551  0025EA  0012               	return	
  6552  0025EC                     l262:
  6553                           
  6554                           ; BSR set to: 0
  6555                           
  6556                           ; BSR set to: 0
  6557  0025EC  0104               	movlb	4	; () banked
  6558  0025EE  5133               	movf	51,w,b	;volatile
  6559                           
  6560                           ; Switch size 1, requested type "space"
  6561                           ; Number of cases is 3, Range of values is 1 to 3
  6562                           ; switch strategies available:
  6563                           ; Name         Instructions Cycles
  6564                           ; simple_byte           10     6 (average)
  6565                           ;	Chosen strategy is simple_byte
  6566  0025F0  0A01               	xorlw	1	; case 1
  6567  0025F2  B4D8               	btfsc	status,2,c
  6568  0025F4  D779               	goto	l263
  6569  0025F6  0A03               	xorlw	3	; case 2
  6570  0025F8  B4D8               	btfsc	status,2,c
  6571  0025FA  D780               	goto	l265
  6572  0025FC  0A01               	xorlw	1	; case 3
  6573  0025FE  B4D8               	btfsc	status,2,c
  6574  002600  D7C5               	goto	l268
  6575  002602  D7F0               	goto	l271
  6576  002604                     __end_of_USBStdGetDscHandler:
  6577                           	opt stack 0
  6578                           tosu	equ	0xFFF
  6579                           tosh	equ	0xFFE
  6580                           tosl	equ	0xFFD
  6581                           pclath	equ	0xFFA
  6582                           tblptru	equ	0xFF8
  6583                           tblptrh	equ	0xFF7
  6584                           tblptrl	equ	0xFF6
  6585                           tablat	equ	0xFF5
  6586                           prodh	equ	0xFF4
  6587                           prodl	equ	0xFF3
  6588                           indf0	equ	0xFEF
  6589                           postinc0	equ	0xFEE
  6590                           plusw0	equ	0xFEB
  6591                           fsr0h	equ	0xFEA
  6592                           fsr0l	equ	0xFE9
  6593                           wreg	equ	0xFE8
  6594                           indf1	equ	0xFE7
  6595                           postinc1	equ	0xFE6
  6596                           postdec1	equ	0xFE5
  6597                           fsr1h	equ	0xFE2
  6598                           fsr1l	equ	0xFE1
  6599                           indf2	equ	0xFDF
  6600                           postinc2	equ	0xFDE
  6601                           postdec2	equ	0xFDD
  6602                           plusw2	equ	0xFDB
  6603                           fsr2h	equ	0xFDA
  6604                           fsr2l	equ	0xFD9
  6605                           status	equ	0xFD8
  6606                           
  6607 ;; *************** function _USBStdFeatureReqHandler *****************
  6608 ;; Defined at:
  6609 ;;		line 2754 in file "framework/usb/src/usb_device.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;		None
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  p               2   24[BANK0 ] PTR struct __BDT
  6614 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  6615 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  6616 ;;		 -> UEP0(1), 
  6617 ;;  current_ep_d    1   23[BANK0 ] struct .
  6618 ;; Return value:  Size  Location     Type
  6619 ;;                  1    wreg      void 
  6620 ;; Registers used:
  6621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6622 ;; Tracked objects:
  6623 ;;		On entry : 0/0
  6624 ;;		On exit  : 0/0
  6625 ;;		Unchanged: 0/0
  6626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6627 ;;      Params:         0       0       0       0       0       0       0       0       0
  6628 ;;      Locals:         0       5       0       0       0       0       0       0       0
  6629 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6630 ;;      Totals:         0       6       0       0       0       0       0       0       0
  6631 ;;Total ram usage:        6 bytes
  6632 ;; Hardware stack levels used:    1
  6633 ;; Hardware stack levels required when called:   11
  6634 ;; This function calls:
  6635 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6636 ;; This function is called by:
  6637 ;;		_USBCheckStdRequest
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text22
  6642  000BA2                     __ptext22:
  6643                           	opt stack 0
  6644  000BA2                     _USBStdFeatureReqHandler:
  6645                           	opt stack 15
  6646                           
  6647                           ;usb_device.c: 2756: BDT_ENTRY *p;
  6648                           ;usb_device.c: 2757: EP_STATUS current_ep_data;
  6649                           ;usb_device.c: 2761: unsigned char* pUEP;
  6650                           ;usb_device.c: 2799: if((SetupPkt.bFeature == 1)&&
  6651                           ;usb_device.c: 2800: (SetupPkt.Recipient == (0x00)))
  6652                           
  6653                           ;incstack = 0
  6654  000BA2  0104               	movlb	4	; () banked
  6655  000BA4  0532               	decf	50,w,b	;volatile
  6656  000BA6  A4D8               	btfss	status,2,c
  6657  000BA8  D011               	goto	l355
  6658                           
  6659                           ; BSR set to: 4
  6660  000BAA  5130               	movf	48,w,b	;volatile
  6661  000BAC  0B1F               	andlw	31
  6662  000BAE  0900               	iorlw	0
  6663  000BB0  A4D8               	btfss	status,2,c
  6664  000BB2  D00C               	goto	l355
  6665                           
  6666                           ; BSR set to: 4
  6667                           ;usb_device.c: 2801: {
  6668                           ;usb_device.c: 2802: inPipes[0].info.bits.busy = 1;
  6669  000BB4  0100               	movlb	0	; () banked
  6670  000BB6  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;usb_device.c: 2803: if(SetupPkt.bRequest == 3)
  6674  000BB8  0E03               	movlw	3
  6675  000BBA  0104               	movlb	4	; () banked
  6676  000BBC  1931               	xorwf	49,w,b	;volatile
  6677  000BBE  A4D8               	btfss	status,2,c
  6678  000BC0  D002               	goto	l354
  6679                           
  6680                           ; BSR set to: 4
  6681                           ;usb_device.c: 2804: RemoteWakeup = 1;
  6682  000BC2  0E01               	movlw	1
  6683  000BC4  D001               	goto	L4
  6684  000BC6                     l354:
  6685                           
  6686                           ;usb_device.c: 2805: else
  6687                           ;usb_device.c: 2806: RemoteWakeup = 0;
  6688                           
  6689                           ; BSR set to: 1
  6690  000BC6  0E00               	movlw	0
  6691  000BC8                     L4:
  6692  000BC8  0101               	movlb	1	; () banked
  6693  000BCA  6F3E               	movwf	_RemoteWakeup& (0+255),b
  6694  000BCC                     l355:
  6695                           
  6696                           ;usb_device.c: 2807: }
  6697                           ;usb_device.c: 2810: if((SetupPkt.bFeature == 0)&&
  6698                           ;usb_device.c: 2811: (SetupPkt.Recipient == (0x02))&&
  6699                           ;usb_device.c: 2812: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  6700                           ;usb_device.c: 2813: (USBDeviceState == CONFIGURED_STATE))
  6701                           
  6702                           ; BSR set to: 1
  6703  000BCC  0104               	movlb	4	; () banked
  6704  000BCE  5132               	movf	50,w,b	;volatile
  6705  000BD0  A4D8               	btfss	status,2,c
  6706  000BD2  0012               	return	
  6707                           
  6708                           ; BSR set to: 4
  6709  000BD4  5130               	movf	48,w,b	;volatile
  6710  000BD6  0B1F               	andlw	31
  6711  000BD8  0A02               	xorlw	2
  6712  000BDA  A4D8               	btfss	status,2,c
  6713  000BDC  0012               	return	
  6714                           
  6715                           ; BSR set to: 4
  6716  000BDE  5134               	movf	52,w,b	;volatile
  6717  000BE0  0B0F               	andlw	15
  6718  000BE2  0900               	iorlw	0
  6719  000BE4  B4D8               	btfsc	status,2,c
  6720  000BE6  0012               	return	
  6721                           
  6722                           ; BSR set to: 4
  6723  000BE8  5134               	movf	52,w,b	;volatile
  6724  000BEA  0B0F               	andlw	15
  6725  000BEC  0100               	movlb	0	; () banked
  6726  000BEE  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6727  000BF0  0E03               	movlw	3
  6728  000BF2  6174               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  6729  000BF4  0012               	return	
  6730                           
  6731                           ; BSR set to: 0
  6732  000BF6  0E20               	movlw	32
  6733  000BF8  19FC               	xorwf	_USBDeviceState& (0+255),w,b
  6734  000BFA  A4D8               	btfss	status,2,c
  6735  000BFC  0012               	return	
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;usb_device.c: 2814: {
  6739                           ;usb_device.c: 2817: inPipes[0].info.bits.busy = 1;
  6740  000BFE  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  6741                           
  6742                           ;usb_device.c: 2820: if(SetupPkt.EPDir == 0)
  6743  000C00  0104               	movlb	4	; () banked
  6744  000C02  BF34               	btfsc	52,7,b	;volatile
  6745  000C04  D01C               	goto	l357
  6746                           
  6747                           ; BSR set to: 4
  6748                           ;usb_device.c: 2821: {
  6749                           ;usb_device.c: 2822: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  6750  000C06  5134               	movf	52,w,b	;volatile
  6751  000C08  0B0F               	andlw	15
  6752  000C0A  0100               	movlb	0	; () banked
  6753  000C0C  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6754  000C0E  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6755  000C10  0D02               	mullw	2
  6756  000C12  0E0E               	movlw	low _pBDTEntryOut
  6757  000C14  24F3               	addwf	prodl,w,c
  6758  000C16  6ED9               	movwf	fsr2l,c
  6759  000C18  0E01               	movlw	high _pBDTEntryOut
  6760  000C1A  20F4               	addwfc	prodh,w,c
  6761  000C1C  6EDA               	movwf	fsr2h,c
  6762  000C1E  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  6763  000C22  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6764                           
  6765                           ;usb_device.c: 2823: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  6766  000C26  0104               	movlb	4	; () banked
  6767  000C28  5134               	movf	52,w,b	;volatile
  6768  000C2A  0B0F               	andlw	15
  6769  000C2C  0100               	movlb	0	; () banked
  6770  000C2E  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6771  000C30  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6772  000C32  0D01               	mullw	1
  6773  000C34  0E22               	movlw	low _ep_data_out
  6774  000C36  24F3               	addwf	prodl,w,c
  6775  000C38  6ED9               	movwf	fsr2l,c
  6776  000C3A  0E01               	movlw	high _ep_data_out
  6777  000C3C  D01C               	goto	L5
  6778  000C3E                     l357:
  6779                           
  6780                           ;usb_device.c: 2825: else
  6781                           ;usb_device.c: 2826: {
  6782                           ;usb_device.c: 2827: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  6783                           
  6784                           ; BSR set to: 0
  6785  000C3E  0104               	movlb	4	; () banked
  6786  000C40  5134               	movf	52,w,b	;volatile
  6787  000C42  0B0F               	andlw	15
  6788  000C44  0100               	movlb	0	; () banked
  6789  000C46  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6790  000C48  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6791  000C4A  0D02               	mullw	2
  6792  000C4C  0EEA               	movlw	low _pBDTEntryIn
  6793  000C4E  24F3               	addwf	prodl,w,c
  6794  000C50  6ED9               	movwf	fsr2l,c
  6795  000C52  0E00               	movlw	high _pBDTEntryIn
  6796  000C54  20F4               	addwfc	prodh,w,c
  6797  000C56  6EDA               	movwf	fsr2h,c
  6798  000C58  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  6799  000C5C  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  6800                           
  6801                           ;usb_device.c: 2828: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  6802  000C60  0104               	movlb	4	; () banked
  6803  000C62  5134               	movf	52,w,b	;volatile
  6804  000C64  0B0F               	andlw	15
  6805  000C66  0100               	movlb	0	; () banked
  6806  000C68  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6807  000C6A  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6808  000C6C  0D01               	mullw	1
  6809  000C6E  0E25               	movlw	low _ep_data_in
  6810  000C70  24F3               	addwf	prodl,w,c
  6811  000C72  6ED9               	movwf	fsr2l,c
  6812  000C74  0E01               	movlw	high _ep_data_in
  6813  000C76                     L5:
  6814  000C76  20F4               	addwfc	prodh,w,c
  6815  000C78  6EDA               	movwf	fsr2h,c
  6816  000C7A  50DF               	movf	indf2,w,c
  6817  000C7C  6F77               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820                           ;usb_device.c: 2829: }
  6821                           ;usb_device.c: 2835: if(current_ep_data.bits.ping_pong_state == 0)
  6822                           
  6823                           ; BSR set to: 0
  6824  000C7E  B177               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  6825  000C80  D006               	goto	l359
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;usb_device.c: 2836: {
  6829                           ;usb_device.c: 2837: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
  6830  000C82  0EFB               	movlw	251
  6831  000C84  1578               	andwf	USBStdFeatureReqHandler@p& (0+255),w,b
  6832  000C86  6F78               	movwf	USBStdFeatureReqHandler@p& (0+255),b
  6833  000C88  0EFF               	movlw	255
  6834  000C8A  1579               	andwf	(USBStdFeatureReqHandler@p+1)& (0+255),w,b
  6835  000C8C  D004               	goto	L6
  6836  000C8E                     l359:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;usb_device.c: 2839: else
  6840                           ;usb_device.c: 2840: {
  6841                           ;usb_device.c: 2841: p = (BDT_ENTRY*)(((uintptr_t)p) | 0x0004);
  6842                           
  6843                           ; BSR set to: 0
  6844  000C8E  0E04               	movlw	4
  6845  000C90  1178               	iorwf	USBStdFeatureReqHandler@p& (0+255),w,b
  6846  000C92  6F78               	movwf	USBStdFeatureReqHandler@p& (0+255),b
  6847  000C94  5179               	movf	(USBStdFeatureReqHandler@p+1)& (0+255),w,b
  6848  000C96                     L6:
  6849  000C96  6F79               	movwf	(USBStdFeatureReqHandler@p+1)& (0+255),b
  6850                           
  6851                           ; BSR set to: 0
  6852                           ;usb_device.c: 2842: }
  6853                           ;usb_device.c: 2847: if(SetupPkt.EPDir == 0)
  6854                           
  6855                           ; BSR set to: 0
  6856  000C98  0104               	movlb	4	; () banked
  6857  000C9A  BF34               	btfsc	52,7,b	;volatile
  6858  000C9C  D00B               	goto	l361
  6859                           
  6860                           ; BSR set to: 4
  6861                           ;usb_device.c: 2848: {
  6862                           ;usb_device.c: 2849: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6863  000C9E  5134               	movf	52,w,b	;volatile
  6864  000CA0  0B0F               	andlw	15
  6865  000CA2  0100               	movlb	0	; () banked
  6866  000CA4  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6867  000CA6  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6868  000CA8  0D02               	mullw	2
  6869  000CAA  0E0E               	movlw	low _pBDTEntryOut
  6870  000CAC  24F3               	addwf	prodl,w,c
  6871  000CAE  6ED9               	movwf	fsr2l,c
  6872  000CB0  0E01               	movlw	high _pBDTEntryOut
  6873  000CB2  D00B               	goto	L7
  6874  000CB4                     l361:
  6875                           
  6876                           ;usb_device.c: 2851: else
  6877                           ;usb_device.c: 2852: {
  6878                           ;usb_device.c: 2853: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  6879                           
  6880                           ; BSR set to: 0
  6881  000CB4  0104               	movlb	4	; () banked
  6882  000CB6  5134               	movf	52,w,b	;volatile
  6883  000CB8  0B0F               	andlw	15
  6884  000CBA  0100               	movlb	0	; () banked
  6885  000CBC  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6886  000CBE  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6887  000CC0  0D02               	mullw	2
  6888  000CC2  0EEA               	movlw	low _pBDTEntryIn
  6889  000CC4  24F3               	addwf	prodl,w,c
  6890  000CC6  6ED9               	movwf	fsr2l,c
  6891  000CC8  0E00               	movlw	high _pBDTEntryIn
  6892  000CCA                     L7:
  6893  000CCA  20F4               	addwfc	prodh,w,c
  6894  000CCC  6EDA               	movwf	fsr2h,c
  6895  000CCE  C078  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  6896  000CD2  C079  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;usb_device.c: 2854: }
  6900                           ;usb_device.c: 2857: if(SetupPkt.bRequest == 3)
  6901                           
  6902                           ; BSR set to: 0
  6903  000CD6  0E03               	movlw	3
  6904  000CD8  0104               	movlb	4	; () banked
  6905  000CDA  1931               	xorwf	49,w,b	;volatile
  6906  000CDC  A4D8               	btfss	status,2,c
  6907  000CDE  D031               	goto	l363
  6908                           
  6909                           ; BSR set to: 4
  6910                           ;usb_device.c: 2858: {
  6911                           ;usb_device.c: 2859: if(p->STAT.UOWN == 1)
  6912  000CE0  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6913  000CE4  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6914  000CE8  0100               	movlb	0	; () banked
  6915  000CEA  AEDF               	btfss	indf2,7,c
  6916  000CEC  D01D               	goto	l366
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;usb_device.c: 2860: {
  6920                           ;usb_device.c: 2863: if(SetupPkt.EPDir == 0)
  6921  000CEE  0104               	movlb	4	; () banked
  6922  000CF0  BF34               	btfsc	52,7,b	;volatile
  6923  000CF2  D00B               	goto	l365
  6924                           
  6925                           ; BSR set to: 4
  6926                           ;usb_device.c: 2864: {
  6927                           ;usb_device.c: 2865: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6928  000CF4  5134               	movf	52,w,b	;volatile
  6929  000CF6  0B0F               	andlw	15
  6930  000CF8  0100               	movlb	0	; () banked
  6931  000CFA  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6932  000CFC  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6933  000CFE  0D01               	mullw	1
  6934  000D00  0E22               	movlw	low _ep_data_out
  6935  000D02  24F3               	addwf	prodl,w,c
  6936  000D04  6ED9               	movwf	fsr2l,c
  6937  000D06  0E01               	movlw	high _ep_data_out
  6938  000D08  D00B               	goto	L8
  6939  000D0A                     l365:
  6940                           
  6941                           ;usb_device.c: 2867: else
  6942                           ;usb_device.c: 2868: {
  6943                           ;usb_device.c: 2869: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  6944                           
  6945                           ; BSR set to: 1
  6946  000D0A  0104               	movlb	4	; () banked
  6947  000D0C  5134               	movf	52,w,b	;volatile
  6948  000D0E  0B0F               	andlw	15
  6949  000D10  0100               	movlb	0	; () banked
  6950  000D12  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  6951  000D14  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  6952  000D16  0D01               	mullw	1
  6953  000D18  0E25               	movlw	low _ep_data_in
  6954  000D1A  24F3               	addwf	prodl,w,c
  6955  000D1C  6ED9               	movwf	fsr2l,c
  6956  000D1E  0E01               	movlw	high _ep_data_in
  6957  000D20                     L8:
  6958  000D20  20F4               	addwfc	prodh,w,c
  6959  000D22  6EDA               	movwf	fsr2h,c
  6960  000D24  0101               	movlb	1	; () banked
  6961  000D26  82DF               	bsf	indf2,1,c
  6962  000D28                     l366:
  6963                           
  6964                           ;usb_device.c: 2870: }
  6965                           ;usb_device.c: 2871: }
  6966                           ;usb_device.c: 2874: p->STAT.Val |= 0x04;
  6967                           
  6968                           ; BSR set to: 1
  6969                           
  6970                           ; BSR set to: 1
  6971  000D28  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6972  000D2C  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6973  000D30  0E00               	movlw	0
  6974  000D32  84DB               	bsf	plusw2,2,c
  6975                           
  6976                           ;usb_device.c: 2875: p->STAT.Val |= 0x80;
  6977  000D34  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6978  000D38  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  6979  000D3C  0E00               	movlw	0
  6980  000D3E  8EDB               	bsf	plusw2,7,c
  6981                           
  6982                           ;usb_device.c: 2876: }
  6983  000D40  0012               	return	
  6984  000D42                     l363:
  6985                           
  6986                           ;usb_device.c: 2877: else
  6987                           ;usb_device.c: 2878: {
  6988                           ;usb_device.c: 2882: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  6989  000D42  0E04               	movlw	4
  6990  000D44  0100               	movlb	0	; () banked
  6991  000D46  1978               	xorwf	USBStdFeatureReqHandler@p& (0+255),w,b
  6992  000D48  6F78               	movwf	USBStdFeatureReqHandler@p& (0+255),b
  6993  000D4A  5179               	movf	(USBStdFeatureReqHandler@p+1)& (0+255),w,b
  6994  000D4C  6F79               	movwf	(USBStdFeatureReqHandler@p+1)& (0+255),b
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;usb_device.c: 2884: if(p->STAT.UOWN == 1)
  6998  000D4E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  6999  000D52  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7000  000D56  AEDF               	btfss	indf2,7,c
  7001  000D58  D01B               	goto	l368
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;usb_device.c: 2885: {
  7005                           ;usb_device.c: 2888: p->STAT.Val &= (~0x80);
  7006  000D5A  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7007  000D5E  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7008  000D62  0E7F               	movlw	127
  7009  000D64  16DF               	andwf	indf2,f,c
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;usb_device.c: 2889: p->STAT.Val |= 0x40;
  7013  000D66  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7014  000D6A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7015  000D6E  0E00               	movlw	0
  7016  000D70  8CDB               	bsf	plusw2,6,c
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;usb_device.c: 2890: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7020  000D72  0E00               	movlw	0
  7021  000D74  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7022  000D76  0E05               	movlw	5
  7023  000D78  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7024  000D7A  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7025  000D7E  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7026  000D82  0E00               	movlw	0
  7027  000D84  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7028  000D86  0E02               	movlw	2
  7029  000D88  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7030  000D8A  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7031                           
  7032                           ;usb_device.c: 2891: }
  7033  000D8E  D006               	goto	l369
  7034  000D90                     l368:
  7035                           
  7036                           ;usb_device.c: 2892: else
  7037                           ;usb_device.c: 2893: {
  7038                           ;usb_device.c: 2895: p->STAT.Val |= 0x40;
  7039  000D90  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7040  000D94  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7041  000D98  0E00               	movlw	0
  7042  000D9A  8CDB               	bsf	plusw2,6,c
  7043  000D9C                     l369:
  7044                           
  7045                           ;usb_device.c: 2896: }
  7046                           ;usb_device.c: 2900: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
  7047  000D9C  0E04               	movlw	4
  7048  000D9E  0100               	movlb	0	; () banked
  7049  000DA0  1978               	xorwf	USBStdFeatureReqHandler@p& (0+255),w,b
  7050  000DA2  6F78               	movwf	USBStdFeatureReqHandler@p& (0+255),b
  7051  000DA4  5179               	movf	(USBStdFeatureReqHandler@p+1)& (0+255),w,b
  7052  000DA6  6F79               	movwf	(USBStdFeatureReqHandler@p+1)& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055                           ;usb_device.c: 2906: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  7056  000DA8  B377               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  7057  000DAA  D006               	goto	u6680
  7058                           
  7059                           ; BSR set to: 0
  7060  000DAC  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7061  000DB0  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7062  000DB4  AEDF               	btfss	indf2,7,c
  7063  000DB6  D033               	goto	l370
  7064  000DB8                     u6680:
  7065                           
  7066                           ; BSR set to: 0
  7067                           ;usb_device.c: 2907: {
  7068                           ;usb_device.c: 2908: if(SetupPkt.EPDir == 0)
  7069  000DB8  0104               	movlb	4	; () banked
  7070  000DBA  BF34               	btfsc	52,7,b	;volatile
  7071  000DBC  D00B               	goto	l373
  7072                           
  7073                           ; BSR set to: 4
  7074                           ;usb_device.c: 2909: {
  7075                           ;usb_device.c: 2910: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7076  000DBE  5134               	movf	52,w,b	;volatile
  7077  000DC0  0B0F               	andlw	15
  7078  000DC2  0100               	movlb	0	; () banked
  7079  000DC4  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7080  000DC6  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7081  000DC8  0D01               	mullw	1
  7082  000DCA  0E22               	movlw	low _ep_data_out
  7083  000DCC  24F3               	addwf	prodl,w,c
  7084  000DCE  6ED9               	movwf	fsr2l,c
  7085  000DD0  0E01               	movlw	high _ep_data_out
  7086  000DD2  D00B               	goto	L9
  7087  000DD4                     l373:
  7088                           
  7089                           ;usb_device.c: 2912: else
  7090                           ;usb_device.c: 2913: {
  7091                           ;usb_device.c: 2914: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  7092                           
  7093                           ; BSR set to: 1
  7094  000DD4  0104               	movlb	4	; () banked
  7095  000DD6  5134               	movf	52,w,b	;volatile
  7096  000DD8  0B0F               	andlw	15
  7097  000DDA  0100               	movlb	0	; () banked
  7098  000DDC  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7099  000DDE  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7100  000DE0  0D01               	mullw	1
  7101  000DE2  0E25               	movlw	low _ep_data_in
  7102  000DE4  24F3               	addwf	prodl,w,c
  7103  000DE6  6ED9               	movwf	fsr2l,c
  7104  000DE8  0E01               	movlw	high _ep_data_in
  7105  000DEA                     L9:
  7106  000DEA  20F4               	addwfc	prodh,w,c
  7107  000DEC  6EDA               	movwf	fsr2h,c
  7108  000DEE  0101               	movlb	1	; () banked
  7109  000DF0  92DF               	bcf	indf2,1,c
  7110                           
  7111                           ; BSR set to: 1
  7112                           ;usb_device.c: 2915: }
  7113                           ;usb_device.c: 2917: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7114                           
  7115                           ; BSR set to: 1
  7116  000DF2  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7117  000DF6  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7118  000DFA  0E3B               	movlw	59
  7119  000DFC  16DF               	andwf	indf2,f,c
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;usb_device.c: 2920: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  7123  000DFE  0E00               	movlw	0
  7124  000E00  0100               	movlb	0	; () banked
  7125  000E02  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7126  000E04  0E05               	movlw	5
  7127  000E06  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7128  000E08  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  7129  000E0C  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  7130  000E10  0E00               	movlw	0
  7131  000E12  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7132  000E14  0E02               	movlw	2
  7133  000E16  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7134  000E18  EC40  F025         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7135                           
  7136                           ;usb_device.c: 2921: }
  7137  000E1C  D006               	goto	l375
  7138  000E1E                     l370:
  7139                           
  7140                           ;usb_device.c: 2922: else
  7141                           ;usb_device.c: 2923: {
  7142                           ;usb_device.c: 2925: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  7143  000E1E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  7144  000E22  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  7145  000E26  0E3B               	movlw	59
  7146  000E28  16DF               	andwf	indf2,f,c
  7147  000E2A                     l375:
  7148                           
  7149                           ;usb_device.c: 2926: }
  7150                           ;usb_device.c: 2973: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  7151  000E2A  0104               	movlb	4	; () banked
  7152  000E2C  5134               	movf	52,w,b	;volatile
  7153  000E2E  0B0F               	andlw	15
  7154  000E30  0100               	movlb	0	; () banked
  7155  000E32  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  7156  000E34  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  7157  000E36  0D01               	mullw	1
  7158  000E38  0E70               	movlw	112
  7159  000E3A  24F3               	addwf	prodl,w,c
  7160  000E3C  6F75               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  7161  000E3E  0E0F               	movlw	15
  7162  000E40  20F4               	addwfc	prodh,w,c
  7163  000E42  6F76               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;usb_device.c: 2977: *pUEP &= ~0x0001;
  7167  000E44  C075  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  7168  000E48  C076  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  7169  000E4C  0EFE               	movlw	254
  7170  000E4E  16DF               	andwf	indf2,f,c
  7171                           
  7172                           ; BSR set to: 0
  7173  000E50  0012               	return	
  7174  000E52                     __end_of_USBStdFeatureReqHandler:
  7175                           	opt stack 0
  7176                           tosu	equ	0xFFF
  7177                           tosh	equ	0xFFE
  7178                           tosl	equ	0xFFD
  7179                           pclath	equ	0xFFA
  7180                           tblptru	equ	0xFF8
  7181                           tblptrh	equ	0xFF7
  7182                           tblptrl	equ	0xFF6
  7183                           tablat	equ	0xFF5
  7184                           prodh	equ	0xFF4
  7185                           prodl	equ	0xFF3
  7186                           indf0	equ	0xFEF
  7187                           postinc0	equ	0xFEE
  7188                           plusw0	equ	0xFEB
  7189                           fsr0h	equ	0xFEA
  7190                           fsr0l	equ	0xFE9
  7191                           wreg	equ	0xFE8
  7192                           indf1	equ	0xFE7
  7193                           postinc1	equ	0xFE6
  7194                           postdec1	equ	0xFE5
  7195                           fsr1h	equ	0xFE2
  7196                           fsr1l	equ	0xFE1
  7197                           indf2	equ	0xFDF
  7198                           postinc2	equ	0xFDE
  7199                           postdec2	equ	0xFDD
  7200                           plusw2	equ	0xFDB
  7201                           fsr2h	equ	0xFDA
  7202                           fsr2l	equ	0xFD9
  7203                           status	equ	0xFD8
  7204                           
  7205 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  7206 ;; Defined at:
  7207 ;;		line 46 in file "usb_events.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  event           2   12[BANK0 ] enum E40
  7210 ;;  pdata           2   14[BANK0 ] PTR void 
  7211 ;;		 -> RAM(2047), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
  7212 ;;		 -> BDT(48), 
  7213 ;;  size            2   16[BANK0 ] unsigned int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      unsigned char 
  7218 ;; Registers used:
  7219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7225 ;;      Params:         0       6       0       0       0       0       0       0       0
  7226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7227 ;;      Temps:          0       2       0       0       0       0       0       0       0
  7228 ;;      Totals:         0       8       0       0       0       0       0       0       0
  7229 ;;Total ram usage:        8 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:   10
  7232 ;; This function calls:
  7233 ;;		_CDCInitEP
  7234 ;;		_USBCheckCDCRequest
  7235 ;; This function is called by:
  7236 ;;		_USBDeviceTasks
  7237 ;;		_USBStdSetCfgHandler
  7238 ;;		_USBSuspend
  7239 ;;		_USBWakeFromSuspend
  7240 ;;		_USBCtrlTrfSetupHandler
  7241 ;;		_USBCheckStdRequest
  7242 ;;		_USBStdFeatureReqHandler
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           	psect	text23
  7247  004A80                     __ptext23:
  7248                           	opt stack 0
  7249  004A80                     _USER_USB_CALLBACK_EVENT_HANDLER:
  7250                           	opt stack 19
  7251                           
  7252                           ;usb_events.c: 48: switch( (int) event )
  7253                           
  7254                           ;incstack = 0
  7255  004A80  D006               	goto	l1289
  7256  004A82                     
  7257                           ;usb_events.c: 63: CDCInitEP();
  7258  004A82  EC3D  F024         	call	_CDCInitEP	;wreg free
  7259                           
  7260                           ;usb_events.c: 67: break;
  7261                           
  7262                           ;usb_events.c: 66: case EVENT_SET_DESCRIPTOR:
  7263                           
  7264                           ;usb_events.c: 64: break;
  7265  004A86  0012               	return	
  7266  004A88                     
  7267                           ;usb_events.c: 72: USBCheckCDCRequest();
  7268  004A88  EC6A  F01D         	call	_USBCheckCDCRequest	;wreg free
  7269                           
  7270                           ;usb_events.c: 83: }
  7271                           
  7272                           ;usb_events.c: 82: break;
  7273                           
  7274                           ;usb_events.c: 81: default:
  7275                           
  7276                           ;usb_events.c: 79: break;
  7277                           
  7278                           ;usb_events.c: 78: case EVENT_TRANSFER_TERMINATED:
  7279                           
  7280                           ;usb_events.c: 76: break;
  7281                           
  7282                           ;usb_events.c: 75: case EVENT_BUS_ERROR:
  7283                           
  7284                           ;usb_events.c: 73: break;
  7285  004A8C  0012               	return	
  7286  004A8E                     l1289:
  7287  004A8E  C06C  F072         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  7288  004A92  C06D  F073         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  7289                           
  7290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7291                           ; Switch size 1, requested type "space"
  7292                           ; Number of cases is 2, Range of values is 0 to 127
  7293                           ; switch strategies available:
  7294                           ; Name         Instructions Cycles
  7295                           ; simple_byte            7     4 (average)
  7296                           ;	Chosen strategy is simple_byte
  7297  004A96  0100               	movlb	0	; () banked
  7298  004A98  5173               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  7299  004A9A  0A00               	xorlw	0	; case 0
  7300  004A9C  B4D8               	btfsc	status,2,c
  7301  004A9E  D004               	goto	l8313
  7302  004AA0  0A7F               	xorlw	127	; case 127
  7303  004AA2  A4D8               	btfss	status,2,c
  7304  004AA4  0012               	return	
  7305  004AA6  D018               	goto	l8315
  7306  004AA8                     l8313:
  7307                           
  7308                           ; BSR set to: 0
  7309                           ; Switch size 1, requested type "space"
  7310                           ; Number of cases is 8, Range of values is 1 to 117
  7311                           ; switch strategies available:
  7312                           ; Name         Instructions Cycles
  7313                           ; simple_byte           25    13 (average)
  7314                           ;	Chosen strategy is simple_byte
  7315  004AA8  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  7316  004AAA  0A01               	xorlw	1	; case 1
  7317  004AAC  B4D8               	btfsc	status,2,c
  7318  004AAE  D7E9               	goto	l1295
  7319  004AB0  0A03               	xorlw	3	; case 2
  7320  004AB2  B4D8               	btfsc	status,2,c
  7321  004AB4  0012               	return	
  7322  004AB6  0A01               	xorlw	1	; case 3
  7323  004AB8  B4D8               	btfsc	status,2,c
  7324  004ABA  D7E6               	goto	l1297
  7325  004ABC  0A06               	xorlw	6	; case 5
  7326  004ABE  B4D8               	btfsc	status,2,c
  7327  004AC0  0012               	return	
  7328  004AC2  0A77               	xorlw	119	; case 114
  7329  004AC4  B4D8               	btfsc	status,2,c
  7330  004AC6  0012               	return	
  7331  004AC8  0A01               	xorlw	1	; case 115
  7332  004ACA  B4D8               	btfsc	status,2,c
  7333  004ACC  0012               	return	
  7334  004ACE  0A07               	xorlw	7	; case 116
  7335  004AD0  B4D8               	btfsc	status,2,c
  7336  004AD2  0012               	return	
  7337  004AD4  0A01               	xorlw	1	; case 117
  7338  004AD6  0012               	return	
  7339  004AD8                     l8315:
  7340                           
  7341                           ; BSR set to: 0
  7342                           ; Switch size 1, requested type "space"
  7343                           ; Number of cases is 1, Range of values is 255 to 255
  7344                           ; switch strategies available:
  7345                           ; Name         Instructions Cycles
  7346                           ; simple_byte            4     3 (average)
  7347                           ;	Chosen strategy is simple_byte
  7348  004AD8  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  7349  004ADA  0AFF               	xorlw	255	; case 255
  7350  004ADC  0012               	return	
  7351  004ADE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  7352                           	opt stack 0
  7353                           tosu	equ	0xFFF
  7354                           tosh	equ	0xFFE
  7355                           tosl	equ	0xFFD
  7356                           pclath	equ	0xFFA
  7357                           tblptru	equ	0xFF8
  7358                           tblptrh	equ	0xFF7
  7359                           tblptrl	equ	0xFF6
  7360                           tablat	equ	0xFF5
  7361                           prodh	equ	0xFF4
  7362                           prodl	equ	0xFF3
  7363                           indf0	equ	0xFEF
  7364                           postinc0	equ	0xFEE
  7365                           plusw0	equ	0xFEB
  7366                           fsr0h	equ	0xFEA
  7367                           fsr0l	equ	0xFE9
  7368                           wreg	equ	0xFE8
  7369                           indf1	equ	0xFE7
  7370                           postinc1	equ	0xFE6
  7371                           postdec1	equ	0xFE5
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           postdec2	equ	0xFDD
  7377                           plusw2	equ	0xFDB
  7378                           fsr2h	equ	0xFDA
  7379                           fsr2l	equ	0xFD9
  7380                           status	equ	0xFD8
  7381                           
  7382 ;; *************** function _USBCheckCDCRequest *****************
  7383 ;; Defined at:
  7384 ;;		line 147 in file "framework/usb/src/usb_device_cdc.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    7
  7405 ;; This function calls:
  7406 ;;		Nothing
  7407 ;; This function is called by:
  7408 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text24
  7413  003AD4                     __ptext24:
  7414                           	opt stack 0
  7415  003AD4                     _USBCheckCDCRequest:
  7416                           	opt stack 21
  7417                           
  7418                           ;usb_device_cdc.c: 152: if(SetupPkt.Recipient != (0x01)) return;
  7419                           
  7420                           ;incstack = 0
  7421  003AD4  0104               	movlb	4	; () banked
  7422  003AD6  5130               	movf	48,w,b	;volatile
  7423  003AD8  0B1F               	andlw	31
  7424  003ADA  06E8               	decf	wreg,f,c
  7425  003ADC  A4D8               	btfss	status,2,c
  7426  003ADE  0012               	return	
  7427                           
  7428                           ; BSR set to: 4
  7429                           ;usb_device_cdc.c: 157: if(SetupPkt.RequestType != (0x20>>5)) return;
  7430                           
  7431                           ; BSR set to: 4
  7432                           
  7433                           ; BSR set to: 4
  7434  003AE0  3930               	swapf	48,w,b	;volatile
  7435  003AE2  32E8               	rrcf	wreg,f,c
  7436  003AE4  0B03               	andlw	3
  7437  003AE6  06E8               	decf	wreg,f,c
  7438  003AE8  A4D8               	btfss	status,2,c
  7439  003AEA  0012               	return	
  7440                           
  7441                           ; BSR set to: 4
  7442                           ;usb_device_cdc.c: 163: if((SetupPkt.bIntfID != 0x0)&&
  7443                           ;usb_device_cdc.c: 164: (SetupPkt.bIntfID != 0x01)) return;
  7444                           
  7445                           ; BSR set to: 4
  7446                           
  7447                           ; BSR set to: 4
  7448  003AEC  5134               	movf	52,w,b	;volatile
  7449  003AEE  B4D8               	btfsc	status,2,c
  7450  003AF0  D037               	goto	l431
  7451                           
  7452                           ; BSR set to: 4
  7453  003AF2  0534               	decf	52,w,b	;volatile
  7454  003AF4  A4D8               	btfss	status,2,c
  7455  003AF6  0012               	return	
  7456  003AF8  D033               	goto	l431
  7457  003AFA                     
  7458                           ; BSR set to: 4
  7459                           ;usb_device_cdc.c: 171: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7460                           
  7461                           ; BSR set to: 4
  7462  003AFA  0EE7               	movlw	low _dummy_encapsulated_cmd_response
  7463  003AFC  0100               	movlb	0	; () banked
  7464  003AFE  6FE4               	movwf	_inPipes& (0+255),b
  7465  003B00  0E01               	movlw	high _dummy_encapsulated_cmd_response
  7466  003B02  6FE5               	movwf	(_inPipes+1)& (0+255),b
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;usb_device_cdc.c: 172: inPipes[0].wCount.Val = 0x08;
  7470  003B04  0E00               	movlw	0
  7471  003B06  6FE9               	movwf	(_inPipes+5)& (0+255),b
  7472  003B08  0E08               	movlw	8
  7473  003B0A  6FE8               	movwf	(_inPipes+4)& (0+255),b
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;usb_device_cdc.c: 173: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7477  003B0C  81E7               	bsf	(_inPipes+3)& (0+255),0,b
  7478                           
  7479                           ; BSR set to: 0
  7480                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.busy = 1;
  7481  003B0E  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  7482                           
  7483                           ;usb_device_cdc.c: 175: break;
  7484  003B10  0012               	return	
  7485  003B12                     
  7486                           ;usb_device_cdc.c: 178: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  7487                           
  7488                           ; BSR set to: 0
  7489  003B12  0EE7               	movlw	low _dummy_encapsulated_cmd_response
  7490  003B14  0100               	movlb	0	; () banked
  7491  003B16  6FE4               	movwf	_inPipes& (0+255),b
  7492  003B18  0E01               	movlw	high _dummy_encapsulated_cmd_response
  7493  003B1A  6FE5               	movwf	(_inPipes+1)& (0+255),b
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;usb_device_cdc.c: 179: inPipes[0].info.bits.busy = 1;
  7497  003B1C  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  7498                           
  7499                           ;usb_device_cdc.c: 180: break;
  7500  003B1E  0012               	return	
  7501  003B20                     l435:
  7502                           
  7503                           ; BSR set to: 4
  7504                           ;usb_device_cdc.c: 185: outPipes[0].wCount.Val = SetupPkt.wLength;
  7505  003B20  C436 F104          	movff	1078,_outPipes+4	;volatile
  7506  003B24  C437 F105          	movff	1079,_outPipes+5	;volatile
  7507                           
  7508                           ; BSR set to: 4
  7509                           ;usb_device_cdc.c: 186: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  7510  003B28  0EEF               	movlw	low _line_coding
  7511  003B2A  0101               	movlb	1	; () banked
  7512  003B2C  6F00               	movwf	_outPipes& (0+255),b
  7513  003B2E  0E01               	movlw	high _line_coding
  7514  003B30  6F01               	movwf	(_outPipes+1)& (0+255),b
  7515                           
  7516                           ;usb_device_cdc.c: 187: outPipes[0].pFunc = (0);
  7517  003B32  0E00               	movlw	0
  7518  003B34  6F06               	movwf	(_outPipes+6)& (0+255),b
  7519  003B36  0E00               	movlw	0
  7520  003B38  6F07               	movwf	(_outPipes+7)& (0+255),b
  7521                           
  7522                           ; BSR set to: 1
  7523                           ;usb_device_cdc.c: 188: outPipes[0].info.bits.busy = 1;
  7524  003B3A  8F03               	bsf	(_outPipes+3)& (0+255),7,b
  7525                           
  7526                           ;usb_device_cdc.c: 189: break;
  7527  003B3C  0012               	return	
  7528  003B3E                     
  7529                           ;usb_device_cdc.c: 192: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  7530                           
  7531                           ; BSR set to: 1
  7532  003B3E  0EEF               	movlw	low _line_coding
  7533  003B40  0100               	movlb	0	; () banked
  7534  003B42  6FE4               	movwf	_inPipes& (0+255),b
  7535  003B44  0E01               	movlw	high _line_coding
  7536  003B46  6FE5               	movwf	(_inPipes+1)& (0+255),b
  7537                           
  7538                           ; BSR set to: 0
  7539  003B48  0E00               	movlw	0
  7540  003B4A  6FE9               	movwf	(_inPipes+5)& (0+255),b
  7541  003B4C  0E07               	movlw	7
  7542  003B4E  6FE8               	movwf	(_inPipes+4)& (0+255),b
  7543                           
  7544                           ; BSR set to: 0
  7545  003B50  0EC1               	movlw	193
  7546  003B52  6FE7               	movwf	(_inPipes+3)& (0+255),b
  7547                           
  7548                           ;usb_device_cdc.c: 196: break;
  7549  003B54  0012               	return	
  7550  003B56                     l437:
  7551                           
  7552                           ; BSR set to: 4
  7553                           ;usb_device_cdc.c: 199: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  7554  003B56  C432 F135          	movff	1074,_control_signal_bitmap	;volatile
  7555                           
  7556                           ;usb_device_cdc.c: 231: inPipes[0].info.bits.busy = 1;
  7557  003B5A  0100               	movlb	0	; () banked
  7558  003B5C  8FE7               	bsf	(_inPipes+3)& (0+255),7,b
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;usb_device_cdc.c: 258: }
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;usb_device_cdc.c: 257: break;
  7565                           
  7566                           ;usb_device_cdc.c: 256: default:
  7567                           
  7568                           ;usb_device_cdc.c: 232: break;
  7569  003B5E  0012               	return	
  7570  003B60                     l431:
  7571                           
  7572                           ; BSR set to: 0
  7573  003B60  0104               	movlb	4	; () banked
  7574  003B62  5131               	movf	49,w,b	;volatile
  7575                           
  7576                           ; Switch size 1, requested type "space"
  7577                           ; Number of cases is 5, Range of values is 0 to 34
  7578                           ; switch strategies available:
  7579                           ; Name         Instructions Cycles
  7580                           ; simple_byte           16     9 (average)
  7581                           ;	Chosen strategy is simple_byte
  7582  003B64  0A00               	xorlw	0	; case 0
  7583  003B66  B4D8               	btfsc	status,2,c
  7584  003B68  D7C8               	goto	l432
  7585  003B6A  0A01               	xorlw	1	; case 1
  7586  003B6C  B4D8               	btfsc	status,2,c
  7587  003B6E  D7D1               	goto	l434
  7588  003B70  0A21               	xorlw	33	; case 32
  7589  003B72  B4D8               	btfsc	status,2,c
  7590  003B74  D7D5               	goto	l435
  7591  003B76  0A01               	xorlw	1	; case 33
  7592  003B78  B4D8               	btfsc	status,2,c
  7593  003B7A  D7E1               	goto	l436
  7594  003B7C  0A03               	xorlw	3	; case 34
  7595  003B7E  A4D8               	btfss	status,2,c
  7596  003B80  0012               	return	
  7597  003B82  D7E9               	goto	l437
  7598  003B84                     __end_of_USBCheckCDCRequest:
  7599                           	opt stack 0
  7600                           tosu	equ	0xFFF
  7601                           tosh	equ	0xFFE
  7602                           tosl	equ	0xFFD
  7603                           pclath	equ	0xFFA
  7604                           tblptru	equ	0xFF8
  7605                           tblptrh	equ	0xFF7
  7606                           tblptrl	equ	0xFF6
  7607                           tablat	equ	0xFF5
  7608                           prodh	equ	0xFF4
  7609                           prodl	equ	0xFF3
  7610                           indf0	equ	0xFEF
  7611                           postinc0	equ	0xFEE
  7612                           plusw0	equ	0xFEB
  7613                           fsr0h	equ	0xFEA
  7614                           fsr0l	equ	0xFE9
  7615                           wreg	equ	0xFE8
  7616                           indf1	equ	0xFE7
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           plusw2	equ	0xFDB
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _CDCInitEP *****************
  7630 ;; Defined at:
  7631 ;;		line 294 in file "framework/usb/src/usb_device_cdc.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:    9
  7652 ;; This function calls:
  7653 ;;		_USBEnableEndpoint
  7654 ;;		_USBTransferOnePacket
  7655 ;; This function is called by:
  7656 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text25
  7661  00487A                     __ptext25:
  7662                           	opt stack 0
  7663  00487A                     _CDCInitEP:
  7664                           	opt stack 19
  7665                           
  7666                           ;usb_device_cdc.c: 297: line_coding.dwDTERate = 19200;
  7667                           
  7668                           ;incstack = 0
  7669  00487A  0E00               	movlw	0
  7670  00487C  0101               	movlb	1	; () banked
  7671  00487E  6FEF               	movwf	_line_coding& (0+255),b
  7672  004880  0E4B               	movlw	75
  7673  004882  6FF0               	movwf	(_line_coding+1)& (0+255),b
  7674  004884  0E00               	movlw	0
  7675  004886  6FF1               	movwf	(_line_coding+2)& (0+255),b
  7676  004888  0E00               	movlw	0
  7677  00488A  6FF2               	movwf	(_line_coding+3)& (0+255),b
  7678                           
  7679                           ;usb_device_cdc.c: 298: line_coding.bCharFormat = 0x00;
  7680  00488C  0E00               	movlw	0
  7681  00488E  6FF3               	movwf	(_line_coding+4)& (0+255),b
  7682                           
  7683                           ;usb_device_cdc.c: 299: line_coding.bParityType = 0x00;
  7684  004890  0E00               	movlw	0
  7685  004892  6FF4               	movwf	(_line_coding+5)& (0+255),b
  7686                           
  7687                           ;usb_device_cdc.c: 300: line_coding.bDataBits = 0x08;
  7688  004894  0E08               	movlw	8
  7689  004896  6FF5               	movwf	(_line_coding+6)& (0+255),b
  7690                           
  7691                           ;usb_device_cdc.c: 302: cdc_rx_len = 0;
  7692  004898  0E00               	movlw	0
  7693  00489A  0100               	movlb	0	; () banked
  7694  00489C  6FF6               	movwf	_cdc_rx_len& (0+255),b
  7695                           
  7696                           ; BSR set to: 0
  7697                           ;usb_device_cdc.c: 315: USBEnableEndpoint(1,0x02|0x10|0x08);
  7698  00489E  0E1A               	movlw	26
  7699  0048A0  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
  7700  0048A2  0E01               	movlw	1
  7701  0048A4  ECFC  F026         	call	_USBEnableEndpoint
  7702                           
  7703                           ;usb_device_cdc.c: 316: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  7704  0048A8  0E1E               	movlw	30
  7705  0048AA  0100               	movlb	0	; () banked
  7706  0048AC  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
  7707  0048AE  0E02               	movlw	2
  7708  0048B0  ECFC  F026         	call	_USBEnableEndpoint
  7709                           
  7710                           ;usb_device_cdc.c: 318: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  7711  0048B4  0E00               	movlw	0
  7712  0048B6  0100               	movlb	0	; () banked
  7713  0048B8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
  7714  0048BA  0E00               	movlw	low _cdc_data_rx
  7715  0048BC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
  7716  0048BE  0E03               	movlw	high _cdc_data_rx
  7717  0048C0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  7718  0048C2  0E40               	movlw	64
  7719  0048C4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
  7720  0048C6  0E02               	movlw	2
  7721  0048C8  EC40  F015         	call	_USBTransferOnePacket
  7722  0048CC  C060  F05C         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  7723  0048D0  C061  F05D         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  7724                           
  7725                           ;usb_device_cdc.c: 319: CDCDataInHandle = (0);
  7726  0048D4  0E00               	movlw	0
  7727  0048D6  0101               	movlb	1	; () banked
  7728  0048D8  6F2E               	movwf	_CDCDataInHandle& (0+255),b
  7729  0048DA  0E00               	movlw	0
  7730  0048DC  6F2F               	movwf	(_CDCDataInHandle+1)& (0+255),b
  7731                           
  7732                           ; BSR set to: 1
  7733                           ;usb_device_cdc.c: 346: cdc_trf_state = 0;
  7734  0048DE  0E00               	movlw	0
  7735  0048E0  0100               	movlb	0	; () banked
  7736  0048E2  6FF5               	movwf	_cdc_trf_state& (0+255),b
  7737                           
  7738                           ; BSR set to: 0
  7739  0048E4  0012               	return		;funcret
  7740  0048E6                     __end_of_CDCInitEP:
  7741                           	opt stack 0
  7742                           tosu	equ	0xFFF
  7743                           tosh	equ	0xFFE
  7744                           tosl	equ	0xFFD
  7745                           pclath	equ	0xFFA
  7746                           tblptru	equ	0xFF8
  7747                           tblptrh	equ	0xFF7
  7748                           tblptrl	equ	0xFF6
  7749                           tablat	equ	0xFF5
  7750                           prodh	equ	0xFF4
  7751                           prodl	equ	0xFF3
  7752                           indf0	equ	0xFEF
  7753                           postinc0	equ	0xFEE
  7754                           plusw0	equ	0xFEB
  7755                           fsr0h	equ	0xFEA
  7756                           fsr0l	equ	0xFE9
  7757                           wreg	equ	0xFE8
  7758                           indf1	equ	0xFE7
  7759                           postinc1	equ	0xFE6
  7760                           postdec1	equ	0xFE5
  7761                           fsr1h	equ	0xFE2
  7762                           fsr1l	equ	0xFE1
  7763                           indf2	equ	0xFDF
  7764                           postinc2	equ	0xFDE
  7765                           postdec2	equ	0xFDD
  7766                           plusw2	equ	0xFDB
  7767                           fsr2h	equ	0xFDA
  7768                           fsr2l	equ	0xFD9
  7769                           status	equ	0xFD8
  7770                           
  7771 ;; *************** function _USBTransferOnePacket *****************
  7772 ;; Defined at:
  7773 ;;		line 995 in file "framework/usb/src/usb_device.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  ep              1    wreg     unsigned char 
  7776 ;;  dir             1    0[BANK0 ] unsigned char 
  7777 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7778 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
  7779 ;;  len             1    3[BANK0 ] unsigned char 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  ep              1    8[BANK0 ] unsigned char 
  7782 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
  7783 ;;		 -> RAM(2047), NULL(0), BDT(48), 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  2    0[BANK0 ] PTR void 
  7786 ;; Registers used:
  7787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7793 ;;      Params:         0       4       0       0       0       0       0       0       0
  7794 ;;      Locals:         0       3       0       0       0       0       0       0       0
  7795 ;;      Temps:          0       4       0       0       0       0       0       0       0
  7796 ;;      Totals:         0      11       0       0       0       0       0       0       0
  7797 ;;Total ram usage:       11 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    7
  7800 ;; This function calls:
  7801 ;;		Nothing
  7802 ;; This function is called by:
  7803 ;;		_CDCInitEP
  7804 ;;		_getsUSBUSART
  7805 ;;		_USBCDCEventHandler
  7806 ;;		_CDCTxService
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text26
  7811  002A80                     __ptext26:
  7812                           	opt stack 0
  7813  002A80                     _USBTransferOnePacket:
  7814                           	opt stack 22
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;incstack = 0
  7818                           ;USBTransferOnePacket@ep stored from wreg
  7819  002A80  0100               	movlb	0	; () banked
  7820  002A82  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
  7821                           
  7822                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;
  7823                           ;usb_device.c: 1000: if(dir != 0)
  7824  002A84  0100               	movlb	0	; () banked
  7825  002A86  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  7826  002A88  B4D8               	btfsc	status,2,c
  7827  002A8A  D007               	goto	l177
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;usb_device.c: 1001: {
  7831                           ;usb_device.c: 1003: handle = pBDTEntryIn[ep];
  7832  002A8C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7833  002A8E  0D02               	mullw	2
  7834  002A90  0EEA               	movlw	low _pBDTEntryIn
  7835  002A92  24F3               	addwf	prodl,w,c
  7836  002A94  6ED9               	movwf	fsr2l,c
  7837  002A96  0E00               	movlw	high _pBDTEntryIn
  7838  002A98  D006               	goto	L10
  7839  002A9A                     l177:
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;usb_device.c: 1005: else
  7843                           ;usb_device.c: 1006: {
  7844                           ;usb_device.c: 1008: handle = pBDTEntryOut[ep];
  7845                           
  7846                           ; BSR set to: 0
  7847  002A9A  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7848  002A9C  0D02               	mullw	2
  7849  002A9E  0E0E               	movlw	low _pBDTEntryOut
  7850  002AA0  24F3               	addwf	prodl,w,c
  7851  002AA2  6ED9               	movwf	fsr2l,c
  7852  002AA4  0E01               	movlw	high _pBDTEntryOut
  7853  002AA6                     L10:
  7854  002AA6  20F4               	addwfc	prodh,w,c
  7855  002AA8  6EDA               	movwf	fsr2h,c
  7856  002AAA  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
  7857  002AAE  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
  7858                           
  7859                           ; BSR set to: 0
  7860                           ;usb_device.c: 1009: }
  7861                           ;usb_device.c: 1013: if(handle == 0)
  7862                           
  7863                           ; BSR set to: 0
  7864  002AB2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7865  002AB4  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7866  002AB6  A4D8               	btfss	status,2,c
  7867  002AB8  D005               	goto	l179
  7868                           
  7869                           ; BSR set to: 0
  7870                           ;usb_device.c: 1014: {
  7871                           ;usb_device.c: 1015: return 0;
  7872  002ABA  0E00               	movlw	0
  7873  002ABC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
  7874  002ABE  0E00               	movlw	0
  7875  002AC0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
  7876                           
  7877                           ; BSR set to: 0
  7878  002AC2  0012               	return	
  7879  002AC4                     l179:
  7880                           
  7881                           ; BSR set to: 0
  7882                           ;usb_device.c: 1016: }
  7883                           ;usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
  7884                           
  7885                           ; BSR set to: 0
  7886  002AC4  EE20 F002          	lfsr	2,2
  7887  002AC8  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7888  002ACA  26D9               	addwf	fsr2l,f,c
  7889  002ACC  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7890  002ACE  22DA               	addwfc	fsr2h,f,c
  7891  002AD0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
  7892  002AD4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
  7893                           
  7894                           ;usb_device.c: 1030: handle->CNT = len;
  7895  002AD8  EE20 F001          	lfsr	2,1
  7896  002ADC  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
  7897  002ADE  26D9               	addwf	fsr2l,f,c
  7898  002AE0  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
  7899  002AE2  22DA               	addwfc	fsr2h,f,c
  7900  002AE4  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
  7904  002AE8  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7905  002AEC  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7906  002AF0  0E40               	movlw	64
  7907  002AF2  16DF               	andwf	indf2,f,c
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
  7911  002AF4  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7912  002AF8  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7913  002AFC  0E00               	movlw	0
  7914  002AFE  86DB               	bsf	plusw2,3,c
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
  7918  002B00  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
  7919  002B04  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
  7920  002B08  0E00               	movlw	0
  7921  002B0A  8EDB               	bsf	plusw2,7,c
  7922                           
  7923                           ; BSR set to: 0
  7924                           ;usb_device.c: 1036: if(dir != 0)
  7925  002B0C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
  7926  002B0E  B4D8               	btfsc	status,2,c
  7927  002B10  D018               	goto	l181
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;usb_device.c: 1037: {
  7931                           ;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[ep]) ^ 0x000
      +                          4);
  7932  002B12  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7933  002B14  0D02               	mullw	2
  7934  002B16  0EEA               	movlw	low _pBDTEntryIn
  7935  002B18  24F3               	addwf	prodl,w,c
  7936  002B1A  6ED9               	movwf	fsr2l,c
  7937  002B1C  0E00               	movlw	high _pBDTEntryIn
  7938  002B1E  20F4               	addwfc	prodh,w,c
  7939  002B20  6EDA               	movwf	fsr2h,c
  7940  002B22  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  7941  002B26  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  7942  002B2A  0E04               	movlw	4
  7943  002B2C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  7944  002B2E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  7945  002B30  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  7946  002B32  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  7947  002B34  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7948  002B36  0D02               	mullw	2
  7949  002B38  0EEA               	movlw	low _pBDTEntryIn
  7950  002B3A  24F3               	addwf	prodl,w,c
  7951  002B3C  6ED9               	movwf	fsr2l,c
  7952  002B3E  0E00               	movlw	high _pBDTEntryIn
  7953  002B40  D017               	goto	L11
  7954  002B42                     l181:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;usb_device.c: 1041: else
  7958                           ;usb_device.c: 1042: {
  7959                           ;usb_device.c: 1044: pBDTEntryOut[ep] = (BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0
      +                          004);
  7960                           
  7961                           ; BSR set to: 0
  7962  002B42  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7963  002B44  0D02               	mullw	2
  7964  002B46  0E0E               	movlw	low _pBDTEntryOut
  7965  002B48  24F3               	addwf	prodl,w,c
  7966  002B4A  6ED9               	movwf	fsr2l,c
  7967  002B4C  0E01               	movlw	high _pBDTEntryOut
  7968  002B4E  20F4               	addwfc	prodh,w,c
  7969  002B50  6EDA               	movwf	fsr2h,c
  7970  002B52  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
  7971  002B56  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
  7972  002B5A  0E04               	movlw	4
  7973  002B5C  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
  7974  002B5E  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
  7975  002B60  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
  7976  002B62  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
  7977  002B64  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
  7978  002B66  0D02               	mullw	2
  7979  002B68  0E0E               	movlw	low _pBDTEntryOut
  7980  002B6A  24F3               	addwf	prodl,w,c
  7981  002B6C  6ED9               	movwf	fsr2l,c
  7982  002B6E  0E01               	movlw	high _pBDTEntryOut
  7983  002B70                     L11:
  7984  002B70  20F4               	addwfc	prodh,w,c
  7985  002B72  6EDA               	movwf	fsr2h,c
  7986  002B74  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
  7987  002B78  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;usb_device.c: 1045: }
  7991                           ;usb_device.c: 1046: return (void*)handle;
  7992                           
  7993                           ; BSR set to: 0
  7994  002B7C  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
  7995  002B80  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
  7996  002B84  0012               	return	
  7997  002B86                     __end_of_USBTransferOnePacket:
  7998                           	opt stack 0
  7999                           tosu	equ	0xFFF
  8000                           tosh	equ	0xFFE
  8001                           tosl	equ	0xFFD
  8002                           pclath	equ	0xFFA
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           prodh	equ	0xFF4
  8008                           prodl	equ	0xFF3
  8009                           indf0	equ	0xFEF
  8010                           postinc0	equ	0xFEE
  8011                           plusw0	equ	0xFEB
  8012                           fsr0h	equ	0xFEA
  8013                           fsr0l	equ	0xFE9
  8014                           wreg	equ	0xFE8
  8015                           indf1	equ	0xFE7
  8016                           postinc1	equ	0xFE6
  8017                           postdec1	equ	0xFE5
  8018                           fsr1h	equ	0xFE2
  8019                           fsr1l	equ	0xFE1
  8020                           indf2	equ	0xFDF
  8021                           postinc2	equ	0xFDE
  8022                           postdec2	equ	0xFDD
  8023                           plusw2	equ	0xFDB
  8024                           fsr2h	equ	0xFDA
  8025                           fsr2l	equ	0xFD9
  8026                           status	equ	0xFD8
  8027                           
  8028 ;; *************** function _USBEnableEndpoint *****************
  8029 ;; Defined at:
  8030 ;;		line 878 in file "framework/usb/src/usb_device.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  ep              1    wreg     unsigned char 
  8033 ;;  options         1    8[BANK0 ] unsigned char 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  ep              1   11[BANK0 ] unsigned char 
  8036 ;;  p               2    9[BANK0 ] PTR unsigned char 
  8037 ;;		 -> UEP0(1), 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      void 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         0       1       0       0       0       0       0       0       0
  8048 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8050 ;;      Totals:         0       4       0       0       0       0       0       0       0
  8051 ;;Total ram usage:        4 bytes
  8052 ;; Hardware stack levels used:    1
  8053 ;; Hardware stack levels required when called:    8
  8054 ;; This function calls:
  8055 ;;		_USBConfigureEndpoint
  8056 ;; This function is called by:
  8057 ;;		_CDCInitEP
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text27
  8062  004DF8                     __ptext27:
  8063                           	opt stack 0
  8064  004DF8                     _USBEnableEndpoint:
  8065                           	opt stack 19
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;incstack = 0
  8069                           ;USBEnableEndpoint@ep stored from wreg
  8070  004DF8  0100               	movlb	0	; () banked
  8071  004DFA  6F6B               	movwf	USBEnableEndpoint@ep& (0+255),b
  8072                           
  8073                           ;usb_device.c: 880: unsigned char* p;
  8074                           ;usb_device.c: 884: if(options & 0x04)
  8075  004DFC  0100               	movlb	0	; () banked
  8076  004DFE  A568               	btfss	USBEnableEndpoint@options& (0+255),2,b
  8077  004E00  D005               	goto	l172
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;usb_device.c: 885: {
  8081                           ;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
  8082  004E02  0E00               	movlw	0
  8083  004E04  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
  8084  004E06  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8085  004E08  ECF4  F01F         	call	_USBConfigureEndpoint
  8086  004E0C                     l172:
  8087                           
  8088                           ;usb_device.c: 887: }
  8089                           ;usb_device.c: 888: if(options & 0x02)
  8090  004E0C  0100               	movlb	0	; () banked
  8091  004E0E  A368               	btfss	USBEnableEndpoint@options& (0+255),1,b
  8092  004E10  D005               	goto	l173
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;usb_device.c: 889: {
  8096                           ;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
  8097  004E12  0E01               	movlw	1
  8098  004E14  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
  8099  004E16  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8100  004E18  ECF4  F01F         	call	_USBConfigureEndpoint
  8101  004E1C                     l173:
  8102                           
  8103                           ;usb_device.c: 891: }
  8104                           ;usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
  8105  004E1C  0100               	movlb	0	; () banked
  8106  004E1E  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
  8107  004E20  0D01               	mullw	1
  8108  004E22  0E70               	movlw	112
  8109  004E24  24F3               	addwf	prodl,w,c
  8110  004E26  6F69               	movwf	USBEnableEndpoint@p& (0+255),b
  8111  004E28  0E0F               	movlw	15
  8112  004E2A  20F4               	addwfc	prodh,w,c
  8113  004E2C  6F6A               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
  8114                           
  8115                           ; BSR set to: 0
  8116                           ;usb_device.c: 901: *p = options;
  8117  004E2E  C069  FFD9         	movff	USBEnableEndpoint@p,fsr2l
  8118  004E32  C06A  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
  8119  004E36  C068  FFDF         	movff	USBEnableEndpoint@options,indf2
  8120                           
  8121                           ; BSR set to: 0
  8122  004E3A  0012               	return		;funcret
  8123  004E3C                     __end_of_USBEnableEndpoint:
  8124                           	opt stack 0
  8125                           tosu	equ	0xFFF
  8126                           tosh	equ	0xFFE
  8127                           tosl	equ	0xFFD
  8128                           pclath	equ	0xFFA
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           prodh	equ	0xFF4
  8134                           prodl	equ	0xFF3
  8135                           indf0	equ	0xFEF
  8136                           postinc0	equ	0xFEE
  8137                           plusw0	equ	0xFEB
  8138                           fsr0h	equ	0xFEA
  8139                           fsr0l	equ	0xFE9
  8140                           wreg	equ	0xFE8
  8141                           indf1	equ	0xFE7
  8142                           postinc1	equ	0xFE6
  8143                           postdec1	equ	0xFE5
  8144                           fsr1h	equ	0xFE2
  8145                           fsr1l	equ	0xFE1
  8146                           indf2	equ	0xFDF
  8147                           postinc2	equ	0xFDE
  8148                           postdec2	equ	0xFDD
  8149                           plusw2	equ	0xFDB
  8150                           fsr2h	equ	0xFDA
  8151                           fsr2l	equ	0xFD9
  8152                           status	equ	0xFD8
  8153                           
  8154 ;; *************** function _USBConfigureEndpoint *****************
  8155 ;; Defined at:
  8156 ;;		line 1543 in file "framework/usb/src/usb_device.c"
  8157 ;; Parameters:    Size  Location     Type
  8158 ;;  EPNum           1    wreg     unsigned char 
  8159 ;;  direction       1    0[BANK0 ] unsigned char 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;  EPNum           1    5[BANK0 ] unsigned char 
  8162 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
  8163 ;;		 -> BDT(48), 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8173 ;;      Params:         0       1       0       0       0       0       0       0       0
  8174 ;;      Locals:         0       3       0       0       0       0       0       0       0
  8175 ;;      Temps:          0       4       0       0       0       0       0       0       0
  8176 ;;      Totals:         0       8       0       0       0       0       0       0       0
  8177 ;;Total ram usage:        8 bytes
  8178 ;; Hardware stack levels used:    1
  8179 ;; Hardware stack levels required when called:    7
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_USBEnableEndpoint
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text28
  8188  003FE8                     __ptext28:
  8189                           	opt stack 0
  8190  003FE8                     _USBConfigureEndpoint:
  8191                           	opt stack 19
  8192                           
  8193                           ; BSR set to: 0
  8194                           ;incstack = 0
  8195                           ;USBConfigureEndpoint@EPNum stored from wreg
  8196  003FE8  0100               	movlb	0	; () banked
  8197  003FEA  6F65               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
  8198                           
  8199                           ;usb_device.c: 1545: volatile BDT_ENTRY* handle;
  8200                           ;usb_device.c: 1549: handle = (volatile BDT_ENTRY*)&BDT[0];
  8201  003FEC  0E00               	movlw	0
  8202  003FEE  0100               	movlb	0	; () banked
  8203  003FF0  6F66               	movwf	USBConfigureEndpoint@handle& (0+255),b
  8204  003FF2  0E04               	movlw	4
  8205  003FF4  6F67               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
  8206                           
  8207                           ; BSR set to: 0
  8208                           ;usb_device.c: 1550: handle += (4*EPNum+2*direction+0u);
  8209  003FF6  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
  8210  003FF8  6F61               	movwf	??_USBConfigureEndpoint& (0+255),b
  8211  003FFA  6B62               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
  8212  003FFC  90D8               	bcf	status,0,c
  8213  003FFE  3761               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
  8214  004000  3762               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
  8215  004002  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8216  004004  6F63               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
  8217  004006  6B64               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
  8218  004008  90D8               	bcf	status,0,c
  8219  00400A  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8220  00400C  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8221  00400E  90D8               	bcf	status,0,c
  8222  004010  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8223  004012  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8224  004014  5161               	movf	??_USBConfigureEndpoint& (0+255),w,b
  8225  004016  2763               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8226  004018  5162               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
  8227  00401A  2364               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8228  00401C  90D8               	bcf	status,0,c
  8229  00401E  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8230  004020  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8231  004022  90D8               	bcf	status,0,c
  8232  004024  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
  8233  004026  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
  8234  004028  5163               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
  8235  00402A  2766               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
  8236  00402C  5164               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
  8237  00402E  2367               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;usb_device.c: 1552: handle->STAT.UOWN = 0;
  8241  004030  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8242  004034  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8243  004038  9EDF               	bcf	indf2,7,c
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;usb_device.c: 1557: if(direction == 0)
  8247  00403A  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
  8248  00403C  A4D8               	btfss	status,2,c
  8249  00403E  D007               	goto	l208
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;usb_device.c: 1558: {
  8253                           ;usb_device.c: 1559: pBDTEntryOut[EPNum] = handle;
  8254  004040  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8255  004042  0D02               	mullw	2
  8256  004044  0E0E               	movlw	low _pBDTEntryOut
  8257  004046  24F3               	addwf	prodl,w,c
  8258  004048  6ED9               	movwf	fsr2l,c
  8259  00404A  0E01               	movlw	high _pBDTEntryOut
  8260  00404C  D006               	goto	L12
  8261  00404E                     l208:
  8262                           
  8263                           ; BSR set to: 0
  8264                           ;usb_device.c: 1561: else
  8265                           ;usb_device.c: 1562: {
  8266                           ;usb_device.c: 1563: pBDTEntryIn[EPNum] = handle;
  8267                           
  8268                           ; BSR set to: 0
  8269  00404E  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
  8270  004050  0D02               	mullw	2
  8271  004052  0EEA               	movlw	low _pBDTEntryIn
  8272  004054  24F3               	addwf	prodl,w,c
  8273  004056  6ED9               	movwf	fsr2l,c
  8274  004058  0E00               	movlw	high _pBDTEntryIn
  8275  00405A                     L12:
  8276  00405A  20F4               	addwfc	prodh,w,c
  8277  00405C  6EDA               	movwf	fsr2h,c
  8278  00405E  C066  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
  8279  004062  C067  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
  8280                           
  8281                           ; BSR set to: 0
  8282                           ;usb_device.c: 1564: }
  8283                           ;usb_device.c: 1567: handle->STAT.DTS = 0;
  8284                           
  8285                           ; BSR set to: 0
  8286  004066  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
  8287  00406A  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
  8288  00406E  9CDF               	bcf	indf2,6,c
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;usb_device.c: 1568: (handle+1)->STAT.DTS = 1;
  8292  004070  EE20 F004          	lfsr	2,4
  8293  004074  5166               	movf	USBConfigureEndpoint@handle& (0+255),w,b
  8294  004076  26D9               	addwf	fsr2l,f,c
  8295  004078  5167               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
  8296  00407A  22DA               	addwfc	fsr2h,f,c
  8297  00407C  8CDF               	bsf	indf2,6,c
  8298                           
  8299                           ; BSR set to: 0
  8300  00407E  0012               	return		;funcret
  8301  004080                     __end_of_USBConfigureEndpoint:
  8302                           	opt stack 0
  8303                           tosu	equ	0xFFF
  8304                           tosh	equ	0xFFE
  8305                           tosl	equ	0xFFD
  8306                           pclath	equ	0xFFA
  8307                           tblptru	equ	0xFF8
  8308                           tblptrh	equ	0xFF7
  8309                           tblptrl	equ	0xFF6
  8310                           tablat	equ	0xFF5
  8311                           prodh	equ	0xFF4
  8312                           prodl	equ	0xFF3
  8313                           indf0	equ	0xFEF
  8314                           postinc0	equ	0xFEE
  8315                           plusw0	equ	0xFEB
  8316                           fsr0h	equ	0xFEA
  8317                           fsr0l	equ	0xFE9
  8318                           wreg	equ	0xFE8
  8319                           indf1	equ	0xFE7
  8320                           postinc1	equ	0xFE6
  8321                           postdec1	equ	0xFE5
  8322                           fsr1h	equ	0xFE2
  8323                           fsr1l	equ	0xFE1
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           postdec2	equ	0xFDD
  8327                           plusw2	equ	0xFDB
  8328                           fsr2h	equ	0xFDA
  8329                           fsr2l	equ	0xFD9
  8330                           status	equ	0xFD8
  8331                           
  8332 ;; *************** function _USBCtrlTrfOutHandler *****************
  8333 ;; Defined at:
  8334 ;;		line 2538 in file "framework/usb/src/usb_device.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8348 ;;      Params:         0       0       0       0       0       0       0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8351 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8352 ;;Total ram usage:        0 bytes
  8353 ;; Hardware stack levels used:    1
  8354 ;; Hardware stack levels required when called:    9
  8355 ;; This function calls:
  8356 ;;		_USBCtrlTrfRxService
  8357 ;; This function is called by:
  8358 ;;		_USBCtrlEPService
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text29
  8363  0049B8                     __ptext29:
  8364                           	opt stack 0
  8365  0049B8                     _USBCtrlTrfOutHandler:
  8366                           	opt stack 19
  8367                           
  8368                           ;usb_device.c: 2540: if(controlTransferState == 2)
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;incstack = 0
  8372  0049B8  0E02               	movlw	2
  8373  0049BA  0100               	movlb	0	; () banked
  8374  0049BC  19FA               	xorwf	_controlTransferState& (0+255),w,b
  8375  0049BE  A4D8               	btfss	status,2,c
  8376  0049C0  D003               	goto	l314
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;usb_device.c: 2541: {
  8380                           ;usb_device.c: 2542: USBCtrlTrfRxService();
  8381  0049C2  EC97  F013         	call	_USBCtrlTrfRxService	;wreg free
  8382                           
  8383                           ;usb_device.c: 2543: }
  8384  0049C6  0012               	return	
  8385  0049C8                     l314:
  8386                           
  8387                           ;usb_device.c: 2544: else
  8388                           ;usb_device.c: 2545: {
  8389                           ;usb_device.c: 2548: controlTransferState = 0;
  8390  0049C8  0E00               	movlw	0
  8391  0049CA  0100               	movlb	0	; () banked
  8392  0049CC  6FFA               	movwf	_controlTransferState& (0+255),b
  8393                           
  8394                           ;usb_device.c: 2555: if(BothEP0OutUOWNsSet == 0)
  8395  0049CE  0101               	movlb	1	; () banked
  8396  0049D0  513C               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
  8397  0049D2  A4D8               	btfss	status,2,c
  8398  0049D4  D020               	goto	l316
  8399                           
  8400                           ; BSR set to: 1
  8401                           ;usb_device.c: 2556: {
  8402                           ;usb_device.c: 2557: pBDTEntryEP0OutNext->CNT = 8;
  8403  0049D6  0100               	movlb	0	; () banked
  8404  0049D8  EE20 F001          	lfsr	2,1
  8405  0049DC  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8406  0049DE  26D9               	addwf	fsr2l,f,c
  8407  0049E0  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8408  0049E2  22DA               	addwfc	fsr2h,f,c
  8409  0049E4  0E08               	movlw	8
  8410  0049E6  6EDF               	movwf	indf2,c
  8411                           
  8412                           ;usb_device.c: 2558: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8413  0049E8  EE20 F002          	lfsr	2,2
  8414  0049EC  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8415  0049EE  26D9               	addwf	fsr2l,f,c
  8416  0049F0  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8417  0049F2  22DA               	addwfc	fsr2h,f,c
  8418  0049F4  0E30               	movlw	48
  8419  0049F6  6EDE               	movwf	postinc2,c
  8420  0049F8  0E04               	movlw	4
  8421  0049FA  6EDD               	movwf	postdec2,c
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;usb_device.c: 2559: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  8425  0049FC  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8426  004A00  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8427  004A04  0E0C               	movlw	12
  8428  004A06  6EDF               	movwf	indf2,c
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8432  004A08  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8433  004A0C  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8434  004A10  0E00               	movlw	0
  8435  004A12  8EDB               	bsf	plusw2,7,c
  8436                           
  8437                           ;usb_device.c: 2561: }
  8438  004A14  0012               	return	
  8439  004A16                     l316:
  8440                           
  8441                           ;usb_device.c: 2562: else
  8442                           ;usb_device.c: 2563: {
  8443                           ;usb_device.c: 2564: BothEP0OutUOWNsSet = 0;
  8444                           
  8445                           ; BSR set to: 0
  8446  004A16  0E00               	movlw	0
  8447  004A18  0101               	movlb	1	; () banked
  8448  004A1A  6F3C               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8449                           
  8450                           ; BSR set to: 1
  8451  004A1C  0012               	return	
  8452  004A1E                     __end_of_USBCtrlTrfOutHandler:
  8453                           	opt stack 0
  8454                           tosu	equ	0xFFF
  8455                           tosh	equ	0xFFE
  8456                           tosl	equ	0xFFD
  8457                           pclath	equ	0xFFA
  8458                           tblptru	equ	0xFF8
  8459                           tblptrh	equ	0xFF7
  8460                           tblptrl	equ	0xFF6
  8461                           tablat	equ	0xFF5
  8462                           prodh	equ	0xFF4
  8463                           prodl	equ	0xFF3
  8464                           indf0	equ	0xFEF
  8465                           postinc0	equ	0xFEE
  8466                           plusw0	equ	0xFEB
  8467                           fsr0h	equ	0xFEA
  8468                           fsr0l	equ	0xFE9
  8469                           wreg	equ	0xFE8
  8470                           indf1	equ	0xFE7
  8471                           postinc1	equ	0xFE6
  8472                           postdec1	equ	0xFE5
  8473                           fsr1h	equ	0xFE2
  8474                           fsr1l	equ	0xFE1
  8475                           indf2	equ	0xFDF
  8476                           postinc2	equ	0xFDE
  8477                           postdec2	equ	0xFDD
  8478                           plusw2	equ	0xFDB
  8479                           fsr2h	equ	0xFDA
  8480                           fsr2l	equ	0xFD9
  8481                           status	equ	0xFD8
  8482                           
  8483 ;; *************** function _USBCtrlTrfRxService *****************
  8484 ;; Defined at:
  8485 ;;		line 1852 in file "framework/usb/src/usb_device.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;		None
  8488 ;; Auto vars:     Size  Location     Type
  8489 ;;  byteToRead      1    1[BANK0 ] unsigned char 
  8490 ;;  i               1    0[BANK0 ] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8500 ;;      Params:         0       0       0       0       0       0       0       0       0
  8501 ;;      Locals:         0       2       0       0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8503 ;;      Totals:         0       2       0       0       0       0       0       0       0
  8504 ;;Total ram usage:        2 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    8
  8507 ;; This function calls:
  8508 ;;		_USBCtrlEPAllowStatusStage
  8509 ;; This function is called by:
  8510 ;;		_USBCtrlTrfOutHandler
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text30
  8515  00272E                     __ptext30:
  8516                           	opt stack 0
  8517  00272E                     _USBCtrlTrfRxService:
  8518                           	opt stack 19
  8519                           
  8520                           ;usb_device.c: 1854: uint8_t byteToRead;
  8521                           ;usb_device.c: 1855: uint8_t i;
  8522                           ;usb_device.c: 1859: byteToRead = pBDTEntryEP0OutCurrent->CNT;
  8523                           
  8524                           ;incstack = 0
  8525  00272E  0100               	movlb	0	; () banked
  8526  002730  EE20 F001          	lfsr	2,1
  8527  002734  51F2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8528  002736  26D9               	addwf	fsr2l,f,c
  8529  002738  51F3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8530  00273A  22DA               	addwfc	fsr2h,f,c
  8531  00273C  50DF               	movf	indf2,w,c
  8532  00273E  6F61               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;usb_device.c: 1865: if(byteToRead > outPipes[0].wCount.Val)
  8536  002740  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8537  002742  0101               	movlb	1	; () banked
  8538  002744  5D04               	subwf	(_outPipes+4)& (0+255),w,b
  8539  002746  0E00               	movlw	0
  8540  002748  5905               	subwfb	(_outPipes+5)& (0+255),w,b
  8541  00274A  A0D8               	btfss	status,0,c
  8542                           
  8543                           ; BSR set to: 1
  8544                           ;usb_device.c: 1866: {
  8545                           ;usb_device.c: 1867: byteToRead = outPipes[0].wCount.Val;
  8546  00274C  C104  F061         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
  8547                           
  8548                           ; BSR set to: 1
  8549                           ;usb_device.c: 1868: }
  8550                           ;usb_device.c: 1870: outPipes[0].wCount.Val -= byteToRead;
  8551                           
  8552                           ; BSR set to: 1
  8553  002750  0100               	movlb	0	; () banked
  8554  002752  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8555  002754  0101               	movlb	1	; () banked
  8556  002756  5F04               	subwf	(_outPipes+4)& (0+255),f,b
  8557  002758  0E00               	movlw	0
  8558  00275A  5B05               	subwfb	(_outPipes+5)& (0+255),f,b
  8559                           
  8560                           ; BSR set to: 1
  8561                           ;usb_device.c: 1874: for(i=0;i<byteToRead;i++)
  8562  00275C  0E00               	movlw	0
  8563  00275E  0100               	movlb	0	; () banked
  8564  002760  6F60               	movwf	USBCtrlTrfRxService@i& (0+255),b
  8565  002762  D013               	goto	l242
  8566  002764                     
  8567                           ; BSR set to: 0
  8568                           ;usb_device.c: 1875: {
  8569                           ;usb_device.c: 1876: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
  8570                           
  8571                           ; BSR set to: 0
  8572  002764  5160               	movf	USBCtrlTrfRxService@i& (0+255),w,b
  8573  002766  0D01               	mullw	1
  8574  002768  0E38               	movlw	56
  8575  00276A  24F3               	addwf	prodl,w,c
  8576  00276C  6ED9               	movwf	fsr2l,c
  8577  00276E  0E04               	movlw	4
  8578  002770  20F4               	addwfc	prodh,w,c
  8579  002772  6EDA               	movwf	fsr2h,c
  8580  002774  C100  FFE1         	movff	_outPipes,fsr1l
  8581  002778  C101  FFE2         	movff	_outPipes+1,fsr1h
  8582  00277C  CFDF FFE7          	movff	indf2,indf1
  8583                           
  8584                           ; BSR set to: 0
  8585  002780  0101               	movlb	1	; () banked
  8586  002782  4B00               	infsnz	_outPipes& (0+255),f,b
  8587  002784  2B01               	incf	(_outPipes+1)& (0+255),f,b
  8588                           
  8589                           ; BSR set to: 1
  8590  002786  0100               	movlb	0	; () banked
  8591  002788  2B60               	incf	USBCtrlTrfRxService@i& (0+255),f,b
  8592  00278A                     l242:
  8593                           
  8594                           ; BSR set to: 0
  8595                           
  8596                           ; BSR set to: 0
  8597  00278A  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
  8598  00278C  5D60               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
  8599  00278E  A0D8               	btfss	status,0,c
  8600  002790  D7E9               	goto	l243
  8601                           
  8602                           ; BSR set to: 0
  8603                           ;usb_device.c: 1877: }
  8604                           ;usb_device.c: 1881: if(outPipes[0].wCount.Val > 0)
  8605                           
  8606                           ; BSR set to: 0
  8607  002792  0101               	movlb	1	; () banked
  8608  002794  5104               	movf	(_outPipes+4)& (0+255),w,b
  8609  002796  1105               	iorwf	(_outPipes+5)& (0+255),w,b
  8610  002798  B4D8               	btfsc	status,2,c
  8611  00279A  D033               	goto	l245
  8612                           
  8613                           ; BSR set to: 1
  8614                           ;usb_device.c: 1882: {
  8615                           ;usb_device.c: 1883: pBDTEntryEP0OutNext->CNT = 8;
  8616  00279C  0100               	movlb	0	; () banked
  8617  00279E  EE20 F001          	lfsr	2,1
  8618  0027A2  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8619  0027A4  26D9               	addwf	fsr2l,f,c
  8620  0027A6  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8621  0027A8  22DA               	addwfc	fsr2h,f,c
  8622  0027AA  0E08               	movlw	8
  8623  0027AC  6EDF               	movwf	indf2,c
  8624                           
  8625                           ;usb_device.c: 1884: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8626  0027AE  EE20 F002          	lfsr	2,2
  8627  0027B2  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8628  0027B4  26D9               	addwf	fsr2l,f,c
  8629  0027B6  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8630  0027B8  22DA               	addwfc	fsr2h,f,c
  8631  0027BA  0E38               	movlw	56
  8632  0027BC  6EDE               	movwf	postinc2,c
  8633  0027BE  0E04               	movlw	4
  8634  0027C0  6EDD               	movwf	postdec2,c
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;usb_device.c: 1885: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
  8638  0027C2  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8639  0027C6  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8640  0027CA  BCDF               	btfsc	indf2,6,c
  8641  0027CC  D00D               	goto	l246
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;usb_device.c: 1886: {
  8645                           ;usb_device.c: 1887: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8646  0027CE  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8647  0027D2  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8648  0027D6  0E48               	movlw	72
  8649  0027D8  6EDF               	movwf	indf2,c
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8653  0027DA  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8654  0027DE  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8655  0027E2  0E00               	movlw	0
  8656  0027E4  8EDB               	bsf	plusw2,7,c
  8657                           
  8658                           ;usb_device.c: 1889: }
  8659  0027E6  0012               	return	
  8660  0027E8                     l246:
  8661                           
  8662                           ; BSR set to: 0
  8663                           ;usb_device.c: 1890: else
  8664                           ;usb_device.c: 1891: {
  8665                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
  8666                           
  8667                           ; BSR set to: 0
  8668  0027E8  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8669  0027EC  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8670  0027F0  0E08               	movlw	8
  8671  0027F2  6EDF               	movwf	indf2,c
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;usb_device.c: 1893: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8675  0027F4  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8676  0027F8  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8677  0027FC  0E00               	movlw	0
  8678  0027FE  8EDB               	bsf	plusw2,7,c
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;usb_device.c: 1894: }
  8682                           ;usb_device.c: 1895: }
  8683  002800  0012               	return	
  8684  002802                     l245:
  8685                           
  8686                           ;usb_device.c: 1896: else
  8687                           ;usb_device.c: 1897: {
  8688                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
  8689                           
  8690                           ; BSR set to: 0
  8691  002802  0100               	movlb	0	; () banked
  8692  002804  EE20 F001          	lfsr	2,1
  8693  002808  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8694  00280A  26D9               	addwf	fsr2l,f,c
  8695  00280C  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8696  00280E  22DA               	addwfc	fsr2h,f,c
  8697  002810  0E08               	movlw	8
  8698  002812  6EDF               	movwf	indf2,c
  8699                           
  8700                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8701  002814  EE20 F002          	lfsr	2,2
  8702  002818  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8703  00281A  26D9               	addwf	fsr2l,f,c
  8704  00281C  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8705  00281E  22DA               	addwfc	fsr2h,f,c
  8706  002820  0E30               	movlw	48
  8707  002822  6EDE               	movwf	postinc2,c
  8708  002824  0E04               	movlw	4
  8709  002826  6EDD               	movwf	postdec2,c
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  8713  002828  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8714  00282C  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8715  002830  0E04               	movlw	4
  8716  002832  6EDF               	movwf	indf2,c
  8717                           
  8718                           ; BSR set to: 0
  8719                           ;usb_device.c: 1907: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8720  002834  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8721  002838  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8722  00283C  0E00               	movlw	0
  8723  00283E  8EDB               	bsf	plusw2,7,c
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;usb_device.c: 1926: }
  8727                           ;usb_device.c: 1927: outPipes[0].info.bits.busy = 0;
  8728                           
  8729                           ; BSR set to: 0
  8730  002840  0101               	movlb	1	; () banked
  8731  002842  9F03               	bcf	(_outPipes+3)& (0+255),7,b
  8732                           
  8733                           ; BSR set to: 1
  8734                           ;usb_device.c: 1941: if(USBDeferStatusStagePacket == 0)
  8735  002844  0100               	movlb	0	; () banked
  8736  002846  51F7               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  8737  002848  A4D8               	btfss	status,2,c
  8738  00284A  0012               	return	
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;usb_device.c: 1942: {
  8742                           ;usb_device.c: 1943: USBCtrlEPAllowStatusStage();
  8743  00284C  EC5B  F01A         	call	_USBCtrlEPAllowStatusStage	;wreg free
  8744  002850  0012               	return	
  8745  002852                     __end_of_USBCtrlTrfRxService:
  8746                           	opt stack 0
  8747                           tosu	equ	0xFFF
  8748                           tosh	equ	0xFFE
  8749                           tosl	equ	0xFFD
  8750                           pclath	equ	0xFFA
  8751                           tblptru	equ	0xFF8
  8752                           tblptrh	equ	0xFF7
  8753                           tblptrl	equ	0xFF6
  8754                           tablat	equ	0xFF5
  8755                           prodh	equ	0xFF4
  8756                           prodl	equ	0xFF3
  8757                           indf0	equ	0xFEF
  8758                           postinc0	equ	0xFEE
  8759                           plusw0	equ	0xFEB
  8760                           fsr0h	equ	0xFEA
  8761                           fsr0l	equ	0xFE9
  8762                           wreg	equ	0xFE8
  8763                           indf1	equ	0xFE7
  8764                           postinc1	equ	0xFE6
  8765                           postdec1	equ	0xFE5
  8766                           fsr1h	equ	0xFE2
  8767                           fsr1l	equ	0xFE1
  8768                           indf2	equ	0xFDF
  8769                           postinc2	equ	0xFDE
  8770                           postdec2	equ	0xFDD
  8771                           plusw2	equ	0xFDB
  8772                           fsr2h	equ	0xFDA
  8773                           fsr2l	equ	0xFD9
  8774                           status	equ	0xFD8
  8775                           
  8776 ;; *************** function _USBCtrlEPAllowStatusStage *****************
  8777 ;; Defined at:
  8778 ;;		line 1416 in file "framework/usb/src/usb_device.c"
  8779 ;; Parameters:    Size  Location     Type
  8780 ;;		None
  8781 ;; Auto vars:     Size  Location     Type
  8782 ;;		None
  8783 ;; Return value:  Size  Location     Type
  8784 ;;                  1    wreg      void 
  8785 ;; Registers used:
  8786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8787 ;; Tracked objects:
  8788 ;;		On entry : 0/0
  8789 ;;		On exit  : 0/0
  8790 ;;		Unchanged: 0/0
  8791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8792 ;;      Params:         0       0       0       0       0       0       0       0       0
  8793 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8795 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8796 ;;Total ram usage:        0 bytes
  8797 ;; Hardware stack levels used:    1
  8798 ;; Hardware stack levels required when called:    7
  8799 ;; This function calls:
  8800 ;;		Nothing
  8801 ;; This function is called by:
  8802 ;;		_USBDeviceTasks
  8803 ;;		_USBCtrlEPServiceComplete
  8804 ;;		_USBCtrlTrfRxService
  8805 ;; This function uses a non-reentrant model
  8806 ;;
  8807                           
  8808                           	psect	text31
  8809  0034B6                     __ptext31:
  8810                           	opt stack 0
  8811  0034B6                     _USBCtrlEPAllowStatusStage:
  8812                           	opt stack 19
  8813                           
  8814                           ;usb_device.c: 1423: if(USBStatusStageEnabledFlag1 == 0)
  8815                           
  8816                           ;incstack = 0
  8817  0034B6  0101               	movlb	1	; () banked
  8818  0034B8  513B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
  8819  0034BA  A4D8               	btfss	status,2,c
  8820  0034BC  0012               	return	
  8821                           
  8822                           ; BSR set to: 1
  8823                           ;usb_device.c: 1424: {
  8824                           ;usb_device.c: 1425: USBStatusStageEnabledFlag1 = 1;
  8825  0034BE  0E01               	movlw	1
  8826  0034C0  6F3B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  8827                           
  8828                           ;usb_device.c: 1426: if(USBStatusStageEnabledFlag2 == 0)
  8829  0034C2  513A               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
  8830  0034C4  A4D8               	btfss	status,2,c
  8831  0034C6  0012               	return	
  8832                           
  8833                           ; BSR set to: 1
  8834                           ;usb_device.c: 1427: {
  8835                           ;usb_device.c: 1428: USBStatusStageEnabledFlag2 = 1;
  8836  0034C8  0E01               	movlw	1
  8837  0034CA  6F3A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  8838                           
  8839                           ; BSR set to: 1
  8840                           ;usb_device.c: 1432: if(controlTransferState == 2)
  8841  0034CC  0E02               	movlw	2
  8842  0034CE  0100               	movlb	0	; () banked
  8843  0034D0  19FA               	xorwf	_controlTransferState& (0+255),w,b
  8844  0034D2  A4D8               	btfss	status,2,c
  8845  0034D4  D015               	goto	l196
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;usb_device.c: 1433: {
  8849                           ;usb_device.c: 1434: pBDTEntryIn[0]->CNT = 0;
  8850  0034D6  EE20 F001          	lfsr	2,1
  8851  0034DA  51EA               	movf	_pBDTEntryIn& (0+255),w,b
  8852  0034DC  26D9               	addwf	fsr2l,f,c
  8853  0034DE  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  8854  0034E0  22DA               	addwfc	fsr2h,f,c
  8855  0034E2  0E00               	movlw	0
  8856  0034E4  6EDF               	movwf	indf2,c
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;usb_device.c: 1435: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8860  0034E6  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  8861  0034EA  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8862  0034EE  0E48               	movlw	72
  8863  0034F0  6EDF               	movwf	indf2,c
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;usb_device.c: 1436: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8867  0034F2  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  8868  0034F6  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8869  0034FA  0E00               	movlw	0
  8870  0034FC  8EDB               	bsf	plusw2,7,c
  8871                           
  8872                           ;usb_device.c: 1437: }
  8873  0034FE  0012               	return	
  8874  003500                     l196:
  8875                           
  8876                           ; BSR set to: 0
  8877                           ;usb_device.c: 1438: else if(controlTransferState == 1)
  8878                           
  8879                           ; BSR set to: 0
  8880  003500  05FA               	decf	_controlTransferState& (0+255),w,b
  8881  003502  A4D8               	btfss	status,2,c
  8882  003504  0012               	return	
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;usb_device.c: 1439: {
  8886                           ;usb_device.c: 1440: BothEP0OutUOWNsSet = 0;
  8887  003506  0E00               	movlw	0
  8888  003508  0101               	movlb	1	; () banked
  8889  00350A  6F3C               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8890                           
  8891                           ; BSR set to: 1
  8892                           ;usb_device.c: 1445: pBDTEntryEP0OutCurrent->CNT = 8;
  8893  00350C  0100               	movlb	0	; () banked
  8894  00350E  EE20 F001          	lfsr	2,1
  8895  003512  51F2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8896  003514  26D9               	addwf	fsr2l,f,c
  8897  003516  51F3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8898  003518  22DA               	addwfc	fsr2h,f,c
  8899  00351A  0E08               	movlw	8
  8900  00351C  6EDF               	movwf	indf2,c
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;usb_device.c: 1446: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
  8904  00351E  EE20 F002          	lfsr	2,2
  8905  003522  51F2               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  8906  003524  26D9               	addwf	fsr2l,f,c
  8907  003526  51F3               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  8908  003528  22DA               	addwfc	fsr2h,f,c
  8909  00352A  0E30               	movlw	48
  8910  00352C  6EDE               	movwf	postinc2,c
  8911  00352E  0E04               	movlw	4
  8912  003530  6EDD               	movwf	postdec2,c
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
  8916  003532  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8917  003536  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8918  00353A  0E04               	movlw	4
  8919  00353C  6EDF               	movwf	indf2,c
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  8923  00353E  C0F2  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  8924  003542  C0F3  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  8925  003546  0E00               	movlw	0
  8926  003548  8EDB               	bsf	plusw2,7,c
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;usb_device.c: 1449: BothEP0OutUOWNsSet = 1;
  8930  00354A  0E01               	movlw	1
  8931  00354C  0101               	movlb	1	; () banked
  8932  00354E  6F3C               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  8933                           
  8934                           ; BSR set to: 1
  8935                           ;usb_device.c: 1453: pBDTEntryEP0OutNext->CNT = 8;
  8936  003550  0100               	movlb	0	; () banked
  8937  003552  EE20 F001          	lfsr	2,1
  8938  003556  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8939  003558  26D9               	addwf	fsr2l,f,c
  8940  00355A  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8941  00355C  22DA               	addwfc	fsr2h,f,c
  8942  00355E  0E08               	movlw	8
  8943  003560  6EDF               	movwf	indf2,c
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;usb_device.c: 1454: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  8947  003562  EE20 F002          	lfsr	2,2
  8948  003566  51F0               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8949  003568  26D9               	addwf	fsr2l,f,c
  8950  00356A  51F1               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8951  00356C  22DA               	addwfc	fsr2h,f,c
  8952  00356E  0E30               	movlw	48
  8953  003570  6EDE               	movwf	postinc2,c
  8954  003572  0E04               	movlw	4
  8955  003574  6EDD               	movwf	postdec2,c
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->STAT.Val = 0x80;
  8959  003576  C0F0  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8960  00357A  C0F1  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8961  00357E  0E80               	movlw	128
  8962  003580  6EDF               	movwf	indf2,c
  8963                           
  8964                           ; BSR set to: 0
  8965                           
  8966                           ; BSR set to: 0
  8967                           
  8968                           ; BSR set to: 0
  8969  003582  0012               	return	
  8970  003584                     __end_of_USBCtrlEPAllowStatusStage:
  8971                           	opt stack 0
  8972                           tosu	equ	0xFFF
  8973                           tosh	equ	0xFFE
  8974                           tosl	equ	0xFFD
  8975                           pclath	equ	0xFFA
  8976                           tblptru	equ	0xFF8
  8977                           tblptrh	equ	0xFF7
  8978                           tblptrl	equ	0xFF6
  8979                           tablat	equ	0xFF5
  8980                           prodh	equ	0xFF4
  8981                           prodl	equ	0xFF3
  8982                           indf0	equ	0xFEF
  8983                           postinc0	equ	0xFEE
  8984                           plusw0	equ	0xFEB
  8985                           fsr0h	equ	0xFEA
  8986                           fsr0l	equ	0xFE9
  8987                           wreg	equ	0xFE8
  8988                           indf1	equ	0xFE7
  8989                           postinc1	equ	0xFE6
  8990                           postdec1	equ	0xFE5
  8991                           fsr1h	equ	0xFE2
  8992                           fsr1l	equ	0xFE1
  8993                           indf2	equ	0xFDF
  8994                           postinc2	equ	0xFDE
  8995                           postdec2	equ	0xFDD
  8996                           plusw2	equ	0xFDB
  8997                           fsr2h	equ	0xFDA
  8998                           fsr2l	equ	0xFD9
  8999                           status	equ	0xFD8
  9000                           
  9001 ;; *************** function _USBCtrlTrfInHandler *****************
  9002 ;; Defined at:
  9003 ;;		line 2592 in file "framework/usb/src/usb_device.c"
  9004 ;; Parameters:    Size  Location     Type
  9005 ;;		None
  9006 ;; Auto vars:     Size  Location     Type
  9007 ;;  lastDTS         1    1[BANK0 ] unsigned char 
  9008 ;; Return value:  Size  Location     Type
  9009 ;;                  1    wreg      void 
  9010 ;; Registers used:
  9011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9012 ;; Tracked objects:
  9013 ;;		On entry : 0/0
  9014 ;;		On exit  : 0/0
  9015 ;;		Unchanged: 0/0
  9016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9017 ;;      Params:         0       0       0       0       0       0       0       0       0
  9018 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9019 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9020 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9021 ;;Total ram usage:        1 bytes
  9022 ;; Hardware stack levels used:    1
  9023 ;; Hardware stack levels required when called:    8
  9024 ;; This function calls:
  9025 ;;		_USBCtrlTrfTxService
  9026 ;; This function is called by:
  9027 ;;		_USBCtrlEPService
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text32
  9032  0037E4                     __ptext32:
  9033                           	opt stack 0
  9034  0037E4                     _USBCtrlTrfInHandler:
  9035                           	opt stack 20
  9036                           
  9037                           ;usb_device.c: 2594: uint8_t lastDTS;
  9038                           ;usb_device.c: 2596: lastDTS = pBDTEntryIn[0]->STAT.DTS;
  9039                           
  9040                           ;incstack = 0
  9041  0037E4  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9042  0037E8  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9043  0037EC  0100               	movlb	0	; () banked
  9044  0037EE  0E00               	movlw	0
  9045  0037F0  BCDF               	btfsc	indf2,6,c
  9046  0037F2  0E01               	movlw	1
  9047  0037F4  6F61               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
  9048                           
  9049                           ; BSR set to: 0
  9050                           ;usb_device.c: 2599: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
  9051  0037F6  0E04               	movlw	4
  9052  0037F8  19EA               	xorwf	_pBDTEntryIn& (0+255),w,b
  9053  0037FA  6FEA               	movwf	_pBDTEntryIn& (0+255),b
  9054  0037FC  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9055  0037FE  6FEB               	movwf	(_pBDTEntryIn+1)& (0+255),b
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;usb_device.c: 2604: if(USBDeviceState == ADR_PENDING_STATE)
  9059  003800  0E08               	movlw	8
  9060  003802  19FC               	xorwf	_USBDeviceState& (0+255),w,b
  9061  003804  A4D8               	btfss	status,2,c
  9062  003806  D00C               	goto	l323
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;usb_device.c: 2605: {
  9066                           ;usb_device.c: 2606: UADDR = (SetupPkt.bDevADR & 0x7F);
  9067  003808  0104               	movlb	4	; () banked
  9068  00380A  5132               	movf	50,w,b	;volatile
  9069  00380C  0B7F               	andlw	127
  9070  00380E  6E6E               	movwf	3950,c	;volatile
  9071                           
  9072                           ; BSR set to: 4
  9073                           ;usb_device.c: 2607: if(UADDR != 0u)
  9074  003810  506E               	movf	3950,w,c	;volatile
  9075  003812  B4D8               	btfsc	status,2,c
  9076  003814  D002               	goto	l322
  9077                           
  9078                           ; BSR set to: 4
  9079                           ;usb_device.c: 2608: {
  9080                           ;usb_device.c: 2609: USBDeviceState=ADDRESS_STATE;
  9081  003816  0E10               	movlw	16
  9082  003818  D001               	goto	L13
  9083  00381A                     l322:
  9084                           
  9085                           ;usb_device.c: 2611: else
  9086                           ;usb_device.c: 2612: {
  9087                           ;usb_device.c: 2613: USBDeviceState=DEFAULT_STATE;
  9088                           
  9089                           ; BSR set to: 0
  9090  00381A  0E04               	movlw	4
  9091  00381C                     L13:
  9092  00381C  0100               	movlb	0	; () banked
  9093  00381E  6FFC               	movwf	_USBDeviceState& (0+255),b
  9094  003820                     l323:
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;usb_device.c: 2614: }
  9098                           ;usb_device.c: 2615: }
  9099                           ;usb_device.c: 2618: if(controlTransferState == 1)
  9100                           
  9101                           ; BSR set to: 0
  9102                           
  9103                           ; BSR set to: 0
  9104  003820  05FA               	decf	_controlTransferState& (0+255),w,b
  9105  003822  A4D8               	btfss	status,2,c
  9106  003824  D03B               	goto	l324
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;usb_device.c: 2619: {
  9110                           ;usb_device.c: 2620: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
  9111  003826  EE20 F002          	lfsr	2,2
  9112  00382A  51EA               	movf	_pBDTEntryIn& (0+255),w,b
  9113  00382C  26D9               	addwf	fsr2l,f,c
  9114  00382E  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9115  003830  22DA               	addwfc	fsr2h,f,c
  9116  003832  0E38               	movlw	56
  9117  003834  6EDE               	movwf	postinc2,c
  9118  003836  0E04               	movlw	4
  9119  003838  6EDD               	movwf	postdec2,c
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;usb_device.c: 2621: USBCtrlTrfTxService();
  9123  00383A  ECEF  F019         	call	_USBCtrlTrfTxService	;wreg free
  9124                           
  9125                           ;usb_device.c: 2627: if(shortPacketStatus == 2)
  9126  00383E  0E02               	movlw	2
  9127  003840  0100               	movlb	0	; () banked
  9128  003842  19FB               	xorwf	_shortPacketStatus& (0+255),w,b
  9129  003844  A4D8               	btfss	status,2,c
  9130  003846  D00D               	goto	l325
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;usb_device.c: 2628: {
  9134                           ;usb_device.c: 2631: pBDTEntryIn[0]->STAT.Val = 0x04;
  9135  003848  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9136  00384C  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9137  003850  0E04               	movlw	4
  9138  003852  6EDF               	movwf	indf2,c
  9139                           
  9140                           ; BSR set to: 0
  9141                           ;usb_device.c: 2632: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9142  003854  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9143  003858  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9144  00385C  0E00               	movlw	0
  9145  00385E  8EDB               	bsf	plusw2,7,c
  9146                           
  9147                           ;usb_device.c: 2633: }
  9148  003860  0012               	return	
  9149  003862                     l325:
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;usb_device.c: 2634: else
  9153                           ;usb_device.c: 2635: {
  9154                           ;usb_device.c: 2636: if(lastDTS == 0)
  9155                           
  9156                           ; BSR set to: 0
  9157  003862  5161               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
  9158  003864  A4D8               	btfss	status,2,c
  9159  003866  D00D               	goto	l327
  9160                           
  9161                           ; BSR set to: 0
  9162                           ;usb_device.c: 2637: {
  9163                           ;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  9164  003868  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9165  00386C  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9166  003870  0E48               	movlw	72
  9167  003872  6EDF               	movwf	indf2,c
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9171  003874  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9172  003878  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9173  00387C  0E00               	movlw	0
  9174  00387E  8EDB               	bsf	plusw2,7,c
  9175                           
  9176                           ;usb_device.c: 2640: }
  9177  003880  0012               	return	
  9178  003882                     l327:
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;usb_device.c: 2641: else
  9182                           ;usb_device.c: 2642: {
  9183                           ;usb_device.c: 2643: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
  9184                           
  9185                           ; BSR set to: 0
  9186  003882  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9187  003886  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9188  00388A  0E08               	movlw	8
  9189  00388C  6EDF               	movwf	indf2,c
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;usb_device.c: 2644: pBDTEntryIn[0]->STAT.Val |= 0x80;
  9193  00388E  C0EA  FFD9         	movff	_pBDTEntryIn,fsr2l
  9194  003892  C0EB  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  9195  003896  0E00               	movlw	0
  9196  003898  8EDB               	bsf	plusw2,7,c
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;usb_device.c: 2645: }
  9200                           ;usb_device.c: 2646: }
  9201                           ;usb_device.c: 2647: }
  9202                           
  9203                           ; BSR set to: 0
  9204  00389A  0012               	return	
  9205  00389C                     l324:
  9206                           
  9207                           ; BSR set to: 0
  9208                           ;usb_device.c: 2648: else
  9209                           ;usb_device.c: 2649: {
  9210                           ;usb_device.c: 2653: if(outPipes[0].info.bits.busy == 1)
  9211  00389C  0101               	movlb	1	; () banked
  9212  00389E  BF03               	btfsc	(_outPipes+3)& (0+255),7,b
  9213                           
  9214                           ; BSR set to: 1
  9215                           ;usb_device.c: 2658: }
  9216                           ;usb_device.c: 2659: outPipes[0].info.bits.busy = 0;
  9217                           
  9218                           ; BSR set to: 1
  9219  0038A0  9F03               	bcf	(_outPipes+3)& (0+255),7,b
  9220                           
  9221                           ; BSR set to: 1
  9222                           ;usb_device.c: 2660: }
  9223                           ;usb_device.c: 2662: controlTransferState = 0;
  9224                           
  9225                           ; BSR set to: 1
  9226  0038A2  0E00               	movlw	0
  9227  0038A4  0100               	movlb	0	; () banked
  9228  0038A6  6FFA               	movwf	_controlTransferState& (0+255),b
  9229  0038A8  0012               	return	
  9230  0038AA                     __end_of_USBCtrlTrfInHandler:
  9231                           	opt stack 0
  9232                           tosu	equ	0xFFF
  9233                           tosh	equ	0xFFE
  9234                           tosl	equ	0xFFD
  9235                           pclath	equ	0xFFA
  9236                           tblptru	equ	0xFF8
  9237                           tblptrh	equ	0xFF7
  9238                           tblptrl	equ	0xFF6
  9239                           tablat	equ	0xFF5
  9240                           prodh	equ	0xFF4
  9241                           prodl	equ	0xFF3
  9242                           indf0	equ	0xFEF
  9243                           postinc0	equ	0xFEE
  9244                           plusw0	equ	0xFEB
  9245                           fsr0h	equ	0xFEA
  9246                           fsr0l	equ	0xFE9
  9247                           wreg	equ	0xFE8
  9248                           indf1	equ	0xFE7
  9249                           postinc1	equ	0xFE6
  9250                           postdec1	equ	0xFE5
  9251                           fsr1h	equ	0xFE2
  9252                           fsr1l	equ	0xFE1
  9253                           indf2	equ	0xFDF
  9254                           postinc2	equ	0xFDE
  9255                           postdec2	equ	0xFDD
  9256                           plusw2	equ	0xFDB
  9257                           fsr2h	equ	0xFDA
  9258                           fsr2l	equ	0xFD9
  9259                           status	equ	0xFD8
  9260                           
  9261 ;; *************** function _USBCtrlTrfTxService *****************
  9262 ;; Defined at:
  9263 ;;		line 1771 in file "framework/usb/src/usb_device.c"
  9264 ;; Parameters:    Size  Location     Type
  9265 ;;		None
  9266 ;; Auto vars:     Size  Location     Type
  9267 ;;  byteToSend      1    0[BANK0 ] unsigned char 
  9268 ;; Return value:  Size  Location     Type
  9269 ;;                  1    wreg      void 
  9270 ;; Registers used:
  9271 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9272 ;; Tracked objects:
  9273 ;;		On entry : 0/0
  9274 ;;		On exit  : 0/0
  9275 ;;		Unchanged: 0/0
  9276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9277 ;;      Params:         0       0       0       0       0       0       0       0       0
  9278 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9280 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9281 ;;Total ram usage:        1 bytes
  9282 ;; Hardware stack levels used:    1
  9283 ;; Hardware stack levels required when called:    7
  9284 ;; This function calls:
  9285 ;;		Nothing
  9286 ;; This function is called by:
  9287 ;;		_USBCtrlEPAllowDataStage
  9288 ;;		_USBCtrlTrfInHandler
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text33
  9293  0033DE                     __ptext33:
  9294                           	opt stack 0
  9295  0033DE                     _USBCtrlTrfTxService:
  9296                           	opt stack 18
  9297                           
  9298                           ;usb_device.c: 1773: uint8_t byteToSend;
  9299                           ;usb_device.c: 1777: byteToSend = 8;
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;incstack = 0
  9303  0033DE  0E08               	movlw	8
  9304  0033E0  0100               	movlb	0	; () banked
  9305  0033E2  6F60               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;usb_device.c: 1778: if(inPipes[0].wCount.Val < (uint8_t)8)
  9309  0033E4  51E9               	movf	(_inPipes+5)& (0+255),w,b
  9310  0033E6  E110               	bnz	l5423
  9311  0033E8  0E08               	movlw	8
  9312  0033EA  5DE8               	subwf	(_inPipes+4)& (0+255),w,b
  9313  0033EC  B0D8               	btfsc	status,0,c
  9314  0033EE  D00C               	goto	l229
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;usb_device.c: 1779: {
  9318                           ;usb_device.c: 1780: byteToSend = inPipes[0].wCount.Val;
  9319  0033F0  C0E8  F060         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
  9320                           
  9321                           ; BSR set to: 0
  9322                           ;usb_device.c: 1787: if(shortPacketStatus == 0)
  9323  0033F4  51FB               	movf	_shortPacketStatus& (0+255),w,b
  9324  0033F6  A4D8               	btfss	status,2,c
  9325  0033F8  D002               	goto	l227
  9326                           
  9327                           ; BSR set to: 0
  9328                           ;usb_device.c: 1788: {
  9329                           ;usb_device.c: 1789: shortPacketStatus = 1;
  9330  0033FA  0E01               	movlw	1
  9331  0033FC  D004               	goto	L14
  9332  0033FE                     l227:
  9333                           
  9334                           ; BSR set to: 0
  9335                           ;usb_device.c: 1791: else if(shortPacketStatus == 1)
  9336                           
  9337                           ; BSR set to: 0
  9338  0033FE  05FB               	decf	_shortPacketStatus& (0+255),w,b
  9339  003400  A4D8               	btfss	status,2,c
  9340  003402  D002               	goto	l229
  9341                           
  9342                           ; BSR set to: 0
  9343                           ;usb_device.c: 1792: {
  9344                           ;usb_device.c: 1793: shortPacketStatus = 2;
  9345  003404  0E02               	movlw	2
  9346  003406                     L14:
  9347  003406  6FFB               	movwf	_shortPacketStatus& (0+255),b
  9348  003408                     l229:
  9349  003408                     l5423:
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;usb_device.c: 1794: }
  9353                           ;usb_device.c: 1795: }
  9354                           ;usb_device.c: 1799: inPipes[0].wCount.Val -= byteToSend;
  9355  003408  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9356  00340A  5FE8               	subwf	(_inPipes+4)& (0+255),f,b
  9357  00340C  0E00               	movlw	0
  9358  00340E  5BE9               	subwfb	(_inPipes+5)& (0+255),f,b
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;usb_device.c: 1804: pBDTEntryIn[0]->CNT = byteToSend;
  9362  003410  EE20 F001          	lfsr	2,1
  9363  003414  51EA               	movf	_pBDTEntryIn& (0+255),w,b
  9364  003416  26D9               	addwf	fsr2l,f,c
  9365  003418  51EB               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  9366  00341A  22DA               	addwfc	fsr2h,f,c
  9367  00341C  C060  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 1808: pDst = ( uint8_t*)CtrlTrfData;
  9371  003420  0E38               	movlw	56
  9372  003422  0101               	movlb	1	; () banked
  9373  003424  6F30               	movwf	_pDst& (0+255),b
  9374  003426  0E04               	movlw	4
  9375  003428  6F31               	movwf	(_pDst+1)& (0+255),b
  9376                           
  9377                           ; BSR set to: 1
  9378                           ;usb_device.c: 1809: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
  9379  00342A  0100               	movlb	0	; () banked
  9380  00342C  A1E7               	btfss	(_inPipes+3)& (0+255),0,b
  9381  00342E  D01E               	goto	l231
  9382  003430  D03E               	goto	l235
  9383  003432                     
  9384                           ; BSR set to: 0
  9385                           ;usb_device.c: 1812: {
  9386                           ;usb_device.c: 1813: *pDst++ = *inPipes[0].pSrc.bRom++;
  9387                           
  9388                           ; BSR set to: 0
  9389  003432  C0E4  FFF6         	movff	_inPipes,tblptrl
  9390  003436  C0E5  FFF7         	movff	_inPipes+1,tblptrh
  9391  00343A  6AF8               	clrf	tblptru,c
  9392  00343C  C130  FFD9         	movff	_pDst,fsr2l
  9393  003440  C131  FFDA         	movff	_pDst+1,fsr2h
  9394  003444  0E07               	movlw	(high __ramtop+-1)
  9395  003446  64F7               	cpfsgt	tblptrh,c
  9396  003448  D003               	bra	u5637
  9397  00344A  0008               	tblrd		*
  9398  00344C  50F5               	movf	tablat,w,c
  9399  00344E  D005               	bra	u5630
  9400  003450                     u5637:
  9401  003450  CFF6 FFE9          	movff	tblptrl,fsr0l
  9402  003454  CFF7 FFEA          	movff	tblptrh,fsr0h
  9403  003458  50EF               	movf	indf0,w,c
  9404  00345A                     u5630:
  9405  00345A  6EDF               	movwf	indf2,c
  9406  00345C  0100               	movlb	0	; () banked
  9407  00345E  4BE4               	infsnz	_inPipes& (0+255),f,b
  9408  003460  2BE5               	incf	(_inPipes+1)& (0+255),f,b
  9409                           
  9410                           ; BSR set to: 0
  9411  003462  0101               	movlb	1	; () banked
  9412  003464  4B30               	infsnz	_pDst& (0+255),f,b
  9413  003466  2B31               	incf	(_pDst+1)& (0+255),f,b
  9414                           
  9415                           ; BSR set to: 1
  9416                           ;usb_device.c: 1814: byteToSend--;
  9417  003468  0100               	movlb	0	; () banked
  9418  00346A  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
  9419  00346C                     l231:
  9420                           
  9421                           ; BSR set to: 0
  9422                           
  9423                           ; BSR set to: 0
  9424  00346C  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9425  00346E  B4D8               	btfsc	status,2,c
  9426  003470  0012               	return	
  9427  003472  D7DF               	goto	l232
  9428  003474                     
  9429                           ; BSR set to: 0
  9430                           ;usb_device.c: 1820: {
  9431                           ;usb_device.c: 1821: *pDst++ = *inPipes[0].pSrc.bRam++;
  9432                           
  9433                           ; BSR set to: 0
  9434  003474  C0E4  FFF6         	movff	_inPipes,tblptrl
  9435  003478  C0E5  FFF7         	movff	_inPipes+1,tblptrh
  9436  00347C  6AF8               	clrf	tblptru,c
  9437  00347E  C130  FFD9         	movff	_pDst,fsr2l
  9438  003482  C131  FFDA         	movff	_pDst+1,fsr2h
  9439  003486  0E07               	movlw	(high __ramtop+-1)
  9440  003488  64F7               	cpfsgt	tblptrh,c
  9441  00348A  D003               	bra	u5657
  9442  00348C  0008               	tblrd		*
  9443  00348E  50F5               	movf	tablat,w,c
  9444  003490  D005               	bra	u5650
  9445  003492                     u5657:
  9446  003492  CFF6 FFE9          	movff	tblptrl,fsr0l
  9447  003496  CFF7 FFEA          	movff	tblptrh,fsr0h
  9448  00349A  50EF               	movf	indf0,w,c
  9449  00349C                     u5650:
  9450  00349C  6EDF               	movwf	indf2,c
  9451  00349E  0100               	movlb	0	; () banked
  9452  0034A0  4BE4               	infsnz	_inPipes& (0+255),f,b
  9453  0034A2  2BE5               	incf	(_inPipes+1)& (0+255),f,b
  9454                           
  9455                           ; BSR set to: 0
  9456  0034A4  0101               	movlb	1	; () banked
  9457  0034A6  4B30               	infsnz	_pDst& (0+255),f,b
  9458  0034A8  2B31               	incf	(_pDst+1)& (0+255),f,b
  9459                           
  9460                           ; BSR set to: 1
  9461                           ;usb_device.c: 1822: byteToSend--;
  9462  0034AA  0100               	movlb	0	; () banked
  9463  0034AC  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
  9464  0034AE                     l235:
  9465                           
  9466                           ; BSR set to: 0
  9467                           
  9468                           ; BSR set to: 0
  9469  0034AE  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
  9470  0034B0  B4D8               	btfsc	status,2,c
  9471  0034B2  0012               	return	
  9472  0034B4  D7DF               	goto	l236
  9473  0034B6                     __end_of_USBCtrlTrfTxService:
  9474                           	opt stack 0
  9475                           tosu	equ	0xFFF
  9476                           tosh	equ	0xFFE
  9477                           tosl	equ	0xFFD
  9478                           pclath	equ	0xFFA
  9479                           tblptru	equ	0xFF8
  9480                           tblptrh	equ	0xFF7
  9481                           tblptrl	equ	0xFF6
  9482                           tablat	equ	0xFF5
  9483                           prodh	equ	0xFF4
  9484                           prodl	equ	0xFF3
  9485                           indf0	equ	0xFEF
  9486                           postinc0	equ	0xFEE
  9487                           plusw0	equ	0xFEB
  9488                           fsr0h	equ	0xFEA
  9489                           fsr0l	equ	0xFE9
  9490                           wreg	equ	0xFE8
  9491                           indf1	equ	0xFE7
  9492                           postinc1	equ	0xFE6
  9493                           postdec1	equ	0xFE5
  9494                           fsr1h	equ	0xFE2
  9495                           fsr1l	equ	0xFE1
  9496                           indf2	equ	0xFDF
  9497                           postinc2	equ	0xFDE
  9498                           postdec2	equ	0xFDD
  9499                           plusw2	equ	0xFDB
  9500                           fsr2h	equ	0xFDA
  9501                           fsr2l	equ	0xFD9
  9502                           status	equ	0xFD8
  9503                           
  9504 ;; *************** function _Sequencer_StopTimer *****************
  9505 ;; Defined at:
  9506 ;;		line 21 in file "sequencer.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;		None
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;		None
  9511 ;; Return value:  Size  Location     Type
  9512 ;;                  1    wreg      void 
  9513 ;; Registers used:
  9514 ;;		wreg, status,2
  9515 ;; Tracked objects:
  9516 ;;		On entry : 0/0
  9517 ;;		On exit  : 0/0
  9518 ;;		Unchanged: 0/0
  9519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9520 ;;      Params:         0       0       0       0       0       0       0       0       0
  9521 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9522 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9523 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9524 ;;Total ram usage:        0 bytes
  9525 ;; Hardware stack levels used:    1
  9526 ;; Hardware stack levels required when called:    7
  9527 ;; This function calls:
  9528 ;;		Nothing
  9529 ;; This function is called by:
  9530 ;;		_main
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text34
  9535  0054D0                     __ptext34:
  9536                           	opt stack 0
  9537  0054D0                     _Sequencer_StopTimer:
  9538                           	opt stack 23
  9539                           
  9540                           ;sequencer.c: 23: TMR1ON = 0;
  9541                           
  9542                           ; BSR set to: 0
  9543                           ;incstack = 0
  9544  0054D0  90CD               	bcf	4045,0,c	;volatile
  9545                           
  9546                           ;sequencer.c: 24: _Timer.Counter = 0;
  9547  0054D2  0E00               	movlw	0
  9548  0054D4  0101               	movlb	1	; () banked
  9549  0054D6  6F0D               	movwf	(__Timer+5)& (0+255),b
  9550  0054D8  0E00               	movlw	0
  9551  0054DA  6F0C               	movwf	(__Timer+4)& (0+255),b
  9552                           
  9553                           ; BSR set to: 1
  9554  0054DC  0012               	return		;funcret
  9555  0054DE                     __end_of_Sequencer_StopTimer:
  9556                           	opt stack 0
  9557                           tosu	equ	0xFFF
  9558                           tosh	equ	0xFFE
  9559                           tosl	equ	0xFFD
  9560                           pclath	equ	0xFFA
  9561                           tblptru	equ	0xFF8
  9562                           tblptrh	equ	0xFF7
  9563                           tblptrl	equ	0xFF6
  9564                           tablat	equ	0xFF5
  9565                           prodh	equ	0xFF4
  9566                           prodl	equ	0xFF3
  9567                           indf0	equ	0xFEF
  9568                           postinc0	equ	0xFEE
  9569                           plusw0	equ	0xFEB
  9570                           fsr0h	equ	0xFEA
  9571                           fsr0l	equ	0xFE9
  9572                           wreg	equ	0xFE8
  9573                           indf1	equ	0xFE7
  9574                           postinc1	equ	0xFE6
  9575                           postdec1	equ	0xFE5
  9576                           fsr1h	equ	0xFE2
  9577                           fsr1l	equ	0xFE1
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           plusw2	equ	0xFDB
  9582                           fsr2h	equ	0xFDA
  9583                           fsr2l	equ	0xFD9
  9584                           status	equ	0xFD8
  9585                           
  9586 ;; *************** function _Sequencer_StartTimer *****************
  9587 ;; Defined at:
  9588 ;;		line 27 in file "sequencer.c"
  9589 ;; Parameters:    Size  Location     Type
  9590 ;;  ATime           3   63[BANK0 ] float 
  9591 ;;  ALoop           1   66[BANK0 ] unsigned char 
  9592 ;; Auto vars:     Size  Location     Type
  9593 ;;		None
  9594 ;; Return value:  Size  Location     Type
  9595 ;;                  1    wreg      void 
  9596 ;; Registers used:
  9597 ;;		wreg, status,2, status,0, cstack
  9598 ;; Tracked objects:
  9599 ;;		On entry : 0/0
  9600 ;;		On exit  : 0/0
  9601 ;;		Unchanged: 0/0
  9602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9603 ;;      Params:         0       4       0       0       0       0       0       0       0
  9604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9606 ;;      Totals:         0       4       0       0       0       0       0       0       0
  9607 ;;Total ram usage:        4 bytes
  9608 ;; Hardware stack levels used:    1
  9609 ;; Hardware stack levels required when called:    9
  9610 ;; This function calls:
  9611 ;;		___ftdiv
  9612 ;;		___fttol
  9613 ;; This function is called by:
  9614 ;;		_main
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text35
  9619  004B3C                     __ptext35:
  9620                           	opt stack 0
  9621  004B3C                     _Sequencer_StartTimer:
  9622                           	opt stack 21
  9623                           
  9624                           ;sequencer.c: 29: _Timer.Loop = ALoop;
  9625                           
  9626                           ; BSR set to: 1
  9627                           ;incstack = 0
  9628  004B3C  C0A2  F109         	movff	Sequencer_StartTimer@ALoop,__Timer+1
  9629                           
  9630                           ;sequencer.c: 30: _Timer.Ticks = ATime / ((4.0f / 48000000L) * 1 * 65535);
  9631  004B40  0EF4               	movlw	244
  9632  004B42  0100               	movlb	0	; () banked
  9633  004B44  6F84               	movwf	___ftdiv@f2& (0+255),b
  9634  004B46  0EB2               	movlw	178
  9635  004B48  6F85               	movwf	(___ftdiv@f2+1)& (0+255),b
  9636  004B4A  0E3B               	movlw	59
  9637  004B4C  6F86               	movwf	(___ftdiv@f2+2)& (0+255),b
  9638  004B4E  C09F  F081         	movff	Sequencer_StartTimer@ATime,___ftdiv@f1
  9639  004B52  C0A0  F082         	movff	Sequencer_StartTimer@ATime+1,___ftdiv@f1+1
  9640  004B56  C0A1  F083         	movff	Sequencer_StartTimer@ATime+2,___ftdiv@f1+2
  9641  004B5A  ECB6  F017         	call	___ftdiv	;wreg free
  9642  004B5E  C081  F090         	movff	?___ftdiv,___fttol@f1
  9643  004B62  C082  F091         	movff	?___ftdiv+1,___fttol@f1+1
  9644  004B66  C083  F092         	movff	?___ftdiv+2,___fttol@f1+2
  9645  004B6A  EC46  F016         	call	___fttol	;wreg free
  9646  004B6E  C090  F10A         	movff	?___fttol,__Timer+2
  9647  004B72  C091  F10B         	movff	?___fttol+1,__Timer+3
  9648                           
  9649                           ;sequencer.c: 32: T1CKPS0 = 0;
  9650  004B76  98CD               	bcf	4045,4,c	;volatile
  9651                           
  9652                           ;sequencer.c: 33: T1CKPS0 = 0;
  9653  004B78  98CD               	bcf	4045,4,c	;volatile
  9654                           
  9655                           ;sequencer.c: 34: T1OSCEN = 1;
  9656  004B7A  86CD               	bsf	4045,3,c	;volatile
  9657                           
  9658                           ;sequencer.c: 35: T1SYNC = 1;
  9659  004B7C  84CD               	bsf	4045,2,c	;volatile
  9660                           
  9661                           ;sequencer.c: 36: TMR1CS = 0;
  9662  004B7E  92CD               	bcf	4045,1,c	;volatile
  9663                           
  9664                           ;sequencer.c: 37: TMR1H = 0;
  9665  004B80  0E00               	movlw	0
  9666  004B82  6ECF               	movwf	4047,c	;volatile
  9667                           
  9668                           ;sequencer.c: 38: TMR1L = 0;
  9669  004B84  0E00               	movlw	0
  9670  004B86  6ECE               	movwf	4046,c	;volatile
  9671                           
  9672                           ;sequencer.c: 41: TMR1IE = 1;
  9673  004B88  809D               	bsf	3997,0,c	;volatile
  9674                           
  9675                           ;sequencer.c: 42: TMR1IF = 0;
  9676  004B8A  909E               	bcf	3998,0,c	;volatile
  9677                           
  9678                           ;sequencer.c: 43: TMR1ON = 1;
  9679  004B8C  80CD               	bsf	4045,0,c	;volatile
  9680  004B8E  0012               	return		;funcret
  9681  004B90                     __end_of_Sequencer_StartTimer:
  9682                           	opt stack 0
  9683                           tosu	equ	0xFFF
  9684                           tosh	equ	0xFFE
  9685                           tosl	equ	0xFFD
  9686                           pclath	equ	0xFFA
  9687                           tblptru	equ	0xFF8
  9688                           tblptrh	equ	0xFF7
  9689                           tblptrl	equ	0xFF6
  9690                           tablat	equ	0xFF5
  9691                           prodh	equ	0xFF4
  9692                           prodl	equ	0xFF3
  9693                           indf0	equ	0xFEF
  9694                           postinc0	equ	0xFEE
  9695                           plusw0	equ	0xFEB
  9696                           fsr0h	equ	0xFEA
  9697                           fsr0l	equ	0xFE9
  9698                           wreg	equ	0xFE8
  9699                           indf1	equ	0xFE7
  9700                           postinc1	equ	0xFE6
  9701                           postdec1	equ	0xFE5
  9702                           fsr1h	equ	0xFE2
  9703                           fsr1l	equ	0xFE1
  9704                           indf2	equ	0xFDF
  9705                           postinc2	equ	0xFDE
  9706                           postdec2	equ	0xFDD
  9707                           plusw2	equ	0xFDB
  9708                           fsr2h	equ	0xFDA
  9709                           fsr2l	equ	0xFD9
  9710                           status	equ	0xFD8
  9711                           
  9712 ;; *************** function _RunHub *****************
  9713 ;; Defined at:
  9714 ;;		line 145 in file "main.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;		None
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;		None
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, status,2
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9728 ;;      Params:         0       0       0       0       0       0       0       0       0
  9729 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9730 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9731 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9732 ;;Total ram usage:        0 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    7
  9735 ;; This function calls:
  9736 ;;		Nothing
  9737 ;; This function is called by:
  9738 ;;		_main
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text36
  9743  00549A                     __ptext36:
  9744                           	opt stack 0
  9745  00549A                     _RunHub:
  9746                           	opt stack 23
  9747                           
  9748                           ;main.c: 148: _Hub.ReadyToWrite = 1;
  9749                           
  9750                           ;incstack = 0
  9751  00549A  0E01               	movlw	1
  9752  00549C  0101               	movlb	1	; () banked
  9753  00549E  6FC5               	movwf	(__Hub+134)& (0+255),b
  9754  0054A0                     
  9755                           ; BSR set to: 1
  9756                           
  9757                           ; BSR set to: 1
  9758                           
  9759                           ; BSR set to: 1
  9760  0054A0  51C5               	movf	(__Hub+134)& (0+255),w,b
  9761  0054A2  A4D8               	btfss	status,2,c
  9762  0054A4  D7FD               	goto	l627
  9763                           
  9764                           ; BSR set to: 1
  9765                           ;main.c: 150: _Hub.ReadyToRead = 1;
  9766                           
  9767                           ; BSR set to: 1
  9768  0054A6  0E01               	movlw	1
  9769  0054A8  6FC6               	movwf	(__Hub+135)& (0+255),b
  9770                           
  9771                           ; BSR set to: 1
  9772  0054AA  0012               	return		;funcret
  9773  0054AC                     __end_of_RunHub:
  9774                           	opt stack 0
  9775                           tosu	equ	0xFFF
  9776                           tosh	equ	0xFFE
  9777                           tosl	equ	0xFFD
  9778                           pclath	equ	0xFFA
  9779                           tblptru	equ	0xFF8
  9780                           tblptrh	equ	0xFF7
  9781                           tblptrl	equ	0xFF6
  9782                           tablat	equ	0xFF5
  9783                           prodh	equ	0xFF4
  9784                           prodl	equ	0xFF3
  9785                           indf0	equ	0xFEF
  9786                           postinc0	equ	0xFEE
  9787                           plusw0	equ	0xFEB
  9788                           fsr0h	equ	0xFEA
  9789                           fsr0l	equ	0xFE9
  9790                           wreg	equ	0xFE8
  9791                           indf1	equ	0xFE7
  9792                           postinc1	equ	0xFE6
  9793                           postdec1	equ	0xFE5
  9794                           fsr1h	equ	0xFE2
  9795                           fsr1l	equ	0xFE1
  9796                           indf2	equ	0xFDF
  9797                           postinc2	equ	0xFDE
  9798                           postdec2	equ	0xFDD
  9799                           plusw2	equ	0xFDB
  9800                           fsr2h	equ	0xFDA
  9801                           fsr2l	equ	0xFD9
  9802                           status	equ	0xFD8
  9803                           
  9804 ;; *************** function _Persistant_SaveBuffer *****************
  9805 ;; Defined at:
  9806 ;;		line 103 in file "persistant.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;  ABuffer        12   81[BANK0 ] struct .
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;  i               1  104[BANK0 ] unsigned char 
  9811 ;;  LZip           10   94[BANK0 ] struct .
  9812 ;;  LResult         1   93[BANK0 ] unsigned char 
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      unsigned char 
  9815 ;; Registers used:
  9816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9822 ;;      Params:         0      12       0       0       0       0       0       0       0
  9823 ;;      Locals:         0      12       0       0       0       0       0       0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9825 ;;      Totals:         0      24       0       0       0       0       0       0       0
  9826 ;;Total ram usage:       24 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:   10
  9829 ;; This function calls:
  9830 ;;		_Persistant_WriteInternalMemory
  9831 ;;		_Zip
  9832 ;;		___awdiv
  9833 ;;		_memcpy
  9834 ;; This function is called by:
  9835 ;;		_main
  9836 ;; This function uses a non-reentrant model
  9837 ;;
  9838                           
  9839                           	psect	text37
  9840  003D76                     __ptext37:
  9841                           	opt stack 0
  9842  003D76                     _Persistant_SaveBuffer:
  9843                           	opt stack 20
  9844                           
  9845                           ;persistant.c: 105: bool LResult = 1;
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;incstack = 0
  9849  003D76  0E01               	movlw	1
  9850  003D78  0100               	movlb	0	; () banked
  9851  003D7A  6FBD               	movwf	Persistant_SaveBuffer@LResult& (0+255),b
  9852                           
  9853                           ; BSR set to: 0
  9854                           ;persistant.c: 106: ZipContainer LZip;
  9855                           ;persistant.c: 107: LZip.Buffer = &ABuffer;
  9856  003D7C  0EB1               	movlw	low Persistant_SaveBuffer@ABuffer
  9857  003D7E  6FBE               	movwf	Persistant_SaveBuffer@LZip& (0+255),b
  9858  003D80  0E00               	movlw	high Persistant_SaveBuffer@ABuffer
  9859  003D82  6FBF               	movwf	(Persistant_SaveBuffer@LZip+1)& (0+255),b
  9860                           
  9861                           ; BSR set to: 0
  9862                           ;persistant.c: 108: Zip(&LZip);
  9863  003D84  0EBE               	movlw	low Persistant_SaveBuffer@LZip
  9864  003D86  6F9F               	movwf	Zip@AZip& (0+255),b
  9865  003D88  0E00               	movlw	high Persistant_SaveBuffer@LZip
  9866  003D8A  6FA0               	movwf	(Zip@AZip+1)& (0+255),b
  9867  003D8C  EC29  F014         	call	_Zip	;wreg free
  9868                           
  9869                           ;persistant.c: 109: for (char i = 0; i < sizeof(LZip.Bytes); i++)
  9870  003D90  0E00               	movlw	0
  9871  003D92  0100               	movlb	0	; () banked
  9872  003D94  6FC8               	movwf	Persistant_SaveBuffer@i& (0+255),b
  9873  003D96                     l7723:
  9874                           
  9875                           ; BSR set to: 0
  9876  003D96  0E07               	movlw	7
  9877  003D98  65C8               	cpfsgt	Persistant_SaveBuffer@i& (0+255),b
  9878  003D9A  D001               	goto	l962
  9879  003D9C  D02D               	goto	u9450
  9880  003D9E                     l962:
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;persistant.c: 110: LResult &= Persistant_WriteInternalMemory((ABuffer.Channel / 2 ) * s
      +                          izeof(LZip.Bytes) + i, LZip.Bytes[i]);
  9884                           
  9885                           ; BSR set to: 0
  9886  003D9E  C0B3  F060         	movff	Persistant_SaveBuffer@ABuffer+2,___awdiv@dividend
  9887  003DA2  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
  9888  003DA4  0E00               	movlw	0
  9889  003DA6  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  9890  003DA8  0E02               	movlw	2
  9891  003DAA  6F62               	movwf	___awdiv@divisor& (0+255),b
  9892  003DAC  ECA7  F021         	call	___awdiv	;wreg free
  9893  003DB0  0100               	movlb	0	; () banked
  9894  003DB2  90D8               	bcf	status,0,c
  9895  003DB4  3760               	rlcf	?___awdiv& (0+255),f,b
  9896  003DB6  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
  9897  003DB8  90D8               	bcf	status,0,c
  9898  003DBA  3760               	rlcf	?___awdiv& (0+255),f,b
  9899  003DBC  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
  9900  003DBE  90D8               	bcf	status,0,c
  9901  003DC0  3760               	rlcf	?___awdiv& (0+255),f,b
  9902  003DC2  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
  9903  003DC4  51C8               	movf	Persistant_SaveBuffer@i& (0+255),w,b
  9904  003DC6  2560               	addwf	?___awdiv& (0+255),w,b
  9905  003DC8  6F6A               	movwf	Persistant_WriteInternalMemory@AAddress& (0+255),b
  9906  003DCA  0E00               	movlw	0
  9907  003DCC  2161               	addwfc	(?___awdiv+1)& (0+255),w,b
  9908  003DCE  6F6B               	movwf	(Persistant_WriteInternalMemory@AAddress+1)& (0+255),b
  9909  003DD0  51C8               	movf	Persistant_SaveBuffer@i& (0+255),w,b
  9910  003DD2  0D01               	mullw	1
  9911  003DD4  0E02               	movlw	2
  9912  003DD6  26F3               	addwf	prodl,f,c
  9913  003DD8  0E00               	movlw	0
  9914  003DDA  22F4               	addwfc	prodh,f,c
  9915  003DDC  0EBE               	movlw	low Persistant_SaveBuffer@LZip
  9916  003DDE  24F3               	addwf	prodl,w,c
  9917  003DE0  6ED9               	movwf	fsr2l,c
  9918  003DE2  0E00               	movlw	high Persistant_SaveBuffer@LZip
  9919  003DE4  20F4               	addwfc	prodh,w,c
  9920  003DE6  6EDA               	movwf	fsr2h,c
  9921  003DE8  50DF               	movf	indf2,w,c
  9922  003DEA  6F6C               	movwf	Persistant_WriteInternalMemory@AData& (0+255),b
  9923  003DEC  ECF1  F025         	call	_Persistant_WriteInternalMemory	;wreg free
  9924  003DF0  0100               	movlb	0	; () banked
  9925  003DF2  17BD               	andwf	Persistant_SaveBuffer@LResult& (0+255),f,b
  9926                           
  9927                           ; BSR set to: 0
  9928  003DF4  2BC8               	incf	Persistant_SaveBuffer@i& (0+255),f,b
  9929  003DF6  D7CF               	goto	l7723
  9930  003DF8                     u9450:
  9931                           
  9932                           ; BSR set to: 0
  9933                           ;persistant.c: 111: memcpy(&_Hub.BackupBuffer, &ABuffer, sizeof(DataBuffer));
  9934                           
  9935                           ; BSR set to: 0
  9936  003DF8  0EB9               	movlw	low (__Hub+122)
  9937  003DFA  6F60               	movwf	memcpy@d1& (0+255),b
  9938  003DFC  0E01               	movlw	high (__Hub+122)
  9939  003DFE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  9940  003E00  0EB1               	movlw	low Persistant_SaveBuffer@ABuffer
  9941  003E02  6F62               	movwf	memcpy@s1& (0+255),b
  9942  003E04  0E00               	movlw	high Persistant_SaveBuffer@ABuffer
  9943  003E06  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  9944  003E08  0E00               	movlw	0
  9945  003E0A  6F65               	movwf	(memcpy@n+1)& (0+255),b
  9946  003E0C  0E0C               	movlw	12
  9947  003E0E  6F64               	movwf	memcpy@n& (0+255),b
  9948  003E10  ECB4  F026         	call	_memcpy	;wreg free
  9949  003E14  0012               	return	
  9950  003E16                     __end_of_Persistant_SaveBuffer:
  9951                           	opt stack 0
  9952                           tosu	equ	0xFFF
  9953                           tosh	equ	0xFFE
  9954                           tosl	equ	0xFFD
  9955                           pclath	equ	0xFFA
  9956                           tblptru	equ	0xFF8
  9957                           tblptrh	equ	0xFF7
  9958                           tblptrl	equ	0xFF6
  9959                           tablat	equ	0xFF5
  9960                           prodh	equ	0xFF4
  9961                           prodl	equ	0xFF3
  9962                           indf0	equ	0xFEF
  9963                           postinc0	equ	0xFEE
  9964                           plusw0	equ	0xFEB
  9965                           fsr0h	equ	0xFEA
  9966                           fsr0l	equ	0xFE9
  9967                           wreg	equ	0xFE8
  9968                           indf1	equ	0xFE7
  9969                           postinc1	equ	0xFE6
  9970                           postdec1	equ	0xFE5
  9971                           fsr1h	equ	0xFE2
  9972                           fsr1l	equ	0xFE1
  9973                           indf2	equ	0xFDF
  9974                           postinc2	equ	0xFDE
  9975                           postdec2	equ	0xFDD
  9976                           plusw2	equ	0xFDB
  9977                           fsr2h	equ	0xFDA
  9978                           fsr2l	equ	0xFD9
  9979                           status	equ	0xFD8
  9980                           
  9981 ;; *************** function _Zip *****************
  9982 ;; Defined at:
  9983 ;;		line 8 in file "zip.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  AZip            2   63[BANK0 ] PTR struct .
  9986 ;;		 -> Persistant_SaveBuffer@LZip(10), 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  j               2   79[BANK0 ] int 
  9989 ;;  i               2   77[BANK0 ] int 
  9990 ;;  i               2   75[BANK0 ] int 
  9991 ;;  LBytes          2   72[BANK0 ] PTR unsigned char 
  9992 ;;		 -> LZip.Bytes(8), Persistant_SaveBuffer@LZip(10), 
  9993 ;;  LIndex          1   74[BANK0 ] unsigned char 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      unsigned char 
  9996 ;; Registers used:
  9997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10003 ;;      Params:         0       2       0       0       0       0       0       0       0
 10004 ;;      Locals:         0       9       0       0       0       0       0       0       0
 10005 ;;      Temps:          0       7       0       0       0       0       0       0       0
 10006 ;;      Totals:         0      18       0       0       0       0       0       0       0
 10007 ;;Total ram usage:       18 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    9
 10010 ;; This function calls:
 10011 ;;		___ftdiv
 10012 ;;		___fttol
 10013 ;;		___lbtoft
 10014 ;; This function is called by:
 10015 ;;		_Persistant_SaveBuffer
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text38
 10020  002852                     __ptext38:
 10021                           	opt stack 0
 10022  002852                     _Zip:
 10023                           	opt stack 20
 10024                           
 10025                           ;zip.c: 10: unsigned char *LBytes = AZip->Bytes;
 10026                           
 10027                           ;incstack = 0
 10028  002852  0E02               	movlw	2
 10029  002854  0100               	movlb	0	; () banked
 10030  002856  259F               	addwf	Zip@AZip& (0+255),w,b
 10031  002858  6FA8               	movwf	Zip@LBytes& (0+255),b
 10032  00285A  0E00               	movlw	0
 10033  00285C  21A0               	addwfc	(Zip@AZip+1)& (0+255),w,b
 10034  00285E  6FA9               	movwf	(Zip@LBytes+1)& (0+255),b
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;zip.c: 11: for(int i = 0; i < sizeof(AZip->Bytes); i++)
 10038  002860  0E00               	movlw	0
 10039  002862  6FAC               	movwf	(Zip@i+1)& (0+255),b
 10040  002864  0E00               	movlw	0
 10041  002866  6FAB               	movwf	Zip@i& (0+255),b
 10042  002868                     l7325:
 10043                           
 10044                           ; BSR set to: 0
 10045  002868  51AC               	movf	(Zip@i+1)& (0+255),w,b
 10046  00286A  E10F               	bnz	l7335
 10047  00286C  0E08               	movlw	8
 10048  00286E  5DAB               	subwf	Zip@i& (0+255),w,b
 10049  002870  B0D8               	btfsc	status,0,c
 10050  002872  D00B               	goto	u8690
 10051                           
 10052                           ; BSR set to: 0
 10053                           ;zip.c: 12: LBytes[i] = 0x00;
 10054                           
 10055                           ; BSR set to: 0
 10056                           
 10057                           ; BSR set to: 0
 10058  002874  51AB               	movf	Zip@i& (0+255),w,b
 10059  002876  25A8               	addwf	Zip@LBytes& (0+255),w,b
 10060  002878  6ED9               	movwf	fsr2l,c
 10061  00287A  51AC               	movf	(Zip@i+1)& (0+255),w,b
 10062  00287C  21A9               	addwfc	(Zip@LBytes+1)& (0+255),w,b
 10063  00287E  6EDA               	movwf	fsr2h,c
 10064  002880  0E00               	movlw	0
 10065  002882  6EDF               	movwf	indf2,c
 10066                           
 10067                           ; BSR set to: 0
 10068  002884  4BAB               	infsnz	Zip@i& (0+255),f,b
 10069  002886  2BAC               	incf	(Zip@i+1)& (0+255),f,b
 10070  002888  D7EF               	goto	l7325
 10071  00288A                     u8690:
 10072  00288A                     l7335:
 10073                           
 10074                           ; BSR set to: 0
 10075                           ;zip.c: 14: unsigned char LIndex = 0;
 10076  00288A  0E00               	movlw	0
 10077  00288C  6FAA               	movwf	Zip@LIndex& (0+255),b
 10078                           
 10079                           ;zip.c: 15: for(int i = 0; i < sizeof(AZip->Buffer->Values); i++)
 10080  00288E  0E00               	movlw	0
 10081  002890  6FAE               	movwf	(Zip@i_3504+1)& (0+255),b
 10082  002892  0E00               	movlw	0
 10083  002894  6FAD               	movwf	Zip@i_3504& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086  002896  51AE               	movf	(Zip@i_3504+1)& (0+255),w,b
 10087  002898  E16D               	bnz	l1194
 10088  00289A  0E08               	movlw	8
 10089  00289C  5DAD               	subwf	Zip@i_3504& (0+255),w,b
 10090  00289E  B0D8               	btfsc	status,0,c
 10091  0028A0  0012               	return	
 10092                           
 10093                           ; BSR set to: 0
 10094                           ;zip.c: 16: {
 10095                           ;zip.c: 17: for(int j = 0; j < 6; j++)
 10096                           
 10097                           ; BSR set to: 0
 10098                           
 10099                           ; BSR set to: 0
 10100  0028A2  0E00               	movlw	0
 10101  0028A4  6FB0               	movwf	(Zip@j+1)& (0+255),b
 10102  0028A6  0E00               	movlw	0
 10103  0028A8  6FAF               	movwf	Zip@j& (0+255),b
 10104  0028AA                     l7343:
 10105                           
 10106                           ; BSR set to: 0
 10107  0028AA  BFB0               	btfsc	(Zip@j+1)& (0+255),7,b
 10108  0028AC  D006               	goto	l1195
 10109  0028AE  51B0               	movf	(Zip@j+1)& (0+255),w,b
 10110  0028B0  E15C               	bnz	l7355
 10111  0028B2  0E06               	movlw	6
 10112  0028B4  5DAF               	subwf	Zip@j& (0+255),w,b
 10113  0028B6  B0D8               	btfsc	status,0,c
 10114  0028B8  D058               	goto	u8740
 10115  0028BA                     l1195:
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;zip.c: 18: {
 10119                           ;zip.c: 19: LIndex = i * 6 + j;
 10120                           
 10121                           ; BSR set to: 0
 10122  0028BA  51AD               	movf	Zip@i_3504& (0+255),w,b
 10123  0028BC  0D06               	mullw	6
 10124  0028BE  50F3               	movf	prodl,w,c
 10125  0028C0  25AF               	addwf	Zip@j& (0+255),w,b
 10126  0028C2  6FAA               	movwf	Zip@LIndex& (0+255),b
 10127                           
 10128                           ; BSR set to: 0
 10129                           ;zip.c: 20: LBytes[(char)(LIndex / 8.0f)] |= ((AZip->Buffer->Values[i] >> j) & 0x01) << 
      +                          (LIndex % 8);
 10130  0028C4  C0AA  F0A1         	movff	Zip@LIndex,??_Zip
 10131  0028C8  0E07               	movlw	7
 10132  0028CA  17A1               	andwf	??_Zip& (0+255),f,b
 10133  0028CC  C0AF  F0A2         	movff	Zip@j,??_Zip+1
 10134  0028D0  0E04               	movlw	4
 10135  0028D2  25AD               	addwf	Zip@i_3504& (0+255),w,b
 10136  0028D4  6FA3               	movwf	(??_Zip+2)& (0+255),b
 10137  0028D6  0E00               	movlw	0
 10138  0028D8  21AE               	addwfc	(Zip@i_3504+1)& (0+255),w,b
 10139  0028DA  6FA4               	movwf	(??_Zip+3)& (0+255),b
 10140  0028DC  C09F  FFD9         	movff	Zip@AZip,fsr2l
 10141  0028E0  C0A0  FFDA         	movff	Zip@AZip+1,fsr2h
 10142  0028E4  CFDE F0A5          	movff	postinc2,??_Zip+4
 10143  0028E8  CFDD F0A6          	movff	postdec2,??_Zip+5
 10144  0028EC  51A3               	movf	(??_Zip+2)& (0+255),w,b
 10145  0028EE  25A5               	addwf	(??_Zip+4)& (0+255),w,b
 10146  0028F0  6ED9               	movwf	fsr2l,c
 10147  0028F2  51A4               	movf	(??_Zip+3)& (0+255),w,b
 10148  0028F4  21A6               	addwfc	(??_Zip+5)& (0+255),w,b
 10149  0028F6  6EDA               	movwf	fsr2h,c
 10150  0028F8  50DF               	movf	indf2,w,c
 10151  0028FA  6FA7               	movwf	(??_Zip+6)& (0+255),b
 10152  0028FC  2BA2               	incf	(??_Zip+1)& (0+255),f,b
 10153  0028FE  D002               	goto	u8724
 10154  002900                     u8725:
 10155  002900  90D8               	bcf	status,0,c
 10156  002902  33A7               	rrcf	(??_Zip+6)& (0+255),f,b
 10157  002904                     u8724:
 10158  002904  2FA2               	decfsz	(??_Zip+1)& (0+255),f,b
 10159  002906  D7FC               	goto	u8725
 10160  002908  0E01               	movlw	1
 10161  00290A  0100               	movlb	0	; () banked
 10162  00290C  17A7               	andwf	(??_Zip+6)& (0+255),f,b
 10163  00290E  2BA1               	incf	??_Zip& (0+255),f,b
 10164  002910  D002               	goto	u8734
 10165  002912                     u8735:
 10166  002912  90D8               	bcf	status,0,c
 10167  002914  37A7               	rlcf	(??_Zip+6)& (0+255),f,b
 10168  002916                     u8734:
 10169  002916  2FA1               	decfsz	??_Zip& (0+255),f,b
 10170  002918  D7FC               	goto	u8735
 10171  00291A  0E00               	movlw	0
 10172  00291C  0100               	movlb	0	; () banked
 10173  00291E  6F84               	movwf	___ftdiv@f2& (0+255),b
 10174  002920  0E00               	movlw	0
 10175  002922  6F85               	movwf	(___ftdiv@f2+1)& (0+255),b
 10176  002924  0E41               	movlw	65
 10177  002926  6F86               	movwf	(___ftdiv@f2+2)& (0+255),b
 10178  002928  51AA               	movf	Zip@LIndex& (0+255),w,b
 10179  00292A  ECA6  F028         	call	___lbtoft
 10180  00292E  C068  F081         	movff	?___lbtoft,___ftdiv@f1
 10181  002932  C069  F082         	movff	?___lbtoft+1,___ftdiv@f1+1
 10182  002936  C06A  F083         	movff	?___lbtoft+2,___ftdiv@f1+2
 10183  00293A  ECB6  F017         	call	___ftdiv	;wreg free
 10184  00293E  C081  F090         	movff	?___ftdiv,___fttol@f1
 10185  002942  C082  F091         	movff	?___ftdiv+1,___fttol@f1+1
 10186  002946  C083  F092         	movff	?___ftdiv+2,___fttol@f1+2
 10187  00294A  EC46  F016         	call	___fttol	;wreg free
 10188  00294E  0100               	movlb	0	; () banked
 10189  002950  5190               	movf	?___fttol& (0+255),w,b
 10190  002952  0D01               	mullw	1
 10191  002954  50F3               	movf	prodl,w,c
 10192  002956  25A8               	addwf	Zip@LBytes& (0+255),w,b
 10193  002958  6ED9               	movwf	fsr2l,c
 10194  00295A  50F4               	movf	prodh,w,c
 10195  00295C  21A9               	addwfc	(Zip@LBytes+1)& (0+255),w,b
 10196  00295E  6EDA               	movwf	fsr2h,c
 10197  002960  51A7               	movf	(??_Zip+6)& (0+255),w,b
 10198  002962  12DF               	iorwf	indf2,f,c
 10199                           
 10200                           ; BSR set to: 0
 10201  002964  4BAF               	infsnz	Zip@j& (0+255),f,b
 10202  002966  2BB0               	incf	(Zip@j+1)& (0+255),f,b
 10203  002968  D7A0               	goto	l7343
 10204  00296A                     u8740:
 10205  00296A                     l7355:
 10206                           
 10207                           ; BSR set to: 0
 10208  00296A  4BAD               	infsnz	Zip@i_3504& (0+255),f,b
 10209  00296C  2BAE               	incf	(Zip@i_3504+1)& (0+255),f,b
 10210                           
 10211                           ; BSR set to: 0
 10212  00296E  51AE               	movf	(Zip@i_3504+1)& (0+255),w,b
 10213  002970  E101               	bnz	l1197
 10214  002972  D793               	goto	L15
 10215  002974                     l1194:
 10216  002974                     l1197:
 10217                           
 10218                           ; BSR set to: 0
 10219  002974  0012               	return		;funcret
 10220  002976                     __end_of_Zip:
 10221                           	opt stack 0
 10222                           tosu	equ	0xFFF
 10223                           tosh	equ	0xFFE
 10224                           tosl	equ	0xFFD
 10225                           pclath	equ	0xFFA
 10226                           tblptru	equ	0xFF8
 10227                           tblptrh	equ	0xFF7
 10228                           tblptrl	equ	0xFF6
 10229                           tablat	equ	0xFF5
 10230                           prodh	equ	0xFF4
 10231                           prodl	equ	0xFF3
 10232                           indf0	equ	0xFEF
 10233                           postinc0	equ	0xFEE
 10234                           plusw0	equ	0xFEB
 10235                           fsr0h	equ	0xFEA
 10236                           fsr0l	equ	0xFE9
 10237                           wreg	equ	0xFE8
 10238                           indf1	equ	0xFE7
 10239                           postinc1	equ	0xFE6
 10240                           postdec1	equ	0xFE5
 10241                           fsr1h	equ	0xFE2
 10242                           fsr1l	equ	0xFE1
 10243                           indf2	equ	0xFDF
 10244                           postinc2	equ	0xFDE
 10245                           postdec2	equ	0xFDD
 10246                           plusw2	equ	0xFDB
 10247                           fsr2h	equ	0xFDA
 10248                           fsr2l	equ	0xFD9
 10249                           status	equ	0xFD8
 10250                           
 10251 ;; *************** function _PauseHub *****************
 10252 ;; Defined at:
 10253 ;;		line 138 in file "main.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;		None
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  1    wreg      void 
 10260 ;; Registers used:
 10261 ;;		wreg, status,2
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10267 ;;      Params:         0       0       0       0       0       0       0       0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10269 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10270 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10271 ;;Total ram usage:        0 bytes
 10272 ;; Hardware stack levels used:    1
 10273 ;; Hardware stack levels required when called:    7
 10274 ;; This function calls:
 10275 ;;		Nothing
 10276 ;; This function is called by:
 10277 ;;		_main
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           	psect	text39
 10282  0054DE                     __ptext39:
 10283                           	opt stack 0
 10284  0054DE                     _PauseHub:
 10285                           	opt stack 23
 10286                           
 10287                           ;main.c: 141: _Hub.ReadyToRead = 0;
 10288                           
 10289                           ; BSR set to: 0
 10290                           ;incstack = 0
 10291  0054DE  0E00               	movlw	0
 10292  0054E0  0101               	movlb	1	; () banked
 10293  0054E2  6FC6               	movwf	(__Hub+135)& (0+255),b
 10294  0054E4                     
 10295                           ; BSR set to: 1
 10296                           
 10297                           ; BSR set to: 1
 10298                           
 10299                           ; BSR set to: 1
 10300  0054E4  51C7               	movf	(__Hub+136)& (0+255),w,b
 10301  0054E6  A4D8               	btfss	status,2,c
 10302  0054E8  0012               	return	
 10303  0054EA  D7FC               	goto	l621
 10304  0054EC                     __end_of_PauseHub:
 10305                           	opt stack 0
 10306                           tosu	equ	0xFFF
 10307                           tosh	equ	0xFFE
 10308                           tosl	equ	0xFFD
 10309                           pclath	equ	0xFFA
 10310                           tblptru	equ	0xFF8
 10311                           tblptrh	equ	0xFF7
 10312                           tblptrl	equ	0xFF6
 10313                           tablat	equ	0xFF5
 10314                           prodh	equ	0xFF4
 10315                           prodl	equ	0xFF3
 10316                           indf0	equ	0xFEF
 10317                           postinc0	equ	0xFEE
 10318                           plusw0	equ	0xFEB
 10319                           fsr0h	equ	0xFEA
 10320                           fsr0l	equ	0xFE9
 10321                           wreg	equ	0xFE8
 10322                           indf1	equ	0xFE7
 10323                           postinc1	equ	0xFE6
 10324                           postdec1	equ	0xFE5
 10325                           fsr1h	equ	0xFE2
 10326                           fsr1l	equ	0xFE1
 10327                           indf2	equ	0xFDF
 10328                           postinc2	equ	0xFDE
 10329                           postdec2	equ	0xFDD
 10330                           plusw2	equ	0xFDB
 10331                           fsr2h	equ	0xFDA
 10332                           fsr2l	equ	0xFD9
 10333                           status	equ	0xFD8
 10334                           
 10335 ;; *************** function _Midi_Write *****************
 10336 ;; Defined at:
 10337 ;;		line 56 in file "midi.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  AData           1    wreg     unsigned char 
 10340 ;;  AMidiBuffer     2    0[BANK0 ] PTR struct .
 10341 ;;		 -> _MidiInput(324), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  AData           1    9[BANK0 ] unsigned char 
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10353 ;;      Params:         0       2       0       0       0       0       0       0       0
 10354 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10355 ;;      Temps:          0       7       0       0       0       0       0       0       0
 10356 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10357 ;;Total ram usage:       10 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    7
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_main
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text40
 10368  0010F2                     __ptext40:
 10369                           	opt stack 0
 10370  0010F2                     _Midi_Write:
 10371                           	opt stack 23
 10372                           
 10373                           ; BSR set to: 1
 10374                           ;incstack = 0
 10375                           ;Midi_Write@AData stored from wreg
 10376  0010F2  0100               	movlb	0	; () banked
 10377  0010F4  6F69               	movwf	Midi_Write@AData& (0+255),b
 10378                           
 10379                           ;midi.c: 58: if (AData & 0x80 == 0x80)
 10380  0010F6  0100               	movlb	0	; () banked
 10381  0010F8  A169               	btfss	Midi_Write@AData& (0+255),0,b
 10382  0010FA  D0A0               	goto	l1169
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;midi.c: 59: {
 10386                           ;midi.c: 60: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Code = AData & 0xF0;
 10387  0010FC  EE21 F041          	lfsr	2,321
 10388  001100  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10389  001102  26D9               	addwf	fsr2l,f,c
 10390  001104  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10391  001106  22DA               	addwfc	fsr2h,f,c
 10392  001108  50DF               	movf	indf2,w,c
 10393  00110A  6F62               	movwf	??_Midi_Write& (0+255),b
 10394  00110C  5162               	movf	??_Midi_Write& (0+255),w,b
 10395  00110E  0D05               	mullw	5
 10396  001110  50F3               	movf	prodl,w,c
 10397  001112  2560               	addwf	Midi_Write@AMidiBuffer& (0+255),w,b
 10398  001114  6ED9               	movwf	fsr2l,c
 10399  001116  50F4               	movf	prodh,w,c
 10400  001118  2161               	addwfc	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10401  00111A  6EDA               	movwf	fsr2h,c
 10402  00111C  5169               	movf	Midi_Write@AData& (0+255),w,b
 10403  00111E  0BF0               	andlw	240
 10404  001120  6EDF               	movwf	indf2,c
 10405                           
 10406                           ;midi.c: 61: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Channel = AData & 0x0F;
 10407  001122  EE21 F041          	lfsr	2,321
 10408  001126  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10409  001128  26D9               	addwf	fsr2l,f,c
 10410  00112A  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10411  00112C  22DA               	addwfc	fsr2h,f,c
 10412  00112E  50DF               	movf	indf2,w,c
 10413  001130  6F62               	movwf	??_Midi_Write& (0+255),b
 10414  001132  5162               	movf	??_Midi_Write& (0+255),w,b
 10415  001134  0D05               	mullw	5
 10416  001136  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10417  00113A  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10418  00113E  50F3               	movf	prodl,w,c
 10419  001140  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10420  001142  50F4               	movf	prodh,w,c
 10421  001144  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10422  001146  0E01               	movlw	1
 10423  001148  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10424  00114A  6ED9               	movwf	fsr2l,c
 10425  00114C  0E00               	movlw	0
 10426  00114E  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10427  001150  6EDA               	movwf	fsr2h,c
 10428  001152  5169               	movf	Midi_Write@AData& (0+255),w,b
 10429  001154  0B0F               	andlw	15
 10430  001156  6EDF               	movwf	indf2,c
 10431                           
 10432                           ;midi.c: 62: switch(AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Code)
 10433  001158  D050               	goto	l1170
 10434  00115A                     
 10435                           ; BSR set to: 0
 10436                           ;midi.c: 65: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = 2;
 10437                           
 10438                           ; BSR set to: 0
 10439  00115A  EE21 F041          	lfsr	2,321
 10440  00115E  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10441  001160  26D9               	addwf	fsr2l,f,c
 10442  001162  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10443  001164  22DA               	addwfc	fsr2h,f,c
 10444  001166  50DF               	movf	indf2,w,c
 10445  001168  6F62               	movwf	??_Midi_Write& (0+255),b
 10446  00116A  5162               	movf	??_Midi_Write& (0+255),w,b
 10447  00116C  0D05               	mullw	5
 10448  00116E  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10449  001172  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10450  001176  50F3               	movf	prodl,w,c
 10451  001178  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10452  00117A  50F4               	movf	prodh,w,c
 10453  00117C  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10454  00117E  0E04               	movlw	4
 10455  001180  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10456  001182  6ED9               	movwf	fsr2l,c
 10457  001184  0E00               	movlw	0
 10458  001186  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10459  001188  6EDA               	movwf	fsr2h,c
 10460  00118A  0E02               	movlw	2
 10461  00118C  D019               	goto	L16
 10462  00118E                     
 10463                           ; BSR set to: 0
 10464                           ;midi.c: 69: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = 1;
 10465                           
 10466                           ; BSR set to: 0
 10467  00118E  EE21 F041          	lfsr	2,321
 10468  001192  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10469  001194  26D9               	addwf	fsr2l,f,c
 10470  001196  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10471  001198  22DA               	addwfc	fsr2h,f,c
 10472  00119A  50DF               	movf	indf2,w,c
 10473  00119C  6F62               	movwf	??_Midi_Write& (0+255),b
 10474  00119E  5162               	movf	??_Midi_Write& (0+255),w,b
 10475  0011A0  0D05               	mullw	5
 10476  0011A2  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10477  0011A6  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10478  0011AA  50F3               	movf	prodl,w,c
 10479  0011AC  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10480  0011AE  50F4               	movf	prodh,w,c
 10481  0011B0  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10482  0011B2  0E04               	movlw	4
 10483  0011B4  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10484  0011B6  6ED9               	movwf	fsr2l,c
 10485  0011B8  0E00               	movlw	0
 10486  0011BA  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10487  0011BC  6EDA               	movwf	fsr2h,c
 10488  0011BE  0E01               	movlw	1
 10489  0011C0                     L16:
 10490  0011C0  6EDF               	movwf	indf2,c
 10491                           
 10492                           ;midi.c: 70: break;
 10493  0011C2  D033               	goto	l1172
 10494  0011C4                     
 10495                           ; BSR set to: 0
 10496                           ;midi.c: 73: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = -1;
 10497                           
 10498                           ; BSR set to: 0
 10499  0011C4  EE21 F041          	lfsr	2,321
 10500  0011C8  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10501  0011CA  26D9               	addwf	fsr2l,f,c
 10502  0011CC  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10503  0011CE  22DA               	addwfc	fsr2h,f,c
 10504  0011D0  50DF               	movf	indf2,w,c
 10505  0011D2  6F62               	movwf	??_Midi_Write& (0+255),b
 10506  0011D4  5162               	movf	??_Midi_Write& (0+255),w,b
 10507  0011D6  0D05               	mullw	5
 10508  0011D8  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10509  0011DC  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10510  0011E0  50F3               	movf	prodl,w,c
 10511  0011E2  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10512  0011E4  50F4               	movf	prodh,w,c
 10513  0011E6  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10514  0011E8  0E04               	movlw	4
 10515  0011EA  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10516  0011EC  6ED9               	movwf	fsr2l,c
 10517  0011EE  0E00               	movlw	0
 10518  0011F0  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10519  0011F2  6EDA               	movwf	fsr2h,c
 10520  0011F4  0EFF               	movlw	255
 10521  0011F6  6EDF               	movwf	indf2,c
 10522                           
 10523                           ; BSR set to: 0
 10524                           ;midi.c: 74: return;
 10525  0011F8  0012               	return	
 10526  0011FA                     l1170:
 10527                           
 10528                           ; BSR set to: 0
 10529                           
 10530                           ; BSR set to: 0
 10531  0011FA  EE21 F041          	lfsr	2,321
 10532  0011FE  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10533  001200  26D9               	addwf	fsr2l,f,c
 10534  001202  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10535  001204  22DA               	addwfc	fsr2h,f,c
 10536  001206  50DF               	movf	indf2,w,c
 10537  001208  6F62               	movwf	??_Midi_Write& (0+255),b
 10538  00120A  5162               	movf	??_Midi_Write& (0+255),w,b
 10539  00120C  0D05               	mullw	5
 10540  00120E  50F3               	movf	prodl,w,c
 10541  001210  2560               	addwf	Midi_Write@AMidiBuffer& (0+255),w,b
 10542  001212  6ED9               	movwf	fsr2l,c
 10543  001214  50F4               	movf	prodh,w,c
 10544  001216  2161               	addwfc	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10545  001218  6EDA               	movwf	fsr2h,c
 10546  00121A  50DF               	movf	indf2,w,c
 10547                           
 10548                           ; Switch size 1, requested type "space"
 10549                           ; Number of cases is 2, Range of values is 176 to 192
 10550                           ; switch strategies available:
 10551                           ; Name         Instructions Cycles
 10552                           ; simple_byte            7     4 (average)
 10553                           ;	Chosen strategy is simple_byte
 10554  00121C  0AB0               	xorlw	176	; case 176
 10555  00121E  B4D8               	btfsc	status,2,c
 10556  001220  D79C               	goto	l1171
 10557  001222  0A70               	xorlw	112	; case 192
 10558  001224  B4D8               	btfsc	status,2,c
 10559  001226  D7B3               	goto	l1173
 10560  001228  D7CD               	goto	l1174
 10561  00122A                     l1172:
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;midi.c: 76: AMidiBuffer->iData = 0;
 10565                           
 10566                           ; BSR set to: 0
 10567  00122A  EE21 F042          	lfsr	2,322
 10568  00122E  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10569  001230  26D9               	addwf	fsr2l,f,c
 10570  001232  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10571  001234  22DA               	addwfc	fsr2h,f,c
 10572  001236  0E00               	movlw	0
 10573  001238  6EDF               	movwf	indf2,c
 10574                           
 10575                           ;midi.c: 77: }
 10576  00123A  D02F               	goto	l1176
 10577  00123C                     l1169:
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;midi.c: 78: else
 10581                           ;midi.c: 79: {
 10582                           ;midi.c: 80: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Data[AMidiBuffer->iData] = A
      +                          Data;
 10583                           
 10584                           ; BSR set to: 0
 10585  00123C  EE21 F042          	lfsr	2,322
 10586  001240  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10587  001242  26D9               	addwf	fsr2l,f,c
 10588  001244  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10589  001246  22DA               	addwfc	fsr2h,f,c
 10590  001248  50DF               	movf	indf2,w,c
 10591  00124A  6F62               	movwf	??_Midi_Write& (0+255),b
 10592  00124C  5162               	movf	??_Midi_Write& (0+255),w,b
 10593  00124E  0D01               	mullw	1
 10594  001250  0E02               	movlw	2
 10595  001252  26F3               	addwf	prodl,f,c
 10596  001254  0E00               	movlw	0
 10597  001256  22F4               	addwfc	prodh,f,c
 10598  001258  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10599  00125C  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10600  001260  50F3               	movf	prodl,w,c
 10601  001262  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10602  001264  50F4               	movf	prodh,w,c
 10603  001266  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10604  001268  EE21 F041          	lfsr	2,321
 10605  00126C  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10606  00126E  26D9               	addwf	fsr2l,f,c
 10607  001270  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10608  001272  22DA               	addwfc	fsr2h,f,c
 10609  001274  50DF               	movf	indf2,w,c
 10610  001276  6F65               	movwf	(??_Midi_Write+3)& (0+255),b
 10611  001278  5165               	movf	(??_Midi_Write+3)& (0+255),w,b
 10612  00127A  0D05               	mullw	5
 10613  00127C  50F3               	movf	prodl,w,c
 10614  00127E  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10615  001280  6ED9               	movwf	fsr2l,c
 10616  001282  50F4               	movf	prodh,w,c
 10617  001284  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10618  001286  6EDA               	movwf	fsr2h,c
 10619  001288  C069  FFDF         	movff	Midi_Write@AData,indf2
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;midi.c: 81: AMidiBuffer->iData++;
 10623  00128C  EE21 F042          	lfsr	2,322
 10624  001290  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10625  001292  26D9               	addwf	fsr2l,f,c
 10626  001294  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10627  001296  22DA               	addwfc	fsr2h,f,c
 10628  001298  2ADF               	incf	indf2,f,c
 10629  00129A                     l1176:
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;midi.c: 82: }
 10633                           ;midi.c: 84: if (AMidiBuffer->iData == AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Da
      +                          taCount && AMidiBuffer->Size <= 64)
 10634                           
 10635                           ; BSR set to: 0
 10636  00129A  EE21 F041          	lfsr	2,321
 10637  00129E  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10638  0012A0  26D9               	addwf	fsr2l,f,c
 10639  0012A2  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10640  0012A4  22DA               	addwfc	fsr2h,f,c
 10641  0012A6  50DF               	movf	indf2,w,c
 10642  0012A8  6F62               	movwf	??_Midi_Write& (0+255),b
 10643  0012AA  5162               	movf	??_Midi_Write& (0+255),w,b
 10644  0012AC  0D05               	mullw	5
 10645  0012AE  C060  F063         	movff	Midi_Write@AMidiBuffer,??_Midi_Write+1
 10646  0012B2  C061  F064         	movff	Midi_Write@AMidiBuffer+1,??_Midi_Write+2
 10647  0012B6  50F3               	movf	prodl,w,c
 10648  0012B8  2763               	addwf	(??_Midi_Write+1)& (0+255),f,b
 10649  0012BA  50F4               	movf	prodh,w,c
 10650  0012BC  2364               	addwfc	(??_Midi_Write+2)& (0+255),f,b
 10651  0012BE  0E04               	movlw	4
 10652  0012C0  2563               	addwf	(??_Midi_Write+1)& (0+255),w,b
 10653  0012C2  6ED9               	movwf	fsr2l,c
 10654  0012C4  0E00               	movlw	0
 10655  0012C6  2164               	addwfc	(??_Midi_Write+2)& (0+255),w,b
 10656  0012C8  6EDA               	movwf	fsr2h,c
 10657  0012CA  50DF               	movf	indf2,w,c
 10658  0012CC  6F65               	movwf	(??_Midi_Write+3)& (0+255),b
 10659  0012CE  6B66               	clrf	(??_Midi_Write+4)& (0+255),b
 10660  0012D0  BF65               	btfsc	(??_Midi_Write+3)& (0+255),7,b
 10661  0012D2  0766               	decf	(??_Midi_Write+4)& (0+255),f,b
 10662  0012D4  EE21 F042          	lfsr	2,322
 10663  0012D8  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10664  0012DA  26D9               	addwf	fsr2l,f,c
 10665  0012DC  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10666  0012DE  22DA               	addwfc	fsr2h,f,c
 10667  0012E0  50DF               	movf	indf2,w,c
 10668  0012E2  6F67               	movwf	(??_Midi_Write+5)& (0+255),b
 10669  0012E4  6B68               	clrf	(??_Midi_Write+6)& (0+255),b
 10670  0012E6  5165               	movf	(??_Midi_Write+3)& (0+255),w,b
 10671  0012E8  1967               	xorwf	(??_Midi_Write+5)& (0+255),w,b
 10672  0012EA  E12E               	bnz	l1175
 10673  0012EC  5166               	movf	(??_Midi_Write+4)& (0+255),w,b
 10674  0012EE  1968               	xorwf	(??_Midi_Write+6)& (0+255),w,b
 10675  0012F0  A4D8               	btfss	status,2,c
 10676  0012F2  0012               	return	
 10677                           
 10678                           ; BSR set to: 0
 10679  0012F4  EE21 F043          	lfsr	2,323
 10680  0012F8  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10681  0012FA  26D9               	addwf	fsr2l,f,c
 10682  0012FC  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10683  0012FE  22DA               	addwfc	fsr2h,f,c
 10684  001300  0E41               	movlw	65
 10685  001302  60DF               	cpfslt	indf2,c
 10686  001304  0012               	return	
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;midi.c: 85: {
 10690                           ;midi.c: 86: LATB4 = 1;
 10691  001306  888A               	bsf	3978,4,c	;volatile
 10692                           
 10693                           ; BSR set to: 0
 10694                           ;midi.c: 87: AMidiBuffer->Size++;
 10695  001308  EE21 F043          	lfsr	2,323
 10696  00130C  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10697  00130E  26D9               	addwf	fsr2l,f,c
 10698  001310  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10699  001312  22DA               	addwfc	fsr2h,f,c
 10700  001314  2ADF               	incf	indf2,f,c
 10701                           
 10702                           ;midi.c: 88: AMidiBuffer->iBufferWrite++;
 10703  001316  EE21 F041          	lfsr	2,321
 10704  00131A  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10705  00131C  26D9               	addwf	fsr2l,f,c
 10706  00131E  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10707  001320  22DA               	addwfc	fsr2h,f,c
 10708  001322  2ADF               	incf	indf2,f,c
 10709                           
 10710                           ;midi.c: 89: if (AMidiBuffer->iBufferWrite >= 64)
 10711  001324  EE21 F041          	lfsr	2,321
 10712  001328  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10713  00132A  26D9               	addwf	fsr2l,f,c
 10714  00132C  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10715  00132E  22DA               	addwfc	fsr2h,f,c
 10716  001330  0E3F               	movlw	63
 10717  001332  64DF               	cpfsgt	indf2,c
 10718  001334  0012               	return	
 10719                           
 10720                           ; BSR set to: 0
 10721                           ;midi.c: 90: AMidiBuffer->iBufferWrite = 0;
 10722  001336  EE21 F041          	lfsr	2,321
 10723  00133A  5160               	movf	Midi_Write@AMidiBuffer& (0+255),w,b
 10724  00133C  26D9               	addwf	fsr2l,f,c
 10725  00133E  5161               	movf	(Midi_Write@AMidiBuffer+1)& (0+255),w,b
 10726  001340  22DA               	addwfc	fsr2h,f,c
 10727  001342  0E00               	movlw	0
 10728  001344  6EDF               	movwf	indf2,c
 10729                           
 10730                           ; BSR set to: 0
 10731  001346  0012               	return	
 10732  001348                     l1175:
 10733                           
 10734                           ; BSR set to: 0
 10735  001348  0012               	return		;funcret
 10736  00134A                     __end_of_Midi_Write:
 10737                           	opt stack 0
 10738                           tosu	equ	0xFFF
 10739                           tosh	equ	0xFFE
 10740                           tosl	equ	0xFFD
 10741                           pclath	equ	0xFFA
 10742                           tblptru	equ	0xFF8
 10743                           tblptrh	equ	0xFF7
 10744                           tblptrl	equ	0xFF6
 10745                           tablat	equ	0xFF5
 10746                           prodh	equ	0xFF4
 10747                           prodl	equ	0xFF3
 10748                           indf0	equ	0xFEF
 10749                           postinc0	equ	0xFEE
 10750                           plusw0	equ	0xFEB
 10751                           fsr0h	equ	0xFEA
 10752                           fsr0l	equ	0xFE9
 10753                           wreg	equ	0xFE8
 10754                           indf1	equ	0xFE7
 10755                           postinc1	equ	0xFE6
 10756                           postdec1	equ	0xFE5
 10757                           fsr1h	equ	0xFE2
 10758                           fsr1l	equ	0xFE1
 10759                           indf2	equ	0xFDF
 10760                           postinc2	equ	0xFDE
 10761                           postdec2	equ	0xFDD
 10762                           plusw2	equ	0xFDB
 10763                           fsr2h	equ	0xFDA
 10764                           fsr2l	equ	0xFD9
 10765                           status	equ	0xFD8
 10766                           
 10767 ;; *************** function _Midi_Read *****************
 10768 ;; Defined at:
 10769 ;;		line 94 in file "midi.c"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;  AData           2    0[BANK0 ] PTR struct .
 10772 ;;		 -> main@LMidiData(5), 
 10773 ;;  AMidiBuffer     2    2[BANK0 ] PTR struct .
 10774 ;;		 -> _MidiInput(324), 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;		None
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      unsigned char 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10786 ;;      Params:         0       4       0       0       0       0       0       0       0
 10787 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10788 ;;      Temps:          0       1       0       0       0       0       0       0       0
 10789 ;;      Totals:         0       5       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        5 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    7
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           	psect	text41
 10801  00423C                     __ptext41:
 10802                           	opt stack 0
 10803  00423C                     _Midi_Read:
 10804                           	opt stack 23
 10805                           
 10806                           ;midi.c: 96: if (AMidiBuffer->Size > 0)
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;incstack = 0
 10810  00423C  0100               	movlb	0	; () banked
 10811  00423E  EE21 F043          	lfsr	2,323
 10812  004242  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10813  004244  26D9               	addwf	fsr2l,f,c
 10814  004246  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10815  004248  22DA               	addwfc	fsr2h,f,c
 10816  00424A  50DF               	movf	indf2,w,c
 10817  00424C  B4D8               	btfsc	status,2,c
 10818  00424E  D03A               	goto	l1181
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;midi.c: 97: {
 10822                           ;midi.c: 98: *AData = AMidiBuffer->Buffer[AMidiBuffer->iBufferRead];
 10823  004250  EE21 F040          	lfsr	2,320
 10824  004254  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10825  004256  26D9               	addwf	fsr2l,f,c
 10826  004258  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10827  00425A  22DA               	addwfc	fsr2h,f,c
 10828  00425C  50DF               	movf	indf2,w,c
 10829  00425E  6F64               	movwf	??_Midi_Read& (0+255),b
 10830  004260  5164               	movf	??_Midi_Read& (0+255),w,b
 10831  004262  0D05               	mullw	5
 10832  004264  50F3               	movf	prodl,w,c
 10833  004266  2562               	addwf	Midi_Read@AMidiBuffer& (0+255),w,b
 10834  004268  6ED9               	movwf	fsr2l,c
 10835  00426A  50F4               	movf	prodh,w,c
 10836  00426C  2163               	addwfc	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10837  00426E  6EDA               	movwf	fsr2h,c
 10838  004270  C060  FFE1         	movff	Midi_Read@AData,fsr1l
 10839  004274  C061  FFE2         	movff	Midi_Read@AData+1,fsr1h
 10840  004278  0E04               	movlw	4
 10841  00427A                     u9471:
 10842  00427A  CFDB FFE3          	movff	plusw2,plusw1
 10843  00427E  06E8               	decf	wreg,f,c
 10844  004280  E2FC               	bc	u9471
 10845                           
 10846                           ; BSR set to: 0
 10847                           ;midi.c: 99: AMidiBuffer->Size--;
 10848  004282  EE21 F043          	lfsr	2,323
 10849  004286  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10850  004288  26D9               	addwf	fsr2l,f,c
 10851  00428A  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10852  00428C  22DA               	addwfc	fsr2h,f,c
 10853  00428E  06DF               	decf	indf2,f,c
 10854                           
 10855                           ; BSR set to: 0
 10856                           ;midi.c: 100: AMidiBuffer->iBufferRead++;
 10857  004290  EE21 F040          	lfsr	2,320
 10858  004294  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10859  004296  26D9               	addwf	fsr2l,f,c
 10860  004298  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10861  00429A  22DA               	addwfc	fsr2h,f,c
 10862  00429C  2ADF               	incf	indf2,f,c
 10863                           
 10864                           ; BSR set to: 0
 10865                           ;midi.c: 101: if (AMidiBuffer->iBufferRead >= 64)
 10866  00429E  EE21 F040          	lfsr	2,320
 10867  0042A2  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10868  0042A4  26D9               	addwf	fsr2l,f,c
 10869  0042A6  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10870  0042A8  22DA               	addwfc	fsr2h,f,c
 10871  0042AA  0E3F               	movlw	63
 10872  0042AC  64DF               	cpfsgt	indf2,c
 10873  0042AE  D008               	goto	l1182
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;midi.c: 102: AMidiBuffer->iBufferRead = 0;
 10877  0042B0  EE21 F040          	lfsr	2,320
 10878  0042B4  5162               	movf	Midi_Read@AMidiBuffer& (0+255),w,b
 10879  0042B6  26D9               	addwf	fsr2l,f,c
 10880  0042B8  5163               	movf	(Midi_Read@AMidiBuffer+1)& (0+255),w,b
 10881  0042BA  22DA               	addwfc	fsr2h,f,c
 10882  0042BC  0E00               	movlw	0
 10883  0042BE  6EDF               	movwf	indf2,c
 10884  0042C0                     l1182:
 10885                           
 10886                           ; BSR set to: 0
 10887                           ;midi.c: 103: return 1;
 10888                           
 10889                           ; BSR set to: 0
 10890  0042C0  0E01               	movlw	1
 10891                           
 10892                           ; BSR set to: 0
 10893                           ;midi.c: 104: }
 10894                           
 10895                           ; BSR set to: 0
 10896  0042C2  0012               	return	
 10897  0042C4                     l1181:
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;midi.c: 105: else
 10901                           ;midi.c: 106: return 0;
 10902                           
 10903                           ; BSR set to: 0
 10904  0042C4  0E00               	movlw	0
 10905                           
 10906                           ; BSR set to: 0
 10907  0042C6  0012               	return	
 10908  0042C8                     __end_of_Midi_Read:
 10909                           	opt stack 0
 10910                           tosu	equ	0xFFF
 10911                           tosh	equ	0xFFE
 10912                           tosl	equ	0xFFD
 10913                           pclath	equ	0xFFA
 10914                           tblptru	equ	0xFF8
 10915                           tblptrh	equ	0xFF7
 10916                           tblptrl	equ	0xFF6
 10917                           tablat	equ	0xFF5
 10918                           prodh	equ	0xFF4
 10919                           prodl	equ	0xFF3
 10920                           indf0	equ	0xFEF
 10921                           postinc0	equ	0xFEE
 10922                           plusw0	equ	0xFEB
 10923                           fsr0h	equ	0xFEA
 10924                           fsr0l	equ	0xFE9
 10925                           wreg	equ	0xFE8
 10926                           indf1	equ	0xFE7
 10927                           postinc1	equ	0xFE6
 10928                           postdec1	equ	0xFE5
 10929                           plusw1	equ	0xFE3
 10930                           fsr1h	equ	0xFE2
 10931                           fsr1l	equ	0xFE1
 10932                           indf2	equ	0xFDF
 10933                           postinc2	equ	0xFDE
 10934                           postdec2	equ	0xFDD
 10935                           plusw2	equ	0xFDB
 10936                           fsr2h	equ	0xFDA
 10937                           fsr2l	equ	0xFD9
 10938                           status	equ	0xFD8
 10939                           
 10940 ;; *************** function _Load *****************
 10941 ;; Defined at:
 10942 ;;		line 120 in file "main.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  AChannel        1    wreg     unsigned char 
 10945 ;; Auto vars:     Size  Location     Type
 10946 ;;  AChannel        1  102[BANK0 ] unsigned char 
 10947 ;;  i               2  105[BANK0 ] int 
 10948 ;;  i               2  103[BANK0 ] int 
 10949 ;;  LBuffer        12   90[BANK0 ] unsigned char [12]
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10959 ;;      Params:         0       0       0       0       0       0       0       0       0
 10960 ;;      Locals:         0      17       0       0       0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10962 ;;      Totals:         0      17       0       0       0       0       0       0       0
 10963 ;;Total ram usage:       17 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:   11
 10966 ;; This function calls:
 10967 ;;		_Hub_CopyBuffer
 10968 ;;		_Persistant_LoadBuffer
 10969 ;;		_Persistant_WriteInternalMemory
 10970 ;;		___awdiv
 10971 ;;		_memcpy
 10972 ;; This function is called by:
 10973 ;;		_main
 10974 ;; This function uses a non-reentrant model
 10975 ;;
 10976                           
 10977                           	psect	text42
 10978  00396A                     __ptext42:
 10979                           	opt stack 0
 10980  00396A                     _Load:
 10981                           	opt stack 19
 10982                           
 10983                           ; BSR set to: 0
 10984                           ;incstack = 0
 10985                           ;Load@AChannel stored from wreg
 10986  00396A  0100               	movlb	0	; () banked
 10987  00396C  6FC6               	movwf	Load@AChannel& (0+255),b
 10988                           
 10989                           ;main.c: 122: _Hub.PrimaryBuffer.Channel = AChannel;
 10990  00396E  C0C6  F1A3         	movff	Load@AChannel,__Hub+100
 10991                           
 10992                           ;main.c: 125: Persistant_LoadBuffer(&_Hub.PrimaryBuffer);
 10993  003972  0EA1               	movlw	low (__Hub+98)
 10994  003974  0100               	movlb	0	; () banked
 10995  003976  6FAB               	movwf	Persistant_LoadBuffer@ABuffer& (0+255),b
 10996  003978  0E01               	movlw	high (__Hub+98)
 10997  00397A  6FAC               	movwf	(Persistant_LoadBuffer@ABuffer+1)& (0+255),b
 10998  00397C  EC55  F01C         	call	_Persistant_LoadBuffer	;wreg free
 10999                           
 11000                           ;main.c: 126: Hub_CopyBuffer();
 11001  003980  ECCE  F028         	call	_Hub_CopyBuffer	;wreg free
 11002                           
 11003                           ;main.c: 127: _Config.Channel = AChannel / 2;
 11004  003984  C0C6  F060         	movff	Load@AChannel,___awdiv@dividend
 11005  003988  0100               	movlb	0	; () banked
 11006  00398A  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 11007  00398C  0E00               	movlw	0
 11008  00398E  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 11009  003990  0E02               	movlw	2
 11010  003992  6F62               	movwf	___awdiv@divisor& (0+255),b
 11011  003994  ECA7  F021         	call	___awdiv	;wreg free
 11012  003998  0100               	movlb	0	; () banked
 11013  00399A  5160               	movf	?___awdiv& (0+255),w,b
 11014  00399C  0102               	movlb	2	; () banked
 11015  00399E  6FE0               	movwf	__Config& (0+255),b
 11016                           
 11017                           ; BSR set to: 2
 11018                           ;main.c: 128: unsigned char LBuffer[sizeof(_Config)];
 11019                           ;main.c: 129: memcpy(LBuffer, &_Config, sizeof(_Config));
 11020  0039A0  0EBA               	movlw	low Load@LBuffer
 11021  0039A2  0100               	movlb	0	; () banked
 11022  0039A4  6F60               	movwf	memcpy@d1& (0+255),b
 11023  0039A6  0E00               	movlw	high Load@LBuffer
 11024  0039A8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11025  0039AA  0EE0               	movlw	low __Config
 11026  0039AC  6F62               	movwf	memcpy@s1& (0+255),b
 11027  0039AE  0E02               	movlw	high __Config
 11028  0039B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11029  0039B2  0E00               	movlw	0
 11030  0039B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11031  0039B6  0E0C               	movlw	12
 11032  0039B8  6F64               	movwf	memcpy@n& (0+255),b
 11033  0039BA  ECB4  F026         	call	_memcpy	;wreg free
 11034                           
 11035                           ;main.c: 130: for(int i = 0; i < sizeof(_Config); i++)
 11036  0039BE  0E00               	movlw	0
 11037  0039C0  0100               	movlb	0	; () banked
 11038  0039C2  6FC8               	movwf	(Load@i+1)& (0+255),b
 11039  0039C4  0E00               	movlw	0
 11040  0039C6  6FC7               	movwf	Load@i& (0+255),b
 11041  0039C8                     l7651:
 11042                           
 11043                           ; BSR set to: 0
 11044  0039C8  51C8               	movf	(Load@i+1)& (0+255),w,b
 11045  0039CA  E110               	bnz	l7661
 11046  0039CC  0E0C               	movlw	12
 11047  0039CE  5DC7               	subwf	Load@i& (0+255),w,b
 11048  0039D0  B0D8               	btfsc	status,0,c
 11049  0039D2  D00C               	goto	u9390
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;main.c: 131: Persistant_WriteInternalMemory(i, LBuffer);
 11053                           
 11054                           ; BSR set to: 0
 11055                           
 11056                           ; BSR set to: 0
 11057  0039D4  C0C7  F06A         	movff	Load@i,Persistant_WriteInternalMemory@AAddress
 11058  0039D8  C0C8  F06B         	movff	Load@i+1,Persistant_WriteInternalMemory@AAddress+1
 11059  0039DC  0EBA               	movlw	low Load@LBuffer
 11060  0039DE  6F6C               	movwf	Persistant_WriteInternalMemory@AData& (0+255),b
 11061  0039E0  ECF1  F025         	call	_Persistant_WriteInternalMemory	;wreg free
 11062  0039E4  0100               	movlb	0	; () banked
 11063  0039E6  4BC7               	infsnz	Load@i& (0+255),f,b
 11064  0039E8  2BC8               	incf	(Load@i+1)& (0+255),f,b
 11065  0039EA  D7EE               	goto	l7651
 11066  0039EC                     u9390:
 11067  0039EC                     l7661:
 11068                           
 11069                           ; BSR set to: 0
 11070                           ;main.c: 133: for (int i = 0; i < 2; i++)
 11071  0039EC  0E00               	movlw	0
 11072  0039EE  6FCA               	movwf	(Load@i_2411+1)& (0+255),b
 11073  0039F0  0E00               	movlw	0
 11074  0039F2  6FC9               	movwf	Load@i_2411& (0+255),b
 11075  0039F4                     l7663:
 11076                           
 11077                           ; BSR set to: 0
 11078  0039F4  BFCA               	btfsc	(Load@i_2411+1)& (0+255),7,b
 11079  0039F6  D006               	goto	l615
 11080  0039F8  51CA               	movf	(Load@i_2411+1)& (0+255),w,b
 11081  0039FA  E10F               	bnz	l7673
 11082  0039FC  0E02               	movlw	2
 11083  0039FE  5DC9               	subwf	Load@i_2411& (0+255),w,b
 11084  003A00  B0D8               	btfsc	status,0,c
 11085  003A02  D00B               	goto	u9410
 11086  003A04                     l615:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;main.c: 134: _Display.PointMask[i] = 0x08;
 11090                           
 11091                           ; BSR set to: 0
 11092  003A04  0ED2               	movlw	low (__Display+200)
 11093  003A06  25C9               	addwf	Load@i_2411& (0+255),w,b
 11094  003A08  6ED9               	movwf	fsr2l,c
 11095  003A0A  0E02               	movlw	high (__Display+200)
 11096  003A0C  21CA               	addwfc	(Load@i_2411+1)& (0+255),w,b
 11097  003A0E  6EDA               	movwf	fsr2h,c
 11098  003A10  0E08               	movlw	8
 11099  003A12  6EDF               	movwf	indf2,c
 11100                           
 11101                           ; BSR set to: 0
 11102  003A14  4BC9               	infsnz	Load@i_2411& (0+255),f,b
 11103  003A16  2BCA               	incf	(Load@i_2411+1)& (0+255),f,b
 11104  003A18  D7ED               	goto	l7663
 11105  003A1A                     u9410:
 11106  003A1A                     l7673:
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;main.c: 135: _Modified = 0;
 11110  003A1A  0E00               	movlw	0
 11111  003A1C  0101               	movlb	1	; () banked
 11112  003A1E  6F34               	movwf	__Modified& (0+255),b
 11113                           
 11114                           ; BSR set to: 1
 11115  003A20  0012               	return		;funcret
 11116  003A22                     __end_of_Load:
 11117                           	opt stack 0
 11118                           tosu	equ	0xFFF
 11119                           tosh	equ	0xFFE
 11120                           tosl	equ	0xFFD
 11121                           pclath	equ	0xFFA
 11122                           tblptru	equ	0xFF8
 11123                           tblptrh	equ	0xFF7
 11124                           tblptrl	equ	0xFF6
 11125                           tablat	equ	0xFF5
 11126                           prodh	equ	0xFF4
 11127                           prodl	equ	0xFF3
 11128                           indf0	equ	0xFEF
 11129                           postinc0	equ	0xFEE
 11130                           plusw0	equ	0xFEB
 11131                           fsr0h	equ	0xFEA
 11132                           fsr0l	equ	0xFE9
 11133                           wreg	equ	0xFE8
 11134                           indf1	equ	0xFE7
 11135                           postinc1	equ	0xFE6
 11136                           postdec1	equ	0xFE5
 11137                           plusw1	equ	0xFE3
 11138                           fsr1h	equ	0xFE2
 11139                           fsr1l	equ	0xFE1
 11140                           indf2	equ	0xFDF
 11141                           postinc2	equ	0xFDE
 11142                           postdec2	equ	0xFDD
 11143                           plusw2	equ	0xFDB
 11144                           fsr2h	equ	0xFDA
 11145                           fsr2l	equ	0xFD9
 11146                           status	equ	0xFD8
 11147                           
 11148 ;; *************** function _Persistant_WriteInternalMemory *****************
 11149 ;; Defined at:
 11150 ;;		line 81 in file "persistant.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  AAddress        2   10[BANK0 ] int 
 11153 ;;  AData           1   12[BANK0 ] unsigned char 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;  LState          1   13[BANK0 ] unsigned char 
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      unsigned char 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, cstack
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11165 ;;      Params:         0       3       0       0       0       0       0       0       0
 11166 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11168 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11169 ;;Total ram usage:        4 bytes
 11170 ;; Hardware stack levels used:    1
 11171 ;; Hardware stack levels required when called:    8
 11172 ;; This function calls:
 11173 ;;		_Persistant_ReadInternalMemory
 11174 ;; This function is called by:
 11175 ;;		_Load
 11176 ;;		_Persistant_SaveBuffer
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text43
 11181  004BE2                     __ptext43:
 11182                           	opt stack 0
 11183  004BE2                     _Persistant_WriteInternalMemory:
 11184                           	opt stack 21
 11185                           
 11186                           ;persistant.c: 83: EECON1bits.WREN = 1;
 11187                           
 11188                           ; BSR set to: 1
 11189                           ;incstack = 0
 11190  004BE2  84A6               	bsf	4006,2,c	;volsfr
 11191                           
 11192                           ;persistant.c: 84: EEADR = AAddress;
 11193  004BE4  C06A  FFA9         	movff	Persistant_WriteInternalMemory@AAddress,4009	;volatile
 11194                           
 11195                           ;persistant.c: 85: EEDATA = AData;
 11196  004BE8  C06C  FFA8         	movff	Persistant_WriteInternalMemory@AData,4008	;volatile
 11197                           
 11198                           ;persistant.c: 86: EECON1bits.EEPGD = 0;
 11199  004BEC  9EA6               	bcf	4006,7,c	;volsfr
 11200                           
 11201                           ;persistant.c: 87: EECON1bits.CFGS = 0;
 11202  004BEE  9CA6               	bcf	4006,6,c	;volsfr
 11203                           
 11204                           ;persistant.c: 88: unsigned char LState = INTCONbits.GIE;
 11205  004BF0  0E00               	movlw	0
 11206  004BF2  BEF2               	btfsc	intcon,7,c	;volatile
 11207  004BF4  0E01               	movlw	1
 11208  004BF6  0100               	movlb	0	; () banked
 11209  004BF8  6F6D               	movwf	Persistant_WriteInternalMemory@LState& (0+255),b
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;persistant.c: 89: INTCONbits.GIE = 0;
 11213  004BFA  9EF2               	bcf	intcon,7,c	;volatile
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;persistant.c: 91: EECON2 = 0x55;
 11217  004BFC  0E55               	movlw	85
 11218  004BFE  6EA7               	movwf	4007,c	;volsfr
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;persistant.c: 92: EECON2 = 0xAA;
 11222  004C00  0EAA               	movlw	170
 11223  004C02  6EA7               	movwf	4007,c	;volsfr
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;persistant.c: 93: EECON1bits.WR = 1;
 11227  004C04  82A6               	bsf	4006,1,c	;volsfr
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;persistant.c: 95: INTCONbits.GIE = LState;
 11231  004C06  B16D               	btfsc	Persistant_WriteInternalMemory@LState& (0+255),0,b
 11232  004C08  D002               	bra	u8045
 11233  004C0A  9EF2               	bcf	intcon,7,c	;volatile
 11234  004C0C  D001               	bra	u8046
 11235  004C0E                     u8045:
 11236  004C0E  8EF2               	bsf	intcon,7,c	;volatile
 11237  004C10                     u8046:
 11238                           
 11239                           ;persistant.c: 96: while (EECON1bits.WR == 1);
 11240  004C10  B2A6               	btfsc	4006,1,c	;volsfr
 11241  004C12  D7FE               	goto	u8046
 11242                           
 11243                           ;persistant.c: 97: EECON1bits.WREN = 0;
 11244  004C14  94A6               	bcf	4006,2,c	;volsfr
 11245                           
 11246                           ;persistant.c: 100: return (bool)(Persistant_ReadInternalMemory(AAddress) == AData);
 11247  004C16  C06A  F068         	movff	Persistant_WriteInternalMemory@AAddress,Persistant_ReadInternalMemory@AAddress
 11248  004C1A  C06B  F069         	movff	Persistant_WriteInternalMemory@AAddress+1,Persistant_ReadInternalMemory@AAddress+
      +                          1
 11249  004C1E  EC76  F02A         	call	_Persistant_ReadInternalMemory	;wreg free
 11250  004C22  0100               	movlb	0	; () banked
 11251  004C24  196C               	xorwf	Persistant_WriteInternalMemory@AData& (0+255),w,b
 11252  004C26  A4D8               	btfss	status,2,c
 11253  004C28  D002               	goto	u8060
 11254  004C2A  0E01               	movlw	1
 11255  004C2C  0012               	return	
 11256  004C2E                     u8060:
 11257  004C2E  0E00               	movlw	0
 11258  004C30  0012               	return	
 11259  004C32                     __end_of_Persistant_WriteInternalMemory:
 11260                           	opt stack 0
 11261                           tosu	equ	0xFFF
 11262                           tosh	equ	0xFFE
 11263                           tosl	equ	0xFFD
 11264                           pclath	equ	0xFFA
 11265                           tblptru	equ	0xFF8
 11266                           tblptrh	equ	0xFF7
 11267                           tblptrl	equ	0xFF6
 11268                           tablat	equ	0xFF5
 11269                           prodh	equ	0xFF4
 11270                           prodl	equ	0xFF3
 11271                           intcon	equ	0xFF2
 11272                           indf0	equ	0xFEF
 11273                           postinc0	equ	0xFEE
 11274                           plusw0	equ	0xFEB
 11275                           fsr0h	equ	0xFEA
 11276                           fsr0l	equ	0xFE9
 11277                           wreg	equ	0xFE8
 11278                           indf1	equ	0xFE7
 11279                           postinc1	equ	0xFE6
 11280                           postdec1	equ	0xFE5
 11281                           plusw1	equ	0xFE3
 11282                           fsr1h	equ	0xFE2
 11283                           fsr1l	equ	0xFE1
 11284                           indf2	equ	0xFDF
 11285                           postinc2	equ	0xFDE
 11286                           postdec2	equ	0xFDD
 11287                           plusw2	equ	0xFDB
 11288                           fsr2h	equ	0xFDA
 11289                           fsr2l	equ	0xFD9
 11290                           status	equ	0xFD8
 11291                           
 11292 ;; *************** function _InitApp *****************
 11293 ;; Defined at:
 11294 ;;		line 22 in file "user.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;  test            1  118[BANK0 ] unsigned char 
 11299 ;;  LResult         1  117[BANK0 ] unsigned char 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  1    wreg      void 
 11302 ;; Registers used:
 11303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0
 11310 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11312 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11313 ;;Total ram usage:        2 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:   13
 11316 ;; This function calls:
 11317 ;;		_Display_Init
 11318 ;;		_Display_ProcessData
 11319 ;;		_Hub_CopyBuffer
 11320 ;;		_Hub_Init
 11321 ;;		_InitDigiPot
 11322 ;;		_Midi_Init
 11323 ;;		_Persistant_Init
 11324 ;;		_Persistant_LoadBuffer
 11325 ;;		_Persistant_ReadExternalMemory
 11326 ;;		_Persistant_WriteExternalMemory
 11327 ;;		_Sequencer_Start
 11328 ;; This function is called by:
 11329 ;;		_main
 11330 ;; This function uses a non-reentrant model
 11331 ;;
 11332                           
 11333                           	psect	text44
 11334  0044D8                     __ptext44:
 11335                           	opt stack 0
 11336  0044D8                     _InitApp:
 11337                           	opt stack 17
 11338                           
 11339                           ;user.c: 24: ADCON1 = 0x0F;
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;incstack = 0
 11343  0044D8  0E0F               	movlw	15
 11344  0044DA  6EC1               	movwf	4033,c	;volatile
 11345                           
 11346                           ;user.c: 33: PEIE = 1;
 11347  0044DC  8CF2               	bsf	intcon,6,c	;volatile
 11348                           
 11349                           ;user.c: 34: GIE = 1;
 11350  0044DE  8EF2               	bsf	intcon,7,c	;volatile
 11351                           
 11352                           ;user.c: 36: Persistant_Init();
 11353  0044E0  ECE1  F029         	call	_Persistant_Init	;wreg free
 11354                           
 11355                           ;user.c: 37: Hub_Init();
 11356  0044E4  EC0B  F01F         	call	_Hub_Init	;wreg free
 11357                           
 11358                           ;user.c: 38: Display_Init();
 11359  0044E8  EC34  F011         	call	_Display_Init	;wreg free
 11360                           
 11361                           ;user.c: 40: bool LResult = Persistant_WriteExternalMemory(0x0001, 0x0F);
 11362  0044EC  0E00               	movlw	0
 11363  0044EE  0100               	movlb	0	; () banked
 11364  0044F0  6F73               	movwf	(Persistant_WriteExternalMemory@AAddress+1)& (0+255),b
 11365  0044F2  0E01               	movlw	1
 11366  0044F4  6F72               	movwf	Persistant_WriteExternalMemory@AAddress& (0+255),b
 11367  0044F6  0E0F               	movlw	15
 11368  0044F8  6F74               	movwf	Persistant_WriteExternalMemory@AData& (0+255),b
 11369  0044FA  EC06  F024         	call	_Persistant_WriteExternalMemory	;wreg free
 11370  0044FE  0100               	movlb	0	; () banked
 11371  004500  6FD5               	movwf	InitApp@LResult& (0+255),b
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;user.c: 41: unsigned char test = Persistant_ReadExternalMemory(0x0001);
 11375  004502  0E00               	movlw	0
 11376  004504  6F70               	movwf	(Persistant_ReadExternalMemory@AAddress+1)& (0+255),b
 11377  004506  0E01               	movlw	1
 11378  004508  6F6F               	movwf	Persistant_ReadExternalMemory@AAddress& (0+255),b
 11379  00450A  EC0F  F025         	call	_Persistant_ReadExternalMemory	;wreg free
 11380  00450E  0100               	movlb	0	; () banked
 11381  004510  6FD6               	movwf	InitApp@test& (0+255),b
 11382                           
 11383                           ; BSR set to: 0
 11384                           ;user.c: 51: _Hub.PrimaryBuffer.Channel = test * 2;
 11385  004512  51D6               	movf	InitApp@test& (0+255),w,b
 11386  004514  0D02               	mullw	2
 11387  004516  CFF3 F1A3          	movff	prodl,__Hub+100
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;user.c: 53: Persistant_LoadBuffer(&_Hub.PrimaryBuffer);
 11391  00451A  0EA1               	movlw	low (__Hub+98)
 11392  00451C  6FAB               	movwf	Persistant_LoadBuffer@ABuffer& (0+255),b
 11393  00451E  0E01               	movlw	high (__Hub+98)
 11394  004520  6FAC               	movwf	(Persistant_LoadBuffer@ABuffer+1)& (0+255),b
 11395  004522  EC55  F01C         	call	_Persistant_LoadBuffer	;wreg free
 11396                           
 11397                           ;user.c: 54: Hub_CopyBuffer();
 11398  004526  ECCE  F028         	call	_Hub_CopyBuffer	;wreg free
 11399                           
 11400                           ;user.c: 56: Display_ProcessData(_Hub.PrimaryBuffer.Channel, _Hub.PrimaryBuffer.Values, 
      +                          1, _Hub.PrimaryBuffer.PushedButton);
 11401  00452A  0EA5               	movlw	low (__Hub+102)
 11402  00452C  0100               	movlb	0	; () banked
 11403  00452E  6F6A               	movwf	Display_ProcessData@AValues& (0+255),b
 11404  004530  0E01               	movlw	high (__Hub+102)
 11405  004532  6F6B               	movwf	(Display_ProcessData@AValues+1)& (0+255),b
 11406  004534  0E01               	movlw	1
 11407  004536  6F6C               	movwf	Display_ProcessData@ALoaded& (0+255),b
 11408  004538  C1A2  F06D         	movff	__Hub+99,Display_ProcessData@APushed
 11409  00453C  0101               	movlb	1	; () banked
 11410  00453E  51A3               	movf	(__Hub+100)& (0+255),w,b
 11411  004540  EC29  F007         	call	_Display_ProcessData
 11412                           
 11413                           ;user.c: 57: Sequencer_Start();
 11414  004544  EC56  F02A         	call	_Sequencer_Start	;wreg free
 11415                           
 11416                           ;user.c: 58: InitDigiPot();
 11417  004548  EC92  F010         	call	_InitDigiPot	;wreg free
 11418                           
 11419                           ;user.c: 59: Midi_Init();
 11420  00454C  ECD3  F011         	call	_Midi_Init	;wreg free
 11421  004550  0012               	return		;funcret
 11422  004552                     __end_of_InitApp:
 11423                           	opt stack 0
 11424                           tosu	equ	0xFFF
 11425                           tosh	equ	0xFFE
 11426                           tosl	equ	0xFFD
 11427                           pclath	equ	0xFFA
 11428                           tblptru	equ	0xFF8
 11429                           tblptrh	equ	0xFF7
 11430                           tblptrl	equ	0xFF6
 11431                           tablat	equ	0xFF5
 11432                           prodh	equ	0xFF4
 11433                           prodl	equ	0xFF3
 11434                           intcon	equ	0xFF2
 11435                           indf0	equ	0xFEF
 11436                           postinc0	equ	0xFEE
 11437                           plusw0	equ	0xFEB
 11438                           fsr0h	equ	0xFEA
 11439                           fsr0l	equ	0xFE9
 11440                           wreg	equ	0xFE8
 11441                           indf1	equ	0xFE7
 11442                           postinc1	equ	0xFE6
 11443                           postdec1	equ	0xFE5
 11444                           plusw1	equ	0xFE3
 11445                           fsr1h	equ	0xFE2
 11446                           fsr1l	equ	0xFE1
 11447                           indf2	equ	0xFDF
 11448                           postinc2	equ	0xFDE
 11449                           postdec2	equ	0xFDD
 11450                           plusw2	equ	0xFDB
 11451                           fsr2h	equ	0xFDA
 11452                           fsr2l	equ	0xFD9
 11453                           status	equ	0xFD8
 11454                           
 11455 ;; *************** function _Sequencer_Start *****************
 11456 ;; Defined at:
 11457 ;;		line 6 in file "sequencer.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;		None
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      void 
 11464 ;; Registers used:
 11465 ;;		None
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11471 ;;      Params:         0       0       0       0       0       0       0       0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11474 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11475 ;;Total ram usage:        0 bytes
 11476 ;; Hardware stack levels used:    1
 11477 ;; Hardware stack levels required when called:    7
 11478 ;; This function calls:
 11479 ;;		Nothing
 11480 ;; This function is called by:
 11481 ;;		_InitApp
 11482 ;; This function uses a non-reentrant model
 11483 ;;
 11484                           
 11485                           	psect	text45
 11486  0054AC                     __ptext45:
 11487                           	opt stack 0
 11488  0054AC                     _Sequencer_Start:
 11489                           	opt stack 22
 11490                           
 11491                           ;sequencer.c: 9: T0PS0 = 0;
 11492                           
 11493                           ;incstack = 0
 11494  0054AC  90D5               	bcf	4053,0,c	;volatile
 11495                           
 11496                           ;sequencer.c: 10: T0PS1 = 1;
 11497  0054AE  82D5               	bsf	4053,1,c	;volatile
 11498                           
 11499                           ;sequencer.c: 11: T0PS2 = 1;
 11500  0054B0  84D5               	bsf	4053,2,c	;volatile
 11501                           
 11502                           ;sequencer.c: 13: PSA = 0;
 11503  0054B2  96D5               	bcf	4053,3,c	;volatile
 11504                           
 11505                           ;sequencer.c: 14: T0CS = 0;
 11506  0054B4  9AD5               	bcf	4053,5,c	;volatile
 11507                           
 11508                           ;sequencer.c: 15: T08BIT = 1;
 11509  0054B6  8CD5               	bsf	4053,6,c	;volatile
 11510                           
 11511                           ;sequencer.c: 17: TMR0IE = 1;
 11512  0054B8  8AF2               	bsf	intcon,5,c	;volatile
 11513                           
 11514                           ;sequencer.c: 18: TMR0ON = 1;
 11515  0054BA  8ED5               	bsf	4053,7,c	;volatile
 11516  0054BC  0012               	return		;funcret
 11517  0054BE                     __end_of_Sequencer_Start:
 11518                           	opt stack 0
 11519                           tosu	equ	0xFFF
 11520                           tosh	equ	0xFFE
 11521                           tosl	equ	0xFFD
 11522                           pclath	equ	0xFFA
 11523                           tblptru	equ	0xFF8
 11524                           tblptrh	equ	0xFF7
 11525                           tblptrl	equ	0xFF6
 11526                           tablat	equ	0xFF5
 11527                           prodh	equ	0xFF4
 11528                           prodl	equ	0xFF3
 11529                           intcon	equ	0xFF2
 11530                           indf0	equ	0xFEF
 11531                           postinc0	equ	0xFEE
 11532                           plusw0	equ	0xFEB
 11533                           fsr0h	equ	0xFEA
 11534                           fsr0l	equ	0xFE9
 11535                           wreg	equ	0xFE8
 11536                           indf1	equ	0xFE7
 11537                           postinc1	equ	0xFE6
 11538                           postdec1	equ	0xFE5
 11539                           plusw1	equ	0xFE3
 11540                           fsr1h	equ	0xFE2
 11541                           fsr1l	equ	0xFE1
 11542                           indf2	equ	0xFDF
 11543                           postinc2	equ	0xFDE
 11544                           postdec2	equ	0xFDD
 11545                           plusw2	equ	0xFDB
 11546                           fsr2h	equ	0xFDA
 11547                           fsr2l	equ	0xFD9
 11548                           status	equ	0xFD8
 11549                           
 11550 ;; *************** function _Persistant_WriteExternalMemory *****************
 11551 ;; Defined at:
 11552 ;;		line 51 in file "persistant.c"
 11553 ;; Parameters:    Size  Location     Type
 11554 ;;  AAddress        2   18[BANK0 ] int 
 11555 ;;  AData           1   20[BANK0 ] unsigned char 
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      unsigned char 
 11560 ;; Registers used:
 11561 ;;		wreg, status,2, status,0, cstack
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11567 ;;      Params:         0       3       0       0       0       0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11569 ;;      Temps:          0       1       0       0       0       0       0       0       0
 11570 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11571 ;;Total ram usage:        4 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; Hardware stack levels required when called:   12
 11574 ;; This function calls:
 11575 ;;		_I2C_Ack
 11576 ;;		_I2C_Stop
 11577 ;;		_I2C_Write
 11578 ;;		_Persistant_Address
 11579 ;;		_Persistant_ReadExternalMemory
 11580 ;; This function is called by:
 11581 ;;		_InitApp
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text46
 11586  00480C                     __ptext46:
 11587                           	opt stack 0
 11588  00480C                     _Persistant_WriteExternalMemory:
 11589                           	opt stack 17
 11590                           
 11591                           ;persistant.c: 53: if (Persistant_Address(AAddress, 0))
 11592                           
 11593                           ;incstack = 0
 11594  00480C  C072  F06C         	movff	Persistant_WriteExternalMemory@AAddress,Persistant_Address@AAddress
 11595  004810  C073  F06D         	movff	Persistant_WriteExternalMemory@AAddress+1,Persistant_Address@AAddress+1
 11596  004814  0E00               	movlw	0
 11597  004816  0100               	movlb	0	; () banked
 11598  004818  6F6E               	movwf	Persistant_Address@ARead& (0+255),b
 11599  00481A  ECA1  F027         	call	_Persistant_Address	;wreg free
 11600  00481E  0900               	iorlw	0
 11601  004820  B4D8               	btfsc	status,2,c
 11602  004822  D029               	goto	l949
 11603                           
 11604                           ;persistant.c: 54: {
 11605                           ;persistant.c: 55: if (I2C_Write(AData))
 11606  004824  0100               	movlb	0	; () banked
 11607  004826  5174               	movf	Persistant_WriteExternalMemory@AData& (0+255),w,b
 11608  004828  ECF4  F028         	call	_I2C_Write
 11609  00482C  0900               	iorlw	0
 11610  00482E  B4D8               	btfsc	status,2,c
 11611  004830  D022               	goto	l949
 11612                           
 11613                           ;persistant.c: 56: {
 11614                           ;persistant.c: 57: if (I2C_Ack(1))
 11615  004832  0E01               	movlw	1
 11616  004834  EC78  F028         	call	_I2C_Ack
 11617  004838  0900               	iorlw	0
 11618  00483A  B4D8               	btfsc	status,2,c
 11619  00483C  D01C               	goto	l949
 11620                           
 11621                           ;persistant.c: 58: {
 11622                           ;persistant.c: 59: if (I2C_Stop())
 11623  00483E  EC78  F029         	call	_I2C_Stop	;wreg free
 11624  004842  0900               	iorlw	0
 11625  004844  B4D8               	btfsc	status,2,c
 11626  004846  D017               	goto	l949
 11627                           
 11628                           ;persistant.c: 60: {
 11629                           ;persistant.c: 61: _delay((unsigned long)((5)*(20000000/4000.0)));
 11630  004848  0E21               	movlw	33
 11631  00484A  0100               	movlb	0	; () banked
 11632  00484C  6F75               	movwf	??_Persistant_WriteExternalMemory& (0+255),b
 11633  00484E  0E76               	movlw	118
 11634  004850                     u10317:
 11635  004850  2EE8               	decfsz	wreg,f,c
 11636  004852  D7FE               	bra	u10317
 11637  004854  2F75               	decfsz	??_Persistant_WriteExternalMemory& (0+255),f,b
 11638  004856  D7FC               	bra	u10317
 11639  004858  F000               	nop	
 11640                           
 11641                           ;persistant.c: 62: return Persistant_ReadExternalMemory(AAddress) == AData;
 11642  00485A  C072  F06F         	movff	Persistant_WriteExternalMemory@AAddress,Persistant_ReadExternalMemory@AAddress
 11643  00485E  C073  F070         	movff	Persistant_WriteExternalMemory@AAddress+1,Persistant_ReadExternalMemory@AAddress+
      +                          1
 11644  004862  EC0F  F025         	call	_Persistant_ReadExternalMemory	;wreg free
 11645  004866  0100               	movlb	0	; () banked
 11646  004868  1974               	xorwf	Persistant_WriteExternalMemory@AData& (0+255),w,b
 11647  00486A  A4D8               	btfss	status,2,c
 11648  00486C  D002               	goto	u8380
 11649  00486E  0E01               	movlw	1
 11650  004870  0012               	return	
 11651  004872                     u8380:
 11652  004872  0E00               	movlw	0
 11653                           
 11654                           ; BSR set to: 0
 11655  004874  0012               	return	
 11656  004876                     l949:
 11657                           
 11658                           ;persistant.c: 63: }
 11659                           ;persistant.c: 64: }
 11660                           ;persistant.c: 65: }
 11661                           ;persistant.c: 66: }
 11662                           ;persistant.c: 67: return 0;
 11663                           
 11664                           ; BSR set to: 0
 11665                           
 11666                           ; BSR set to: 0
 11667                           
 11668                           ; BSR set to: 0
 11669                           
 11670                           ; BSR set to: 0
 11671  004876  0E00               	movlw	0
 11672  004878  0012               	return	
 11673  00487A                     __end_of_Persistant_WriteExternalMemory:
 11674                           	opt stack 0
 11675                           tosu	equ	0xFFF
 11676                           tosh	equ	0xFFE
 11677                           tosl	equ	0xFFD
 11678                           pclath	equ	0xFFA
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           intcon	equ	0xFF2
 11686                           indf0	equ	0xFEF
 11687                           postinc0	equ	0xFEE
 11688                           plusw0	equ	0xFEB
 11689                           fsr0h	equ	0xFEA
 11690                           fsr0l	equ	0xFE9
 11691                           wreg	equ	0xFE8
 11692                           indf1	equ	0xFE7
 11693                           postinc1	equ	0xFE6
 11694                           postdec1	equ	0xFE5
 11695                           plusw1	equ	0xFE3
 11696                           fsr1h	equ	0xFE2
 11697                           fsr1l	equ	0xFE1
 11698                           indf2	equ	0xFDF
 11699                           postinc2	equ	0xFDE
 11700                           postdec2	equ	0xFDD
 11701                           plusw2	equ	0xFDB
 11702                           fsr2h	equ	0xFDA
 11703                           fsr2l	equ	0xFD9
 11704                           status	equ	0xFD8
 11705                           
 11706 ;; *************** function _Persistant_ReadExternalMemory *****************
 11707 ;; Defined at:
 11708 ;;		line 31 in file "persistant.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  AAddress        2   15[BANK0 ] int 
 11711 ;; Auto vars:     Size  Location     Type
 11712 ;;  LResult         1   17[BANK0 ] unsigned char 
 11713 ;; Return value:  Size  Location     Type
 11714 ;;                  1    wreg      unsigned char 
 11715 ;; Registers used:
 11716 ;;		wreg, status,2, status,0, cstack
 11717 ;; Tracked objects:
 11718 ;;		On entry : 0/0
 11719 ;;		On exit  : 0/0
 11720 ;;		Unchanged: 0/0
 11721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11722 ;;      Params:         0       2       0       0       0       0       0       0       0
 11723 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11724 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11725 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11726 ;;Total ram usage:        3 bytes
 11727 ;; Hardware stack levels used:    1
 11728 ;; Hardware stack levels required when called:   11
 11729 ;; This function calls:
 11730 ;;		_I2C_Ack
 11731 ;;		_I2C_Read
 11732 ;;		_I2C_Start
 11733 ;;		_I2C_Stop
 11734 ;;		_Persistant_Address
 11735 ;;		_Persistant_ControlByte
 11736 ;; This function is called by:
 11737 ;;		_InitApp
 11738 ;;		_Persistant_WriteExternalMemory
 11739 ;; This function uses a non-reentrant model
 11740 ;;
 11741                           
 11742                           	psect	text47
 11743  004A1E                     __ptext47:
 11744                           	opt stack 0
 11745  004A1E                     _Persistant_ReadExternalMemory:
 11746                           	opt stack 17
 11747                           
 11748                           ;persistant.c: 33: if (Persistant_Address(AAddress, 0))
 11749                           
 11750                           ;incstack = 0
 11751  004A1E  C06F  F06C         	movff	Persistant_ReadExternalMemory@AAddress,Persistant_Address@AAddress
 11752  004A22  C070  F06D         	movff	Persistant_ReadExternalMemory@AAddress+1,Persistant_Address@AAddress+1
 11753  004A26  0E00               	movlw	0
 11754  004A28  0100               	movlb	0	; () banked
 11755  004A2A  6F6E               	movwf	Persistant_Address@ARead& (0+255),b
 11756  004A2C  ECA1  F027         	call	_Persistant_Address	;wreg free
 11757  004A30  0900               	iorlw	0
 11758  004A32  B4D8               	btfsc	status,2,c
 11759  004A34  D023               	goto	l942
 11760                           
 11761                           ;persistant.c: 34: {
 11762                           ;persistant.c: 35: if (I2C_Start())
 11763  004A36  EC69  F029         	call	_I2C_Start	;wreg free
 11764  004A3A  0900               	iorlw	0
 11765  004A3C  B4D8               	btfsc	status,2,c
 11766  004A3E  D01E               	goto	l942
 11767                           
 11768                           ;persistant.c: 36: {
 11769                           ;persistant.c: 37: if (Persistant_ControlByte(AAddress, 1))
 11770  004A40  C06F  F066         	movff	Persistant_ReadExternalMemory@AAddress,Persistant_ControlByte@AAddress
 11771  004A44  C070  F067         	movff	Persistant_ReadExternalMemory@AAddress+1,Persistant_ControlByte@AAddress+1
 11772  004A48  0E01               	movlw	1
 11773  004A4A  0100               	movlb	0	; () banked
 11774  004A4C  6F68               	movwf	Persistant_ControlByte@ARead& (0+255),b
 11775  004A4E  EC14  F028         	call	_Persistant_ControlByte	;wreg free
 11776  004A52  0900               	iorlw	0
 11777  004A54  B4D8               	btfsc	status,2,c
 11778  004A56  D012               	goto	l942
 11779                           
 11780                           ;persistant.c: 38: {
 11781                           ;persistant.c: 39: unsigned char LResult = I2C_Read();
 11782  004A58  ECBE  F027         	call	_I2C_Read	;wreg free
 11783  004A5C  0100               	movlb	0	; () banked
 11784  004A5E  6F71               	movwf	Persistant_ReadExternalMemory@LResult& (0+255),b
 11785                           
 11786                           ;persistant.c: 40: if (I2C_Ack(0))
 11787  004A60  0E00               	movlw	0
 11788  004A62  EC78  F028         	call	_I2C_Ack
 11789  004A66  0900               	iorlw	0
 11790  004A68  B4D8               	btfsc	status,2,c
 11791  004A6A  D008               	goto	l942
 11792                           
 11793                           ;persistant.c: 41: {
 11794                           ;persistant.c: 42: if (I2C_Stop())
 11795  004A6C  EC78  F029         	call	_I2C_Stop	;wreg free
 11796  004A70  0900               	iorlw	0
 11797  004A72  B4D8               	btfsc	status,2,c
 11798  004A74  D003               	goto	l942
 11799                           
 11800                           ;persistant.c: 43: return LResult;
 11801  004A76  0100               	movlb	0	; () banked
 11802  004A78  5171               	movf	Persistant_ReadExternalMemory@LResult& (0+255),w,b
 11803                           
 11804                           ; BSR set to: 0
 11805  004A7A  0012               	return	
 11806  004A7C                     l942:
 11807                           
 11808                           ;persistant.c: 44: }
 11809                           ;persistant.c: 45: }
 11810                           ;persistant.c: 46: }
 11811                           ;persistant.c: 47: }
 11812                           ;persistant.c: 48: return 0x00;
 11813                           
 11814                           ; BSR set to: 0
 11815                           
 11816                           ; BSR set to: 0
 11817                           
 11818                           ; BSR set to: 0
 11819                           
 11820                           ; BSR set to: 0
 11821                           
 11822                           ; BSR set to: 0
 11823  004A7C  0E00               	movlw	0
 11824  004A7E  0012               	return	
 11825  004A80                     __end_of_Persistant_ReadExternalMemory:
 11826                           	opt stack 0
 11827                           tosu	equ	0xFFF
 11828                           tosh	equ	0xFFE
 11829                           tosl	equ	0xFFD
 11830                           pclath	equ	0xFFA
 11831                           tblptru	equ	0xFF8
 11832                           tblptrh	equ	0xFF7
 11833                           tblptrl	equ	0xFF6
 11834                           tablat	equ	0xFF5
 11835                           prodh	equ	0xFF4
 11836                           prodl	equ	0xFF3
 11837                           intcon	equ	0xFF2
 11838                           indf0	equ	0xFEF
 11839                           postinc0	equ	0xFEE
 11840                           plusw0	equ	0xFEB
 11841                           fsr0h	equ	0xFEA
 11842                           fsr0l	equ	0xFE9
 11843                           wreg	equ	0xFE8
 11844                           indf1	equ	0xFE7
 11845                           postinc1	equ	0xFE6
 11846                           postdec1	equ	0xFE5
 11847                           plusw1	equ	0xFE3
 11848                           fsr1h	equ	0xFE2
 11849                           fsr1l	equ	0xFE1
 11850                           indf2	equ	0xFDF
 11851                           postinc2	equ	0xFDE
 11852                           postdec2	equ	0xFDD
 11853                           plusw2	equ	0xFDB
 11854                           fsr2h	equ	0xFDA
 11855                           fsr2l	equ	0xFD9
 11856                           status	equ	0xFD8
 11857                           
 11858 ;; *************** function _Persistant_Address *****************
 11859 ;; Defined at:
 11860 ;;		line 18 in file "persistant.c"
 11861 ;; Parameters:    Size  Location     Type
 11862 ;;  AAddress        2   12[BANK0 ] int 
 11863 ;;  ARead           1   14[BANK0 ] unsigned char 
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      unsigned char 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11875 ;;      Params:         0       3       0       0       0       0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11878 ;;      Totals:         0       3       0       0       0       0       0       0       0
 11879 ;;Total ram usage:        3 bytes
 11880 ;; Hardware stack levels used:    1
 11881 ;; Hardware stack levels required when called:   10
 11882 ;; This function calls:
 11883 ;;		_I2C_Ack
 11884 ;;		_I2C_Start
 11885 ;;		_I2C_Write
 11886 ;;		_Persistant_ControlByte
 11887 ;; This function is called by:
 11888 ;;		_Persistant_ReadExternalMemory
 11889 ;;		_Persistant_WriteExternalMemory
 11890 ;; This function uses a non-reentrant model
 11891 ;;
 11892                           
 11893                           	psect	text48
 11894  004F42                     __ptext48:
 11895                           	opt stack 0
 11896  004F42                     _Persistant_Address:
 11897                           	opt stack 17
 11898                           
 11899                           ;persistant.c: 20: if (I2C_Start())
 11900                           
 11901                           ;incstack = 0
 11902  004F42  EC69  F029         	call	_I2C_Start	;wreg free
 11903  004F46  0900               	iorlw	0
 11904  004F48  B4D8               	btfsc	status,2,c
 11905  004F4A  D016               	goto	l934
 11906                           
 11907                           ;persistant.c: 21: {
 11908                           ;persistant.c: 22: if (Persistant_ControlByte(AAddress, ARead))
 11909  004F4C  C06C  F066         	movff	Persistant_Address@AAddress,Persistant_ControlByte@AAddress
 11910  004F50  C06D  F067         	movff	Persistant_Address@AAddress+1,Persistant_ControlByte@AAddress+1
 11911  004F54  C06E  F068         	movff	Persistant_Address@ARead,Persistant_ControlByte@ARead
 11912  004F58  EC14  F028         	call	_Persistant_ControlByte	;wreg free
 11913  004F5C  0900               	iorlw	0
 11914  004F5E  B4D8               	btfsc	status,2,c
 11915  004F60  D00B               	goto	l934
 11916                           
 11917                           ;persistant.c: 23: {
 11918                           ;persistant.c: 24: if (I2C_Write(AAddress & 0xFF))
 11919  004F62  0100               	movlb	0	; () banked
 11920  004F64  516C               	movf	Persistant_Address@AAddress& (0+255),w,b
 11921  004F66  ECF4  F028         	call	_I2C_Write
 11922  004F6A  0900               	iorlw	0
 11923  004F6C  B4D8               	btfsc	status,2,c
 11924  004F6E  D004               	goto	l934
 11925                           
 11926                           ;persistant.c: 25: return I2C_Ack(1);
 11927  004F70  0E01               	movlw	1
 11928  004F72  EC78  F028         	call	_I2C_Ack
 11929  004F76  0012               	return	
 11930  004F78                     l934:
 11931                           
 11932                           ;persistant.c: 26: }
 11933                           ;persistant.c: 27: }
 11934                           ;persistant.c: 28: return 0;
 11935  004F78  0E00               	movlw	0
 11936  004F7A  0012               	return	
 11937  004F7C                     __end_of_Persistant_Address:
 11938                           	opt stack 0
 11939                           tosu	equ	0xFFF
 11940                           tosh	equ	0xFFE
 11941                           tosl	equ	0xFFD
 11942                           pclath	equ	0xFFA
 11943                           tblptru	equ	0xFF8
 11944                           tblptrh	equ	0xFF7
 11945                           tblptrl	equ	0xFF6
 11946                           tablat	equ	0xFF5
 11947                           prodh	equ	0xFF4
 11948                           prodl	equ	0xFF3
 11949                           intcon	equ	0xFF2
 11950                           indf0	equ	0xFEF
 11951                           postinc0	equ	0xFEE
 11952                           plusw0	equ	0xFEB
 11953                           fsr0h	equ	0xFEA
 11954                           fsr0l	equ	0xFE9
 11955                           wreg	equ	0xFE8
 11956                           indf1	equ	0xFE7
 11957                           postinc1	equ	0xFE6
 11958                           postdec1	equ	0xFE5
 11959                           plusw1	equ	0xFE3
 11960                           fsr1h	equ	0xFE2
 11961                           fsr1l	equ	0xFE1
 11962                           indf2	equ	0xFDF
 11963                           postinc2	equ	0xFDE
 11964                           postdec2	equ	0xFDD
 11965                           plusw2	equ	0xFDB
 11966                           fsr2h	equ	0xFDA
 11967                           fsr2l	equ	0xFD9
 11968                           status	equ	0xFD8
 11969                           
 11970 ;; *************** function _Persistant_ControlByte *****************
 11971 ;; Defined at:
 11972 ;;		line 11 in file "persistant.c"
 11973 ;; Parameters:    Size  Location     Type
 11974 ;;  AAddress        2    6[BANK0 ] int 
 11975 ;;  ARead           1    8[BANK0 ] unsigned char 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;		None
 11978 ;; Return value:  Size  Location     Type
 11979 ;;                  1    wreg      unsigned char 
 11980 ;; Registers used:
 11981 ;;		wreg, status,2, status,0, cstack
 11982 ;; Tracked objects:
 11983 ;;		On entry : 0/0
 11984 ;;		On exit  : 0/0
 11985 ;;		Unchanged: 0/0
 11986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11987 ;;      Params:         0       3       0       0       0       0       0       0       0
 11988 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11989 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11990 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11991 ;;Total ram usage:        6 bytes
 11992 ;; Hardware stack levels used:    1
 11993 ;; Hardware stack levels required when called:    9
 11994 ;; This function calls:
 11995 ;;		_I2C_Ack
 11996 ;;		_I2C_Write
 11997 ;; This function is called by:
 11998 ;;		_Persistant_Address
 11999 ;;		_Persistant_ReadExternalMemory
 12000 ;; This function uses a non-reentrant model
 12001 ;;
 12002                           
 12003                           	psect	text49
 12004  005028                     __ptext49:
 12005                           	opt stack 0
 12006  005028                     _Persistant_ControlByte:
 12007                           	opt stack 18
 12008                           
 12009                           ;persistant.c: 13: if (I2C_Write(0xA0 | 0x06 & (AAddress >> 7) | ARead))
 12010                           
 12011                           ;incstack = 0
 12012  005028  C066  F069         	movff	Persistant_ControlByte@AAddress,??_Persistant_ControlByte
 12013  00502C  C067  F06A         	movff	Persistant_ControlByte@AAddress+1,??_Persistant_ControlByte+1
 12014  005030  0E07               	movlw	7
 12015  005032  0100               	movlb	0	; () banked
 12016  005034  6F6B               	movwf	(??_Persistant_ControlByte+2)& (0+255),b
 12017  005036                     u6705:
 12018  005036  356A               	rlcf	(??_Persistant_ControlByte+1)& (0+255),w,b
 12019  005038  336A               	rrcf	(??_Persistant_ControlByte+1)& (0+255),f,b
 12020  00503A  3369               	rrcf	??_Persistant_ControlByte& (0+255),f,b
 12021  00503C  2F6B               	decfsz	(??_Persistant_ControlByte+2)& (0+255),f,b
 12022  00503E  D7FB               	goto	u6705
 12023  005040  5169               	movf	??_Persistant_ControlByte& (0+255),w,b
 12024  005042  0B06               	andlw	6
 12025  005044  1168               	iorwf	Persistant_ControlByte@ARead& (0+255),w,b
 12026  005046  09A0               	iorlw	160
 12027  005048  ECF4  F028         	call	_I2C_Write
 12028  00504C  0900               	iorlw	0
 12029  00504E  B4D8               	btfsc	status,2,c
 12030  005050  D004               	goto	l928
 12031                           
 12032                           ;persistant.c: 14: return I2C_Ack(1);
 12033  005052  0E01               	movlw	1
 12034  005054  EC78  F028         	call	_I2C_Ack
 12035  005058  0012               	return	
 12036  00505A                     l928:
 12037                           
 12038                           ;persistant.c: 15: return 0;
 12039  00505A  0E00               	movlw	0
 12040  00505C  0012               	return	
 12041  00505E                     __end_of_Persistant_ControlByte:
 12042                           	opt stack 0
 12043                           tosu	equ	0xFFF
 12044                           tosh	equ	0xFFE
 12045                           tosl	equ	0xFFD
 12046                           pclath	equ	0xFFA
 12047                           tblptru	equ	0xFF8
 12048                           tblptrh	equ	0xFF7
 12049                           tblptrl	equ	0xFF6
 12050                           tablat	equ	0xFF5
 12051                           prodh	equ	0xFF4
 12052                           prodl	equ	0xFF3
 12053                           intcon	equ	0xFF2
 12054                           indf0	equ	0xFEF
 12055                           postinc0	equ	0xFEE
 12056                           plusw0	equ	0xFEB
 12057                           fsr0h	equ	0xFEA
 12058                           fsr0l	equ	0xFE9
 12059                           wreg	equ	0xFE8
 12060                           indf1	equ	0xFE7
 12061                           postinc1	equ	0xFE6
 12062                           postdec1	equ	0xFE5
 12063                           plusw1	equ	0xFE3
 12064                           fsr1h	equ	0xFE2
 12065                           fsr1l	equ	0xFE1
 12066                           indf2	equ	0xFDF
 12067                           postinc2	equ	0xFDE
 12068                           postdec2	equ	0xFDD
 12069                           plusw2	equ	0xFDB
 12070                           fsr2h	equ	0xFDA
 12071                           fsr2l	equ	0xFD9
 12072                           status	equ	0xFD8
 12073                           
 12074 ;; *************** function _I2C_Write *****************
 12075 ;; Defined at:
 12076 ;;		line 92 in file "I2C.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;  b               1    wreg     unsigned char 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  b               1    5[BANK0 ] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      unsigned char 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12090 ;;      Params:         0       0       0       0       0       0       0       0       0
 12091 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12093 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12094 ;;Total ram usage:        1 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    8
 12097 ;; This function calls:
 12098 ;;		_I2C_Wait
 12099 ;; This function is called by:
 12100 ;;		_Persistant_ControlByte
 12101 ;;		_Persistant_Address
 12102 ;;		_Persistant_WriteExternalMemory
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           	psect	text50
 12107  0051E8                     __ptext50:
 12108                           	opt stack 0
 12109  0051E8                     _I2C_Write:
 12110                           	opt stack 18
 12111                           
 12112                           ;incstack = 0
 12113                           ;I2C_Write@b stored from wreg
 12114  0051E8  0100               	movlb	0	; () banked
 12115  0051EA  6F65               	movwf	I2C_Write@b& (0+255),b
 12116                           
 12117                           ;I2C.c: 94: if (I2C_Wait())
 12118  0051EC  EC64  F021         	call	_I2C_Wait	;wreg free
 12119  0051F0  0900               	iorlw	0
 12120  0051F2  B4D8               	btfsc	status,2,c
 12121  0051F4  D007               	goto	l1275
 12122                           
 12123                           ;I2C.c: 95: {
 12124                           ;I2C.c: 96: SSPBUF = b;
 12125  0051F6  C065  FFC9         	movff	I2C_Write@b,4041	;volatile
 12126                           
 12127                           ;I2C.c: 98: _I2CCount++;
 12128  0051FA  0101               	movlb	1	; () banked
 12129  0051FC  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12130  0051FE  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12131                           
 12132                           ; BSR set to: 1
 12133                           ;I2C.c: 99: return 1;
 12134  005200  0E01               	movlw	1
 12135                           
 12136                           ; BSR set to: 1
 12137  005202  0012               	return	
 12138  005204                     l1275:
 12139                           
 12140                           ;I2C.c: 100: }
 12141                           ;I2C.c: 101: _I2CResult |= 32;
 12142                           
 12143                           ; BSR set to: 1
 12144  005204  0101               	movlb	1	; () banked
 12145  005206  8B2C               	bsf	__I2CResult& (0+255),5,b
 12146                           
 12147                           ; BSR set to: 1
 12148                           ;I2C.c: 102: return 0;
 12149  005208  0E00               	movlw	0
 12150  00520A  0012               	return	
 12151  00520C                     __end_of_I2C_Write:
 12152                           	opt stack 0
 12153                           tosu	equ	0xFFF
 12154                           tosh	equ	0xFFE
 12155                           tosl	equ	0xFFD
 12156                           pclath	equ	0xFFA
 12157                           tblptru	equ	0xFF8
 12158                           tblptrh	equ	0xFF7
 12159                           tblptrl	equ	0xFF6
 12160                           tablat	equ	0xFF5
 12161                           prodh	equ	0xFF4
 12162                           prodl	equ	0xFF3
 12163                           intcon	equ	0xFF2
 12164                           indf0	equ	0xFEF
 12165                           postinc0	equ	0xFEE
 12166                           plusw0	equ	0xFEB
 12167                           fsr0h	equ	0xFEA
 12168                           fsr0l	equ	0xFE9
 12169                           wreg	equ	0xFE8
 12170                           indf1	equ	0xFE7
 12171                           postinc1	equ	0xFE6
 12172                           postdec1	equ	0xFE5
 12173                           plusw1	equ	0xFE3
 12174                           fsr1h	equ	0xFE2
 12175                           fsr1l	equ	0xFE1
 12176                           indf2	equ	0xFDF
 12177                           postinc2	equ	0xFDE
 12178                           postdec2	equ	0xFDD
 12179                           plusw2	equ	0xFDB
 12180                           fsr2h	equ	0xFDA
 12181                           fsr2l	equ	0xFD9
 12182                           status	equ	0xFD8
 12183                           
 12184 ;; *************** function _I2C_Start *****************
 12185 ;; Defined at:
 12186 ;;		line 33 in file "I2C.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;		None
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;		None
 12191 ;; Return value:  Size  Location     Type
 12192 ;;                  1    wreg      unsigned char 
 12193 ;; Registers used:
 12194 ;;		wreg, status,2, status,0, cstack
 12195 ;; Tracked objects:
 12196 ;;		On entry : 0/0
 12197 ;;		On exit  : 0/0
 12198 ;;		Unchanged: 0/0
 12199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12200 ;;      Params:         0       0       0       0       0       0       0       0       0
 12201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12203 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12204 ;;Total ram usage:        0 bytes
 12205 ;; Hardware stack levels used:    1
 12206 ;; Hardware stack levels required when called:    8
 12207 ;; This function calls:
 12208 ;;		_I2C_Wait
 12209 ;; This function is called by:
 12210 ;;		_Persistant_Address
 12211 ;;		_Persistant_ReadExternalMemory
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text51
 12216  0052D2                     __ptext51:
 12217                           	opt stack 0
 12218  0052D2                     _I2C_Start:
 12219                           	opt stack 18
 12220                           
 12221                           ;I2C.c: 35: if (I2C_Wait())
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;incstack = 0
 12225  0052D2  EC64  F021         	call	_I2C_Wait	;wreg free
 12226  0052D6  0900               	iorlw	0
 12227  0052D8  B4D8               	btfsc	status,2,c
 12228  0052DA  D006               	goto	l1259
 12229                           
 12230                           ;I2C.c: 36: {
 12231                           ;I2C.c: 37: SEN = 1;
 12232  0052DC  80C5               	bsf	4037,0,c	;volatile
 12233                           
 12234                           ;I2C.c: 39: _I2CCount++;
 12235  0052DE  0101               	movlb	1	; () banked
 12236  0052E0  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12237  0052E2  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12238                           
 12239                           ; BSR set to: 1
 12240                           ;I2C.c: 40: return 1;
 12241  0052E4  0E01               	movlw	1
 12242                           
 12243                           ; BSR set to: 1
 12244  0052E6  0012               	return	
 12245  0052E8                     l1259:
 12246                           
 12247                           ;I2C.c: 41: }
 12248                           ;I2C.c: 42: _I2CResult |= 1;
 12249                           
 12250                           ; BSR set to: 1
 12251  0052E8  0101               	movlb	1	; () banked
 12252  0052EA  812C               	bsf	__I2CResult& (0+255),0,b
 12253                           
 12254                           ; BSR set to: 1
 12255                           ;I2C.c: 43: return 0;
 12256  0052EC  0E00               	movlw	0
 12257  0052EE  0012               	return	
 12258  0052F0                     __end_of_I2C_Start:
 12259                           	opt stack 0
 12260                           tosu	equ	0xFFF
 12261                           tosh	equ	0xFFE
 12262                           tosl	equ	0xFFD
 12263                           pclath	equ	0xFFA
 12264                           tblptru	equ	0xFF8
 12265                           tblptrh	equ	0xFF7
 12266                           tblptrl	equ	0xFF6
 12267                           tablat	equ	0xFF5
 12268                           prodh	equ	0xFF4
 12269                           prodl	equ	0xFF3
 12270                           intcon	equ	0xFF2
 12271                           indf0	equ	0xFEF
 12272                           postinc0	equ	0xFEE
 12273                           plusw0	equ	0xFEB
 12274                           fsr0h	equ	0xFEA
 12275                           fsr0l	equ	0xFE9
 12276                           wreg	equ	0xFE8
 12277                           indf1	equ	0xFE7
 12278                           postinc1	equ	0xFE6
 12279                           postdec1	equ	0xFE5
 12280                           plusw1	equ	0xFE3
 12281                           fsr1h	equ	0xFE2
 12282                           fsr1l	equ	0xFE1
 12283                           indf2	equ	0xFDF
 12284                           postinc2	equ	0xFDE
 12285                           postdec2	equ	0xFDD
 12286                           plusw2	equ	0xFDB
 12287                           fsr2h	equ	0xFDA
 12288                           fsr2l	equ	0xFD9
 12289                           status	equ	0xFD8
 12290                           
 12291 ;; *************** function _I2C_Stop *****************
 12292 ;; Defined at:
 12293 ;;		line 63 in file "I2C.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;		None
 12296 ;; Auto vars:     Size  Location     Type
 12297 ;;		None
 12298 ;; Return value:  Size  Location     Type
 12299 ;;                  1    wreg      unsigned char 
 12300 ;; Registers used:
 12301 ;;		wreg, status,2, status,0, cstack
 12302 ;; Tracked objects:
 12303 ;;		On entry : 0/0
 12304 ;;		On exit  : 0/0
 12305 ;;		Unchanged: 0/0
 12306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12307 ;;      Params:         0       0       0       0       0       0       0       0       0
 12308 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12309 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12310 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12311 ;;Total ram usage:        0 bytes
 12312 ;; Hardware stack levels used:    1
 12313 ;; Hardware stack levels required when called:    8
 12314 ;; This function calls:
 12315 ;;		_I2C_Wait
 12316 ;; This function is called by:
 12317 ;;		_Persistant_ReadExternalMemory
 12318 ;;		_Persistant_WriteExternalMemory
 12319 ;; This function uses a non-reentrant model
 12320 ;;
 12321                           
 12322                           	psect	text52
 12323  0052F0                     __ptext52:
 12324                           	opt stack 0
 12325  0052F0                     _I2C_Stop:
 12326                           	opt stack 19
 12327                           
 12328                           ;I2C.c: 65: if (I2C_Wait())
 12329                           
 12330                           ; BSR set to: 1
 12331                           ;incstack = 0
 12332  0052F0  EC64  F021         	call	_I2C_Wait	;wreg free
 12333  0052F4  0900               	iorlw	0
 12334  0052F6  B4D8               	btfsc	status,2,c
 12335  0052F8  D006               	goto	l1267
 12336                           
 12337                           ;I2C.c: 66: {
 12338                           ;I2C.c: 67: PEN = 1;
 12339  0052FA  84C5               	bsf	4037,2,c	;volatile
 12340                           
 12341                           ;I2C.c: 69: _I2CCount++;
 12342  0052FC  0101               	movlb	1	; () banked
 12343  0052FE  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12344  005300  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12345                           
 12346                           ; BSR set to: 1
 12347                           ;I2C.c: 70: return 1;
 12348  005302  0E01               	movlw	1
 12349                           
 12350                           ; BSR set to: 1
 12351  005304  0012               	return	
 12352  005306                     l1267:
 12353                           
 12354                           ;I2C.c: 71: }
 12355                           ;I2C.c: 72: _I2CResult |= 8;
 12356                           
 12357                           ; BSR set to: 1
 12358  005306  0101               	movlb	1	; () banked
 12359  005308  872C               	bsf	__I2CResult& (0+255),3,b
 12360                           
 12361                           ; BSR set to: 1
 12362                           ;I2C.c: 73: return 0;
 12363  00530A  0E00               	movlw	0
 12364  00530C  0012               	return	
 12365  00530E                     __end_of_I2C_Stop:
 12366                           	opt stack 0
 12367                           tosu	equ	0xFFF
 12368                           tosh	equ	0xFFE
 12369                           tosl	equ	0xFFD
 12370                           pclath	equ	0xFFA
 12371                           tblptru	equ	0xFF8
 12372                           tblptrh	equ	0xFF7
 12373                           tblptrl	equ	0xFF6
 12374                           tablat	equ	0xFF5
 12375                           prodh	equ	0xFF4
 12376                           prodl	equ	0xFF3
 12377                           intcon	equ	0xFF2
 12378                           indf0	equ	0xFEF
 12379                           postinc0	equ	0xFEE
 12380                           plusw0	equ	0xFEB
 12381                           fsr0h	equ	0xFEA
 12382                           fsr0l	equ	0xFE9
 12383                           wreg	equ	0xFE8
 12384                           indf1	equ	0xFE7
 12385                           postinc1	equ	0xFE6
 12386                           postdec1	equ	0xFE5
 12387                           plusw1	equ	0xFE3
 12388                           fsr1h	equ	0xFE2
 12389                           fsr1l	equ	0xFE1
 12390                           indf2	equ	0xFDF
 12391                           postinc2	equ	0xFDE
 12392                           postdec2	equ	0xFDD
 12393                           plusw2	equ	0xFDB
 12394                           fsr2h	equ	0xFDA
 12395                           fsr2l	equ	0xFD9
 12396                           status	equ	0xFD8
 12397                           
 12398 ;; *************** function _I2C_Read *****************
 12399 ;; Defined at:
 12400 ;;		line 107 in file "I2C.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;		None
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;  LData           1    6[BANK0 ] unsigned char 
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      unsigned char 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0, cstack
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12414 ;;      Params:         0       0       0       0       0       0       0       0       0
 12415 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12416 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12417 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12418 ;;Total ram usage:        1 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    9
 12421 ;; This function calls:
 12422 ;;		_I2C_Ack
 12423 ;;		_I2C_Wait
 12424 ;; This function is called by:
 12425 ;;		_Persistant_ReadExternalMemory
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           	psect	text53
 12430  004F7C                     __ptext53:
 12431                           	opt stack 0
 12432  004F7C                     _I2C_Read:
 12433                           	opt stack 18
 12434                           
 12435                           ;I2C.c: 109: if (I2C_Wait())
 12436                           
 12437                           ; BSR set to: 1
 12438                           ;incstack = 0
 12439  004F7C  EC64  F021         	call	_I2C_Wait	;wreg free
 12440  004F80  0900               	iorlw	0
 12441  004F82  B4D8               	btfsc	status,2,c
 12442  004F84  D014               	goto	l1281
 12443                           
 12444                           ;I2C.c: 110: {
 12445                           ;I2C.c: 111: RCEN = 1;
 12446  004F86  86C5               	bsf	4037,3,c	;volatile
 12447                           
 12448                           ;I2C.c: 112: if (I2C_Wait())
 12449  004F88  EC64  F021         	call	_I2C_Wait	;wreg free
 12450  004F8C  0900               	iorlw	0
 12451  004F8E  B4D8               	btfsc	status,2,c
 12452  004F90  D00E               	goto	l1281
 12453                           
 12454                           ;I2C.c: 113: {
 12455                           ;I2C.c: 114: unsigned char LData = SSPBUF;
 12456  004F92  CFC9 F066          	movff	4041,I2C_Read@LData	;volatile
 12457                           
 12458                           ;I2C.c: 115: if (I2C_Ack(1))
 12459  004F96  0E01               	movlw	1
 12460  004F98  EC78  F028         	call	_I2C_Ack
 12461  004F9C  0900               	iorlw	0
 12462  004F9E  B4D8               	btfsc	status,2,c
 12463  004FA0  D006               	goto	l1281
 12464                           
 12465                           ;I2C.c: 118: _I2CCount++;
 12466  004FA2  0101               	movlb	1	; () banked
 12467  004FA4  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12468  004FA6  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12469                           
 12470                           ; BSR set to: 1
 12471                           ;I2C.c: 119: return LData;
 12472  004FA8  0100               	movlb	0	; () banked
 12473  004FAA  5166               	movf	I2C_Read@LData& (0+255),w,b
 12474                           
 12475                           ; BSR set to: 0
 12476  004FAC  0012               	return	
 12477  004FAE                     l1281:
 12478                           
 12479                           ;I2C.c: 120: }
 12480                           ;I2C.c: 121: }
 12481                           ;I2C.c: 122: }
 12482                           ;I2C.c: 123: _I2CResult |= 64;
 12483                           
 12484                           ; BSR set to: 0
 12485                           
 12486                           ; BSR set to: 0
 12487                           
 12488                           ; BSR set to: 0
 12489  004FAE  0101               	movlb	1	; () banked
 12490  004FB0  8D2C               	bsf	__I2CResult& (0+255),6,b
 12491                           
 12492                           ; BSR set to: 1
 12493                           ;I2C.c: 124: return 0x00;
 12494  004FB2  0E00               	movlw	0
 12495  004FB4  0012               	return	
 12496  004FB6                     __end_of_I2C_Read:
 12497                           	opt stack 0
 12498                           tosu	equ	0xFFF
 12499                           tosh	equ	0xFFE
 12500                           tosl	equ	0xFFD
 12501                           pclath	equ	0xFFA
 12502                           tblptru	equ	0xFF8
 12503                           tblptrh	equ	0xFF7
 12504                           tblptrl	equ	0xFF6
 12505                           tablat	equ	0xFF5
 12506                           prodh	equ	0xFF4
 12507                           prodl	equ	0xFF3
 12508                           intcon	equ	0xFF2
 12509                           indf0	equ	0xFEF
 12510                           postinc0	equ	0xFEE
 12511                           plusw0	equ	0xFEB
 12512                           fsr0h	equ	0xFEA
 12513                           fsr0l	equ	0xFE9
 12514                           wreg	equ	0xFE8
 12515                           indf1	equ	0xFE7
 12516                           postinc1	equ	0xFE6
 12517                           postdec1	equ	0xFE5
 12518                           plusw1	equ	0xFE3
 12519                           fsr1h	equ	0xFE2
 12520                           fsr1l	equ	0xFE1
 12521                           indf2	equ	0xFDF
 12522                           postinc2	equ	0xFDE
 12523                           postdec2	equ	0xFDD
 12524                           plusw2	equ	0xFDB
 12525                           fsr2h	equ	0xFDA
 12526                           fsr2l	equ	0xFD9
 12527                           status	equ	0xFD8
 12528                           
 12529 ;; *************** function _I2C_Ack *****************
 12530 ;; Defined at:
 12531 ;;		line 78 in file "I2C.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;  AAck            1    wreg     unsigned char 
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;  AAck            1    5[BANK0 ] unsigned char 
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1    wreg      unsigned char 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0, cstack
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12545 ;;      Params:         0       0       0       0       0       0       0       0       0
 12546 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12547 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12548 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12549 ;;Total ram usage:        1 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:    8
 12552 ;; This function calls:
 12553 ;;		_I2C_Wait
 12554 ;; This function is called by:
 12555 ;;		_Persistant_ControlByte
 12556 ;;		_Persistant_Address
 12557 ;;		_Persistant_ReadExternalMemory
 12558 ;;		_Persistant_WriteExternalMemory
 12559 ;;		_I2C_Read
 12560 ;; This function uses a non-reentrant model
 12561 ;;
 12562                           
 12563                           	psect	text54
 12564  0050F0                     __ptext54:
 12565                           	opt stack 0
 12566  0050F0                     _I2C_Ack:
 12567                           	opt stack 18
 12568                           
 12569                           ;incstack = 0
 12570                           ;I2C_Ack@AAck stored from wreg
 12571  0050F0  0100               	movlb	0	; () banked
 12572  0050F2  6F65               	movwf	I2C_Ack@AAck& (0+255),b
 12573                           
 12574                           ;I2C.c: 80: if (I2C_Wait())
 12575  0050F4  EC64  F021         	call	_I2C_Wait	;wreg free
 12576  0050F8  0900               	iorlw	0
 12577  0050FA  B4D8               	btfsc	status,2,c
 12578  0050FC  D00C               	goto	l1271
 12579                           
 12580                           ;I2C.c: 81: {
 12581                           ;I2C.c: 82: ACKDT = AAck;
 12582  0050FE  0100               	movlb	0	; () banked
 12583  005100  A165               	btfss	I2C_Ack@AAck& (0+255),0,b
 12584  005102  D002               	goto	u5700
 12585  005104  8AC5               	bsf	4037,5,c	;volatile
 12586  005106  D001               	goto	u5715
 12587  005108                     u5700:
 12588  005108  9AC5               	bcf	4037,5,c	;volatile
 12589  00510A                     u5715:
 12590                           
 12591                           ;I2C.c: 83: ACKEN = 1;
 12592  00510A  88C5               	bsf	4037,4,c	;volatile
 12593                           
 12594                           ;I2C.c: 85: _I2CCount++;
 12595  00510C  0101               	movlb	1	; () banked
 12596  00510E  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12597  005110  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12598                           
 12599                           ; BSR set to: 1
 12600                           ;I2C.c: 86: return 1;
 12601  005112  0E01               	movlw	1
 12602                           
 12603                           ; BSR set to: 1
 12604  005114  0012               	return	
 12605  005116                     l1271:
 12606                           
 12607                           ;I2C.c: 87: }
 12608                           ;I2C.c: 88: _I2CResult |= 16;
 12609                           
 12610                           ; BSR set to: 1
 12611  005116  0101               	movlb	1	; () banked
 12612  005118  892C               	bsf	__I2CResult& (0+255),4,b
 12613                           
 12614                           ; BSR set to: 1
 12615                           ;I2C.c: 89: return 0;
 12616  00511A  0E00               	movlw	0
 12617  00511C  0012               	return	
 12618  00511E                     __end_of_I2C_Ack:
 12619                           	opt stack 0
 12620                           tosu	equ	0xFFF
 12621                           tosh	equ	0xFFE
 12622                           tosl	equ	0xFFD
 12623                           pclath	equ	0xFFA
 12624                           tblptru	equ	0xFF8
 12625                           tblptrh	equ	0xFF7
 12626                           tblptrl	equ	0xFF6
 12627                           tablat	equ	0xFF5
 12628                           prodh	equ	0xFF4
 12629                           prodl	equ	0xFF3
 12630                           intcon	equ	0xFF2
 12631                           indf0	equ	0xFEF
 12632                           postinc0	equ	0xFEE
 12633                           plusw0	equ	0xFEB
 12634                           fsr0h	equ	0xFEA
 12635                           fsr0l	equ	0xFE9
 12636                           wreg	equ	0xFE8
 12637                           indf1	equ	0xFE7
 12638                           postinc1	equ	0xFE6
 12639                           postdec1	equ	0xFE5
 12640                           plusw1	equ	0xFE3
 12641                           fsr1h	equ	0xFE2
 12642                           fsr1l	equ	0xFE1
 12643                           indf2	equ	0xFDF
 12644                           postinc2	equ	0xFDE
 12645                           postdec2	equ	0xFDD
 12646                           plusw2	equ	0xFDB
 12647                           fsr2h	equ	0xFDA
 12648                           fsr2l	equ	0xFD9
 12649                           status	equ	0xFD8
 12650                           
 12651 ;; *************** function _I2C_Wait *****************
 12652 ;; Defined at:
 12653 ;;		line 15 in file "I2C.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;		None
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;  LTimeOut        2    2[BANK0 ] int 
 12658 ;;  LResult         1    4[BANK0 ] unsigned char 
 12659 ;; Return value:  Size  Location     Type
 12660 ;;                  1    wreg      unsigned char 
 12661 ;; Registers used:
 12662 ;;		wreg, status,2, status,0
 12663 ;; Tracked objects:
 12664 ;;		On entry : 0/0
 12665 ;;		On exit  : 0/0
 12666 ;;		Unchanged: 0/0
 12667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12668 ;;      Params:         0       0       0       0       0       0       0       0       0
 12669 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12670 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12671 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12672 ;;Total ram usage:        5 bytes
 12673 ;; Hardware stack levels used:    1
 12674 ;; Hardware stack levels required when called:    7
 12675 ;; This function calls:
 12676 ;;		Nothing
 12677 ;; This function is called by:
 12678 ;;		_I2C_Start
 12679 ;;		_I2C_Stop
 12680 ;;		_I2C_Ack
 12681 ;;		_I2C_Write
 12682 ;;		_I2C_Read
 12683 ;;		_I2C_Restart
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text55
 12688  0042C8                     __ptext55:
 12689                           	opt stack 0
 12690  0042C8                     _I2C_Wait:
 12691                           	opt stack 18
 12692                           
 12693                           ;I2C.c: 17: int LTimeOut = 10000;
 12694                           
 12695                           ; BSR set to: 1
 12696                           ;incstack = 0
 12697  0042C8  0E27               	movlw	39
 12698  0042CA  0100               	movlb	0	; () banked
 12699  0042CC  6F63               	movwf	(I2C_Wait@LTimeOut+1)& (0+255),b
 12700  0042CE  0E10               	movlw	16
 12701  0042D0  6F62               	movwf	I2C_Wait@LTimeOut& (0+255),b
 12702                           
 12703                           ;I2C.c: 18: while (((SSPCON2 & 0x1F ) | RW ) && LTimeOut > 0)
 12704  0042D2  D00C               	goto	l1246
 12705  0042D4                     l5325:
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;I2C.c: 19: {
 12709                           ;I2C.c: 20: _delay((unsigned long)((1)*(20000000/4000.0)));
 12710  0042D4  0E07               	movlw	7
 12711  0042D6  0100               	movlb	0	; () banked
 12712  0042D8  6F60               	movwf	??_I2C_Wait& (0+255),b
 12713  0042DA  0E7D               	movlw	125
 12714  0042DC                     u10327:
 12715  0042DC  2EE8               	decfsz	wreg,f,c
 12716  0042DE  D7FE               	bra	u10327
 12717  0042E0  2F60               	decfsz	??_I2C_Wait& (0+255),f,b
 12718  0042E2  D7FC               	bra	u10327
 12719                           
 12720                           ;I2C.c: 21: LTimeOut--;
 12721  0042E4  0100               	movlb	0	; () banked
 12722  0042E6  0762               	decf	I2C_Wait@LTimeOut& (0+255),f,b
 12723  0042E8  A0D8               	btfss	status,0,c
 12724  0042EA  0763               	decf	(I2C_Wait@LTimeOut+1)& (0+255),f,b
 12725  0042EC                     l1246:
 12726                           
 12727                           ; BSR set to: 0
 12728  0042EC  50C5               	movf	4037,w,c	;volatile
 12729  0042EE  0B1F               	andlw	31
 12730  0042F0  6F60               	movwf	??_I2C_Wait& (0+255),b
 12731  0042F2  6B61               	clrf	(??_I2C_Wait+1)& (0+255),b
 12732  0042F4  A4C7               	btfss	4039,2,c	;volatile
 12733  0042F6  D002               	goto	u5420
 12734  0042F8  0E01               	movlw	1
 12735  0042FA  D001               	goto	u5430
 12736  0042FC                     u5420:
 12737  0042FC  0E00               	movlw	0
 12738  0042FE                     u5430:
 12739  0042FE  1360               	iorwf	??_I2C_Wait& (0+255),f,b
 12740  004300  0E00               	movlw	0
 12741  004302  1361               	iorwf	(??_I2C_Wait+1)& (0+255),f,b
 12742  004304  5160               	movf	??_I2C_Wait& (0+255),w,b
 12743  004306  1161               	iorwf	(??_I2C_Wait+1)& (0+255),w,b
 12744  004308  A4D8               	btfss	status,2,c
 12745                           
 12746                           ; BSR set to: 0
 12747  00430A  BF63               	btfsc	(I2C_Wait@LTimeOut+1)& (0+255),7,b
 12748  00430C  D005               	goto	u5450
 12749  00430E  5163               	movf	(I2C_Wait@LTimeOut+1)& (0+255),w,b
 12750  004310  E1E1               	bnz	l5325
 12751  004312  0562               	decf	I2C_Wait@LTimeOut& (0+255),w,b
 12752  004314  B0D8               	btfsc	status,0,c
 12753  004316  D7DE               	goto	l1247
 12754  004318                     u5450:
 12755                           
 12756                           ; BSR set to: 0
 12757                           ;I2C.c: 22: };
 12758                           ;I2C.c: 23: bool LResult = LTimeOut > 0;
 12759                           
 12760                           ; BSR set to: 0
 12761                           
 12762                           ; BSR set to: 0
 12763  004318  BF63               	btfsc	(I2C_Wait@LTimeOut+1)& (0+255),7,b
 12764  00431A  D007               	goto	u5460
 12765  00431C  5163               	movf	(I2C_Wait@LTimeOut+1)& (0+255),w,b
 12766  00431E  E103               	bnz	u5461
 12767  004320  0562               	decf	I2C_Wait@LTimeOut& (0+255),w,b
 12768  004322  A0D8               	btfss	status,0,c
 12769  004324  D002               	goto	u5460
 12770  004326                     u5461:
 12771  004326  0E01               	movlw	1
 12772  004328  D001               	goto	u5470
 12773  00432A                     u5460:
 12774  00432A  0E00               	movlw	0
 12775  00432C                     u5470:
 12776  00432C  6F64               	movwf	I2C_Wait@LResult& (0+255),b
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;I2C.c: 24: _I2CResult |= LResult ? 0 : 2;
 12780  00432E  5164               	movf	I2C_Wait@LResult& (0+255),w,b
 12781  004330  A4D8               	btfss	status,2,c
 12782  004332  D002               	goto	l1252
 12783                           
 12784                           ; BSR set to: 0
 12785  004334  0101               	movlb	1	; () banked
 12786  004336  832C               	bsf	__I2CResult& (0+255),1,b
 12787  004338                     l1252:
 12788                           
 12789                           ;I2C.c: 25: if (LResult)
 12790                           
 12791                           ; BSR set to: 1
 12792                           
 12793                           ; BSR set to: 1
 12794  004338  0100               	movlb	0	; () banked
 12795  00433A  5164               	movf	I2C_Wait@LResult& (0+255),w,b
 12796  00433C  B4D8               	btfsc	status,2,c
 12797  00433E  D004               	goto	l1255
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;I2C.c: 26: {
 12801                           ;I2C.c: 27: SSPIF = 0;
 12802  004340  969E               	bcf	3998,3,c	;volatile
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;I2C.c: 28: _I2CCount++;
 12806  004342  0101               	movlb	1	; () banked
 12807  004344  4B2A               	infsnz	__I2CCount& (0+255),f,b
 12808  004346  2B2B               	incf	(__I2CCount+1)& (0+255),f,b
 12809  004348                     l1255:
 12810                           
 12811                           ;I2C.c: 29: }
 12812                           ;I2C.c: 30: return LResult;
 12813                           
 12814                           ; BSR set to: 1
 12815  004348  0100               	movlb	0	; () banked
 12816  00434A  5164               	movf	I2C_Wait@LResult& (0+255),w,b
 12817  00434C  0012               	return	
 12818  00434E                     __end_of_I2C_Wait:
 12819                           	opt stack 0
 12820                           tosu	equ	0xFFF
 12821                           tosh	equ	0xFFE
 12822                           tosl	equ	0xFFD
 12823                           pclath	equ	0xFFA
 12824                           tblptru	equ	0xFF8
 12825                           tblptrh	equ	0xFF7
 12826                           tblptrl	equ	0xFF6
 12827                           tablat	equ	0xFF5
 12828                           prodh	equ	0xFF4
 12829                           prodl	equ	0xFF3
 12830                           intcon	equ	0xFF2
 12831                           indf0	equ	0xFEF
 12832                           postinc0	equ	0xFEE
 12833                           plusw0	equ	0xFEB
 12834                           fsr0h	equ	0xFEA
 12835                           fsr0l	equ	0xFE9
 12836                           wreg	equ	0xFE8
 12837                           indf1	equ	0xFE7
 12838                           postinc1	equ	0xFE6
 12839                           postdec1	equ	0xFE5
 12840                           plusw1	equ	0xFE3
 12841                           fsr1h	equ	0xFE2
 12842                           fsr1l	equ	0xFE1
 12843                           indf2	equ	0xFDF
 12844                           postinc2	equ	0xFDE
 12845                           postdec2	equ	0xFDD
 12846                           plusw2	equ	0xFDB
 12847                           fsr2h	equ	0xFDA
 12848                           fsr2l	equ	0xFD9
 12849                           status	equ	0xFD8
 12850                           
 12851 ;; *************** function _Persistant_LoadBuffer *****************
 12852 ;; Defined at:
 12853 ;;		line 115 in file "persistant.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  ABuffer         2   75[BANK0 ] PTR struct .
 12856 ;;		 -> _Hub(154), 
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  i               1   89[BANK0 ] unsigned char 
 12859 ;;  LZip           10   78[BANK0 ] struct .
 12860 ;;  LChannel        1   88[BANK0 ] unsigned char 
 12861 ;;  LResult         1   77[BANK0 ] unsigned char 
 12862 ;; Return value:  Size  Location     Type
 12863 ;;                  1    wreg      unsigned char 
 12864 ;; Registers used:
 12865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12866 ;; Tracked objects:
 12867 ;;		On entry : 0/0
 12868 ;;		On exit  : 0/0
 12869 ;;		Unchanged: 0/0
 12870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12871 ;;      Params:         0       2       0       0       0       0       0       0       0
 12872 ;;      Locals:         0      13       0       0       0       0       0       0       0
 12873 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12874 ;;      Totals:         0      15       0       0       0       0       0       0       0
 12875 ;;Total ram usage:       15 bytes
 12876 ;; Hardware stack levels used:    1
 12877 ;; Hardware stack levels required when called:   10
 12878 ;; This function calls:
 12879 ;;		_Persistant_ReadInternalMemory
 12880 ;;		_UnZip
 12881 ;;		___awdiv
 12882 ;;		_memcpy
 12883 ;; This function is called by:
 12884 ;;		_Load
 12885 ;;		_InitApp
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text56
 12890  0038AA                     __ptext56:
 12891                           	opt stack 0
 12892  0038AA                     _Persistant_LoadBuffer:
 12893                           	opt stack 19
 12894                           
 12895                           ;persistant.c: 117: bool LResult = 1;
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;incstack = 0
 12899  0038AA  0E01               	movlw	1
 12900  0038AC  0100               	movlb	0	; () banked
 12901  0038AE  6FAD               	movwf	Persistant_LoadBuffer@LResult& (0+255),b
 12902                           
 12903                           ; BSR set to: 0
 12904                           ;persistant.c: 118: unsigned char LChannel = ABuffer->Channel;
 12905  0038B0  EE20 F002          	lfsr	2,2
 12906  0038B4  51AB               	movf	Persistant_LoadBuffer@ABuffer& (0+255),w,b
 12907  0038B6  26D9               	addwf	fsr2l,f,c
 12908  0038B8  51AC               	movf	(Persistant_LoadBuffer@ABuffer+1)& (0+255),w,b
 12909  0038BA  22DA               	addwfc	fsr2h,f,c
 12910  0038BC  50DF               	movf	indf2,w,c
 12911  0038BE  6FB8               	movwf	Persistant_LoadBuffer@LChannel& (0+255),b
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;persistant.c: 119: ZipContainer LZip;
 12915                           ;persistant.c: 120: LZip.Buffer = ABuffer;
 12916  0038C0  C0AB  F0AE         	movff	Persistant_LoadBuffer@ABuffer,Persistant_LoadBuffer@LZip
 12917  0038C4  C0AC  F0AF         	movff	Persistant_LoadBuffer@ABuffer+1,Persistant_LoadBuffer@LZip+1
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;persistant.c: 121: for (char i = 0; i < sizeof(LZip.Bytes); i++)
 12921  0038C8  0E00               	movlw	0
 12922  0038CA  6FB9               	movwf	Persistant_LoadBuffer@i& (0+255),b
 12923  0038CC                     l6983:
 12924                           
 12925                           ; BSR set to: 0
 12926  0038CC  0E07               	movlw	7
 12927  0038CE  65B9               	cpfsgt	Persistant_LoadBuffer@i& (0+255),b
 12928  0038D0  D001               	goto	l967
 12929  0038D2  D02B               	goto	u8030
 12930  0038D4                     l967:
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;persistant.c: 122: LZip.Bytes[i] = Persistant_ReadInternalMemory((LChannel / 2 ) * size
      +                          of(LZip.Bytes) + i);
 12934                           
 12935                           ; BSR set to: 0
 12936  0038D4  51B9               	movf	Persistant_LoadBuffer@i& (0+255),w,b
 12937  0038D6  0D01               	mullw	1
 12938  0038D8  0E02               	movlw	2
 12939  0038DA  26F3               	addwf	prodl,f,c
 12940  0038DC  0E00               	movlw	0
 12941  0038DE  22F4               	addwfc	prodh,f,c
 12942  0038E0  0EAE               	movlw	low Persistant_LoadBuffer@LZip
 12943  0038E2  24F3               	addwf	prodl,w,c
 12944  0038E4  6ED9               	movwf	fsr2l,c
 12945  0038E6  0E00               	movlw	high Persistant_LoadBuffer@LZip
 12946  0038E8  20F4               	addwfc	prodh,w,c
 12947  0038EA  6EDA               	movwf	fsr2h,c
 12948  0038EC  C0B8  F060         	movff	Persistant_LoadBuffer@LChannel,___awdiv@dividend
 12949  0038F0  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 12950  0038F2  0E00               	movlw	0
 12951  0038F4  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 12952  0038F6  0E02               	movlw	2
 12953  0038F8  6F62               	movwf	___awdiv@divisor& (0+255),b
 12954  0038FA  ECA7  F021         	call	___awdiv	;wreg free
 12955  0038FE  0100               	movlb	0	; () banked
 12956  003900  90D8               	bcf	status,0,c
 12957  003902  3760               	rlcf	?___awdiv& (0+255),f,b
 12958  003904  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
 12959  003906  90D8               	bcf	status,0,c
 12960  003908  3760               	rlcf	?___awdiv& (0+255),f,b
 12961  00390A  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
 12962  00390C  90D8               	bcf	status,0,c
 12963  00390E  3760               	rlcf	?___awdiv& (0+255),f,b
 12964  003910  3761               	rlcf	(?___awdiv+1)& (0+255),f,b
 12965  003912  51B9               	movf	Persistant_LoadBuffer@i& (0+255),w,b
 12966  003914  2560               	addwf	?___awdiv& (0+255),w,b
 12967  003916  6F68               	movwf	Persistant_ReadInternalMemory@AAddress& (0+255),b
 12968  003918  0E00               	movlw	0
 12969  00391A  2161               	addwfc	(?___awdiv+1)& (0+255),w,b
 12970  00391C  6F69               	movwf	(Persistant_ReadInternalMemory@AAddress+1)& (0+255),b
 12971  00391E  EC76  F02A         	call	_Persistant_ReadInternalMemory	;wreg free
 12972  003922  6EDF               	movwf	indf2,c
 12973  003924  0100               	movlb	0	; () banked
 12974  003926  2BB9               	incf	Persistant_LoadBuffer@i& (0+255),f,b
 12975  003928  D7D1               	goto	l6983
 12976  00392A                     u8030:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;persistant.c: 123: UnZip(&LZip);
 12980                           
 12981                           ; BSR set to: 0
 12982  00392A  0EAE               	movlw	low Persistant_LoadBuffer@LZip
 12983  00392C  6F9F               	movwf	UnZip@AZip& (0+255),b
 12984  00392E  0E00               	movlw	high Persistant_LoadBuffer@LZip
 12985  003930  6FA0               	movwf	(UnZip@AZip+1)& (0+255),b
 12986  003932  ECC3  F015         	call	_UnZip	;wreg free
 12987                           
 12988                           ;persistant.c: 125: ABuffer->Channel = LChannel;
 12989  003936  0100               	movlb	0	; () banked
 12990  003938  EE20 F002          	lfsr	2,2
 12991  00393C  51AB               	movf	Persistant_LoadBuffer@ABuffer& (0+255),w,b
 12992  00393E  26D9               	addwf	fsr2l,f,c
 12993  003940  51AC               	movf	(Persistant_LoadBuffer@ABuffer+1)& (0+255),w,b
 12994  003942  22DA               	addwfc	fsr2h,f,c
 12995  003944  C0B8  FFDF         	movff	Persistant_LoadBuffer@LChannel,indf2
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;persistant.c: 126: _Hub.CurrentChannel = LChannel;
 12999  003948  C0B8  F1CB         	movff	Persistant_LoadBuffer@LChannel,__Hub+140
 13000                           
 13001                           ; BSR set to: 0
 13002                           ;persistant.c: 127: memcpy(&_Hub.BackupBuffer, ABuffer, sizeof(DataBuffer));
 13003  00394C  0EB9               	movlw	low (__Hub+122)
 13004  00394E  6F60               	movwf	memcpy@d1& (0+255),b
 13005  003950  0E01               	movlw	high (__Hub+122)
 13006  003952  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13007  003954  C0AB  F062         	movff	Persistant_LoadBuffer@ABuffer,memcpy@s1
 13008  003958  C0AC  F063         	movff	Persistant_LoadBuffer@ABuffer+1,memcpy@s1+1
 13009  00395C  0E00               	movlw	0
 13010  00395E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13011  003960  0E0C               	movlw	12
 13012  003962  6F64               	movwf	memcpy@n& (0+255),b
 13013  003964  ECB4  F026         	call	_memcpy	;wreg free
 13014  003968  0012               	return	
 13015  00396A                     __end_of_Persistant_LoadBuffer:
 13016                           	opt stack 0
 13017                           tosu	equ	0xFFF
 13018                           tosh	equ	0xFFE
 13019                           tosl	equ	0xFFD
 13020                           pclath	equ	0xFFA
 13021                           tblptru	equ	0xFF8
 13022                           tblptrh	equ	0xFF7
 13023                           tblptrl	equ	0xFF6
 13024                           tablat	equ	0xFF5
 13025                           prodh	equ	0xFF4
 13026                           prodl	equ	0xFF3
 13027                           intcon	equ	0xFF2
 13028                           indf0	equ	0xFEF
 13029                           postinc0	equ	0xFEE
 13030                           plusw0	equ	0xFEB
 13031                           fsr0h	equ	0xFEA
 13032                           fsr0l	equ	0xFE9
 13033                           wreg	equ	0xFE8
 13034                           indf1	equ	0xFE7
 13035                           postinc1	equ	0xFE6
 13036                           postdec1	equ	0xFE5
 13037                           plusw1	equ	0xFE3
 13038                           fsr1h	equ	0xFE2
 13039                           fsr1l	equ	0xFE1
 13040                           indf2	equ	0xFDF
 13041                           postinc2	equ	0xFDE
 13042                           postdec2	equ	0xFDD
 13043                           plusw2	equ	0xFDB
 13044                           fsr2h	equ	0xFDA
 13045                           fsr2l	equ	0xFD9
 13046                           status	equ	0xFD8
 13047                           
 13048 ;; *************** function ___awdiv *****************
 13049 ;; Defined at:
 13050 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 13051 ;; Parameters:    Size  Location     Type
 13052 ;;  dividend        2    0[BANK0 ] int 
 13053 ;;  divisor         2    2[BANK0 ] int 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  quotient        2    6[BANK0 ] int 
 13056 ;;  sign            1    5[BANK0 ] unsigned char 
 13057 ;;  counter         1    4[BANK0 ] unsigned char 
 13058 ;; Return value:  Size  Location     Type
 13059 ;;                  2    0[BANK0 ] int 
 13060 ;; Registers used:
 13061 ;;		wreg, status,2, status,0
 13062 ;; Tracked objects:
 13063 ;;		On entry : 0/0
 13064 ;;		On exit  : 0/0
 13065 ;;		Unchanged: 0/0
 13066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13067 ;;      Params:         0       4       0       0       0       0       0       0       0
 13068 ;;      Locals:         0       4       0       0       0       0       0       0       0
 13069 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13070 ;;      Totals:         0       8       0       0       0       0       0       0       0
 13071 ;;Total ram usage:        8 bytes
 13072 ;; Hardware stack levels used:    1
 13073 ;; Hardware stack levels required when called:    7
 13074 ;; This function calls:
 13075 ;;		Nothing
 13076 ;; This function is called by:
 13077 ;;		_Load
 13078 ;;		_main
 13079 ;;		_Persistant_SaveBuffer
 13080 ;;		_Persistant_LoadBuffer
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           	psect	text57
 13085  00434E                     __ptext57:
 13086                           	opt stack 0
 13087  00434E                     ___awdiv:
 13088                           	opt stack 23
 13089                           
 13090                           ;incstack = 0
 13091  00434E  0E00               	movlw	0
 13092  004350  0100               	movlb	0	; () banked
 13093  004352  6F65               	movwf	___awdiv@sign& (0+255),b
 13094                           
 13095                           ; BSR set to: 0
 13096  004354  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13097  004356  D006               	goto	l1483
 13098                           
 13099                           ; BSR set to: 0
 13100  004358  6D62               	negf	___awdiv@divisor& (0+255),b
 13101  00435A  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13102  00435C  B0D8               	btfsc	status,0,c
 13103  00435E  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13104                           
 13105                           ; BSR set to: 0
 13106  004360  0E01               	movlw	1
 13107  004362  6F65               	movwf	___awdiv@sign& (0+255),b
 13108  004364                     l1483:
 13109                           
 13110                           ; BSR set to: 0
 13111                           
 13112                           ; BSR set to: 0
 13113  004364  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13114  004366  D006               	goto	l1484
 13115                           
 13116                           ; BSR set to: 0
 13117  004368  6D60               	negf	___awdiv@dividend& (0+255),b
 13118  00436A  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13119  00436C  B0D8               	btfsc	status,0,c
 13120  00436E  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13121                           
 13122                           ; BSR set to: 0
 13123  004370  0E01               	movlw	1
 13124  004372  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 13125  004374                     l1484:
 13126                           
 13127                           ; BSR set to: 0
 13128                           
 13129                           ; BSR set to: 0
 13130  004374  0E00               	movlw	0
 13131  004376  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 13132  004378  0E00               	movlw	0
 13133  00437A  6F66               	movwf	___awdiv@quotient& (0+255),b
 13134                           
 13135                           ; BSR set to: 0
 13136  00437C  5162               	movf	___awdiv@divisor& (0+255),w,b
 13137  00437E  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13138  004380  B4D8               	btfsc	status,2,c
 13139  004382  D01C               	goto	l1491
 13140                           
 13141                           ; BSR set to: 0
 13142  004384  0E01               	movlw	1
 13143  004386  6F64               	movwf	___awdiv@counter& (0+255),b
 13144  004388  D004               	goto	l1486
 13145  00438A                     
 13146                           ; BSR set to: 0
 13147                           
 13148                           ; BSR set to: 0
 13149  00438A  90D8               	bcf	status,0,c
 13150  00438C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 13151  00438E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13152  004390  2B64               	incf	___awdiv@counter& (0+255),f,b
 13153  004392                     l1486:
 13154                           
 13155                           ; BSR set to: 0
 13156                           
 13157                           ; BSR set to: 0
 13158  004392  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13159  004394  D7FA               	goto	l1487
 13160  004396                     u7680:
 13161                           
 13162                           ; BSR set to: 0
 13163                           
 13164                           ; BSR set to: 0
 13165                           
 13166                           ; BSR set to: 0
 13167  004396  90D8               	bcf	status,0,c
 13168  004398  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 13169  00439A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13170                           
 13171                           ; BSR set to: 0
 13172  00439C  5162               	movf	___awdiv@divisor& (0+255),w,b
 13173  00439E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 13174  0043A0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13175  0043A2  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13176  0043A4  A0D8               	btfss	status,0,c
 13177  0043A6  D005               	goto	l1490
 13178                           
 13179                           ; BSR set to: 0
 13180  0043A8  5162               	movf	___awdiv@divisor& (0+255),w,b
 13181  0043AA  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 13182  0043AC  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13183  0043AE  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13184                           
 13185                           ; BSR set to: 0
 13186  0043B0  8166               	bsf	___awdiv@quotient& (0+255),0,b
 13187  0043B2                     l1490:
 13188                           
 13189                           ; BSR set to: 0
 13190                           
 13191                           ; BSR set to: 0
 13192  0043B2  90D8               	bcf	status,0,c
 13193  0043B4  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13194  0043B6  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 13195                           
 13196                           ; BSR set to: 0
 13197  0043B8  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 13198  0043BA  D7ED               	goto	u7680
 13199  0043BC                     l1491:
 13200                           
 13201                           ; BSR set to: 0
 13202                           
 13203                           ; BSR set to: 0
 13204                           
 13205                           ; BSR set to: 0
 13206  0043BC  5165               	movf	___awdiv@sign& (0+255),w,b
 13207  0043BE  B4D8               	btfsc	status,2,c
 13208  0043C0  D004               	goto	l1492
 13209                           
 13210                           ; BSR set to: 0
 13211  0043C2  6D66               	negf	___awdiv@quotient& (0+255),b
 13212  0043C4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13213  0043C6  B0D8               	btfsc	status,0,c
 13214  0043C8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13215  0043CA                     l1492:
 13216                           
 13217                           ; BSR set to: 0
 13218                           
 13219                           ; BSR set to: 0
 13220  0043CA  C066  F060         	movff	___awdiv@quotient,?___awdiv
 13221  0043CE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 13222  0043D2  0012               	return	
 13223  0043D4                     __end_of___awdiv:
 13224                           	opt stack 0
 13225                           tosu	equ	0xFFF
 13226                           tosh	equ	0xFFE
 13227                           tosl	equ	0xFFD
 13228                           pclath	equ	0xFFA
 13229                           tblptru	equ	0xFF8
 13230                           tblptrh	equ	0xFF7
 13231                           tblptrl	equ	0xFF6
 13232                           tablat	equ	0xFF5
 13233                           prodh	equ	0xFF4
 13234                           prodl	equ	0xFF3
 13235                           intcon	equ	0xFF2
 13236                           indf0	equ	0xFEF
 13237                           postinc0	equ	0xFEE
 13238                           plusw0	equ	0xFEB
 13239                           fsr0h	equ	0xFEA
 13240                           fsr0l	equ	0xFE9
 13241                           wreg	equ	0xFE8
 13242                           indf1	equ	0xFE7
 13243                           postinc1	equ	0xFE6
 13244                           postdec1	equ	0xFE5
 13245                           plusw1	equ	0xFE3
 13246                           fsr1h	equ	0xFE2
 13247                           fsr1l	equ	0xFE1
 13248                           indf2	equ	0xFDF
 13249                           postinc2	equ	0xFDE
 13250                           postdec2	equ	0xFDD
 13251                           plusw2	equ	0xFDB
 13252                           fsr2h	equ	0xFDA
 13253                           fsr2l	equ	0xFD9
 13254                           status	equ	0xFD8
 13255                           
 13256 ;; *************** function _UnZip *****************
 13257 ;; Defined at:
 13258 ;;		line 25 in file "zip.c"
 13259 ;; Parameters:    Size  Location     Type
 13260 ;;  AZip            2   63[BANK0 ] PTR struct .
 13261 ;;		 -> Persistant_LoadBuffer@LZip(10), 
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;  LIndex          1   70[BANK0 ] unsigned char 
 13264 ;;  j               2   73[BANK0 ] int 
 13265 ;;  LValue          1   69[BANK0 ] unsigned char 
 13266 ;;  i               2   71[BANK0 ] int 
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  1    wreg      unsigned char 
 13269 ;; Registers used:
 13270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13276 ;;      Params:         0       2       0       0       0       0       0       0       0
 13277 ;;      Locals:         0       6       0       0       0       0       0       0       0
 13278 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13279 ;;      Totals:         0      12       0       0       0       0       0       0       0
 13280 ;;Total ram usage:       12 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:    9
 13283 ;; This function calls:
 13284 ;;		___ftdiv
 13285 ;;		___fttol
 13286 ;;		___lbtoft
 13287 ;; This function is called by:
 13288 ;;		_Persistant_LoadBuffer
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           	psect	text58
 13293  002B86                     __ptext58:
 13294                           	opt stack 0
 13295  002B86                     _UnZip:
 13296                           	opt stack 19
 13297                           
 13298                           ;zip.c: 27: for(int i = 0; i < 8; i++)
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;incstack = 0
 13302  002B86  0E00               	movlw	0
 13303  002B88  0100               	movlb	0	; () banked
 13304  002B8A  6FA8               	movwf	(UnZip@i+1)& (0+255),b
 13305  002B8C  0E00               	movlw	0
 13306  002B8E  6FA7               	movwf	UnZip@i& (0+255),b
 13307                           
 13308                           ; BSR set to: 0
 13309  002B90  BFA8               	btfsc	(UnZip@i+1)& (0+255),7,b
 13310  002B92  D008               	goto	l1200
 13311  002B94  51A8               	movf	(UnZip@i+1)& (0+255),w,b
 13312  002B96  E105               	bnz	u7590
 13313  002B98  0E08               	movlw	8
 13314  002B9A  5DA7               	subwf	UnZip@i& (0+255),w,b
 13315  002B9C  B0D8               	btfsc	status,0,c
 13316  002B9E  0012               	return	
 13317  002BA0  D001               	goto	l1200
 13318  002BA2                     u7590:
 13319                           
 13320                           ; BSR set to: 0
 13321  002BA2  0012               	return	
 13322  002BA4                     l1200:
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;zip.c: 28: {
 13326                           ;zip.c: 29: char LValue = 0x00;
 13327                           
 13328                           ; BSR set to: 0
 13329  002BA4  0E00               	movlw	0
 13330  002BA6  6FA5               	movwf	UnZip@LValue& (0+255),b
 13331                           
 13332                           ;zip.c: 30: for(int j = 0; j < 6; j++)
 13333  002BA8  0E00               	movlw	0
 13334  002BAA  6FAA               	movwf	(UnZip@j+1)& (0+255),b
 13335  002BAC  0E00               	movlw	0
 13336  002BAE  6FA9               	movwf	UnZip@j& (0+255),b
 13337  002BB0                     l6643:
 13338                           
 13339                           ; BSR set to: 0
 13340  002BB0  BFAA               	btfsc	(UnZip@j+1)& (0+255),7,b
 13341  002BB2  D006               	goto	l1202
 13342  002BB4  51AA               	movf	(UnZip@j+1)& (0+255),w,b
 13343  002BB6  E14C               	bnz	l6655
 13344  002BB8  0E06               	movlw	6
 13345  002BBA  5DA9               	subwf	UnZip@j& (0+255),w,b
 13346  002BBC  B0D8               	btfsc	status,0,c
 13347  002BBE  D048               	goto	u7630
 13348  002BC0                     l1202:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;zip.c: 31: {
 13352                           ;zip.c: 32: char LIndex = i * 6 + j;
 13353                           
 13354                           ; BSR set to: 0
 13355  002BC0  51A7               	movf	UnZip@i& (0+255),w,b
 13356  002BC2  0D06               	mullw	6
 13357  002BC4  50F3               	movf	prodl,w,c
 13358  002BC6  25A9               	addwf	UnZip@j& (0+255),w,b
 13359  002BC8  6FA6               	movwf	UnZip@LIndex& (0+255),b
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;zip.c: 33: LValue |= ((AZip->Bytes[(char)(LIndex / 8.0f)] >> (LIndex % 8)) & 0x01) << j
      +                          ;
 13363  002BCA  C0A9  F0A1         	movff	UnZip@j,??_UnZip
 13364  002BCE  C0A6  F0A2         	movff	UnZip@LIndex,??_UnZip+1
 13365  002BD2  0E07               	movlw	7
 13366  002BD4  17A2               	andwf	(??_UnZip+1)& (0+255),f,b
 13367  002BD6  0E00               	movlw	0
 13368  002BD8  6F84               	movwf	___ftdiv@f2& (0+255),b
 13369  002BDA  0E00               	movlw	0
 13370  002BDC  6F85               	movwf	(___ftdiv@f2+1)& (0+255),b
 13371  002BDE  0E41               	movlw	65
 13372  002BE0  6F86               	movwf	(___ftdiv@f2+2)& (0+255),b
 13373  002BE2  51A6               	movf	UnZip@LIndex& (0+255),w,b
 13374  002BE4  ECA6  F028         	call	___lbtoft
 13375  002BE8  C068  F081         	movff	?___lbtoft,___ftdiv@f1
 13376  002BEC  C069  F082         	movff	?___lbtoft+1,___ftdiv@f1+1
 13377  002BF0  C06A  F083         	movff	?___lbtoft+2,___ftdiv@f1+2
 13378  002BF4  ECB6  F017         	call	___ftdiv	;wreg free
 13379  002BF8  C081  F090         	movff	?___ftdiv,___fttol@f1
 13380  002BFC  C082  F091         	movff	?___ftdiv+1,___fttol@f1+1
 13381  002C00  C083  F092         	movff	?___ftdiv+2,___fttol@f1+2
 13382  002C04  EC46  F016         	call	___fttol	;wreg free
 13383  002C08  0100               	movlb	0	; () banked
 13384  002C0A  5190               	movf	?___fttol& (0+255),w,b
 13385  002C0C  0D01               	mullw	1
 13386  002C0E  0E02               	movlw	2
 13387  002C10  26F3               	addwf	prodl,f,c
 13388  002C12  0E00               	movlw	0
 13389  002C14  22F4               	addwfc	prodh,f,c
 13390  002C16  50F3               	movf	prodl,w,c
 13391  002C18  259F               	addwf	UnZip@AZip& (0+255),w,b
 13392  002C1A  6ED9               	movwf	fsr2l,c
 13393  002C1C  50F4               	movf	prodh,w,c
 13394  002C1E  21A0               	addwfc	(UnZip@AZip+1)& (0+255),w,b
 13395  002C20  6EDA               	movwf	fsr2h,c
 13396  002C22  50DF               	movf	indf2,w,c
 13397  002C24  6FA3               	movwf	(??_UnZip+2)& (0+255),b
 13398  002C26  2BA2               	incf	(??_UnZip+1)& (0+255),f,b
 13399  002C28  D002               	goto	u7614
 13400  002C2A                     u7615:
 13401  002C2A  90D8               	bcf	status,0,c
 13402  002C2C  33A3               	rrcf	(??_UnZip+2)& (0+255),f,b
 13403  002C2E                     u7614:
 13404  002C2E  2FA2               	decfsz	(??_UnZip+1)& (0+255),f,b
 13405  002C30  D7FC               	goto	u7615
 13406  002C32  0E01               	movlw	1
 13407  002C34  0100               	movlb	0	; () banked
 13408  002C36  17A3               	andwf	(??_UnZip+2)& (0+255),f,b
 13409  002C38  2BA1               	incf	??_UnZip& (0+255),f,b
 13410  002C3A  D002               	goto	u7624
 13411  002C3C                     u7625:
 13412  002C3C  90D8               	bcf	status,0,c
 13413  002C3E  37A3               	rlcf	(??_UnZip+2)& (0+255),f,b
 13414  002C40                     u7624:
 13415  002C40  2FA1               	decfsz	??_UnZip& (0+255),f,b
 13416  002C42  D7FC               	goto	u7625
 13417  002C44  0100               	movlb	0	; () banked
 13418  002C46  51A3               	movf	(??_UnZip+2)& (0+255),w,b
 13419  002C48  13A5               	iorwf	UnZip@LValue& (0+255),f,b
 13420                           
 13421                           ; BSR set to: 0
 13422  002C4A  4BA9               	infsnz	UnZip@j& (0+255),f,b
 13423  002C4C  2BAA               	incf	(UnZip@j+1)& (0+255),f,b
 13424  002C4E  D7B0               	goto	l6643
 13425  002C50                     u7630:
 13426  002C50                     l6655:
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;zip.c: 34: }
 13430                           ;zip.c: 35: AZip->Buffer->Values[i] = LValue;
 13431  002C50  0E04               	movlw	4
 13432  002C52  25A7               	addwf	UnZip@i& (0+255),w,b
 13433  002C54  6FA1               	movwf	??_UnZip& (0+255),b
 13434  002C56  0E00               	movlw	0
 13435  002C58  21A8               	addwfc	(UnZip@i+1)& (0+255),w,b
 13436  002C5A  6FA2               	movwf	(??_UnZip+1)& (0+255),b
 13437  002C5C  C09F  FFD9         	movff	UnZip@AZip,fsr2l
 13438  002C60  C0A0  FFDA         	movff	UnZip@AZip+1,fsr2h
 13439  002C64  CFDE F0A3          	movff	postinc2,??_UnZip+2
 13440  002C68  CFDD F0A4          	movff	postdec2,??_UnZip+3
 13441  002C6C  51A1               	movf	??_UnZip& (0+255),w,b
 13442  002C6E  25A3               	addwf	(??_UnZip+2)& (0+255),w,b
 13443  002C70  6ED9               	movwf	fsr2l,c
 13444  002C72  51A2               	movf	(??_UnZip+1)& (0+255),w,b
 13445  002C74  21A4               	addwfc	(??_UnZip+3)& (0+255),w,b
 13446  002C76  6EDA               	movwf	fsr2h,c
 13447  002C78  C0A5  FFDF         	movff	UnZip@LValue,indf2
 13448                           
 13449                           ; BSR set to: 0
 13450  002C7C  4BA7               	infsnz	UnZip@i& (0+255),f,b
 13451  002C7E  2BA8               	incf	(UnZip@i+1)& (0+255),f,b
 13452                           
 13453                           ; BSR set to: 0
 13454  002C80  BFA8               	btfsc	(UnZip@i+1)& (0+255),7,b
 13455  002C82  D790               	goto	l1200
 13456  002C84  51A8               	movf	(UnZip@i+1)& (0+255),w,b
 13457  002C86  E101               	bnz	l1204
 13458  002C88  D787               	goto	L17
 13459  002C8A                     l1204:
 13460                           
 13461                           ; BSR set to: 0
 13462  002C8A  0012               	return		;funcret
 13463  002C8C                     __end_of_UnZip:
 13464                           	opt stack 0
 13465                           tosu	equ	0xFFF
 13466                           tosh	equ	0xFFE
 13467                           tosl	equ	0xFFD
 13468                           pclath	equ	0xFFA
 13469                           tblptru	equ	0xFF8
 13470                           tblptrh	equ	0xFF7
 13471                           tblptrl	equ	0xFF6
 13472                           tablat	equ	0xFF5
 13473                           prodh	equ	0xFF4
 13474                           prodl	equ	0xFF3
 13475                           intcon	equ	0xFF2
 13476                           indf0	equ	0xFEF
 13477                           postinc0	equ	0xFEE
 13478                           plusw0	equ	0xFEB
 13479                           fsr0h	equ	0xFEA
 13480                           fsr0l	equ	0xFE9
 13481                           wreg	equ	0xFE8
 13482                           indf1	equ	0xFE7
 13483                           postinc1	equ	0xFE6
 13484                           postdec1	equ	0xFE5
 13485                           plusw1	equ	0xFE3
 13486                           fsr1h	equ	0xFE2
 13487                           fsr1l	equ	0xFE1
 13488                           indf2	equ	0xFDF
 13489                           postinc2	equ	0xFDE
 13490                           postdec2	equ	0xFDD
 13491                           plusw2	equ	0xFDB
 13492                           fsr2h	equ	0xFDA
 13493                           fsr2l	equ	0xFD9
 13494                           status	equ	0xFD8
 13495                           
 13496 ;; *************** function _Persistant_ReadInternalMemory *****************
 13497 ;; Defined at:
 13498 ;;		line 71 in file "persistant.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  AAddress        2    8[BANK0 ] int 
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;		None
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      unsigned char 
 13505 ;; Registers used:
 13506 ;;		wreg, status,2
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13512 ;;      Params:         0       2       0       0       0       0       0       0       0
 13513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13515 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13516 ;;Total ram usage:        2 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:    7
 13519 ;; This function calls:
 13520 ;;		Nothing
 13521 ;; This function is called by:
 13522 ;;		_Persistant_WriteInternalMemory
 13523 ;;		_Persistant_LoadBuffer
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           	psect	text59
 13528  0054EC                     __ptext59:
 13529                           	opt stack 0
 13530  0054EC                     _Persistant_ReadInternalMemory:
 13531                           	opt stack 21
 13532                           
 13533                           ;persistant.c: 73: EEADR = AAddress;
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;incstack = 0
 13537  0054EC  C068  FFA9         	movff	Persistant_ReadInternalMemory@AAddress,4009	;volatile
 13538                           
 13539                           ;persistant.c: 74: EECON1bits.EEPGD = 0;
 13540  0054F0  9EA6               	bcf	4006,7,c	;volsfr
 13541                           
 13542                           ;persistant.c: 75: EECON1bits.CFGS = 0;
 13543  0054F2  9CA6               	bcf	4006,6,c	;volsfr
 13544                           
 13545                           ;persistant.c: 76: EECON1bits.RD = 1;
 13546  0054F4  80A6               	bsf	4006,0,c	;volsfr
 13547                           
 13548                           ;persistant.c: 77: return EEDATA;
 13549  0054F6  50A8               	movf	4008,w,c	;volatile
 13550  0054F8  0012               	return	
 13551  0054FA                     __end_of_Persistant_ReadInternalMemory:
 13552                           	opt stack 0
 13553                           tosu	equ	0xFFF
 13554                           tosh	equ	0xFFE
 13555                           tosl	equ	0xFFD
 13556                           pclath	equ	0xFFA
 13557                           tblptru	equ	0xFF8
 13558                           tblptrh	equ	0xFF7
 13559                           tblptrl	equ	0xFF6
 13560                           tablat	equ	0xFF5
 13561                           prodh	equ	0xFF4
 13562                           prodl	equ	0xFF3
 13563                           intcon	equ	0xFF2
 13564                           indf0	equ	0xFEF
 13565                           postinc0	equ	0xFEE
 13566                           plusw0	equ	0xFEB
 13567                           fsr0h	equ	0xFEA
 13568                           fsr0l	equ	0xFE9
 13569                           wreg	equ	0xFE8
 13570                           indf1	equ	0xFE7
 13571                           postinc1	equ	0xFE6
 13572                           postdec1	equ	0xFE5
 13573                           plusw1	equ	0xFE3
 13574                           fsr1h	equ	0xFE2
 13575                           fsr1l	equ	0xFE1
 13576                           indf2	equ	0xFDF
 13577                           postinc2	equ	0xFDE
 13578                           postdec2	equ	0xFDD
 13579                           plusw2	equ	0xFDB
 13580                           fsr2h	equ	0xFDA
 13581                           fsr2l	equ	0xFD9
 13582                           status	equ	0xFD8
 13583                           
 13584 ;; *************** function _Persistant_Init *****************
 13585 ;; Defined at:
 13586 ;;		line 6 in file "persistant.c"
 13587 ;; Parameters:    Size  Location     Type
 13588 ;;		None
 13589 ;; Auto vars:     Size  Location     Type
 13590 ;;		None
 13591 ;; Return value:  Size  Location     Type
 13592 ;;                  1    wreg      void 
 13593 ;; Registers used:
 13594 ;;		wreg, status,2, status,0, cstack
 13595 ;; Tracked objects:
 13596 ;;		On entry : 0/0
 13597 ;;		On exit  : 0/0
 13598 ;;		Unchanged: 0/0
 13599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13600 ;;      Params:         0       0       0       0       0       0       0       0       0
 13601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13603 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13604 ;;Total ram usage:        0 bytes
 13605 ;; Hardware stack levels used:    1
 13606 ;; Hardware stack levels required when called:   10
 13607 ;; This function calls:
 13608 ;;		_I2C_Init
 13609 ;; This function is called by:
 13610 ;;		_InitApp
 13611 ;; This function uses a non-reentrant model
 13612 ;;
 13613                           
 13614                           	psect	text60
 13615  0053C2                     __ptext60:
 13616                           	opt stack 0
 13617  0053C2                     _Persistant_Init:
 13618                           	opt stack 19
 13619                           
 13620                           ;persistant.c: 8: I2C_Init(400000);
 13621                           
 13622                           ;incstack = 0
 13623  0053C2  0E80               	movlw	128
 13624  0053C4  0100               	movlb	0	; () banked
 13625  0053C6  6F9F               	movwf	I2C_Init@AFrequency& (0+255),b
 13626  0053C8  0E1A               	movlw	26
 13627  0053CA  6FA0               	movwf	(I2C_Init@AFrequency+1)& (0+255),b
 13628  0053CC  0E06               	movlw	6
 13629  0053CE  6FA1               	movwf	(I2C_Init@AFrequency+2)& (0+255),b
 13630  0053D0  0E00               	movlw	0
 13631  0053D2  6FA2               	movwf	(I2C_Init@AFrequency+3)& (0+255),b
 13632  0053D4  EC1A  F01E         	call	_I2C_Init	;wreg free
 13633  0053D8  0012               	return		;funcret
 13634  0053DA                     __end_of_Persistant_Init:
 13635                           	opt stack 0
 13636                           tosu	equ	0xFFF
 13637                           tosh	equ	0xFFE
 13638                           tosl	equ	0xFFD
 13639                           pclath	equ	0xFFA
 13640                           tblptru	equ	0xFF8
 13641                           tblptrh	equ	0xFF7
 13642                           tblptrl	equ	0xFF6
 13643                           tablat	equ	0xFF5
 13644                           prodh	equ	0xFF4
 13645                           prodl	equ	0xFF3
 13646                           intcon	equ	0xFF2
 13647                           indf0	equ	0xFEF
 13648                           postinc0	equ	0xFEE
 13649                           plusw0	equ	0xFEB
 13650                           fsr0h	equ	0xFEA
 13651                           fsr0l	equ	0xFE9
 13652                           wreg	equ	0xFE8
 13653                           indf1	equ	0xFE7
 13654                           postinc1	equ	0xFE6
 13655                           postdec1	equ	0xFE5
 13656                           plusw1	equ	0xFE3
 13657                           fsr1h	equ	0xFE2
 13658                           fsr1l	equ	0xFE1
 13659                           indf2	equ	0xFDF
 13660                           postinc2	equ	0xFDE
 13661                           postdec2	equ	0xFDD
 13662                           plusw2	equ	0xFDB
 13663                           fsr2h	equ	0xFDA
 13664                           fsr2l	equ	0xFD9
 13665                           status	equ	0xFD8
 13666                           
 13667 ;; *************** function _I2C_Init *****************
 13668 ;; Defined at:
 13669 ;;		line 4 in file "I2C.c"
 13670 ;; Parameters:    Size  Location     Type
 13671 ;;  AFrequency      4   63[BANK0 ] long 
 13672 ;; Auto vars:     Size  Location     Type
 13673 ;;  LRatio          3   67[BANK0 ] float 
 13674 ;; Return value:  Size  Location     Type
 13675 ;;                  1    wreg      void 
 13676 ;; Registers used:
 13677 ;;		wreg, status,2, status,0, cstack
 13678 ;; Tracked objects:
 13679 ;;		On entry : 0/0
 13680 ;;		On exit  : 0/0
 13681 ;;		Unchanged: 0/0
 13682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13683 ;;      Params:         0       4       0       0       0       0       0       0       0
 13684 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13685 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13686 ;;      Totals:         0       7       0       0       0       0       0       0       0
 13687 ;;Total ram usage:        7 bytes
 13688 ;; Hardware stack levels used:    1
 13689 ;; Hardware stack levels required when called:    9
 13690 ;; This function calls:
 13691 ;;		___altoft
 13692 ;;		___ftadd
 13693 ;;		___ftdiv
 13694 ;;		___ftmul
 13695 ;;		___fttol
 13696 ;; This function is called by:
 13697 ;;		_Persistant_Init
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text61
 13702  003C34                     __ptext61:
 13703                           	opt stack 0
 13704  003C34                     _I2C_Init:
 13705                           	opt stack 19
 13706                           
 13707                           ;I2C.c: 6: TRISB0 = 1;
 13708                           
 13709                           ;incstack = 0
 13710  003C34  8093               	bsf	3987,0,c	;volatile
 13711                           
 13712                           ;I2C.c: 7: TRISB1 = 1;
 13713  003C36  8293               	bsf	3987,1,c	;volatile
 13714                           
 13715                           ;I2C.c: 8: SSPSTAT = 0x00;
 13716  003C38  0E00               	movlw	0
 13717  003C3A  6EC7               	movwf	4039,c	;volatile
 13718                           
 13719                           ;I2C.c: 9: SSPCON1 = 0x28;
 13720  003C3C  0E28               	movlw	40
 13721  003C3E  6EC6               	movwf	4038,c	;volatile
 13722                           
 13723                           ;I2C.c: 10: float LRatio = (20000000 / (4.0f * AFrequency)) - 1;
 13724  003C40  0E00               	movlw	0
 13725  003C42  0100               	movlb	0	; () banked
 13726  003C44  6F75               	movwf	___ftmul@f2& (0+255),b
 13727  003C46  0E80               	movlw	128
 13728  003C48  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 13729  003C4A  0E40               	movlw	64
 13730  003C4C  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 13731  003C4E  C09F  F068         	movff	I2C_Init@AFrequency,___altoft@c
 13732  003C52  C0A0  F069         	movff	I2C_Init@AFrequency+1,___altoft@c+1
 13733  003C56  C0A1  F06A         	movff	I2C_Init@AFrequency+2,___altoft@c+2
 13734  003C5A  C0A2  F06B         	movff	I2C_Init@AFrequency+3,___altoft@c+3
 13735  003C5E  ECA9  F022         	call	___altoft	;wreg free
 13736  003C62  C068  F072         	movff	?___altoft,___ftmul@f1
 13737  003C66  C069  F073         	movff	?___altoft+1,___ftmul@f1+1
 13738  003C6A  C06A  F074         	movff	?___altoft+2,___ftmul@f1+2
 13739  003C6E  ECC2  F016         	call	___ftmul	;wreg free
 13740  003C72  C072  F084         	movff	?___ftmul,___ftdiv@f2
 13741  003C76  C073  F085         	movff	?___ftmul+1,___ftdiv@f2+1
 13742  003C7A  C074  F086         	movff	?___ftmul+2,___ftdiv@f2+2
 13743  003C7E  0E97               	movlw	151
 13744  003C80  0100               	movlb	0	; () banked
 13745  003C82  6F81               	movwf	___ftdiv@f1& (0+255),b
 13746  003C84  0E98               	movlw	152
 13747  003C86  6F82               	movwf	(___ftdiv@f1+1)& (0+255),b
 13748  003C88  0E4B               	movlw	75
 13749  003C8A  6F83               	movwf	(___ftdiv@f1+2)& (0+255),b
 13750  003C8C  ECB6  F017         	call	___ftdiv	;wreg free
 13751  003C90  C081  F090         	movff	?___ftdiv,___ftadd@f1
 13752  003C94  C082  F091         	movff	?___ftdiv+1,___ftadd@f1+1
 13753  003C98  C083  F092         	movff	?___ftdiv+2,___ftadd@f1+2
 13754  003C9C  0E00               	movlw	0
 13755  003C9E  0100               	movlb	0	; () banked
 13756  003CA0  6F93               	movwf	___ftadd@f2& (0+255),b
 13757  003CA2  0E80               	movlw	128
 13758  003CA4  6F94               	movwf	(___ftadd@f2+1)& (0+255),b
 13759  003CA6  0EBF               	movlw	191
 13760  003CA8  6F95               	movwf	(___ftadd@f2+2)& (0+255),b
 13761  003CAA  ECDE  F00C         	call	___ftadd	;wreg free
 13762  003CAE  C090  F0A3         	movff	?___ftadd,I2C_Init@LRatio
 13763  003CB2  C091  F0A4         	movff	?___ftadd+1,I2C_Init@LRatio+1
 13764  003CB6  C092  F0A5         	movff	?___ftadd+2,I2C_Init@LRatio+2
 13765                           
 13766                           ;I2C.c: 11: SSPADD = LRatio;
 13767  003CBA  C0A3  F090         	movff	I2C_Init@LRatio,___fttol@f1
 13768  003CBE  C0A4  F091         	movff	I2C_Init@LRatio+1,___fttol@f1+1
 13769  003CC2  C0A5  F092         	movff	I2C_Init@LRatio+2,___fttol@f1+2
 13770  003CC6  EC46  F016         	call	___fttol	;wreg free
 13771  003CCA  0100               	movlb	0	; () banked
 13772  003CCC  5190               	movf	?___fttol& (0+255),w,b
 13773  003CCE  6EC8               	movwf	4040,c	;volatile
 13774                           
 13775                           ;I2C.c: 12: SSPCON2 = 0x00;
 13776  003CD0  0E00               	movlw	0
 13777  003CD2  6EC5               	movwf	4037,c	;volatile
 13778                           
 13779                           ; BSR set to: 0
 13780  003CD4  0012               	return		;funcret
 13781  003CD6                     __end_of_I2C_Init:
 13782                           	opt stack 0
 13783                           tosu	equ	0xFFF
 13784                           tosh	equ	0xFFE
 13785                           tosl	equ	0xFFD
 13786                           pclath	equ	0xFFA
 13787                           tblptru	equ	0xFF8
 13788                           tblptrh	equ	0xFF7
 13789                           tblptrl	equ	0xFF6
 13790                           tablat	equ	0xFF5
 13791                           prodh	equ	0xFF4
 13792                           prodl	equ	0xFF3
 13793                           intcon	equ	0xFF2
 13794                           indf0	equ	0xFEF
 13795                           postinc0	equ	0xFEE
 13796                           plusw0	equ	0xFEB
 13797                           fsr0h	equ	0xFEA
 13798                           fsr0l	equ	0xFE9
 13799                           wreg	equ	0xFE8
 13800                           indf1	equ	0xFE7
 13801                           postinc1	equ	0xFE6
 13802                           postdec1	equ	0xFE5
 13803                           plusw1	equ	0xFE3
 13804                           fsr1h	equ	0xFE2
 13805                           fsr1l	equ	0xFE1
 13806                           indf2	equ	0xFDF
 13807                           postinc2	equ	0xFDE
 13808                           postdec2	equ	0xFDD
 13809                           plusw2	equ	0xFDB
 13810                           fsr2h	equ	0xFDA
 13811                           fsr2l	equ	0xFD9
 13812                           status	equ	0xFD8
 13813                           
 13814 ;; *************** function _Midi_Init *****************
 13815 ;; Defined at:
 13816 ;;		line 6 in file "midi.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;  LPeriod         4   21[BANK0 ] long 
 13821 ;;  LBaudRate       4   17[BANK0 ] const unsigned long 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      void 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13831 ;;      Params:         0       0       0       0       0       0       0       0       0
 13832 ;;      Locals:         0       8       0       0       0       0       0       0       0
 13833 ;;      Temps:          0       4       0       0       0       0       0       0       0
 13834 ;;      Totals:         0      12       0       0       0       0       0       0       0
 13835 ;;Total ram usage:       12 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:    8
 13838 ;; This function calls:
 13839 ;;		_Midi_ResetBuffer
 13840 ;;		___lldiv
 13841 ;; This function is called by:
 13842 ;;		_InitApp
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846                           	psect	text62
 13847  0023A6                     __ptext62:
 13848                           	opt stack 0
 13849  0023A6                     _Midi_Init:
 13850                           	opt stack 21
 13851                           
 13852                           ;midi.c: 8: Midi_ResetBuffer(&_MidiInput);
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;incstack = 0
 13856  0023A6  0E84               	movlw	low __MidiInput
 13857  0023A8  0100               	movlb	0	; () banked
 13858  0023AA  6F60               	movwf	Midi_ResetBuffer@AMidiBuffer& (0+255),b
 13859  0023AC  0E05               	movlw	high __MidiInput
 13860  0023AE  6F61               	movwf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),b
 13861  0023B0  EC29  F01B         	call	_Midi_ResetBuffer	;wreg free
 13862                           
 13863                           ;midi.c: 9: Midi_ResetBuffer(&_MidiOutput);
 13864  0023B4  0E40               	movlw	low __MidiOutput
 13865  0023B6  0100               	movlb	0	; () banked
 13866  0023B8  6F60               	movwf	Midi_ResetBuffer@AMidiBuffer& (0+255),b
 13867  0023BA  0E04               	movlw	high __MidiOutput
 13868  0023BC  6F61               	movwf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),b
 13869  0023BE  EC29  F01B         	call	_Midi_ResetBuffer	;wreg free
 13870                           
 13871                           ;midi.c: 11: RCIF = 0;
 13872  0023C2  9A9E               	bcf	3998,5,c	;volatile
 13873                           
 13874                           ;midi.c: 12: RCIP = 0;
 13875  0023C4  9A9F               	bcf	3999,5,c	;volatile
 13876                           
 13877                           ;midi.c: 13: RCIE = 1;
 13878  0023C6  8A9D               	bsf	3997,5,c	;volatile
 13879                           
 13880                           ;midi.c: 14: PEIE = 1;
 13881  0023C8  8CF2               	bsf	intcon,6,c	;volatile
 13882                           
 13883                           ;midi.c: 16: const unsigned long LBaudRate = 31250;
 13884  0023CA  0E12               	movlw	18
 13885  0023CC  0100               	movlb	0	; () banked
 13886  0023CE  6F71               	movwf	Midi_Init@LBaudRate& (0+255),b
 13887  0023D0  0E7A               	movlw	122
 13888  0023D2  6F72               	movwf	(Midi_Init@LBaudRate+1)& (0+255),b
 13889  0023D4  0E00               	movlw	0
 13890  0023D6  6F73               	movwf	(Midi_Init@LBaudRate+2)& (0+255),b
 13891  0023D8  0E00               	movlw	0
 13892  0023DA  6F74               	movwf	(Midi_Init@LBaudRate+3)& (0+255),b
 13893                           
 13894                           ; BSR set to: 0
 13895                           ;midi.c: 17: long LPeriod;
 13896                           ;midi.c: 18: LPeriod = 48000000L/(LBaudRate*64) - 1;
 13897  0023DC  0E00               	movlw	0
 13898  0023DE  6F60               	movwf	___lldiv@dividend& (0+255),b
 13899  0023E0  0E6C               	movlw	108
 13900  0023E2  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13901  0023E4  0EDC               	movlw	220
 13902  0023E6  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13903  0023E8  0E02               	movlw	2
 13904  0023EA  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13905  0023EC  C071  F06D         	movff	Midi_Init@LBaudRate,??_Midi_Init
 13906  0023F0  C072  F06E         	movff	Midi_Init@LBaudRate+1,??_Midi_Init+1
 13907  0023F4  C073  F06F         	movff	Midi_Init@LBaudRate+2,??_Midi_Init+2
 13908  0023F8  C074  F070         	movff	Midi_Init@LBaudRate+3,??_Midi_Init+3
 13909  0023FC  0E06               	movlw	6
 13910  0023FE                     u8405:
 13911  0023FE  90D8               	bcf	status,0,c
 13912  002400  376D               	rlcf	??_Midi_Init& (0+255),f,b
 13913  002402  376E               	rlcf	(??_Midi_Init+1)& (0+255),f,b
 13914  002404  376F               	rlcf	(??_Midi_Init+2)& (0+255),f,b
 13915  002406  3770               	rlcf	(??_Midi_Init+3)& (0+255),f,b
 13916  002408  2EE8               	decfsz	wreg,f,c
 13917  00240A  D7F9               	goto	u8405
 13918  00240C  C06D  F064         	movff	??_Midi_Init,___lldiv@divisor
 13919  002410  C06E  F065         	movff	??_Midi_Init+1,___lldiv@divisor+1
 13920  002414  C06F  F066         	movff	??_Midi_Init+2,___lldiv@divisor+2
 13921  002418  C070  F067         	movff	??_Midi_Init+3,___lldiv@divisor+3
 13922  00241C  ECEA  F021         	call	___lldiv	;wreg free
 13923  002420  0EFF               	movlw	255
 13924  002422  0100               	movlb	0	; () banked
 13925  002424  2560               	addwf	?___lldiv& (0+255),w,b
 13926  002426  6F75               	movwf	Midi_Init@LPeriod& (0+255),b
 13927  002428  0EFF               	movlw	255
 13928  00242A  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
 13929  00242C  6F76               	movwf	(Midi_Init@LPeriod+1)& (0+255),b
 13930  00242E  0EFF               	movlw	255
 13931  002430  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
 13932  002432  6F77               	movwf	(Midi_Init@LPeriod+2)& (0+255),b
 13933  002434  0EFF               	movlw	255
 13934  002436  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
 13935  002438  6F78               	movwf	(Midi_Init@LPeriod+3)& (0+255),b
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;midi.c: 19: if(LPeriod > 255)
 13939  00243A  BF78               	btfsc	(Midi_Init@LPeriod+3)& (0+255),7,b
 13940  00243C  D036               	goto	l1157
 13941  00243E  5178               	movf	(Midi_Init@LPeriod+3)& (0+255),w,b
 13942  002440  1177               	iorwf	(Midi_Init@LPeriod+2)& (0+255),w,b
 13943  002442  E103               	bnz	u8410
 13944  002444  0576               	decf	(Midi_Init@LPeriod+1)& (0+255),w,b
 13945  002446  A0D8               	btfss	status,0,c
 13946  002448  D030               	goto	l1157
 13947  00244A                     u8410:
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;midi.c: 20: {
 13951                           ;midi.c: 21: LPeriod = 48000000L/(LBaudRate*16) - 1;
 13952  00244A  0E00               	movlw	0
 13953  00244C  6F60               	movwf	___lldiv@dividend& (0+255),b
 13954  00244E  0E6C               	movlw	108
 13955  002450  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 13956  002452  0EDC               	movlw	220
 13957  002454  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 13958  002456  0E02               	movlw	2
 13959  002458  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 13960  00245A  C071  F06D         	movff	Midi_Init@LBaudRate,??_Midi_Init
 13961  00245E  C072  F06E         	movff	Midi_Init@LBaudRate+1,??_Midi_Init+1
 13962  002462  C073  F06F         	movff	Midi_Init@LBaudRate+2,??_Midi_Init+2
 13963  002466  C074  F070         	movff	Midi_Init@LBaudRate+3,??_Midi_Init+3
 13964  00246A  0E04               	movlw	4
 13965  00246C                     u8425:
 13966  00246C  90D8               	bcf	status,0,c
 13967  00246E  376D               	rlcf	??_Midi_Init& (0+255),f,b
 13968  002470  376E               	rlcf	(??_Midi_Init+1)& (0+255),f,b
 13969  002472  376F               	rlcf	(??_Midi_Init+2)& (0+255),f,b
 13970  002474  3770               	rlcf	(??_Midi_Init+3)& (0+255),f,b
 13971  002476  2EE8               	decfsz	wreg,f,c
 13972  002478  D7F9               	goto	u8425
 13973  00247A  C06D  F064         	movff	??_Midi_Init,___lldiv@divisor
 13974  00247E  C06E  F065         	movff	??_Midi_Init+1,___lldiv@divisor+1
 13975  002482  C06F  F066         	movff	??_Midi_Init+2,___lldiv@divisor+2
 13976  002486  C070  F067         	movff	??_Midi_Init+3,___lldiv@divisor+3
 13977  00248A  ECEA  F021         	call	___lldiv	;wreg free
 13978  00248E  0EFF               	movlw	255
 13979  002490  0100               	movlb	0	; () banked
 13980  002492  2560               	addwf	?___lldiv& (0+255),w,b
 13981  002494  6F75               	movwf	Midi_Init@LPeriod& (0+255),b
 13982  002496  0EFF               	movlw	255
 13983  002498  2161               	addwfc	(?___lldiv+1)& (0+255),w,b
 13984  00249A  6F76               	movwf	(Midi_Init@LPeriod+1)& (0+255),b
 13985  00249C  0EFF               	movlw	255
 13986  00249E  2162               	addwfc	(?___lldiv+2)& (0+255),w,b
 13987  0024A0  6F77               	movwf	(Midi_Init@LPeriod+2)& (0+255),b
 13988  0024A2  0EFF               	movlw	255
 13989  0024A4  2163               	addwfc	(?___lldiv+3)& (0+255),w,b
 13990  0024A6  6F78               	movwf	(Midi_Init@LPeriod+3)& (0+255),b
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;midi.c: 22: BRGH = 1;
 13994  0024A8  84AC               	bsf	4012,2,c	;volatile
 13995  0024AA                     l1157:
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;midi.c: 23: }
 13999                           ;midi.c: 24: if(LPeriod < 255)
 14000                           
 14001                           ; BSR set to: 0
 14002  0024AA  BF78               	btfsc	(Midi_Init@LPeriod+3)& (0+255),7,b
 14003  0024AC  D007               	goto	u8430
 14004  0024AE  5178               	movf	(Midi_Init@LPeriod+3)& (0+255),w,b
 14005  0024B0  1177               	iorwf	(Midi_Init@LPeriod+2)& (0+255),w,b
 14006  0024B2  1176               	iorwf	(Midi_Init@LPeriod+1)& (0+255),w,b
 14007  0024B4  E10F               	bnz	l1159
 14008  0024B6  2975               	incf	Midi_Init@LPeriod& (0+255),w,b
 14009  0024B8  B0D8               	btfsc	status,0,c
 14010  0024BA  0012               	return	
 14011  0024BC                     u8430:
 14012                           
 14013                           ; BSR set to: 0
 14014                           ;midi.c: 25: {
 14015                           ;midi.c: 26: SPBRG = LPeriod;
 14016  0024BC  C075  FFAF         	movff	Midi_Init@LPeriod,4015	;volatile
 14017                           
 14018                           ;midi.c: 27: TRISC7 = 1;
 14019  0024C0  8E94               	bsf	3988,7,c	;volatile
 14020                           
 14021                           ;midi.c: 28: TRISC6 = 1;
 14022  0024C2  8C94               	bsf	3988,6,c	;volatile
 14023                           
 14024                           ;midi.c: 29: SYNC = 0;
 14025  0024C4  98AC               	bcf	4012,4,c	;volatile
 14026                           
 14027                           ;midi.c: 30: PIE1bits.RCIE = 1;
 14028  0024C6  8A9D               	bsf	3997,5,c	;volatile
 14029                           
 14030                           ;midi.c: 32: SPEN = 1;
 14031  0024C8  8EAB               	bsf	4011,7,c	;volatile
 14032                           
 14033                           ;midi.c: 33: CREN = 1;
 14034  0024CA  88AB               	bsf	4011,4,c	;volatile
 14035                           
 14036                           ;midi.c: 34: RX9 = 0;
 14037  0024CC  9CAB               	bcf	4011,6,c	;volatile
 14038                           
 14039                           ;midi.c: 36: TXEN = 1;
 14040  0024CE  8AAC               	bsf	4012,5,c	;volatile
 14041                           
 14042                           ;midi.c: 37: TX9 = 0;
 14043  0024D0  9CAC               	bcf	4012,6,c	;volatile
 14044  0024D2  0012               	return	
 14045  0024D4                     l1159:
 14046                           
 14047                           ; BSR set to: 0
 14048  0024D4  0012               	return		;funcret
 14049  0024D6                     __end_of_Midi_Init:
 14050                           	opt stack 0
 14051                           tosu	equ	0xFFF
 14052                           tosh	equ	0xFFE
 14053                           tosl	equ	0xFFD
 14054                           pclath	equ	0xFFA
 14055                           tblptru	equ	0xFF8
 14056                           tblptrh	equ	0xFF7
 14057                           tblptrl	equ	0xFF6
 14058                           tablat	equ	0xFF5
 14059                           prodh	equ	0xFF4
 14060                           prodl	equ	0xFF3
 14061                           intcon	equ	0xFF2
 14062                           indf0	equ	0xFEF
 14063                           postinc0	equ	0xFEE
 14064                           plusw0	equ	0xFEB
 14065                           fsr0h	equ	0xFEA
 14066                           fsr0l	equ	0xFE9
 14067                           wreg	equ	0xFE8
 14068                           indf1	equ	0xFE7
 14069                           postinc1	equ	0xFE6
 14070                           postdec1	equ	0xFE5
 14071                           plusw1	equ	0xFE3
 14072                           fsr1h	equ	0xFE2
 14073                           fsr1l	equ	0xFE1
 14074                           indf2	equ	0xFDF
 14075                           postinc2	equ	0xFDE
 14076                           postdec2	equ	0xFDD
 14077                           plusw2	equ	0xFDB
 14078                           fsr2h	equ	0xFDA
 14079                           fsr2l	equ	0xFD9
 14080                           status	equ	0xFD8
 14081                           
 14082 ;; *************** function ___lldiv *****************
 14083 ;; Defined at:
 14084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  dividend        4    0[BANK0 ] unsigned long 
 14087 ;;  divisor         4    4[BANK0 ] unsigned long 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  quotient        4    8[BANK0 ] unsigned long 
 14090 ;;  counter         1   12[BANK0 ] unsigned char 
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  4    0[BANK0 ] unsigned long 
 14093 ;; Registers used:
 14094 ;;		wreg, status,2, status,0
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14100 ;;      Params:         0       8       0       0       0       0       0       0       0
 14101 ;;      Locals:         0       5       0       0       0       0       0       0       0
 14102 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14103 ;;      Totals:         0      13       0       0       0       0       0       0       0
 14104 ;;Total ram usage:       13 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    7
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_Midi_Init
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           	psect	text63
 14115  0043D4                     __ptext63:
 14116                           	opt stack 0
 14117  0043D4                     ___lldiv:
 14118                           	opt stack 21
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;incstack = 0
 14122  0043D4  0E00               	movlw	0
 14123  0043D6  0100               	movlb	0	; () banked
 14124  0043D8  6F68               	movwf	___lldiv@quotient& (0+255),b
 14125  0043DA  0E00               	movlw	0
 14126  0043DC  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 14127  0043DE  0E00               	movlw	0
 14128  0043E0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 14129  0043E2  0E00               	movlw	0
 14130  0043E4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133  0043E6  5164               	movf	___lldiv@divisor& (0+255),w,b
 14134  0043E8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 14135  0043EA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 14136  0043EC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 14137  0043EE  B4D8               	btfsc	status,2,c
 14138  0043F0  D02A               	goto	l1671
 14139                           
 14140                           ; BSR set to: 0
 14141  0043F2  0E01               	movlw	1
 14142  0043F4  6F6C               	movwf	___lldiv@counter& (0+255),b
 14143  0043F6  D006               	goto	l1666
 14144  0043F8                     
 14145                           ; BSR set to: 0
 14146                           
 14147                           ; BSR set to: 0
 14148  0043F8  90D8               	bcf	status,0,c
 14149  0043FA  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 14150  0043FC  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 14151  0043FE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 14152  004400  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 14153  004402  2B6C               	incf	___lldiv@counter& (0+255),f,b
 14154  004404                     l1666:
 14155                           
 14156                           ; BSR set to: 0
 14157                           
 14158                           ; BSR set to: 0
 14159  004404  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 14160  004406  D7F8               	goto	l1667
 14161  004408                     u7820:
 14162                           
 14163                           ; BSR set to: 0
 14164                           
 14165                           ; BSR set to: 0
 14166                           
 14167                           ; BSR set to: 0
 14168  004408  90D8               	bcf	status,0,c
 14169  00440A  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 14170  00440C  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 14171  00440E  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 14172  004410  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 14173                           
 14174                           ; BSR set to: 0
 14175  004412  5164               	movf	___lldiv@divisor& (0+255),w,b
 14176  004414  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 14177  004416  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14178  004418  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 14179  00441A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14180  00441C  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 14181  00441E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14182  004420  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 14183  004422  A0D8               	btfss	status,0,c
 14184  004424  D009               	goto	l1670
 14185                           
 14186                           ; BSR set to: 0
 14187  004426  5164               	movf	___lldiv@divisor& (0+255),w,b
 14188  004428  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 14189  00442A  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 14190  00442C  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 14191  00442E  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 14192  004430  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 14193  004432  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 14194  004434  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 14195                           
 14196                           ; BSR set to: 0
 14197  004436  8168               	bsf	___lldiv@quotient& (0+255),0,b
 14198  004438                     l1670:
 14199                           
 14200                           ; BSR set to: 0
 14201                           
 14202                           ; BSR set to: 0
 14203  004438  90D8               	bcf	status,0,c
 14204  00443A  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 14205  00443C  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 14206  00443E  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 14207  004440  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 14208                           
 14209                           ; BSR set to: 0
 14210  004442  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 14211  004444  D7E1               	goto	u7820
 14212  004446                     l1671:
 14213                           
 14214                           ; BSR set to: 0
 14215                           
 14216                           ; BSR set to: 0
 14217  004446  C068  F060         	movff	___lldiv@quotient,?___lldiv
 14218  00444A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 14219  00444E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 14220  004452  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 14221                           
 14222                           ; BSR set to: 0
 14223  004456  0012               	return		;funcret
 14224  004458                     __end_of___lldiv:
 14225                           	opt stack 0
 14226                           tosu	equ	0xFFF
 14227                           tosh	equ	0xFFE
 14228                           tosl	equ	0xFFD
 14229                           pclath	equ	0xFFA
 14230                           tblptru	equ	0xFF8
 14231                           tblptrh	equ	0xFF7
 14232                           tblptrl	equ	0xFF6
 14233                           tablat	equ	0xFF5
 14234                           prodh	equ	0xFF4
 14235                           prodl	equ	0xFF3
 14236                           intcon	equ	0xFF2
 14237                           indf0	equ	0xFEF
 14238                           postinc0	equ	0xFEE
 14239                           plusw0	equ	0xFEB
 14240                           fsr0h	equ	0xFEA
 14241                           fsr0l	equ	0xFE9
 14242                           wreg	equ	0xFE8
 14243                           indf1	equ	0xFE7
 14244                           postinc1	equ	0xFE6
 14245                           postdec1	equ	0xFE5
 14246                           plusw1	equ	0xFE3
 14247                           fsr1h	equ	0xFE2
 14248                           fsr1l	equ	0xFE1
 14249                           indf2	equ	0xFDF
 14250                           postinc2	equ	0xFDE
 14251                           postdec2	equ	0xFDD
 14252                           plusw2	equ	0xFDB
 14253                           fsr2h	equ	0xFDA
 14254                           fsr2l	equ	0xFD9
 14255                           status	equ	0xFD8
 14256                           
 14257 ;; *************** function _Midi_ResetBuffer *****************
 14258 ;; Defined at:
 14259 ;;		line 41 in file "midi.c"
 14260 ;; Parameters:    Size  Location     Type
 14261 ;;  AMidiBuffer     2    0[BANK0 ] PTR struct .
 14262 ;;		 -> _MidiOutput(324), _MidiInput(324), 
 14263 ;; Auto vars:     Size  Location     Type
 14264 ;;  j               1    4[BANK0 ] unsigned char 
 14265 ;;  i               1    5[BANK0 ] unsigned char 
 14266 ;; Return value:  Size  Location     Type
 14267 ;;                  1    wreg      void 
 14268 ;; Registers used:
 14269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14270 ;; Tracked objects:
 14271 ;;		On entry : 0/0
 14272 ;;		On exit  : 0/0
 14273 ;;		Unchanged: 0/0
 14274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14275 ;;      Params:         0       2       0       0       0       0       0       0       0
 14276 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14277 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14278 ;;      Totals:         0       6       0       0       0       0       0       0       0
 14279 ;;Total ram usage:        6 bytes
 14280 ;; Hardware stack levels used:    1
 14281 ;; Hardware stack levels required when called:    7
 14282 ;; This function calls:
 14283 ;;		Nothing
 14284 ;; This function is called by:
 14285 ;;		_Midi_Init
 14286 ;; This function uses a non-reentrant model
 14287 ;;
 14288                           
 14289                           	psect	text64
 14290  003652                     __ptext64:
 14291                           	opt stack 0
 14292  003652                     _Midi_ResetBuffer:
 14293                           	opt stack 21
 14294                           
 14295                           ;midi.c: 43: AMidiBuffer->iBufferRead = 0;
 14296                           
 14297                           ; BSR set to: 0
 14298                           ;incstack = 0
 14299  003652  0100               	movlb	0	; () banked
 14300  003654  EE21 F040          	lfsr	2,320
 14301  003658  5160               	movf	Midi_ResetBuffer@AMidiBuffer& (0+255),w,b
 14302  00365A  26D9               	addwf	fsr2l,f,c
 14303  00365C  5161               	movf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),w,b
 14304  00365E  22DA               	addwfc	fsr2h,f,c
 14305  003660  0E00               	movlw	0
 14306  003662  6EDF               	movwf	indf2,c
 14307                           
 14308                           ;midi.c: 44: AMidiBuffer->iBufferWrite = 0;
 14309  003664  EE21 F041          	lfsr	2,321
 14310  003668  5160               	movf	Midi_ResetBuffer@AMidiBuffer& (0+255),w,b
 14311  00366A  26D9               	addwf	fsr2l,f,c
 14312  00366C  5161               	movf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),w,b
 14313  00366E  22DA               	addwfc	fsr2h,f,c
 14314  003670  0E00               	movlw	0
 14315  003672  6EDF               	movwf	indf2,c
 14316                           
 14317                           ;midi.c: 45: AMidiBuffer->iData = 0;
 14318  003674  EE21 F042          	lfsr	2,322
 14319  003678  5160               	movf	Midi_ResetBuffer@AMidiBuffer& (0+255),w,b
 14320  00367A  26D9               	addwf	fsr2l,f,c
 14321  00367C  5161               	movf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),w,b
 14322  00367E  22DA               	addwfc	fsr2h,f,c
 14323  003680  0E00               	movlw	0
 14324  003682  6EDF               	movwf	indf2,c
 14325                           
 14326                           ;midi.c: 46: AMidiBuffer->Size = 0;
 14327  003684  EE21 F043          	lfsr	2,323
 14328  003688  5160               	movf	Midi_ResetBuffer@AMidiBuffer& (0+255),w,b
 14329  00368A  26D9               	addwf	fsr2l,f,c
 14330  00368C  5161               	movf	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),w,b
 14331  00368E  22DA               	addwfc	fsr2h,f,c
 14332  003690  0E00               	movlw	0
 14333  003692  6EDF               	movwf	indf2,c
 14334                           
 14335                           ; BSR set to: 0
 14336                           ;midi.c: 47: for (char i = 0; i < 64; i++)
 14337  003694  0E00               	movlw	0
 14338  003696  6F65               	movwf	Midi_ResetBuffer@i& (0+255),b
 14339  003698                     l6533:
 14340                           
 14341                           ; BSR set to: 0
 14342  003698  0E3F               	movlw	63
 14343  00369A  6565               	cpfsgt	Midi_ResetBuffer@i& (0+255),b
 14344  00369C  D001               	goto	l1162
 14345  00369E  0012               	return	
 14346  0036A0                     l1162:
 14347                           
 14348                           ; BSR set to: 0
 14349                           ;midi.c: 48: {
 14350                           ;midi.c: 49: AMidiBuffer->Buffer[i].Code = 0x00;
 14351                           
 14352                           ; BSR set to: 0
 14353  0036A0  5165               	movf	Midi_ResetBuffer@i& (0+255),w,b
 14354  0036A2  0D05               	mullw	5
 14355  0036A4  50F3               	movf	prodl,w,c
 14356  0036A6  2560               	addwf	Midi_ResetBuffer@AMidiBuffer& (0+255),w,b
 14357  0036A8  6ED9               	movwf	fsr2l,c
 14358  0036AA  50F4               	movf	prodh,w,c
 14359  0036AC  2161               	addwfc	(Midi_ResetBuffer@AMidiBuffer+1)& (0+255),w,b
 14360  0036AE  6EDA               	movwf	fsr2h,c
 14361  0036B0  0E00               	movlw	0
 14362  0036B2  6EDF               	movwf	indf2,c
 14363                           
 14364                           ;midi.c: 50: AMidiBuffer->Buffer[i].Channel = 0x00;
 14365  0036B4  5165               	movf	Midi_ResetBuffer@i& (0+255),w,b
 14366  0036B6  0D05               	mullw	5
 14367  0036B8  C060  F062         	movff	Midi_ResetBuffer@AMidiBuffer,??_Midi_ResetBuffer
 14368  0036BC  C061  F063         	movff	Midi_ResetBuffer@AMidiBuffer+1,??_Midi_ResetBuffer+1
 14369  0036C0  50F3               	movf	prodl,w,c
 14370  0036C2  2762               	addwf	??_Midi_ResetBuffer& (0+255),f,b
 14371  0036C4  50F4               	movf	prodh,w,c
 14372  0036C6  2363               	addwfc	(??_Midi_ResetBuffer+1)& (0+255),f,b
 14373  0036C8  0E01               	movlw	1
 14374  0036CA  2562               	addwf	??_Midi_ResetBuffer& (0+255),w,b
 14375  0036CC  6ED9               	movwf	fsr2l,c
 14376  0036CE  0E00               	movlw	0
 14377  0036D0  2163               	addwfc	(??_Midi_ResetBuffer+1)& (0+255),w,b
 14378  0036D2  6EDA               	movwf	fsr2h,c
 14379  0036D4  0E00               	movlw	0
 14380  0036D6  6EDF               	movwf	indf2,c
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;midi.c: 51: for (char j = 0; j < sizeof(AMidiBuffer->Buffer[i].Data); j++)
 14384  0036D8  0E00               	movlw	0
 14385  0036DA  6F64               	movwf	Midi_ResetBuffer@j& (0+255),b
 14386  0036DC                     l6541:
 14387                           
 14388                           ; BSR set to: 0
 14389  0036DC  0E01               	movlw	1
 14390  0036DE  6564               	cpfsgt	Midi_ResetBuffer@j& (0+255),b
 14391  0036E0  D001               	goto	l1164
 14392  0036E2  D01A               	goto	u7450
 14393  0036E4                     l1164:
 14394                           
 14395                           ; BSR set to: 0
 14396                           ;midi.c: 52: AMidiBuffer->Buffer[i].Data[j] = 0x00;
 14397                           
 14398                           ; BSR set to: 0
 14399  0036E4  5164               	movf	Midi_ResetBuffer@j& (0+255),w,b
 14400  0036E6  0D01               	mullw	1
 14401  0036E8  0E02               	movlw	2
 14402  0036EA  26F3               	addwf	prodl,f,c
 14403  0036EC  0E00               	movlw	0
 14404  0036EE  22F4               	addwfc	prodh,f,c
 14405  0036F0  C060  F062         	movff	Midi_ResetBuffer@AMidiBuffer,??_Midi_ResetBuffer
 14406  0036F4  C061  F063         	movff	Midi_ResetBuffer@AMidiBuffer+1,??_Midi_ResetBuffer+1
 14407  0036F8  50F3               	movf	prodl,w,c
 14408  0036FA  2762               	addwf	??_Midi_ResetBuffer& (0+255),f,b
 14409  0036FC  50F4               	movf	prodh,w,c
 14410  0036FE  2363               	addwfc	(??_Midi_ResetBuffer+1)& (0+255),f,b
 14411  003700  5165               	movf	Midi_ResetBuffer@i& (0+255),w,b
 14412  003702  0D05               	mullw	5
 14413  003704  50F3               	movf	prodl,w,c
 14414  003706  2562               	addwf	??_Midi_ResetBuffer& (0+255),w,b
 14415  003708  6ED9               	movwf	fsr2l,c
 14416  00370A  50F4               	movf	prodh,w,c
 14417  00370C  2163               	addwfc	(??_Midi_ResetBuffer+1)& (0+255),w,b
 14418  00370E  6EDA               	movwf	fsr2h,c
 14419  003710  0E00               	movlw	0
 14420  003712  6EDF               	movwf	indf2,c
 14421                           
 14422                           ; BSR set to: 0
 14423  003714  2B64               	incf	Midi_ResetBuffer@j& (0+255),f,b
 14424  003716  D7E2               	goto	l6541
 14425  003718                     u7450:
 14426                           
 14427                           ; BSR set to: 0
 14428                           
 14429                           ; BSR set to: 0
 14430  003718  2B65               	incf	Midi_ResetBuffer@i& (0+255),f,b
 14431  00371A  D7BE               	goto	l6533
 14432  00371C                     __end_of_Midi_ResetBuffer:
 14433                           	opt stack 0
 14434                           tosu	equ	0xFFF
 14435                           tosh	equ	0xFFE
 14436                           tosl	equ	0xFFD
 14437                           pclath	equ	0xFFA
 14438                           tblptru	equ	0xFF8
 14439                           tblptrh	equ	0xFF7
 14440                           tblptrl	equ	0xFF6
 14441                           tablat	equ	0xFF5
 14442                           prodh	equ	0xFF4
 14443                           prodl	equ	0xFF3
 14444                           intcon	equ	0xFF2
 14445                           indf0	equ	0xFEF
 14446                           postinc0	equ	0xFEE
 14447                           plusw0	equ	0xFEB
 14448                           fsr0h	equ	0xFEA
 14449                           fsr0l	equ	0xFE9
 14450                           wreg	equ	0xFE8
 14451                           indf1	equ	0xFE7
 14452                           postinc1	equ	0xFE6
 14453                           postdec1	equ	0xFE5
 14454                           plusw1	equ	0xFE3
 14455                           fsr1h	equ	0xFE2
 14456                           fsr1l	equ	0xFE1
 14457                           indf2	equ	0xFDF
 14458                           postinc2	equ	0xFDE
 14459                           postdec2	equ	0xFDD
 14460                           plusw2	equ	0xFDB
 14461                           fsr2h	equ	0xFDA
 14462                           fsr2l	equ	0xFD9
 14463                           status	equ	0xFD8
 14464                           
 14465 ;; *************** function _InitDigiPot *****************
 14466 ;; Defined at:
 14467 ;;		line 7 in file "digipot.c"
 14468 ;; Parameters:    Size  Location     Type
 14469 ;;		None
 14470 ;; Auto vars:     Size  Location     Type
 14471 ;;  LTickCount      4  105[BANK0 ] long 
 14472 ;;  LPeriod         3  109[BANK0 ] float 
 14473 ;;  LPrescaler      1  115[BANK0 ] unsigned char 
 14474 ;; Return value:  Size  Location     Type
 14475 ;;                  1    wreg      void 
 14476 ;; Registers used:
 14477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14478 ;; Tracked objects:
 14479 ;;		On entry : 0/0
 14480 ;;		On exit  : 0/0
 14481 ;;		Unchanged: 0/0
 14482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14483 ;;      Params:         0       0       0       0       0       0       0       0       0
 14484 ;;      Locals:         0      11       0       0       0       0       0       0       0
 14485 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14486 ;;      Totals:         0      11       0       0       0       0       0       0       0
 14487 ;;Total ram usage:       11 bytes
 14488 ;; Hardware stack levels used:    1
 14489 ;; Hardware stack levels required when called:   12
 14490 ;; This function calls:
 14491 ;;		_InitConnector
 14492 ;;		___altoft
 14493 ;;		___ftdiv
 14494 ;;		___ftmul
 14495 ;;		___fttol
 14496 ;;		___lbtoft
 14497 ;;		_pow
 14498 ;; This function is called by:
 14499 ;;		_InitApp
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text65
 14504  002124                     __ptext65:
 14505                           	opt stack 0
 14506  002124                     _InitDigiPot:
 14507                           	opt stack 17
 14508                           
 14509                           ;digipot.c: 9: unsigned char LPrescaler = T0PS0 | (T0PS1 << 1) | (T0PS2 << 2);
 14510                           
 14511                           ; BSR set to: 0
 14512                           ;incstack = 0
 14513  002124  0E00               	movlw	0
 14514  002126  B0D5               	btfsc	4053,0,c	;volatile
 14515  002128  0E01               	movlw	1
 14516  00212A  B2D5               	btfsc	4053,1,c	;volatile
 14517  00212C  0902               	iorlw	2
 14518  00212E  B4D5               	btfsc	4053,2,c	;volatile
 14519  002130  0904               	iorlw	4
 14520  002132  0100               	movlb	0	; () banked
 14521  002134  6FD3               	movwf	InitDigiPot@LPrescaler& (0+255),b
 14522                           
 14523                           ; BSR set to: 0
 14524                           ;digipot.c: 10: long LTickCount = pow(2, LPrescaler) * 4096;
 14525  002136  51D3               	movf	InitDigiPot@LPrescaler& (0+255),w,b
 14526  002138  ECA6  F028         	call	___lbtoft
 14527  00213C  C068  F0BB         	movff	?___lbtoft,pow@y
 14528  002140  C069  F0BC         	movff	?___lbtoft+1,pow@y+1
 14529  002144  C06A  F0BD         	movff	?___lbtoft+2,pow@y+2
 14530  002148  0E00               	movlw	0
 14531  00214A  0100               	movlb	0	; () banked
 14532  00214C  6FB8               	movwf	pow@x& (0+255),b
 14533  00214E  0E00               	movlw	0
 14534  002150  6FB9               	movwf	(pow@x+1)& (0+255),b
 14535  002152  0E40               	movlw	64
 14536  002154  6FBA               	movwf	(pow@x+2)& (0+255),b
 14537  002156  EC77  F00E         	call	_pow	;wreg free
 14538  00215A  C0B8  F0D0         	movff	?_pow,_InitDigiPot$4457
 14539  00215E  C0B9  F0D1         	movff	?_pow+1,_InitDigiPot$4457+1
 14540  002162  C0BA  F0D2         	movff	?_pow+2,_InitDigiPot$4457+2
 14541                           
 14542                           ;digipot.c: 10: long LTickCount = pow(2, LPrescaler) * 4096;
 14543  002166  0E00               	movlw	0
 14544  002168  0100               	movlb	0	; () banked
 14545  00216A  6F75               	movwf	___ftmul@f2& (0+255),b
 14546  00216C  0E80               	movlw	128
 14547  00216E  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 14548  002170  0E45               	movlw	69
 14549  002172  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 14550  002174  C0D0  F072         	movff	_InitDigiPot$4457,___ftmul@f1
 14551  002178  C0D1  F073         	movff	_InitDigiPot$4457+1,___ftmul@f1+1
 14552  00217C  C0D2  F074         	movff	_InitDigiPot$4457+2,___ftmul@f1+2
 14553  002180  ECC2  F016         	call	___ftmul	;wreg free
 14554  002184  C072  F090         	movff	?___ftmul,___fttol@f1
 14555  002188  C073  F091         	movff	?___ftmul+1,___fttol@f1+1
 14556  00218C  C074  F092         	movff	?___ftmul+2,___fttol@f1+2
 14557  002190  EC46  F016         	call	___fttol	;wreg free
 14558  002194  C090  F0C9         	movff	?___fttol,InitDigiPot@LTickCount
 14559  002198  C091  F0CA         	movff	?___fttol+1,InitDigiPot@LTickCount+1
 14560  00219C  C092  F0CB         	movff	?___fttol+2,InitDigiPot@LTickCount+2
 14561  0021A0  C093  F0CC         	movff	?___fttol+3,InitDigiPot@LTickCount+3
 14562                           
 14563                           ;digipot.c: 11: float LPeriod = (1.0f * LTickCount / 20000000);
 14564  0021A4  0E00               	movlw	0
 14565  0021A6  0100               	movlb	0	; () banked
 14566  0021A8  6F75               	movwf	___ftmul@f2& (0+255),b
 14567  0021AA  0E80               	movlw	128
 14568  0021AC  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 14569  0021AE  0E3F               	movlw	63
 14570  0021B0  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 14571  0021B2  C0C9  F068         	movff	InitDigiPot@LTickCount,___altoft@c
 14572  0021B6  C0CA  F069         	movff	InitDigiPot@LTickCount+1,___altoft@c+1
 14573  0021BA  C0CB  F06A         	movff	InitDigiPot@LTickCount+2,___altoft@c+2
 14574  0021BE  C0CC  F06B         	movff	InitDigiPot@LTickCount+3,___altoft@c+3
 14575  0021C2  ECA9  F022         	call	___altoft	;wreg free
 14576  0021C6  C068  F072         	movff	?___altoft,___ftmul@f1
 14577  0021CA  C069  F073         	movff	?___altoft+1,___ftmul@f1+1
 14578  0021CE  C06A  F074         	movff	?___altoft+2,___ftmul@f1+2
 14579  0021D2  ECC2  F016         	call	___ftmul	;wreg free
 14580  0021D6  C072  F081         	movff	?___ftmul,___ftdiv@f1
 14581  0021DA  C073  F082         	movff	?___ftmul+1,___ftdiv@f1+1
 14582  0021DE  C074  F083         	movff	?___ftmul+2,___ftdiv@f1+2
 14583  0021E2  0E97               	movlw	151
 14584  0021E4  0100               	movlb	0	; () banked
 14585  0021E6  6F84               	movwf	___ftdiv@f2& (0+255),b
 14586  0021E8  0E98               	movlw	152
 14587  0021EA  6F85               	movwf	(___ftdiv@f2+1)& (0+255),b
 14588  0021EC  0E4B               	movlw	75
 14589  0021EE  6F86               	movwf	(___ftdiv@f2+2)& (0+255),b
 14590  0021F0  ECB6  F017         	call	___ftdiv	;wreg free
 14591  0021F4  C081  F0CD         	movff	?___ftdiv,InitDigiPot@LPeriod
 14592  0021F8  C082  F0CE         	movff	?___ftdiv+1,InitDigiPot@LPeriod+1
 14593  0021FC  C083  F0CF         	movff	?___ftdiv+2,InitDigiPot@LPeriod+2
 14594                           
 14595                           ;digipot.c: 13: TRISA2 = 0;
 14596  002200  9492               	bcf	3986,2,c	;volatile
 14597                           
 14598                           ;digipot.c: 14: TRISA3 = 0;
 14599  002202  9692               	bcf	3986,3,c	;volatile
 14600                           
 14601                           ;digipot.c: 15: TRISA4 = 0;
 14602  002204  9892               	bcf	3986,4,c	;volatile
 14603                           
 14604                           ;digipot.c: 17: _DigiPot.CounterRef = 0.125f / LPeriod;
 14605  002206  C0CD  F084         	movff	InitDigiPot@LPeriod,___ftdiv@f2
 14606  00220A  C0CE  F085         	movff	InitDigiPot@LPeriod+1,___ftdiv@f2+1
 14607  00220E  C0CF  F086         	movff	InitDigiPot@LPeriod+2,___ftdiv@f2+2
 14608  002212  0E00               	movlw	0
 14609  002214  0100               	movlb	0	; () banked
 14610  002216  6F81               	movwf	___ftdiv@f1& (0+255),b
 14611  002218  0E00               	movlw	0
 14612  00221A  6F82               	movwf	(___ftdiv@f1+1)& (0+255),b
 14613  00221C  0E3E               	movlw	62
 14614  00221E  6F83               	movwf	(___ftdiv@f1+2)& (0+255),b
 14615  002220  ECB6  F017         	call	___ftdiv	;wreg free
 14616  002224  C081  F090         	movff	?___ftdiv,___fttol@f1
 14617  002228  C082  F091         	movff	?___ftdiv+1,___fttol@f1+1
 14618  00222C  C083  F092         	movff	?___ftdiv+2,___fttol@f1+2
 14619  002230  EC46  F016         	call	___fttol	;wreg free
 14620  002234  0100               	movlb	0	; () banked
 14621  002236  5190               	movf	?___fttol& (0+255),w,b
 14622  002238  0101               	movlb	1	; () banked
 14623  00223A  6FD9               	movwf	__DigiPot& (0+255),b
 14624                           
 14625                           ; BSR set to: 1
 14626                           ;digipot.c: 18: _DigiPot.Counter = 0;
 14627  00223C  0E00               	movlw	0
 14628  00223E  6FDA               	movwf	(__DigiPot+1)& (0+255),b
 14629                           
 14630                           ; BSR set to: 1
 14631                           ;digipot.c: 19: _DigiPot.IO.ClockPin.Write = &DigiPot_ClockWrite;
 14632  002240  0E0A               	movlw	low _DigiPot_ClockWrite
 14633  002242  6FDD               	movwf	(__DigiPot+4)& (0+255),b
 14634  002244  0E54               	movlw	high _DigiPot_ClockWrite
 14635  002246  6FDE               	movwf	(__DigiPot+5)& (0+255),b
 14636                           
 14637                           ; BSR set to: 1
 14638                           ;digipot.c: 20: _DigiPot.IO.DataPin.Write = &DigiPot_DataWrite;
 14639  002248  0EF2               	movlw	low _DigiPot_DataWrite
 14640  00224A  6FE1               	movwf	(__DigiPot+8)& (0+255),b
 14641  00224C  0E53               	movlw	high _DigiPot_DataWrite
 14642  00224E  6FE2               	movwf	(__DigiPot+9)& (0+255),b
 14643                           
 14644                           ; BSR set to: 1
 14645                           ;digipot.c: 21: _DigiPot.IO.LatchPin.Write = &DigiPot_LatchWrite;
 14646  002250  0EDA               	movlw	low _DigiPot_LatchWrite
 14647  002252  6FE5               	movwf	(__DigiPot+12)& (0+255),b
 14648  002254  0E53               	movlw	high _DigiPot_LatchWrite
 14649  002256  6FE6               	movwf	(__DigiPot+13)& (0+255),b
 14650                           
 14651                           ; BSR set to: 1
 14652                           ;digipot.c: 22: InitConnector(&_DigiPot.IO);
 14653  002258  0EDB               	movlw	low (__DigiPot+2)
 14654  00225A  0100               	movlb	0	; () banked
 14655  00225C  6F62               	movwf	InitConnector@AConnector& (0+255),b
 14656  00225E  0E01               	movlw	high (__DigiPot+2)
 14657  002260  6F63               	movwf	(InitConnector@AConnector+1)& (0+255),b
 14658  002262  EC2F  F028         	call	_InitConnector	;wreg free
 14659  002266  0012               	return		;funcret
 14660  002268                     __end_of_InitDigiPot:
 14661                           	opt stack 0
 14662                           tosu	equ	0xFFF
 14663                           tosh	equ	0xFFE
 14664                           tosl	equ	0xFFD
 14665                           pclath	equ	0xFFA
 14666                           tblptru	equ	0xFF8
 14667                           tblptrh	equ	0xFF7
 14668                           tblptrl	equ	0xFF6
 14669                           tablat	equ	0xFF5
 14670                           prodh	equ	0xFF4
 14671                           prodl	equ	0xFF3
 14672                           intcon	equ	0xFF2
 14673                           indf0	equ	0xFEF
 14674                           postinc0	equ	0xFEE
 14675                           plusw0	equ	0xFEB
 14676                           fsr0h	equ	0xFEA
 14677                           fsr0l	equ	0xFE9
 14678                           wreg	equ	0xFE8
 14679                           indf1	equ	0xFE7
 14680                           postinc1	equ	0xFE6
 14681                           postdec1	equ	0xFE5
 14682                           plusw1	equ	0xFE3
 14683                           fsr1h	equ	0xFE2
 14684                           fsr1l	equ	0xFE1
 14685                           indf2	equ	0xFDF
 14686                           postinc2	equ	0xFDE
 14687                           postdec2	equ	0xFDD
 14688                           plusw2	equ	0xFDB
 14689                           fsr2h	equ	0xFDA
 14690                           fsr2l	equ	0xFD9
 14691                           status	equ	0xFD8
 14692                           
 14693 ;; *************** function ___lbtoft *****************
 14694 ;; Defined at:
 14695 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbtoft.c"
 14696 ;; Parameters:    Size  Location     Type
 14697 ;;  c               1    wreg     unsigned char 
 14698 ;; Auto vars:     Size  Location     Type
 14699 ;;  c               1   11[BANK0 ] unsigned char 
 14700 ;; Return value:  Size  Location     Type
 14701 ;;                  3    8[BANK0 ] float 
 14702 ;; Registers used:
 14703 ;;		wreg, status,2, status,0, cstack
 14704 ;; Tracked objects:
 14705 ;;		On entry : 0/0
 14706 ;;		On exit  : 0/0
 14707 ;;		Unchanged: 0/0
 14708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14709 ;;      Params:         0       3       0       0       0       0       0       0       0
 14710 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14711 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14712 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14713 ;;Total ram usage:        4 bytes
 14714 ;; Hardware stack levels used:    1
 14715 ;; Hardware stack levels required when called:    8
 14716 ;; This function calls:
 14717 ;;		___ftpack
 14718 ;; This function is called by:
 14719 ;;		_InitDigiPot
 14720 ;;		_Zip
 14721 ;;		_UnZip
 14722 ;; This function uses a non-reentrant model
 14723 ;;
 14724                           
 14725                           	psect	text66
 14726  00514C                     __ptext66:
 14727                           	opt stack 0
 14728  00514C                     ___lbtoft:
 14729                           	opt stack 20
 14730                           
 14731                           ;incstack = 0
 14732                           ;___lbtoft@c stored from wreg
 14733  00514C  0100               	movlb	0	; () banked
 14734  00514E  6F6B               	movwf	___lbtoft@c& (0+255),b
 14735  005150  0100               	movlb	0	; () banked
 14736  005152  516B               	movf	___lbtoft@c& (0+255),w,b
 14737  005154  6F60               	movwf	___ftpack@arg& (0+255),b
 14738  005156  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
 14739  005158  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 14740  00515A  0E8E               	movlw	142
 14741  00515C  6F63               	movwf	___ftpack@exp& (0+255),b
 14742  00515E  0E00               	movlw	0
 14743  005160  6F64               	movwf	___ftpack@sign& (0+255),b
 14744  005162  ECC2  F01D         	call	___ftpack	;wreg free
 14745  005166  C060  F068         	movff	?___ftpack,?___lbtoft
 14746  00516A  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
 14747  00516E  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
 14748  005172  0012               	return	
 14749  005174                     __end_of___lbtoft:
 14750                           	opt stack 0
 14751                           tosu	equ	0xFFF
 14752                           tosh	equ	0xFFE
 14753                           tosl	equ	0xFFD
 14754                           pclath	equ	0xFFA
 14755                           tblptru	equ	0xFF8
 14756                           tblptrh	equ	0xFF7
 14757                           tblptrl	equ	0xFF6
 14758                           tablat	equ	0xFF5
 14759                           prodh	equ	0xFF4
 14760                           prodl	equ	0xFF3
 14761                           intcon	equ	0xFF2
 14762                           indf0	equ	0xFEF
 14763                           postinc0	equ	0xFEE
 14764                           plusw0	equ	0xFEB
 14765                           fsr0h	equ	0xFEA
 14766                           fsr0l	equ	0xFE9
 14767                           wreg	equ	0xFE8
 14768                           indf1	equ	0xFE7
 14769                           postinc1	equ	0xFE6
 14770                           postdec1	equ	0xFE5
 14771                           plusw1	equ	0xFE3
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           postinc2	equ	0xFDE
 14776                           postdec2	equ	0xFDD
 14777                           plusw2	equ	0xFDB
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function _Hub_Init *****************
 14783 ;; Defined at:
 14784 ;;		line 9 in file "hub.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;		None
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;  i               2   69[BANK0 ] int 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      void 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0
 14799 ;;      Locals:         0       2       0       0       0       0       0       0       0
 14800 ;;      Temps:          0       2       0       0       0       0       0       0       0
 14801 ;;      Totals:         0       4       0       0       0       0       0       0       0
 14802 ;;Total ram usage:        4 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:   12
 14805 ;; This function calls:
 14806 ;;		_Hub_ReadSwitch
 14807 ;;		_InitConnector
 14808 ;; This function is called by:
 14809 ;;		_InitApp
 14810 ;; This function uses a non-reentrant model
 14811 ;;
 14812                           
 14813                           	psect	text67
 14814  003E16                     __ptext67:
 14815                           	opt stack 0
 14816  003E16                     _Hub_Init:
 14817                           	opt stack 17
 14818                           
 14819                           ;hub.c: 11: _Hub.ReadyToWrite = 0;
 14820                           
 14821                           ;incstack = 0
 14822  003E16  0E00               	movlw	0
 14823  003E18  0101               	movlb	1	; () banked
 14824  003E1A  6FC5               	movwf	(__Hub+134)& (0+255),b
 14825                           
 14826                           ;hub.c: 12: _Hub.ReadyToRead = 1;
 14827  003E1C  0E01               	movlw	1
 14828  003E1E  6FC6               	movwf	(__Hub+135)& (0+255),b
 14829                           
 14830                           ;hub.c: 13: _Hub.Paused = 0;
 14831  003E20  0E00               	movlw	0
 14832  003E22  6FC7               	movwf	(__Hub+136)& (0+255),b
 14833                           
 14834                           ;hub.c: 14: _Hub.iRead = 0;
 14835  003E24  0E00               	movlw	0
 14836  003E26  6FA0               	movwf	(__Hub+97)& (0+255),b
 14837                           
 14838                           ;hub.c: 15: _Hub.ReadComplete = 0;
 14839  003E28  0E00               	movlw	0
 14840  003E2A  6F9F               	movwf	(__Hub+96)& (0+255),b
 14841                           
 14842                           ;hub.c: 17: _Hub.PrimaryBuffer.ActionButton = 0;
 14843  003E2C  0E00               	movlw	0
 14844  003E2E  6FA1               	movwf	(__Hub+98)& (0+255),b
 14845                           
 14846                           ;hub.c: 18: _Hub.PrimaryBuffer.PushedButton = 0;
 14847  003E30  0E00               	movlw	0
 14848  003E32  6FA2               	movwf	(__Hub+99)& (0+255),b
 14849                           
 14850                           ;hub.c: 19: _Hub.PrimaryBuffer.Channel = 0x00;
 14851  003E34  0E00               	movlw	0
 14852  003E36  6FA3               	movwf	(__Hub+100)& (0+255),b
 14853                           
 14854                           ;hub.c: 20: _Hub.PrimaryBuffer.Sound = 0x00;
 14855  003E38  0E00               	movlw	0
 14856  003E3A  6FA4               	movwf	(__Hub+101)& (0+255),b
 14857                           
 14858                           ; BSR set to: 1
 14859                           ;hub.c: 21: _Hub.CurrentChannel = _Hub.PrimaryBuffer.Channel;
 14860  003E3C  C1A3  F1CB         	movff	__Hub+100,__Hub+140
 14861                           
 14862                           ;hub.c: 23: _Hub.MaxChannel = (char)((1024.0f / (char)((8 * 6 * 1.0f + 2.0f*8.0f) / 8.0f
      +                          )) * 2.0f);
 14863  003E40  0E01               	movlw	1
 14864  003E42  6FC9               	movwf	(__Hub+138)& (0+255),b
 14865  003E44  0E00               	movlw	0
 14866  003E46  6FC8               	movwf	(__Hub+137)& (0+255),b
 14867                           
 14868                           ;hub.c: 24: _Hub.MaxSound = 128;
 14869  003E48  0E80               	movlw	128
 14870  003E4A  6FCA               	movwf	(__Hub+139)& (0+255),b
 14871                           
 14872                           ; BSR set to: 1
 14873                           ;hub.c: 26: TRISB2 = 1;
 14874  003E4C  8493               	bsf	3987,2,c	;volatile
 14875                           
 14876                           ; BSR set to: 1
 14877                           ;hub.c: 27: TRISB3 = 0;
 14878  003E4E  9693               	bcf	3987,3,c	;volatile
 14879                           
 14880                           ; BSR set to: 1
 14881                           ;hub.c: 28: TRISB4 = 0;
 14882  003E50  9893               	bcf	3987,4,c	;volatile
 14883                           
 14884                           ; BSR set to: 1
 14885                           ;hub.c: 30: _Hub.IO.ClockPin.Write = &Hub_ClockWrite;
 14886  003E52  0E22               	movlw	low _Hub_ClockWrite
 14887  003E54  6FCF               	movwf	(__Hub+144)& (0+255),b
 14888  003E56  0E54               	movlw	high _Hub_ClockWrite
 14889  003E58  6FD0               	movwf	(__Hub+145)& (0+255),b
 14890                           
 14891                           ; BSR set to: 1
 14892                           ;hub.c: 31: _Hub.IO.DataPin.Read = &Hub_DataRead;
 14893  003E5A  0EBE               	movlw	low _Hub_DataRead
 14894  003E5C  6FD1               	movwf	(__Hub+146)& (0+255),b
 14895  003E5E  0E54               	movlw	high _Hub_DataRead
 14896  003E60  6FD2               	movwf	(__Hub+147)& (0+255),b
 14897                           
 14898                           ; BSR set to: 1
 14899                           ;hub.c: 32: _Hub.IO.LatchPin.Write = &Hub_LatchWrite;
 14900  003E62  0E82               	movlw	low _Hub_LatchWrite
 14901  003E64  6FD7               	movwf	(__Hub+152)& (0+255),b
 14902  003E66  0E54               	movlw	high _Hub_LatchWrite
 14903  003E68  6FD8               	movwf	(__Hub+153)& (0+255),b
 14904                           
 14905                           ; BSR set to: 1
 14906                           ;hub.c: 33: InitConnector(&_Hub.IO);
 14907  003E6A  0ECD               	movlw	low (__Hub+142)
 14908  003E6C  0100               	movlb	0	; () banked
 14909  003E6E  6F62               	movwf	InitConnector@AConnector& (0+255),b
 14910  003E70  0E01               	movlw	high (__Hub+142)
 14911  003E72  6F63               	movwf	(InitConnector@AConnector+1)& (0+255),b
 14912  003E74  EC2F  F028         	call	_InitConnector	;wreg free
 14913                           
 14914                           ;hub.c: 36: for (int i = 0; i < sizeof(_Hub.PrimaryBuffer.Values); i++)
 14915  003E78  0E00               	movlw	0
 14916  003E7A  0100               	movlb	0	; () banked
 14917  003E7C  6FA6               	movwf	(Hub_Init@i+1)& (0+255),b
 14918  003E7E  0E00               	movlw	0
 14919  003E80  6FA5               	movwf	Hub_Init@i& (0+255),b
 14920  003E82                     l7139:
 14921                           
 14922                           ; BSR set to: 0
 14923  003E82  51A6               	movf	(Hub_Init@i+1)& (0+255),w,b
 14924  003E84  E115               	bnz	l7149
 14925  003E86  0E08               	movlw	8
 14926  003E88  5DA5               	subwf	Hub_Init@i& (0+255),w,b
 14927  003E8A  B0D8               	btfsc	status,0,c
 14928  003E8C  D011               	goto	u8290
 14929                           
 14930                           ; BSR set to: 0
 14931                           ;hub.c: 37: _Hub.PrimaryBuffer.Values[i] = 0;
 14932                           
 14933                           ; BSR set to: 0
 14934                           
 14935                           ; BSR set to: 0
 14936  003E8E  0E04               	movlw	4
 14937  003E90  25A5               	addwf	Hub_Init@i& (0+255),w,b
 14938  003E92  6FA3               	movwf	??_Hub_Init& (0+255),b
 14939  003E94  0E00               	movlw	0
 14940  003E96  21A6               	addwfc	(Hub_Init@i+1)& (0+255),w,b
 14941  003E98  6FA4               	movwf	(??_Hub_Init+1)& (0+255),b
 14942  003E9A  0EA1               	movlw	low (__Hub+98)
 14943  003E9C  25A3               	addwf	??_Hub_Init& (0+255),w,b
 14944  003E9E  6ED9               	movwf	fsr2l,c
 14945  003EA0  0E01               	movlw	high (__Hub+98)
 14946  003EA2  21A4               	addwfc	(??_Hub_Init+1)& (0+255),w,b
 14947  003EA4  6EDA               	movwf	fsr2h,c
 14948  003EA6  0E00               	movlw	0
 14949  003EA8  6EDF               	movwf	indf2,c
 14950                           
 14951                           ; BSR set to: 0
 14952  003EAA  4BA5               	infsnz	Hub_Init@i& (0+255),f,b
 14953  003EAC  2BA6               	incf	(Hub_Init@i+1)& (0+255),f,b
 14954  003EAE  D7E9               	goto	l7139
 14955  003EB0                     u8290:
 14956  003EB0                     l7149:
 14957                           
 14958                           ; BSR set to: 0
 14959                           ;hub.c: 38: Hub_ReadSwitch();
 14960  003EB0  EC19  F026         	call	_Hub_ReadSwitch	;wreg free
 14961  003EB4  0012               	return		;funcret
 14962  003EB6                     __end_of_Hub_Init:
 14963                           	opt stack 0
 14964                           tosu	equ	0xFFF
 14965                           tosh	equ	0xFFE
 14966                           tosl	equ	0xFFD
 14967                           pclath	equ	0xFFA
 14968                           tblptru	equ	0xFF8
 14969                           tblptrh	equ	0xFF7
 14970                           tblptrl	equ	0xFF6
 14971                           tablat	equ	0xFF5
 14972                           prodh	equ	0xFF4
 14973                           prodl	equ	0xFF3
 14974                           intcon	equ	0xFF2
 14975                           indf0	equ	0xFEF
 14976                           postinc0	equ	0xFEE
 14977                           plusw0	equ	0xFEB
 14978                           fsr0h	equ	0xFEA
 14979                           fsr0l	equ	0xFE9
 14980                           wreg	equ	0xFE8
 14981                           indf1	equ	0xFE7
 14982                           postinc1	equ	0xFE6
 14983                           postdec1	equ	0xFE5
 14984                           plusw1	equ	0xFE3
 14985                           fsr1h	equ	0xFE2
 14986                           fsr1l	equ	0xFE1
 14987                           indf2	equ	0xFDF
 14988                           postinc2	equ	0xFDE
 14989                           postdec2	equ	0xFDD
 14990                           plusw2	equ	0xFDB
 14991                           fsr2h	equ	0xFDA
 14992                           fsr2l	equ	0xFD9
 14993                           status	equ	0xFD8
 14994                           
 14995 ;; *************** function _Hub_ReadSwitch *****************
 14996 ;; Defined at:
 14997 ;;		line 56 in file "hub.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;		None
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;  LBitArray      24   43[BANK0 ] unsigned char [24]
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      void 
 15004 ;; Registers used:
 15005 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0
 15012 ;;      Locals:         0      24       0       0       0       0       0       0       0
 15013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15014 ;;      Totals:         0      24       0       0       0       0       0       0       0
 15015 ;;Total ram usage:       24 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:   11
 15018 ;; This function calls:
 15019 ;;		_ReadBitArray
 15020 ;;		_memcpy
 15021 ;; This function is called by:
 15022 ;;		_Hub_Init
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text68
 15027  004C32                     __ptext68:
 15028                           	opt stack 0
 15029  004C32                     _Hub_ReadSwitch:
 15030                           	opt stack 17
 15031                           
 15032                           ;hub.c: 58: bool LBitArray[24];
 15033                           ;hub.c: 59: ReadBitArray(LBitArray, _Hub.IO);
 15034                           
 15035                           ;incstack = 0
 15036  004C32  0E8B               	movlw	low Hub_ReadSwitch@LBitArray
 15037  004C34  0100               	movlb	0	; () banked
 15038  004C36  6F7A               	movwf	ReadBitArray@AData& (0+255),b
 15039  004C38  0E00               	movlw	high Hub_ReadSwitch@LBitArray
 15040  004C3A  6F7B               	movwf	(ReadBitArray@AData+1)& (0+255),b
 15041  004C3C  EE21  F0CD         	lfsr	2,__Hub+142
 15042  004C40  EE00  F07C         	lfsr	0,ReadBitArray@AIO
 15043  004C44  0E0B               	movlw	11
 15044  004C46                     u7581:
 15045  004C46  CFDB FFEB          	movff	plusw2,plusw0
 15046  004C4A  06E8               	decf	wreg,f,c
 15047  004C4C  E2FC               	bc	u7581
 15048  004C4E  EC68  F026         	call	_ReadBitArray	;wreg free
 15049                           
 15050                           ;hub.c: 60: memcpy(_Hub.Switch + _Hub.iRead, LBitArray, sizeof(LBitArray));
 15051  004C52  0101               	movlb	1	; () banked
 15052  004C54  51A0               	movf	(__Hub+97)& (0+255),w,b
 15053  004C56  0D01               	mullw	1
 15054  004C58  0E3F               	movlw	low __Hub
 15055  004C5A  24F3               	addwf	prodl,w,c
 15056  004C5C  0100               	movlb	0	; () banked
 15057  004C5E  6F60               	movwf	memcpy@d1& (0+255),b
 15058  004C60  0E01               	movlw	high __Hub
 15059  004C62  20F4               	addwfc	prodh,w,c
 15060  004C64  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 15061  004C66  0E8B               	movlw	low Hub_ReadSwitch@LBitArray
 15062  004C68  6F62               	movwf	memcpy@s1& (0+255),b
 15063  004C6A  0E00               	movlw	high Hub_ReadSwitch@LBitArray
 15064  004C6C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 15065  004C6E  0E00               	movlw	0
 15066  004C70  6F65               	movwf	(memcpy@n+1)& (0+255),b
 15067  004C72  0E18               	movlw	24
 15068  004C74  6F64               	movwf	memcpy@n& (0+255),b
 15069  004C76  ECB4  F026         	call	_memcpy	;wreg free
 15070                           
 15071                           ;hub.c: 61: _Hub.iRead += 24;
 15072  004C7A  0E18               	movlw	24
 15073  004C7C  0101               	movlb	1	; () banked
 15074  004C7E  27A0               	addwf	(__Hub+97)& (0+255),f,b
 15075                           
 15076                           ; BSR set to: 1
 15077  004C80  0012               	return		;funcret
 15078  004C82                     __end_of_Hub_ReadSwitch:
 15079                           	opt stack 0
 15080                           tosu	equ	0xFFF
 15081                           tosh	equ	0xFFE
 15082                           tosl	equ	0xFFD
 15083                           pclath	equ	0xFFA
 15084                           tblptru	equ	0xFF8
 15085                           tblptrh	equ	0xFF7
 15086                           tblptrl	equ	0xFF6
 15087                           tablat	equ	0xFF5
 15088                           prodh	equ	0xFF4
 15089                           prodl	equ	0xFF3
 15090                           intcon	equ	0xFF2
 15091                           indf0	equ	0xFEF
 15092                           postinc0	equ	0xFEE
 15093                           plusw0	equ	0xFEB
 15094                           fsr0h	equ	0xFEA
 15095                           fsr0l	equ	0xFE9
 15096                           wreg	equ	0xFE8
 15097                           indf1	equ	0xFE7
 15098                           postinc1	equ	0xFE6
 15099                           postdec1	equ	0xFE5
 15100                           plusw1	equ	0xFE3
 15101                           fsr1h	equ	0xFE2
 15102                           fsr1l	equ	0xFE1
 15103                           indf2	equ	0xFDF
 15104                           postinc2	equ	0xFDE
 15105                           postdec2	equ	0xFDD
 15106                           plusw2	equ	0xFDB
 15107                           fsr2h	equ	0xFDA
 15108                           fsr2l	equ	0xFD9
 15109                           status	equ	0xFD8
 15110                           
 15111 ;; *************** function _ReadBitArray *****************
 15112 ;; Defined at:
 15113 ;;		line 71 in file "harware.c"
 15114 ;; Parameters:    Size  Location     Type
 15115 ;;  AData           2   26[BANK0 ] PTR unsigned char 
 15116 ;;		 -> Hub_ReadSwitch@LBitArray(24), 
 15117 ;;  AIO            12   28[BANK0 ] struct .
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;  i               2   41[BANK0 ] int 
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  1    wreg      void 
 15122 ;; Registers used:
 15123 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15124 ;; Tracked objects:
 15125 ;;		On entry : 0/0
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15129 ;;      Params:         0      14       0       0       0       0       0       0       0
 15130 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15131 ;;      Temps:          0       1       0       0       0       0       0       0       0
 15132 ;;      Totals:         0      17       0       0       0       0       0       0       0
 15133 ;;Total ram usage:       17 bytes
 15134 ;; Hardware stack levels used:    1
 15135 ;; Hardware stack levels required when called:   10
 15136 ;; This function calls:
 15137 ;;		_ReadBit
 15138 ;; This function is called by:
 15139 ;;		_Hub_ReadSwitch
 15140 ;; This function uses a non-reentrant model
 15141 ;;
 15142                           
 15143                           	psect	text69
 15144  004CD0                     __ptext69:
 15145                           	opt stack 0
 15146  004CD0                     _ReadBitArray:
 15147                           	opt stack 17
 15148                           
 15149                           ;harware.c: 75: for (int i = 0; i < 24; i++)
 15150                           
 15151                           ; BSR set to: 1
 15152                           ;incstack = 0
 15153  004CD0  0E00               	movlw	0
 15154  004CD2  0100               	movlb	0	; () banked
 15155  004CD4  6F8A               	movwf	(ReadBitArray@i+1)& (0+255),b
 15156  004CD6  0E00               	movlw	0
 15157  004CD8  6F89               	movwf	ReadBitArray@i& (0+255),b
 15158  004CDA                     l6297:
 15159                           
 15160                           ; BSR set to: 0
 15161  004CDA  BF8A               	btfsc	(ReadBitArray@i+1)& (0+255),7,b
 15162  004CDC  D006               	goto	l1060
 15163  004CDE  518A               	movf	(ReadBitArray@i+1)& (0+255),w,b
 15164  004CE0  E11C               	bnz	l1062
 15165  004CE2  0E18               	movlw	24
 15166  004CE4  5D89               	subwf	ReadBitArray@i& (0+255),w,b
 15167  004CE6  B0D8               	btfsc	status,0,c
 15168  004CE8  0012               	return	
 15169  004CEA                     l1060:
 15170                           
 15171                           ; BSR set to: 0
 15172                           ;harware.c: 76: AData[i] = ReadBit(AIO);
 15173                           
 15174                           ; BSR set to: 0
 15175  004CEA  EE20  F07C         	lfsr	2,ReadBitArray@AIO
 15176  004CEE  EE00  F06D         	lfsr	0,ReadBit@AIO
 15177  004CF2  0E0B               	movlw	11
 15178  004CF4                     u7121:
 15179  004CF4  CFDB FFEB          	movff	plusw2,plusw0
 15180  004CF8  06E8               	decf	wreg,f,c
 15181  004CFA  E2FC               	bc	u7121
 15182  004CFC  ECC8  F025         	call	_ReadBit	;wreg free
 15183  004D00  0100               	movlb	0	; () banked
 15184  004D02  6F88               	movwf	??_ReadBitArray& (0+255),b
 15185  004D04  5189               	movf	ReadBitArray@i& (0+255),w,b
 15186  004D06  257A               	addwf	ReadBitArray@AData& (0+255),w,b
 15187  004D08  6ED9               	movwf	fsr2l,c
 15188  004D0A  518A               	movf	(ReadBitArray@i+1)& (0+255),w,b
 15189  004D0C  217B               	addwfc	(ReadBitArray@AData+1)& (0+255),w,b
 15190  004D0E  6EDA               	movwf	fsr2h,c
 15191  004D10  C088  FFDF         	movff	??_ReadBitArray,indf2
 15192                           
 15193                           ; BSR set to: 0
 15194  004D14  4B89               	infsnz	ReadBitArray@i& (0+255),f,b
 15195  004D16  2B8A               	incf	(ReadBitArray@i+1)& (0+255),f,b
 15196  004D18  D7E0               	goto	l6297
 15197  004D1A                     l1062:
 15198                           
 15199                           ; BSR set to: 0
 15200  004D1A  0012               	return		;funcret
 15201  004D1C                     __end_of_ReadBitArray:
 15202                           	opt stack 0
 15203                           tosu	equ	0xFFF
 15204                           tosh	equ	0xFFE
 15205                           tosl	equ	0xFFD
 15206                           pclath	equ	0xFFA
 15207                           tblptru	equ	0xFF8
 15208                           tblptrh	equ	0xFF7
 15209                           tblptrl	equ	0xFF6
 15210                           tablat	equ	0xFF5
 15211                           prodh	equ	0xFF4
 15212                           prodl	equ	0xFF3
 15213                           intcon	equ	0xFF2
 15214                           indf0	equ	0xFEF
 15215                           postinc0	equ	0xFEE
 15216                           plusw0	equ	0xFEB
 15217                           fsr0h	equ	0xFEA
 15218                           fsr0l	equ	0xFE9
 15219                           wreg	equ	0xFE8
 15220                           indf1	equ	0xFE7
 15221                           postinc1	equ	0xFE6
 15222                           postdec1	equ	0xFE5
 15223                           plusw1	equ	0xFE3
 15224                           fsr1h	equ	0xFE2
 15225                           fsr1l	equ	0xFE1
 15226                           indf2	equ	0xFDF
 15227                           postinc2	equ	0xFDE
 15228                           postdec2	equ	0xFDD
 15229                           plusw2	equ	0xFDB
 15230                           fsr2h	equ	0xFDA
 15231                           fsr2l	equ	0xFD9
 15232                           status	equ	0xFD8
 15233                           
 15234 ;; *************** function _ReadBit *****************
 15235 ;; Defined at:
 15236 ;;		line 45 in file "harware.c"
 15237 ;; Parameters:    Size  Location     Type
 15238 ;;  AIO            12   13[BANK0 ] struct .
 15239 ;; Auto vars:     Size  Location     Type
 15240 ;;  LBit            1   25[BANK0 ] unsigned char 
 15241 ;; Return value:  Size  Location     Type
 15242 ;;                  1    wreg      unsigned char 
 15243 ;; Registers used:
 15244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 15245 ;; Tracked objects:
 15246 ;;		On entry : 0/0
 15247 ;;		On exit  : 0/0
 15248 ;;		Unchanged: 0/0
 15249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15250 ;;      Params:         0      12       0       0       0       0       0       0       0
 15251 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15253 ;;      Totals:         0      13       0       0       0       0       0       0       0
 15254 ;;Total ram usage:       13 bytes
 15255 ;; Hardware stack levels used:    1
 15256 ;; Hardware stack levels required when called:    9
 15257 ;; This function calls:
 15258 ;;		_ClockDown
 15259 ;;		_ClockUp
 15260 ;;		_Hub_DataRead
 15261 ;; This function is called by:
 15262 ;;		_ReadBitArray
 15263 ;;		_ReadChar
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text70
 15268  004B90                     __ptext70:
 15269                           	opt stack 0
 15270  004B90                     _ReadBit:
 15271                           	opt stack 17
 15272                           
 15273                           ;harware.c: 47: bool LBit = AIO.DataPin.Read();
 15274                           
 15275                           ; BSR set to: 0
 15276                           ;incstack = 0
 15277  004B90  EE20  F071         	lfsr	2,ReadBit@AIO+4
 15278  004B94  D801               	call	u6738
 15279  004B96  D00A               	goto	u6739
 15280  004B98                     u6738:
 15281  004B98  0005               	push	
 15282  004B9A  6EFA               	movwf	pclath,c
 15283  004B9C  50DE               	movf	postinc2,w,c
 15284  004B9E  6EFD               	movwf	tosl,c
 15285  004BA0  50DE               	movf	postinc2,w,c
 15286  004BA2  6EFE               	movwf	tosh,c
 15287  004BA4  50F8               	movf	tblptru,w,c
 15288  004BA6  6EFF               	movwf	tosu,c
 15289  004BA8  50FA               	movf	pclath,w,c
 15290  004BAA  0012               	return		;indir
 15291  004BAC                     u6739:
 15292  004BAC  0100               	movlb	0	; () banked
 15293  004BAE  6F79               	movwf	ReadBit@LBit& (0+255),b
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;harware.c: 48: ClockUp(AIO);
 15297  004BB0  EE20  F06D         	lfsr	2,ReadBit@AIO
 15298  004BB4  EE00  F061         	lfsr	0,ClockUp@AIO
 15299  004BB8  0E0B               	movlw	11
 15300  004BBA                     u6741:
 15301  004BBA  CFDB FFEB          	movff	plusw2,plusw0
 15302  004BBE  06E8               	decf	wreg,f,c
 15303  004BC0  E2FC               	bc	u6741
 15304  004BC2  EC87  F029         	call	_ClockUp	;wreg free
 15305                           
 15306                           ;harware.c: 49: ClockDown(AIO);
 15307  004BC6  EE20  F06D         	lfsr	2,ReadBit@AIO
 15308  004BCA  EE00  F061         	lfsr	0,ClockDown@AIO
 15309  004BCE  0E0B               	movlw	11
 15310  004BD0                     u6751:
 15311  004BD0  CFDB FFEB          	movff	plusw2,plusw0
 15312  004BD4  06E8               	decf	wreg,f,c
 15313  004BD6  E2FC               	bc	u6751
 15314  004BD8  EC96  F029         	call	_ClockDown	;wreg free
 15315                           
 15316                           ;harware.c: 50: return LBit;
 15317  004BDC  0100               	movlb	0	; () banked
 15318  004BDE  5179               	movf	ReadBit@LBit& (0+255),w,b
 15319  004BE0  0012               	return	
 15320  004BE2                     __end_of_ReadBit:
 15321                           	opt stack 0
 15322                           tosu	equ	0xFFF
 15323                           tosh	equ	0xFFE
 15324                           tosl	equ	0xFFD
 15325                           pclath	equ	0xFFA
 15326                           tblptru	equ	0xFF8
 15327                           tblptrh	equ	0xFF7
 15328                           tblptrl	equ	0xFF6
 15329                           tablat	equ	0xFF5
 15330                           prodh	equ	0xFF4
 15331                           prodl	equ	0xFF3
 15332                           intcon	equ	0xFF2
 15333                           indf0	equ	0xFEF
 15334                           postinc0	equ	0xFEE
 15335                           plusw0	equ	0xFEB
 15336                           fsr0h	equ	0xFEA
 15337                           fsr0l	equ	0xFE9
 15338                           wreg	equ	0xFE8
 15339                           indf1	equ	0xFE7
 15340                           postinc1	equ	0xFE6
 15341                           postdec1	equ	0xFE5
 15342                           plusw1	equ	0xFE3
 15343                           fsr1h	equ	0xFE2
 15344                           fsr1l	equ	0xFE1
 15345                           indf2	equ	0xFDF
 15346                           postinc2	equ	0xFDE
 15347                           postdec2	equ	0xFDD
 15348                           plusw2	equ	0xFDB
 15349                           fsr2h	equ	0xFDA
 15350                           fsr2l	equ	0xFD9
 15351                           status	equ	0xFD8
 15352                           
 15353 ;; *************** function _Hub_DataRead *****************
 15354 ;; Defined at:
 15355 ;;		line 51 in file "hub.c"
 15356 ;; Parameters:    Size  Location     Type
 15357 ;;		None
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;		None
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  1    wreg      unsigned char 
 15362 ;; Registers used:
 15363 ;;		wreg
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/0
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15369 ;;      Params:         0       0       0       0       0       0       0       0       0
 15370 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15371 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15372 ;;      Totals:         0       0       0       0       0       0       0       0       0
 15373 ;;Total ram usage:        0 bytes
 15374 ;; Hardware stack levels used:    1
 15375 ;; Hardware stack levels required when called:    7
 15376 ;; This function calls:
 15377 ;;		Nothing
 15378 ;; This function is called by:
 15379 ;;		_Hub_Init
 15380 ;;		_ReadBit
 15381 ;;		i2_ReadBit
 15382 ;; This function uses a non-reentrant model
 15383 ;;
 15384                           
 15385                           	psect	text71
 15386  0054BE                     __ptext71:
 15387                           	opt stack 0
 15388  0054BE                     _Hub_DataRead:
 15389                           	opt stack 0
 15390                           
 15391                           ; BSR set to: 0
 15392                           ;Skip over the trampoline to the duplicate function for level 2
 15393  0054BE  B25F               	btfsc	btemp,1,c
 15394  0054C0  EFBC  F02A         	goto	i2_Hub_DataRead
 15395  0054C4                     _Hub_DataRead$intlevel0:
 15396                           	opt stack 18
 15397                           
 15398                           ;hub.c: 53: return PORTBbits.RB2;
 15399                           
 15400                           ;incstack = 0
 15401  0054C4  A481               	btfss	3969,2,c	;volatile
 15402  0054C6  D002               	goto	u5670
 15403  0054C8  0E01               	movlw	1
 15404  0054CA  0012               	return	
 15405  0054CC                     u5670:
 15406  0054CC  0E00               	movlw	0
 15407  0054CE  0012               	return	
 15408  0054D0                     __end_of_Hub_DataRead:
 15409                           	opt stack 0
 15410                           tosu	equ	0xFFF
 15411                           tosh	equ	0xFFE
 15412                           tosl	equ	0xFFD
 15413                           pclath	equ	0xFFA
 15414                           tblptru	equ	0xFF8
 15415                           tblptrh	equ	0xFF7
 15416                           tblptrl	equ	0xFF6
 15417                           tablat	equ	0xFF5
 15418                           prodh	equ	0xFF4
 15419                           prodl	equ	0xFF3
 15420                           intcon	equ	0xFF2
 15421                           indf0	equ	0xFEF
 15422                           postinc0	equ	0xFEE
 15423                           plusw0	equ	0xFEB
 15424                           fsr0h	equ	0xFEA
 15425                           fsr0l	equ	0xFE9
 15426                           wreg	equ	0xFE8
 15427                           indf1	equ	0xFE7
 15428                           postinc1	equ	0xFE6
 15429                           postdec1	equ	0xFE5
 15430                           plusw1	equ	0xFE3
 15431                           fsr1h	equ	0xFE2
 15432                           fsr1l	equ	0xFE1
 15433                           indf2	equ	0xFDF
 15434                           postinc2	equ	0xFDE
 15435                           postdec2	equ	0xFDD
 15436                           plusw2	equ	0xFDB
 15437                           fsr2h	equ	0xFDA
 15438                           fsr2l	equ	0xFD9
 15439                           status	equ	0xFD8
 15440                           
 15441 ;; *************** function _ClockUp *****************
 15442 ;; Defined at:
 15443 ;;		line 89 in file "harware.c"
 15444 ;; Parameters:    Size  Location     Type
 15445 ;;  AIO            12    1[BANK0 ] struct .
 15446 ;; Auto vars:     Size  Location     Type
 15447 ;;		None
 15448 ;; Return value:  Size  Location     Type
 15449 ;;                  1    wreg      void 
 15450 ;; Registers used:
 15451 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 15452 ;; Tracked objects:
 15453 ;;		On entry : 0/0
 15454 ;;		On exit  : 0/0
 15455 ;;		Unchanged: 0/0
 15456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15457 ;;      Params:         0      12       0       0       0       0       0       0       0
 15458 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15459 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15460 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15461 ;;Total ram usage:       12 bytes
 15462 ;; Hardware stack levels used:    1
 15463 ;; Hardware stack levels required when called:    8
 15464 ;; This function calls:
 15465 ;;		_DigiPot_ClockWrite
 15466 ;;		_DigiPot_DataWrite
 15467 ;;		_DigiPot_LatchWrite
 15468 ;;		_Display_ClockWrite
 15469 ;;		_Display_DataWrite
 15470 ;;		_Display_LatchWrite
 15471 ;;		_Hub_ClockWrite
 15472 ;;		_Hub_LatchWrite
 15473 ;; This function is called by:
 15474 ;;		_WriteChar
 15475 ;;		_ReadBit
 15476 ;; This function uses a non-reentrant model
 15477 ;;
 15478                           
 15479                           	psect	text72
 15480  00530E                     __ptext72:
 15481                           	opt stack 0
 15482  00530E                     _ClockUp:
 15483                           	opt stack 20
 15484                           
 15485                           ;harware.c: 91: AIO.ClockPin.Write(0x00);
 15486                           
 15487                           ;incstack = 0
 15488  00530E  EE20  F063         	lfsr	2,ClockUp@AIO+2
 15489  005312  D801               	call	u5728
 15490  005314  0012               	return	
 15491  005316                     u5728:
 15492  005316  0005               	push	
 15493  005318  6EFA               	movwf	pclath,c
 15494  00531A  50DE               	movf	postinc2,w,c
 15495  00531C  6EFD               	movwf	tosl,c
 15496  00531E  50DE               	movf	postinc2,w,c
 15497  005320  6EFE               	movwf	tosh,c
 15498  005322  50F8               	movf	tblptru,w,c
 15499  005324  6EFF               	movwf	tosu,c
 15500  005326  50FA               	movf	pclath,w,c
 15501  005328  0E00               	movlw	0
 15502  00532A  0012               	return		;indir
 15503  00532C                     __end_of_ClockUp:
 15504                           	opt stack 0
 15505                           tosu	equ	0xFFF
 15506                           tosh	equ	0xFFE
 15507                           tosl	equ	0xFFD
 15508                           pclath	equ	0xFFA
 15509                           tblptru	equ	0xFF8
 15510                           tblptrh	equ	0xFF7
 15511                           tblptrl	equ	0xFF6
 15512                           tablat	equ	0xFF5
 15513                           prodh	equ	0xFF4
 15514                           prodl	equ	0xFF3
 15515                           intcon	equ	0xFF2
 15516                           indf0	equ	0xFEF
 15517                           postinc0	equ	0xFEE
 15518                           plusw0	equ	0xFEB
 15519                           fsr0h	equ	0xFEA
 15520                           fsr0l	equ	0xFE9
 15521                           wreg	equ	0xFE8
 15522                           indf1	equ	0xFE7
 15523                           postinc1	equ	0xFE6
 15524                           postdec1	equ	0xFE5
 15525                           plusw1	equ	0xFE3
 15526                           fsr1h	equ	0xFE2
 15527                           fsr1l	equ	0xFE1
 15528                           indf2	equ	0xFDF
 15529                           postinc2	equ	0xFDE
 15530                           postdec2	equ	0xFDD
 15531                           plusw2	equ	0xFDB
 15532                           fsr2h	equ	0xFDA
 15533                           fsr2l	equ	0xFD9
 15534                           status	equ	0xFD8
 15535                           
 15536 ;; *************** function _ClockDown *****************
 15537 ;; Defined at:
 15538 ;;		line 94 in file "harware.c"
 15539 ;; Parameters:    Size  Location     Type
 15540 ;;  AIO            12    1[BANK0 ] struct .
 15541 ;; Auto vars:     Size  Location     Type
 15542 ;;		None
 15543 ;; Return value:  Size  Location     Type
 15544 ;;                  1    wreg      void 
 15545 ;; Registers used:
 15546 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 15547 ;; Tracked objects:
 15548 ;;		On entry : 0/0
 15549 ;;		On exit  : 0/0
 15550 ;;		Unchanged: 0/0
 15551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15552 ;;      Params:         0      12       0       0       0       0       0       0       0
 15553 ;;      Locals:         0       0       0       0       0       0       0       0       0
 15554 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15555 ;;      Totals:         0      12       0       0       0       0       0       0       0
 15556 ;;Total ram usage:       12 bytes
 15557 ;; Hardware stack levels used:    1
 15558 ;; Hardware stack levels required when called:    8
 15559 ;; This function calls:
 15560 ;;		_DigiPot_ClockWrite
 15561 ;;		_DigiPot_DataWrite
 15562 ;;		_DigiPot_LatchWrite
 15563 ;;		_Display_ClockWrite
 15564 ;;		_Display_DataWrite
 15565 ;;		_Display_LatchWrite
 15566 ;;		_Hub_ClockWrite
 15567 ;;		_Hub_LatchWrite
 15568 ;; This function is called by:
 15569 ;;		_WriteChar
 15570 ;;		_ReadBit
 15571 ;; This function uses a non-reentrant model
 15572 ;;
 15573                           
 15574                           	psect	text73
 15575  00532C                     __ptext73:
 15576                           	opt stack 0
 15577  00532C                     _ClockDown:
 15578                           	opt stack 20
 15579                           
 15580                           ;harware.c: 96: AIO.ClockPin.Write(0x01);
 15581                           
 15582                           ;incstack = 0
 15583  00532C  EE20  F063         	lfsr	2,ClockDown@AIO+2
 15584  005330  D801               	call	u5738
 15585  005332  0012               	return	
 15586  005334                     u5738:
 15587  005334  0005               	push	
 15588  005336  6EFA               	movwf	pclath,c
 15589  005338  50DE               	movf	postinc2,w,c
 15590  00533A  6EFD               	movwf	tosl,c
 15591  00533C  50DE               	movf	postinc2,w,c
 15592  00533E  6EFE               	movwf	tosh,c
 15593  005340  50F8               	movf	tblptru,w,c
 15594  005342  6EFF               	movwf	tosu,c
 15595  005344  50FA               	movf	pclath,w,c
 15596  005346  0E01               	movlw	1
 15597  005348  0012               	return		;indir
 15598  00534A                     __end_of_ClockDown:
 15599                           	opt stack 0
 15600                           tosu	equ	0xFFF
 15601                           tosh	equ	0xFFE
 15602                           tosl	equ	0xFFD
 15603                           pclath	equ	0xFFA
 15604                           tblptru	equ	0xFF8
 15605                           tblptrh	equ	0xFF7
 15606                           tblptrl	equ	0xFF6
 15607                           tablat	equ	0xFF5
 15608                           prodh	equ	0xFF4
 15609                           prodl	equ	0xFF3
 15610                           intcon	equ	0xFF2
 15611                           indf0	equ	0xFEF
 15612                           postinc0	equ	0xFEE
 15613                           plusw0	equ	0xFEB
 15614                           fsr0h	equ	0xFEA
 15615                           fsr0l	equ	0xFE9
 15616                           wreg	equ	0xFE8
 15617                           indf1	equ	0xFE7
 15618                           postinc1	equ	0xFE6
 15619                           postdec1	equ	0xFE5
 15620                           plusw1	equ	0xFE3
 15621                           fsr1h	equ	0xFE2
 15622                           fsr1l	equ	0xFE1
 15623                           indf2	equ	0xFDF
 15624                           postinc2	equ	0xFDE
 15625                           postdec2	equ	0xFDD
 15626                           plusw2	equ	0xFDB
 15627                           fsr2h	equ	0xFDA
 15628                           fsr2l	equ	0xFD9
 15629                           status	equ	0xFD8
 15630                           
 15631 ;; *************** function _DigiPot_LatchWrite *****************
 15632 ;; Defined at:
 15633 ;;		line 30 in file "digipot.c"
 15634 ;; Parameters:    Size  Location     Type
 15635 ;;  value           1    wreg     unsigned char 
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;  value           1    0[BANK0 ] unsigned char 
 15638 ;; Return value:  Size  Location     Type
 15639 ;;                  1    wreg      void 
 15640 ;; Registers used:
 15641 ;;		wreg
 15642 ;; Tracked objects:
 15643 ;;		On entry : 0/0
 15644 ;;		On exit  : 0/0
 15645 ;;		Unchanged: 0/0
 15646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15647 ;;      Params:         0       0       0       0       0       0       0       0       0
 15648 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15649 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15650 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15651 ;;Total ram usage:        1 bytes
 15652 ;; Hardware stack levels used:    1
 15653 ;; Hardware stack levels required when called:    7
 15654 ;; This function calls:
 15655 ;;		Nothing
 15656 ;; This function is called by:
 15657 ;;		_InitDigiPot
 15658 ;;		_ClockUp
 15659 ;;		_ClockDown
 15660 ;;		i2_ClockUp
 15661 ;;		i2_ClockDown
 15662 ;;		_LatchOn
 15663 ;;		_LatchOff
 15664 ;;		_WriteChar
 15665 ;;		i2_WriteChar
 15666 ;;		i2_LatchOn
 15667 ;;		i2_LatchOff
 15668 ;; This function uses a non-reentrant model
 15669 ;;
 15670                           
 15671                           	psect	text74
 15672  0053DA                     __ptext74:
 15673                           	opt stack 0
 15674  0053DA                     _DigiPot_LatchWrite:
 15675                           	opt stack 0
 15676                           
 15677                           ;Skip over the trampoline to the duplicate function for level 2
 15678  0053DA  B25F               	btfsc	btemp,1,c
 15679  0053DC  EF8B  F02A         	goto	i2_DigiPot_LatchWrite
 15680  0053E0                     _DigiPot_LatchWrite$intlevel0:
 15681                           	opt stack 21
 15682                           
 15683                           ;incstack = 0
 15684                           ;DigiPot_LatchWrite@value stored from wreg
 15685  0053E0  0100               	movlb	0	; () banked
 15686  0053E2  6F60               	movwf	DigiPot_LatchWrite@value& (0+255),b
 15687                           
 15688                           ;digipot.c: 32: LATA3 = value;
 15689  0053E4  0100               	movlb	0	; () banked
 15690  0053E6  A160               	btfss	DigiPot_LatchWrite@value& (0+255),0,b
 15691  0053E8  D002               	goto	u5380
 15692  0053EA  8689               	bsf	3977,3,c	;volatile
 15693  0053EC  0012               	return	
 15694  0053EE                     u5380:
 15695  0053EE  9689               	bcf	3977,3,c	;volatile
 15696  0053F0  0012               	return		;funcret
 15697  0053F2                     __end_of_DigiPot_LatchWrite:
 15698                           	opt stack 0
 15699                           tosu	equ	0xFFF
 15700                           tosh	equ	0xFFE
 15701                           tosl	equ	0xFFD
 15702                           pclath	equ	0xFFA
 15703                           tblptru	equ	0xFF8
 15704                           tblptrh	equ	0xFF7
 15705                           tblptrl	equ	0xFF6
 15706                           tablat	equ	0xFF5
 15707                           prodh	equ	0xFF4
 15708                           prodl	equ	0xFF3
 15709                           intcon	equ	0xFF2
 15710                           indf0	equ	0xFEF
 15711                           postinc0	equ	0xFEE
 15712                           plusw0	equ	0xFEB
 15713                           fsr0h	equ	0xFEA
 15714                           fsr0l	equ	0xFE9
 15715                           wreg	equ	0xFE8
 15716                           indf1	equ	0xFE7
 15717                           postinc1	equ	0xFE6
 15718                           postdec1	equ	0xFE5
 15719                           plusw1	equ	0xFE3
 15720                           fsr1h	equ	0xFE2
 15721                           fsr1l	equ	0xFE1
 15722                           indf2	equ	0xFDF
 15723                           postinc2	equ	0xFDE
 15724                           postdec2	equ	0xFDD
 15725                           plusw2	equ	0xFDB
 15726                           fsr2h	equ	0xFDA
 15727                           fsr2l	equ	0xFD9
 15728                           status	equ	0xFD8
 15729                           
 15730 ;; *************** function _DigiPot_DataWrite *****************
 15731 ;; Defined at:
 15732 ;;		line 35 in file "digipot.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;  value           1    wreg     unsigned char 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  value           1    0[BANK0 ] unsigned char 
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      unsigned char 
 15739 ;; Registers used:
 15740 ;;		wreg
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15746 ;;      Params:         0       0       0       0       0       0       0       0       0
 15747 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15749 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15750 ;;Total ram usage:        1 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; Hardware stack levels required when called:    7
 15753 ;; This function calls:
 15754 ;;		Nothing
 15755 ;; This function is called by:
 15756 ;;		_InitDigiPot
 15757 ;;		_ClockUp
 15758 ;;		_ClockDown
 15759 ;;		i2_ClockUp
 15760 ;;		i2_ClockDown
 15761 ;;		_LatchOn
 15762 ;;		_LatchOff
 15763 ;;		_WriteChar
 15764 ;;		i2_WriteChar
 15765 ;;		i2_LatchOn
 15766 ;;		i2_LatchOff
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           	psect	text75
 15771  0053F2                     __ptext75:
 15772                           	opt stack 0
 15773  0053F2                     _DigiPot_DataWrite:
 15774                           	opt stack 0
 15775                           
 15776                           ;Skip over the trampoline to the duplicate function for level 2
 15777  0053F2  B25F               	btfsc	btemp,1,c
 15778  0053F4  EF84  F02A         	goto	i2_DigiPot_DataWrite
 15779  0053F8                     _DigiPot_DataWrite$intlevel0:
 15780                           	opt stack 21
 15781                           
 15782                           ;incstack = 0
 15783                           ;DigiPot_DataWrite@value stored from wreg
 15784  0053F8  0100               	movlb	0	; () banked
 15785  0053FA  6F60               	movwf	DigiPot_DataWrite@value& (0+255),b
 15786                           
 15787                           ;digipot.c: 37: LATA2 = value;
 15788  0053FC  0100               	movlb	0	; () banked
 15789  0053FE  A160               	btfss	DigiPot_DataWrite@value& (0+255),0,b
 15790  005400  D002               	goto	u5400
 15791  005402  8489               	bsf	3977,2,c	;volatile
 15792  005404  0012               	return	
 15793  005406                     u5400:
 15794  005406  9489               	bcf	3977,2,c	;volatile
 15795  005408  0012               	return		;funcret
 15796  00540A                     __end_of_DigiPot_DataWrite:
 15797                           	opt stack 0
 15798                           tosu	equ	0xFFF
 15799                           tosh	equ	0xFFE
 15800                           tosl	equ	0xFFD
 15801                           pclath	equ	0xFFA
 15802                           tblptru	equ	0xFF8
 15803                           tblptrh	equ	0xFF7
 15804                           tblptrl	equ	0xFF6
 15805                           tablat	equ	0xFF5
 15806                           prodh	equ	0xFF4
 15807                           prodl	equ	0xFF3
 15808                           intcon	equ	0xFF2
 15809                           indf0	equ	0xFEF
 15810                           postinc0	equ	0xFEE
 15811                           plusw0	equ	0xFEB
 15812                           fsr0h	equ	0xFEA
 15813                           fsr0l	equ	0xFE9
 15814                           wreg	equ	0xFE8
 15815                           indf1	equ	0xFE7
 15816                           postinc1	equ	0xFE6
 15817                           postdec1	equ	0xFE5
 15818                           plusw1	equ	0xFE3
 15819                           fsr1h	equ	0xFE2
 15820                           fsr1l	equ	0xFE1
 15821                           indf2	equ	0xFDF
 15822                           postinc2	equ	0xFDE
 15823                           postdec2	equ	0xFDD
 15824                           plusw2	equ	0xFDB
 15825                           fsr2h	equ	0xFDA
 15826                           fsr2l	equ	0xFD9
 15827                           status	equ	0xFD8
 15828                           
 15829 ;; *************** function _DigiPot_ClockWrite *****************
 15830 ;; Defined at:
 15831 ;;		line 25 in file "digipot.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;  value           1    wreg     unsigned char 
 15834 ;; Auto vars:     Size  Location     Type
 15835 ;;  value           1    0[BANK0 ] unsigned char 
 15836 ;; Return value:  Size  Location     Type
 15837 ;;                  1    wreg      void 
 15838 ;; Registers used:
 15839 ;;		wreg
 15840 ;; Tracked objects:
 15841 ;;		On entry : 0/0
 15842 ;;		On exit  : 0/0
 15843 ;;		Unchanged: 0/0
 15844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15845 ;;      Params:         0       0       0       0       0       0       0       0       0
 15846 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15847 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15848 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15849 ;;Total ram usage:        1 bytes
 15850 ;; Hardware stack levels used:    1
 15851 ;; Hardware stack levels required when called:    7
 15852 ;; This function calls:
 15853 ;;		Nothing
 15854 ;; This function is called by:
 15855 ;;		_InitDigiPot
 15856 ;;		_ClockUp
 15857 ;;		_ClockDown
 15858 ;;		i2_ClockUp
 15859 ;;		i2_ClockDown
 15860 ;;		_LatchOn
 15861 ;;		_LatchOff
 15862 ;;		_WriteChar
 15863 ;;		i2_WriteChar
 15864 ;;		i2_LatchOn
 15865 ;;		i2_LatchOff
 15866 ;; This function uses a non-reentrant model
 15867 ;;
 15868                           
 15869                           	psect	text76
 15870  00540A                     __ptext76:
 15871                           	opt stack 0
 15872  00540A                     _DigiPot_ClockWrite:
 15873                           	opt stack 0
 15874                           
 15875                           ;Skip over the trampoline to the duplicate function for level 2
 15876  00540A  B25F               	btfsc	btemp,1,c
 15877  00540C  EF92  F02A         	goto	i2_DigiPot_ClockWrite
 15878  005410                     _DigiPot_ClockWrite$intlevel0:
 15879                           	opt stack 21
 15880                           
 15881                           ;incstack = 0
 15882                           ;DigiPot_ClockWrite@value stored from wreg
 15883  005410  0100               	movlb	0	; () banked
 15884  005412  6F60               	movwf	DigiPot_ClockWrite@value& (0+255),b
 15885                           
 15886                           ;digipot.c: 27: LATA4 = value;
 15887  005414  0100               	movlb	0	; () banked
 15888  005416  A160               	btfss	DigiPot_ClockWrite@value& (0+255),0,b
 15889  005418  D002               	goto	u5360
 15890  00541A  8889               	bsf	3977,4,c	;volatile
 15891  00541C  0012               	return	
 15892  00541E                     u5360:
 15893  00541E  9889               	bcf	3977,4,c	;volatile
 15894  005420  0012               	return		;funcret
 15895  005422                     __end_of_DigiPot_ClockWrite:
 15896                           	opt stack 0
 15897                           tosu	equ	0xFFF
 15898                           tosh	equ	0xFFE
 15899                           tosl	equ	0xFFD
 15900                           pclath	equ	0xFFA
 15901                           tblptru	equ	0xFF8
 15902                           tblptrh	equ	0xFF7
 15903                           tblptrl	equ	0xFF6
 15904                           tablat	equ	0xFF5
 15905                           prodh	equ	0xFF4
 15906                           prodl	equ	0xFF3
 15907                           intcon	equ	0xFF2
 15908                           indf0	equ	0xFEF
 15909                           postinc0	equ	0xFEE
 15910                           plusw0	equ	0xFEB
 15911                           fsr0h	equ	0xFEA
 15912                           fsr0l	equ	0xFE9
 15913                           wreg	equ	0xFE8
 15914                           indf1	equ	0xFE7
 15915                           postinc1	equ	0xFE6
 15916                           postdec1	equ	0xFE5
 15917                           plusw1	equ	0xFE3
 15918                           fsr1h	equ	0xFE2
 15919                           fsr1l	equ	0xFE1
 15920                           indf2	equ	0xFDF
 15921                           postinc2	equ	0xFDE
 15922                           postdec2	equ	0xFDD
 15923                           plusw2	equ	0xFDB
 15924                           fsr2h	equ	0xFDA
 15925                           fsr2l	equ	0xFD9
 15926                           status	equ	0xFD8
 15927                           
 15928 ;; *************** function _Hub_ClockWrite *****************
 15929 ;; Defined at:
 15930 ;;		line 41 in file "hub.c"
 15931 ;; Parameters:    Size  Location     Type
 15932 ;;  value           1    wreg     unsigned char 
 15933 ;; Auto vars:     Size  Location     Type
 15934 ;;  value           1    0[BANK0 ] unsigned char 
 15935 ;; Return value:  Size  Location     Type
 15936 ;;                  1    wreg      void 
 15937 ;; Registers used:
 15938 ;;		wreg
 15939 ;; Tracked objects:
 15940 ;;		On entry : 0/0
 15941 ;;		On exit  : 0/0
 15942 ;;		Unchanged: 0/0
 15943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15944 ;;      Params:         0       0       0       0       0       0       0       0       0
 15945 ;;      Locals:         0       1       0       0       0       0       0       0       0
 15946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15947 ;;      Totals:         0       1       0       0       0       0       0       0       0
 15948 ;;Total ram usage:        1 bytes
 15949 ;; Hardware stack levels used:    1
 15950 ;; Hardware stack levels required when called:    7
 15951 ;; This function calls:
 15952 ;;		Nothing
 15953 ;; This function is called by:
 15954 ;;		_Hub_Init
 15955 ;;		_ClockUp
 15956 ;;		_ClockDown
 15957 ;;		i2_ClockUp
 15958 ;;		i2_ClockDown
 15959 ;;		_LatchOn
 15960 ;;		_LatchOff
 15961 ;;		_WriteChar
 15962 ;;		i2_WriteChar
 15963 ;;		i2_LatchOn
 15964 ;;		i2_LatchOff
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           	psect	text77
 15969  005422                     __ptext77:
 15970                           	opt stack 0
 15971  005422                     _Hub_ClockWrite:
 15972                           	opt stack 0
 15973                           
 15974                           ;Skip over the trampoline to the duplicate function for level 2
 15975  005422  B25F               	btfsc	btemp,1,c
 15976  005424  EF99  F02A         	goto	i2_Hub_ClockWrite
 15977  005428                     _Hub_ClockWrite$intlevel0:
 15978                           	opt stack 21
 15979                           
 15980                           ;incstack = 0
 15981                           ;Hub_ClockWrite@value stored from wreg
 15982  005428  0100               	movlb	0	; () banked
 15983  00542A  6F60               	movwf	Hub_ClockWrite@value& (0+255),b
 15984                           
 15985                           ;hub.c: 43: LATB4 = value;
 15986  00542C  0100               	movlb	0	; () banked
 15987  00542E  A160               	btfss	Hub_ClockWrite@value& (0+255),0,b
 15988  005430  D002               	goto	u5320
 15989  005432  888A               	bsf	3978,4,c	;volatile
 15990  005434  0012               	return	
 15991  005436                     u5320:
 15992  005436  988A               	bcf	3978,4,c	;volatile
 15993  005438  0012               	return		;funcret
 15994  00543A                     __end_of_Hub_ClockWrite:
 15995                           	opt stack 0
 15996                           tosu	equ	0xFFF
 15997                           tosh	equ	0xFFE
 15998                           tosl	equ	0xFFD
 15999                           pclath	equ	0xFFA
 16000                           tblptru	equ	0xFF8
 16001                           tblptrh	equ	0xFF7
 16002                           tblptrl	equ	0xFF6
 16003                           tablat	equ	0xFF5
 16004                           prodh	equ	0xFF4
 16005                           prodl	equ	0xFF3
 16006                           intcon	equ	0xFF2
 16007                           indf0	equ	0xFEF
 16008                           postinc0	equ	0xFEE
 16009                           plusw0	equ	0xFEB
 16010                           fsr0h	equ	0xFEA
 16011                           fsr0l	equ	0xFE9
 16012                           wreg	equ	0xFE8
 16013                           indf1	equ	0xFE7
 16014                           postinc1	equ	0xFE6
 16015                           postdec1	equ	0xFE5
 16016                           plusw1	equ	0xFE3
 16017                           fsr1h	equ	0xFE2
 16018                           fsr1l	equ	0xFE1
 16019                           indf2	equ	0xFDF
 16020                           postinc2	equ	0xFDE
 16021                           postdec2	equ	0xFDD
 16022                           plusw2	equ	0xFDB
 16023                           fsr2h	equ	0xFDA
 16024                           fsr2l	equ	0xFD9
 16025                           status	equ	0xFD8
 16026                           
 16027 ;; *************** function _Display_LatchWrite *****************
 16028 ;; Defined at:
 16029 ;;		line 41 in file "display.c"
 16030 ;; Parameters:    Size  Location     Type
 16031 ;;  value           1    wreg     unsigned char 
 16032 ;; Auto vars:     Size  Location     Type
 16033 ;;  value           1    0[BANK0 ] unsigned char 
 16034 ;; Return value:  Size  Location     Type
 16035 ;;                  1    wreg      void 
 16036 ;; Registers used:
 16037 ;;		wreg
 16038 ;; Tracked objects:
 16039 ;;		On entry : 0/0
 16040 ;;		On exit  : 0/0
 16041 ;;		Unchanged: 0/0
 16042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16043 ;;      Params:         0       0       0       0       0       0       0       0       0
 16044 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16046 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16047 ;;Total ram usage:        1 bytes
 16048 ;; Hardware stack levels used:    1
 16049 ;; Hardware stack levels required when called:    7
 16050 ;; This function calls:
 16051 ;;		Nothing
 16052 ;; This function is called by:
 16053 ;;		_Display_Init
 16054 ;;		_ClockUp
 16055 ;;		_ClockDown
 16056 ;;		i2_ClockUp
 16057 ;;		i2_ClockDown
 16058 ;;		_LatchOn
 16059 ;;		_LatchOff
 16060 ;;		_WriteChar
 16061 ;;		i2_WriteChar
 16062 ;;		i2_LatchOn
 16063 ;;		i2_LatchOff
 16064 ;; This function uses a non-reentrant model
 16065 ;;
 16066                           
 16067                           	psect	text78
 16068  00543A                     __ptext78:
 16069                           	opt stack 0
 16070  00543A                     _Display_LatchWrite:
 16071                           	opt stack 0
 16072                           
 16073                           ;Skip over the trampoline to the duplicate function for level 2
 16074  00543A  B25F               	btfsc	btemp,1,c
 16075  00543C  EFA7  F02A         	goto	i2_Display_LatchWrite
 16076  005440                     _Display_LatchWrite$intlevel0:
 16077                           	opt stack 21
 16078                           
 16079                           ;incstack = 0
 16080                           ;Display_LatchWrite@value stored from wreg
 16081  005440  0100               	movlb	0	; () banked
 16082  005442  6F60               	movwf	Display_LatchWrite@value& (0+255),b
 16083                           
 16084                           ;display.c: 43: LATC2 = value;
 16085  005444  0100               	movlb	0	; () banked
 16086  005446  A160               	btfss	Display_LatchWrite@value& (0+255),0,b
 16087  005448  D002               	goto	u5280
 16088  00544A  848B               	bsf	3979,2,c	;volatile
 16089  00544C  0012               	return	
 16090  00544E                     u5280:
 16091  00544E  948B               	bcf	3979,2,c	;volatile
 16092  005450  0012               	return		;funcret
 16093  005452                     __end_of_Display_LatchWrite:
 16094                           	opt stack 0
 16095                           tosu	equ	0xFFF
 16096                           tosh	equ	0xFFE
 16097                           tosl	equ	0xFFD
 16098                           pclath	equ	0xFFA
 16099                           tblptru	equ	0xFF8
 16100                           tblptrh	equ	0xFF7
 16101                           tblptrl	equ	0xFF6
 16102                           tablat	equ	0xFF5
 16103                           prodh	equ	0xFF4
 16104                           prodl	equ	0xFF3
 16105                           intcon	equ	0xFF2
 16106                           indf0	equ	0xFEF
 16107                           postinc0	equ	0xFEE
 16108                           plusw0	equ	0xFEB
 16109                           fsr0h	equ	0xFEA
 16110                           fsr0l	equ	0xFE9
 16111                           wreg	equ	0xFE8
 16112                           indf1	equ	0xFE7
 16113                           postinc1	equ	0xFE6
 16114                           postdec1	equ	0xFE5
 16115                           plusw1	equ	0xFE3
 16116                           fsr1h	equ	0xFE2
 16117                           fsr1l	equ	0xFE1
 16118                           indf2	equ	0xFDF
 16119                           postinc2	equ	0xFDE
 16120                           postdec2	equ	0xFDD
 16121                           plusw2	equ	0xFDB
 16122                           fsr2h	equ	0xFDA
 16123                           fsr2l	equ	0xFD9
 16124                           status	equ	0xFD8
 16125                           
 16126 ;; *************** function _Display_DataWrite *****************
 16127 ;; Defined at:
 16128 ;;		line 46 in file "display.c"
 16129 ;; Parameters:    Size  Location     Type
 16130 ;;  value           1    wreg     unsigned char 
 16131 ;; Auto vars:     Size  Location     Type
 16132 ;;  value           1    0[BANK0 ] unsigned char 
 16133 ;; Return value:  Size  Location     Type
 16134 ;;                  1    wreg      unsigned char 
 16135 ;; Registers used:
 16136 ;;		wreg
 16137 ;; Tracked objects:
 16138 ;;		On entry : 0/0
 16139 ;;		On exit  : 0/0
 16140 ;;		Unchanged: 0/0
 16141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16142 ;;      Params:         0       0       0       0       0       0       0       0       0
 16143 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16144 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16145 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16146 ;;Total ram usage:        1 bytes
 16147 ;; Hardware stack levels used:    1
 16148 ;; Hardware stack levels required when called:    7
 16149 ;; This function calls:
 16150 ;;		Nothing
 16151 ;; This function is called by:
 16152 ;;		_Display_Init
 16153 ;;		_ClockUp
 16154 ;;		_ClockDown
 16155 ;;		i2_ClockUp
 16156 ;;		i2_ClockDown
 16157 ;;		_LatchOn
 16158 ;;		_LatchOff
 16159 ;;		_WriteChar
 16160 ;;		i2_WriteChar
 16161 ;;		i2_LatchOn
 16162 ;;		i2_LatchOff
 16163 ;; This function uses a non-reentrant model
 16164 ;;
 16165                           
 16166                           	psect	text79
 16167  005452                     __ptext79:
 16168                           	opt stack 0
 16169  005452                     _Display_DataWrite:
 16170                           	opt stack 0
 16171                           
 16172                           ;Skip over the trampoline to the duplicate function for level 2
 16173  005452  B25F               	btfsc	btemp,1,c
 16174  005454  EFA0  F02A         	goto	i2_Display_DataWrite
 16175  005458                     _Display_DataWrite$intlevel0:
 16176                           	opt stack 21
 16177                           
 16178                           ;incstack = 0
 16179                           ;Display_DataWrite@value stored from wreg
 16180  005458  0100               	movlb	0	; () banked
 16181  00545A  6F60               	movwf	Display_DataWrite@value& (0+255),b
 16182                           
 16183                           ;display.c: 48: LATA5 = value;
 16184  00545C  0100               	movlb	0	; () banked
 16185  00545E  A160               	btfss	Display_DataWrite@value& (0+255),0,b
 16186  005460  D002               	goto	u5300
 16187  005462  8A89               	bsf	3977,5,c	;volatile
 16188  005464  0012               	return	
 16189  005466                     u5300:
 16190  005466  9A89               	bcf	3977,5,c	;volatile
 16191  005468  0012               	return		;funcret
 16192  00546A                     __end_of_Display_DataWrite:
 16193                           	opt stack 0
 16194                           tosu	equ	0xFFF
 16195                           tosh	equ	0xFFE
 16196                           tosl	equ	0xFFD
 16197                           pclath	equ	0xFFA
 16198                           tblptru	equ	0xFF8
 16199                           tblptrh	equ	0xFF7
 16200                           tblptrl	equ	0xFF6
 16201                           tablat	equ	0xFF5
 16202                           prodh	equ	0xFF4
 16203                           prodl	equ	0xFF3
 16204                           intcon	equ	0xFF2
 16205                           indf0	equ	0xFEF
 16206                           postinc0	equ	0xFEE
 16207                           plusw0	equ	0xFEB
 16208                           fsr0h	equ	0xFEA
 16209                           fsr0l	equ	0xFE9
 16210                           wreg	equ	0xFE8
 16211                           indf1	equ	0xFE7
 16212                           postinc1	equ	0xFE6
 16213                           postdec1	equ	0xFE5
 16214                           plusw1	equ	0xFE3
 16215                           fsr1h	equ	0xFE2
 16216                           fsr1l	equ	0xFE1
 16217                           indf2	equ	0xFDF
 16218                           postinc2	equ	0xFDE
 16219                           postdec2	equ	0xFDD
 16220                           plusw2	equ	0xFDB
 16221                           fsr2h	equ	0xFDA
 16222                           fsr2l	equ	0xFD9
 16223                           status	equ	0xFD8
 16224                           
 16225 ;; *************** function _Display_ClockWrite *****************
 16226 ;; Defined at:
 16227 ;;		line 36 in file "display.c"
 16228 ;; Parameters:    Size  Location     Type
 16229 ;;  value           1    wreg     unsigned char 
 16230 ;; Auto vars:     Size  Location     Type
 16231 ;;  value           1    0[BANK0 ] unsigned char 
 16232 ;; Return value:  Size  Location     Type
 16233 ;;                  1    wreg      void 
 16234 ;; Registers used:
 16235 ;;		wreg
 16236 ;; Tracked objects:
 16237 ;;		On entry : 0/0
 16238 ;;		On exit  : 0/0
 16239 ;;		Unchanged: 0/0
 16240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16241 ;;      Params:         0       0       0       0       0       0       0       0       0
 16242 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16243 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16244 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16245 ;;Total ram usage:        1 bytes
 16246 ;; Hardware stack levels used:    1
 16247 ;; Hardware stack levels required when called:    7
 16248 ;; This function calls:
 16249 ;;		Nothing
 16250 ;; This function is called by:
 16251 ;;		_Display_Init
 16252 ;;		_ClockUp
 16253 ;;		_ClockDown
 16254 ;;		i2_ClockUp
 16255 ;;		i2_ClockDown
 16256 ;;		_LatchOn
 16257 ;;		_LatchOff
 16258 ;;		_WriteChar
 16259 ;;		i2_WriteChar
 16260 ;;		i2_LatchOn
 16261 ;;		i2_LatchOff
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text80
 16266  00546A                     __ptext80:
 16267                           	opt stack 0
 16268  00546A                     _Display_ClockWrite:
 16269                           	opt stack 0
 16270                           
 16271                           ;Skip over the trampoline to the duplicate function for level 2
 16272  00546A  B25F               	btfsc	btemp,1,c
 16273  00546C  EFAE  F02A         	goto	i2_Display_ClockWrite
 16274  005470                     _Display_ClockWrite$intlevel0:
 16275                           	opt stack 21
 16276                           
 16277                           ;incstack = 0
 16278                           ;Display_ClockWrite@value stored from wreg
 16279  005470  0100               	movlb	0	; () banked
 16280  005472  6F60               	movwf	Display_ClockWrite@value& (0+255),b
 16281                           
 16282                           ;display.c: 38: LATB4 = value;
 16283  005474  0100               	movlb	0	; () banked
 16284  005476  A160               	btfss	Display_ClockWrite@value& (0+255),0,b
 16285  005478  D002               	goto	u5260
 16286  00547A  888A               	bsf	3978,4,c	;volatile
 16287  00547C  0012               	return	
 16288  00547E                     u5260:
 16289  00547E  988A               	bcf	3978,4,c	;volatile
 16290  005480  0012               	return		;funcret
 16291  005482                     __end_of_Display_ClockWrite:
 16292                           	opt stack 0
 16293                           tosu	equ	0xFFF
 16294                           tosh	equ	0xFFE
 16295                           tosl	equ	0xFFD
 16296                           pclath	equ	0xFFA
 16297                           tblptru	equ	0xFF8
 16298                           tblptrh	equ	0xFF7
 16299                           tblptrl	equ	0xFF6
 16300                           tablat	equ	0xFF5
 16301                           prodh	equ	0xFF4
 16302                           prodl	equ	0xFF3
 16303                           intcon	equ	0xFF2
 16304                           indf0	equ	0xFEF
 16305                           postinc0	equ	0xFEE
 16306                           plusw0	equ	0xFEB
 16307                           fsr0h	equ	0xFEA
 16308                           fsr0l	equ	0xFE9
 16309                           wreg	equ	0xFE8
 16310                           indf1	equ	0xFE7
 16311                           postinc1	equ	0xFE6
 16312                           postdec1	equ	0xFE5
 16313                           plusw1	equ	0xFE3
 16314                           fsr1h	equ	0xFE2
 16315                           fsr1l	equ	0xFE1
 16316                           indf2	equ	0xFDF
 16317                           postinc2	equ	0xFDE
 16318                           postdec2	equ	0xFDD
 16319                           plusw2	equ	0xFDB
 16320                           fsr2h	equ	0xFDA
 16321                           fsr2l	equ	0xFD9
 16322                           status	equ	0xFD8
 16323                           
 16324 ;; *************** function _Hub_LatchWrite *****************
 16325 ;; Defined at:
 16326 ;;		line 46 in file "hub.c"
 16327 ;; Parameters:    Size  Location     Type
 16328 ;;  value           1    wreg     unsigned char 
 16329 ;; Auto vars:     Size  Location     Type
 16330 ;;  value           1    0[BANK0 ] unsigned char 
 16331 ;; Return value:  Size  Location     Type
 16332 ;;                  1    wreg      void 
 16333 ;; Registers used:
 16334 ;;		wreg
 16335 ;; Tracked objects:
 16336 ;;		On entry : 0/0
 16337 ;;		On exit  : 0/0
 16338 ;;		Unchanged: 0/0
 16339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16340 ;;      Params:         0       0       0       0       0       0       0       0       0
 16341 ;;      Locals:         0       1       0       0       0       0       0       0       0
 16342 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16343 ;;      Totals:         0       1       0       0       0       0       0       0       0
 16344 ;;Total ram usage:        1 bytes
 16345 ;; Hardware stack levels used:    1
 16346 ;; Hardware stack levels required when called:    7
 16347 ;; This function calls:
 16348 ;;		Nothing
 16349 ;; This function is called by:
 16350 ;;		_Hub_Init
 16351 ;;		_ClockUp
 16352 ;;		_ClockDown
 16353 ;;		i2_ClockUp
 16354 ;;		i2_ClockDown
 16355 ;;		_LatchOn
 16356 ;;		_LatchOff
 16357 ;;		_WriteChar
 16358 ;;		i2_WriteChar
 16359 ;;		i2_LatchOn
 16360 ;;		i2_LatchOff
 16361 ;; This function uses a non-reentrant model
 16362 ;;
 16363                           
 16364                           	psect	text81
 16365  005482                     __ptext81:
 16366                           	opt stack 0
 16367  005482                     _Hub_LatchWrite:
 16368                           	opt stack 0
 16369                           
 16370                           ;Skip over the trampoline to the duplicate function for level 2
 16371  005482  B25F               	btfsc	btemp,1,c
 16372  005484  EFB5  F02A         	goto	i2_Hub_LatchWrite
 16373  005488                     _Hub_LatchWrite$intlevel0:
 16374                           	opt stack 21
 16375                           
 16376                           ;incstack = 0
 16377                           ;Hub_LatchWrite@value stored from wreg
 16378  005488  0100               	movlb	0	; () banked
 16379  00548A  6F60               	movwf	Hub_LatchWrite@value& (0+255),b
 16380                           
 16381                           ;hub.c: 48: LATB3 = value;
 16382  00548C  0100               	movlb	0	; () banked
 16383  00548E  A160               	btfss	Hub_LatchWrite@value& (0+255),0,b
 16384  005490  D002               	goto	u5340
 16385  005492  868A               	bsf	3978,3,c	;volatile
 16386  005494  0012               	return	
 16387  005496                     u5340:
 16388  005496  968A               	bcf	3978,3,c	;volatile
 16389  005498  0012               	return		;funcret
 16390  00549A                     __end_of_Hub_LatchWrite:
 16391                           	opt stack 0
 16392                           tosu	equ	0xFFF
 16393                           tosh	equ	0xFFE
 16394                           tosl	equ	0xFFD
 16395                           pclath	equ	0xFFA
 16396                           tblptru	equ	0xFF8
 16397                           tblptrh	equ	0xFF7
 16398                           tblptrl	equ	0xFF6
 16399                           tablat	equ	0xFF5
 16400                           prodh	equ	0xFF4
 16401                           prodl	equ	0xFF3
 16402                           intcon	equ	0xFF2
 16403                           indf0	equ	0xFEF
 16404                           postinc0	equ	0xFEE
 16405                           plusw0	equ	0xFEB
 16406                           fsr0h	equ	0xFEA
 16407                           fsr0l	equ	0xFE9
 16408                           wreg	equ	0xFE8
 16409                           indf1	equ	0xFE7
 16410                           postinc1	equ	0xFE6
 16411                           postdec1	equ	0xFE5
 16412                           plusw1	equ	0xFE3
 16413                           fsr1h	equ	0xFE2
 16414                           fsr1l	equ	0xFE1
 16415                           indf2	equ	0xFDF
 16416                           postinc2	equ	0xFDE
 16417                           postdec2	equ	0xFDD
 16418                           plusw2	equ	0xFDB
 16419                           fsr2h	equ	0xFDA
 16420                           fsr2l	equ	0xFD9
 16421                           status	equ	0xFD8
 16422                           
 16423 ;; *************** function _Hub_CopyBuffer *****************
 16424 ;; Defined at:
 16425 ;;		line 125 in file "hub.c"
 16426 ;; Parameters:    Size  Location     Type
 16427 ;;		None
 16428 ;; Auto vars:     Size  Location     Type
 16429 ;;		None
 16430 ;; Return value:  Size  Location     Type
 16431 ;;                  1    wreg      void 
 16432 ;; Registers used:
 16433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16434 ;; Tracked objects:
 16435 ;;		On entry : 0/0
 16436 ;;		On exit  : 0/0
 16437 ;;		Unchanged: 0/0
 16438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16439 ;;      Params:         0       0       0       0       0       0       0       0       0
 16440 ;;      Locals:         0       0       0       0       0       0       0       0       0
 16441 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16442 ;;      Totals:         0       0       0       0       0       0       0       0       0
 16443 ;;Total ram usage:        0 bytes
 16444 ;; Hardware stack levels used:    1
 16445 ;; Hardware stack levels required when called:    8
 16446 ;; This function calls:
 16447 ;;		_memcpy
 16448 ;; This function is called by:
 16449 ;;		_Load
 16450 ;;		_InitApp
 16451 ;; This function uses a non-reentrant model
 16452 ;;
 16453                           
 16454                           	psect	text82
 16455  00519C                     __ptext82:
 16456                           	opt stack 0
 16457  00519C                     _Hub_CopyBuffer:
 16458                           	opt stack 21
 16459                           
 16460                           ;hub.c: 127: memcpy(&_Hub.SecondaryBuffer, &_Hub.PrimaryBuffer, sizeof(DataBuffer));
 16461                           
 16462                           ;incstack = 0
 16463  00519C  0EAD               	movlw	low (__Hub+110)
 16464  00519E  0100               	movlb	0	; () banked
 16465  0051A0  6F60               	movwf	memcpy@d1& (0+255),b
 16466  0051A2  0E01               	movlw	high (__Hub+110)
 16467  0051A4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 16468  0051A6  0EA1               	movlw	low (__Hub+98)
 16469  0051A8  6F62               	movwf	memcpy@s1& (0+255),b
 16470  0051AA  0E01               	movlw	high (__Hub+98)
 16471  0051AC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 16472  0051AE  0E00               	movlw	0
 16473  0051B0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 16474  0051B2  0E0C               	movlw	12
 16475  0051B4  6F64               	movwf	memcpy@n& (0+255),b
 16476  0051B6  ECB4  F026         	call	_memcpy
 16477                           
 16478                           ;hub.c: 129: _Hub.ReadyToWrite = 0;
 16479  0051BA  0E00               	movlw	0
 16480  0051BC  0101               	movlb	1	; () banked
 16481  0051BE  6FC5               	movwf	(__Hub+134)& (0+255),b
 16482                           
 16483                           ; BSR set to: 1
 16484  0051C0  0012               	return		;funcret
 16485  0051C2                     __end_of_Hub_CopyBuffer:
 16486                           	opt stack 0
 16487                           tosu	equ	0xFFF
 16488                           tosh	equ	0xFFE
 16489                           tosl	equ	0xFFD
 16490                           pclath	equ	0xFFA
 16491                           tblptru	equ	0xFF8
 16492                           tblptrh	equ	0xFF7
 16493                           tblptrl	equ	0xFF6
 16494                           tablat	equ	0xFF5
 16495                           prodh	equ	0xFF4
 16496                           prodl	equ	0xFF3
 16497                           intcon	equ	0xFF2
 16498                           indf0	equ	0xFEF
 16499                           postinc0	equ	0xFEE
 16500                           plusw0	equ	0xFEB
 16501                           fsr0h	equ	0xFEA
 16502                           fsr0l	equ	0xFE9
 16503                           wreg	equ	0xFE8
 16504                           indf1	equ	0xFE7
 16505                           postinc1	equ	0xFE6
 16506                           postdec1	equ	0xFE5
 16507                           plusw1	equ	0xFE3
 16508                           fsr1h	equ	0xFE2
 16509                           fsr1l	equ	0xFE1
 16510                           indf2	equ	0xFDF
 16511                           postinc2	equ	0xFDE
 16512                           postdec2	equ	0xFDD
 16513                           plusw2	equ	0xFDB
 16514                           fsr2h	equ	0xFDA
 16515                           fsr2l	equ	0xFD9
 16516                           status	equ	0xFD8
 16517                           
 16518 ;; *************** function _memcpy *****************
 16519 ;; Defined at:
 16520 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 16521 ;; Parameters:    Size  Location     Type
 16522 ;;  d1              2    0[BANK0 ] PTR void 
 16523 ;;		 -> _Hub.Switch(48), Load@LBuffer(12), _Hub(154), SetupPkt(8), 
 16524 ;;  s1              2    2[BANK0 ] PTR const void 
 16525 ;;		 -> Persistant_SaveBuffer@ABuffer(12), _Hub.Switch(48), Hub_ReadSwitch@LBitArray(24), _Config(12), 
 16526 ;;		 -> _Hub.PrimaryBuffer(12), _Hub(154), CtrlTrfData(8), RAM(2047), 
 16527 ;;		 -> SetupPkt(8), 
 16528 ;;  n               2    4[BANK0 ] unsigned int 
 16529 ;; Auto vars:     Size  Location     Type
 16530 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 16531 ;;		 -> Persistant_SaveBuffer@ABuffer(12), _Hub.Switch(48), Hub_ReadSwitch@LBitArray(24), _Config(12), 
 16532 ;;		 -> _Hub.PrimaryBuffer(12), _Hub(154), CtrlTrfData(8), RAM(2047), 
 16533 ;;		 -> SetupPkt(8), 
 16534 ;;  d               2    6[BANK0 ] PTR unsigned char 
 16535 ;;		 -> _Hub.Switch(48), Load@LBuffer(12), _Hub(154), SetupPkt(8), 
 16536 ;;  tmp             1   10[BANK0 ] unsigned char 
 16537 ;; Return value:  Size  Location     Type
 16538 ;;                  2    0[BANK0 ] PTR void 
 16539 ;; Registers used:
 16540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16541 ;; Tracked objects:
 16542 ;;		On entry : 0/0
 16543 ;;		On exit  : 0/0
 16544 ;;		Unchanged: 0/0
 16545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16546 ;;      Params:         0       6       0       0       0       0       0       0       0
 16547 ;;      Locals:         0       5       0       0       0       0       0       0       0
 16548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 16549 ;;      Totals:         0      11       0       0       0       0       0       0       0
 16550 ;;Total ram usage:       11 bytes
 16551 ;; Hardware stack levels used:    1
 16552 ;; Hardware stack levels required when called:    7
 16553 ;; This function calls:
 16554 ;;		Nothing
 16555 ;; This function is called by:
 16556 ;;		_USBCtrlEPService
 16557 ;;		_Load
 16558 ;;		_Hub_ReadSwitch
 16559 ;;		_Hub_CopyBuffer
 16560 ;;		_Persistant_SaveBuffer
 16561 ;;		_Persistant_LoadBuffer
 16562 ;; This function uses a non-reentrant model
 16563 ;;
 16564                           
 16565                           	psect	text83
 16566  004D68                     __ptext83:
 16567                           	opt stack 0
 16568  004D68                     _memcpy:
 16569                           	opt stack 21
 16570                           
 16571                           ; BSR set to: 1
 16572                           ;incstack = 0
 16573  004D68  C062  F068         	movff	memcpy@s1,memcpy@s
 16574  004D6C  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 16575  004D70  C060  F066         	movff	memcpy@d1,memcpy@d
 16576  004D74  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 16577  004D78  D011               	goto	l1750
 16578  004D7A                     l6247:
 16579  004D7A  C068  FFD9         	movff	memcpy@s,fsr2l
 16580  004D7E  C069  FFDA         	movff	memcpy@s+1,fsr2h
 16581  004D82  50DF               	movf	indf2,w,c
 16582  004D84  0100               	movlb	0	; () banked
 16583  004D86  6F6A               	movwf	memcpy@tmp& (0+255),b
 16584                           
 16585                           ; BSR set to: 0
 16586  004D88  4B68               	infsnz	memcpy@s& (0+255),f,b
 16587  004D8A  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 16588                           
 16589                           ; BSR set to: 0
 16590  004D8C  C066  FFD9         	movff	memcpy@d,fsr2l
 16591  004D90  C067  FFDA         	movff	memcpy@d+1,fsr2h
 16592  004D94  C06A  FFDF         	movff	memcpy@tmp,indf2
 16593                           
 16594                           ; BSR set to: 0
 16595  004D98  4B66               	infsnz	memcpy@d& (0+255),f,b
 16596  004D9A  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 16597  004D9C                     l1750:
 16598                           
 16599                           ; BSR set to: 0
 16600  004D9C  0100               	movlb	0	; () banked
 16601  004D9E  0764               	decf	memcpy@n& (0+255),f,b
 16602  004DA0  A0D8               	btfss	status,0,c
 16603  004DA2  0765               	decf	(memcpy@n+1)& (0+255),f,b
 16604  004DA4  2964               	incf	memcpy@n& (0+255),w,b
 16605  004DA6  E1E9               	bnz	l6247
 16606  004DA8  2965               	incf	(memcpy@n+1)& (0+255),w,b
 16607  004DAA  B4D8               	btfsc	status,2,c
 16608  004DAC  0012               	return	
 16609  004DAE  D7E5               	goto	l1751
 16610  004DB0                     __end_of_memcpy:
 16611                           	opt stack 0
 16612                           tosu	equ	0xFFF
 16613                           tosh	equ	0xFFE
 16614                           tosl	equ	0xFFD
 16615                           pclath	equ	0xFFA
 16616                           tblptru	equ	0xFF8
 16617                           tblptrh	equ	0xFF7
 16618                           tblptrl	equ	0xFF6
 16619                           tablat	equ	0xFF5
 16620                           prodh	equ	0xFF4
 16621                           prodl	equ	0xFF3
 16622                           intcon	equ	0xFF2
 16623                           indf0	equ	0xFEF
 16624                           postinc0	equ	0xFEE
 16625                           plusw0	equ	0xFEB
 16626                           fsr0h	equ	0xFEA
 16627                           fsr0l	equ	0xFE9
 16628                           wreg	equ	0xFE8
 16629                           indf1	equ	0xFE7
 16630                           postinc1	equ	0xFE6
 16631                           postdec1	equ	0xFE5
 16632                           plusw1	equ	0xFE3
 16633                           fsr1h	equ	0xFE2
 16634                           fsr1l	equ	0xFE1
 16635                           indf2	equ	0xFDF
 16636                           postinc2	equ	0xFDE
 16637                           postdec2	equ	0xFDD
 16638                           plusw2	equ	0xFDB
 16639                           fsr2h	equ	0xFDA
 16640                           fsr2l	equ	0xFD9
 16641                           status	equ	0xFD8
 16642                           
 16643 ;; *************** function _Display_ProcessData *****************
 16644 ;; Defined at:
 16645 ;;		line 51 in file "display.c"
 16646 ;; Parameters:    Size  Location     Type
 16647 ;;  ADigitalValu    1    wreg     unsigned char 
 16648 ;;  AValues         2   10[BANK0 ] PTR unsigned char 
 16649 ;;		 -> _Hub.SecondaryBuffer(12), _Hub.PrimaryBuffer(12), _Hub(154), 
 16650 ;;  ALoaded         1   12[BANK0 ] unsigned char 
 16651 ;;  APushed         1   13[BANK0 ] unsigned char 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  ADigitalValu    1   17[BANK0 ] unsigned char 
 16654 ;;  i               2   31[BANK0 ] int 
 16655 ;;  LData           1   18[BANK0 ] unsigned char 
 16656 ;;  j               2   29[BANK0 ] int 
 16657 ;;  i               2   23[BANK0 ] int 
 16658 ;;  LBit            1   19[BANK0 ] unsigned char 
 16659 ;;  k               2   21[BANK0 ] int 
 16660 ;;  i               2   27[BANK0 ] int 
 16661 ;;  i               2   25[BANK0 ] int 
 16662 ;;  iDataIndex      1   20[BANK0 ] unsigned char 
 16663 ;; Return value:  Size  Location     Type
 16664 ;;                  1    wreg      void 
 16665 ;; Registers used:
 16666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16667 ;; Tracked objects:
 16668 ;;		On entry : 0/0
 16669 ;;		On exit  : 0/0
 16670 ;;		Unchanged: 0/0
 16671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16672 ;;      Params:         0       4       0       0       0       0       0       0       0
 16673 ;;      Locals:         0      16       0       0       0       0       0       0       0
 16674 ;;      Temps:          0       3       0       0       0       0       0       0       0
 16675 ;;      Totals:         0      23       0       0       0       0       0       0       0
 16676 ;;Total ram usage:       23 bytes
 16677 ;; Hardware stack levels used:    1
 16678 ;; Hardware stack levels required when called:    8
 16679 ;; This function calls:
 16680 ;;		___awmod
 16681 ;;		___lbdiv
 16682 ;;		___lbmod
 16683 ;;		___wmul
 16684 ;; This function is called by:
 16685 ;;		_main
 16686 ;;		_InitApp
 16687 ;; This function uses a non-reentrant model
 16688 ;;
 16689                           
 16690                           	psect	text84
 16691  000E52                     __ptext84:
 16692                           	opt stack 0
 16693  000E52                     _Display_ProcessData:
 16694                           	opt stack 21
 16695                           
 16696                           ; BSR set to: 0
 16697                           ;incstack = 0
 16698                           ;Display_ProcessData@ADigitalValue stored from wreg
 16699  000E52  0100               	movlb	0	; () banked
 16700  000E54  6F71               	movwf	Display_ProcessData@ADigitalValue& (0+255),b
 16701                           
 16702                           ;display.c: 53: if (_Display.ReadyToWrite)
 16703  000E56  0102               	movlb	2	; () banked
 16704  000E58  510B               	movf	(__Display+1)& (0+255),w,b
 16705  000E5A  B4D8               	btfsc	status,2,c
 16706  000E5C  0012               	return	
 16707                           
 16708                           ; BSR set to: 2
 16709                           ;display.c: 54: {
 16710                           ;display.c: 55: _Display.ReadyToRead = 0;
 16711  000E5E  0E00               	movlw	0
 16712  000E60  6F0A               	movwf	__Display& (0+255),b
 16713                           
 16714                           ;display.c: 56: unsigned char iDataIndex = 0;
 16715  000E62  0E00               	movlw	0
 16716  000E64  0100               	movlb	0	; () banked
 16717  000E66  6F74               	movwf	Display_ProcessData@iDataIndex& (0+255),b
 16718                           
 16719                           ;display.c: 57: iDataIndex = 0;
 16720  000E68  0E00               	movlw	0
 16721  000E6A  6F74               	movwf	Display_ProcessData@iDataIndex& (0+255),b
 16722                           
 16723                           ;display.c: 59: for(int i = 0; i < 2; i++)
 16724  000E6C  0E00               	movlw	0
 16725  000E6E  6F7A               	movwf	(Display_ProcessData@i+1)& (0+255),b
 16726  000E70  0E00               	movlw	0
 16727  000E72  6F79               	movwf	Display_ProcessData@i& (0+255),b
 16728  000E74                     l7025:
 16729                           
 16730                           ; BSR set to: 0
 16731  000E74  BF7A               	btfsc	(Display_ProcessData@i+1)& (0+255),7,b
 16732  000E76  D006               	goto	l779
 16733  000E78  517A               	movf	(Display_ProcessData@i+1)& (0+255),w,b
 16734  000E7A  E12C               	bnz	l7035
 16735  000E7C  0E02               	movlw	2
 16736  000E7E  5D79               	subwf	Display_ProcessData@i& (0+255),w,b
 16737  000E80  B0D8               	btfsc	status,0,c
 16738  000E82  D028               	goto	u8100
 16739  000E84                     l779:
 16740                           
 16741                           ; BSR set to: 0
 16742                           ;display.c: 60: _Display.DigitalValueData[i] = _Digits[(ADigitalValue / _Display.Digital
      +                          ValueRatio[i]) % 10];
 16743                           
 16744                           ; BSR set to: 0
 16745  000E84  0EC4               	movlw	low (__Display+186)
 16746  000E86  2579               	addwf	Display_ProcessData@i& (0+255),w,b
 16747  000E88  6ED9               	movwf	fsr2l,c
 16748  000E8A  0E02               	movlw	high (__Display+186)
 16749  000E8C  217A               	addwfc	(Display_ProcessData@i+1)& (0+255),w,b
 16750  000E8E  6EDA               	movwf	fsr2h,c
 16751  000E90  50DF               	movf	indf2,w,c
 16752  000E92  6F60               	movwf	___lbdiv@divisor& (0+255),b
 16753  000E94  5171               	movf	Display_ProcessData@ADigitalValue& (0+255),w,b
 16754  000E96  EC82  F027         	call	___lbdiv
 16755  000E9A  0100               	movlb	0	; () banked
 16756  000E9C  6F6E               	movwf	??_Display_ProcessData& (0+255),b
 16757  000E9E  516E               	movf	??_Display_ProcessData& (0+255),w,b
 16758  000EA0  6F64               	movwf	___awmod@dividend& (0+255),b
 16759  000EA2  6B65               	clrf	(___awmod@dividend+1)& (0+255),b
 16760  000EA4  0E00               	movlw	0
 16761  000EA6  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 16762  000EA8  0E0A               	movlw	10
 16763  000EAA  6F66               	movwf	___awmod@divisor& (0+255),b
 16764  000EAC  EC96  F023         	call	___awmod	;wreg free
 16765  000EB0  0EEC               	movlw	low __Digits
 16766  000EB2  0100               	movlb	0	; () banked
 16767  000EB4  2564               	addwf	?___awmod& (0+255),w,b
 16768  000EB6  6ED9               	movwf	fsr2l,c
 16769  000EB8  0E02               	movlw	high __Digits
 16770  000EBA  2165               	addwfc	(?___awmod+1)& (0+255),w,b
 16771  000EBC  6EDA               	movwf	fsr2h,c
 16772  000EBE  0EC6               	movlw	low (__Display+188)
 16773  000EC0  2579               	addwf	Display_ProcessData@i& (0+255),w,b
 16774  000EC2  6EE1               	movwf	fsr1l,c
 16775  000EC4  0E02               	movlw	high (__Display+188)
 16776  000EC6  217A               	addwfc	(Display_ProcessData@i+1)& (0+255),w,b
 16777  000EC8  6EE2               	movwf	fsr1h,c
 16778  000ECA  CFDF FFE7          	movff	indf2,indf1
 16779                           
 16780                           ; BSR set to: 0
 16781  000ECE  4B79               	infsnz	Display_ProcessData@i& (0+255),f,b
 16782  000ED0  2B7A               	incf	(Display_ProcessData@i+1)& (0+255),f,b
 16783  000ED2  D7D0               	goto	l7025
 16784  000ED4                     u8100:
 16785  000ED4                     l7035:
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;display.c: 62: if (ALoaded)
 16789  000ED4  516C               	movf	Display_ProcessData@ALoaded& (0+255),w,b
 16790  000ED6  B4D8               	btfsc	status,2,c
 16791  000ED8  D004               	goto	l781
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;display.c: 63: _Display.DigitalValueData[1] |= 0x08 & _Display.PointMask[1];
 16795  000EDA  0102               	movlb	2	; () banked
 16796  000EDC  51D3               	movf	(__Display+201)& (0+255),w,b
 16797  000EDE  0B08               	andlw	8
 16798  000EE0  13C7               	iorwf	(__Display+189)& (0+255),f,b
 16799  000EE2                     l781:
 16800                           
 16801                           ;display.c: 65: if (APushed)
 16802                           
 16803                           ; BSR set to: 2
 16804  000EE2  0100               	movlb	0	; () banked
 16805  000EE4  516D               	movf	Display_ProcessData@APushed& (0+255),w,b
 16806  000EE6  B4D8               	btfsc	status,2,c
 16807  000EE8  D004               	goto	l782
 16808                           
 16809                           ; BSR set to: 0
 16810                           ;display.c: 66: _Display.DigitalValueData[0] |= 0x08 & _Display.PointMask[0];
 16811  000EEA  0102               	movlb	2	; () banked
 16812  000EEC  51D2               	movf	(__Display+200)& (0+255),w,b
 16813  000EEE  0B08               	andlw	8
 16814  000EF0  13C6               	iorwf	(__Display+188)& (0+255),f,b
 16815  000EF2                     l782:
 16816                           
 16817                           ;display.c: 68: for(int i = 0; i < 8; i++)
 16818                           
 16819                           ; BSR set to: 2
 16820  000EF2  0E00               	movlw	0
 16821  000EF4  0100               	movlb	0	; () banked
 16822  000EF6  6F7C               	movwf	(Display_ProcessData@i_2670+1)& (0+255),b
 16823  000EF8  0E00               	movlw	0
 16824  000EFA  6F7B               	movwf	Display_ProcessData@i_2670& (0+255),b
 16825  000EFC                     l7045:
 16826                           
 16827                           ; BSR set to: 0
 16828  000EFC  BF7C               	btfsc	(Display_ProcessData@i_2670+1)& (0+255),7,b
 16829  000EFE  D006               	goto	l783
 16830  000F00  517C               	movf	(Display_ProcessData@i_2670+1)& (0+255),w,b
 16831  000F02  E11A               	bnz	l7055
 16832  000F04  0E08               	movlw	8
 16833  000F06  5D7B               	subwf	Display_ProcessData@i_2670& (0+255),w,b
 16834  000F08  B0D8               	btfsc	status,0,c
 16835  000F0A  D016               	goto	u8140
 16836  000F0C                     l783:
 16837                           
 16838                           ; BSR set to: 0
 16839                           ;display.c: 69: _Display.ValueData[i] = AValues[i] % (char)(((0x01 << 6) - 1 * 1.0f) / (
      +                          7 * 1.0f));
 16840                           
 16841                           ; BSR set to: 0
 16842  000F0C  0EC8               	movlw	low (__Display+190)
 16843  000F0E  257B               	addwf	Display_ProcessData@i_2670& (0+255),w,b
 16844  000F10  6ED9               	movwf	fsr2l,c
 16845  000F12  0E02               	movlw	high (__Display+190)
 16846  000F14  217C               	addwfc	(Display_ProcessData@i_2670+1)& (0+255),w,b
 16847  000F16  6EDA               	movwf	fsr2h,c
 16848  000F18  0E09               	movlw	9
 16849  000F1A  6F60               	movwf	___lbmod@divisor& (0+255),b
 16850  000F1C  517B               	movf	Display_ProcessData@i_2670& (0+255),w,b
 16851  000F1E  256A               	addwf	Display_ProcessData@AValues& (0+255),w,b
 16852  000F20  6EE1               	movwf	fsr1l,c
 16853  000F22  517C               	movf	(Display_ProcessData@i_2670+1)& (0+255),w,b
 16854  000F24  216B               	addwfc	(Display_ProcessData@AValues+1)& (0+255),w,b
 16855  000F26  6EE2               	movwf	fsr1h,c
 16856  000F28  50E7               	movf	indf1,w,c
 16857  000F2A  EC8F  F028         	call	___lbmod
 16858  000F2E  6EDF               	movwf	indf2,c
 16859  000F30  0100               	movlb	0	; () banked
 16860  000F32  4B7B               	infsnz	Display_ProcessData@i_2670& (0+255),f,b
 16861  000F34  2B7C               	incf	(Display_ProcessData@i_2670+1)& (0+255),f,b
 16862  000F36  D7E2               	goto	l7045
 16863  000F38                     u8140:
 16864  000F38                     l7055:
 16865                           
 16866                           ; BSR set to: 0
 16867                           ;display.c: 71: for (int k = 0; k < (char)(((0x01 << 6) - 1 * 1.0f) / (7 * 1.0f)); k ++)
 16868  000F38  0E00               	movlw	0
 16869  000F3A  6F76               	movwf	(Display_ProcessData@k+1)& (0+255),b
 16870  000F3C  0E00               	movlw	0
 16871  000F3E  6F75               	movwf	Display_ProcessData@k& (0+255),b
 16872                           
 16873                           ; BSR set to: 0
 16874  000F40  BF76               	btfsc	(Display_ProcessData@k+1)& (0+255),7,b
 16875  000F42  D008               	goto	l785
 16876  000F44  5176               	movf	(Display_ProcessData@k+1)& (0+255),w,b
 16877  000F46  E105               	bnz	u8150
 16878  000F48  0E09               	movlw	9
 16879  000F4A  5D75               	subwf	Display_ProcessData@k& (0+255),w,b
 16880  000F4C  B0D8               	btfsc	status,0,c
 16881  000F4E  D0CB               	goto	u8270
 16882  000F50  D001               	goto	l785
 16883  000F52                     u8150:
 16884                           
 16885                           ; BSR set to: 0
 16886  000F52  D0C9               	goto	u8270
 16887  000F54                     l785:
 16888                           
 16889                           ; BSR set to: 0
 16890                           ;display.c: 72: {
 16891                           ;display.c: 74: for (int i = 0; i < 2; i++)
 16892                           
 16893                           ; BSR set to: 0
 16894  000F54  0E00               	movlw	0
 16895  000F56  6F78               	movwf	(Display_ProcessData@i_2672+1)& (0+255),b
 16896  000F58  0E00               	movlw	0
 16897  000F5A  6F77               	movwf	Display_ProcessData@i_2672& (0+255),b
 16898  000F5C                     l7063:
 16899                           
 16900                           ; BSR set to: 0
 16901  000F5C  BF78               	btfsc	(Display_ProcessData@i_2672+1)& (0+255),7,b
 16902  000F5E  D006               	goto	l787
 16903  000F60  5178               	movf	(Display_ProcessData@i_2672+1)& (0+255),w,b
 16904  000F62  E11D               	bnz	l7075
 16905  000F64  0E02               	movlw	2
 16906  000F66  5D77               	subwf	Display_ProcessData@i_2672& (0+255),w,b
 16907  000F68  B0D8               	btfsc	status,0,c
 16908  000F6A  D019               	goto	u8170
 16909  000F6C                     l787:
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;display.c: 75: {
 16913                           ;display.c: 76: *(_Display.SecondaryBuffer + iDataIndex) = _Display.DigitalValueData[i] 
      +                          & _Display.SavingMask;
 16914                           
 16915                           ; BSR set to: 0
 16916  000F6C  5174               	movf	Display_ProcessData@iDataIndex& (0+255),w,b
 16917  000F6E  0D01               	mullw	1
 16918  000F70  50F3               	movf	prodl,w,c
 16919  000F72  0102               	movlb	2	; () banked
 16920  000F74  25C2               	addwf	(__Display+184)& (0+255),w,b
 16921  000F76  6ED9               	movwf	fsr2l,c
 16922  000F78  50F4               	movf	prodh,w,c
 16923  000F7A  21C3               	addwfc	(__Display+185)& (0+255),w,b
 16924  000F7C  6EDA               	movwf	fsr2h,c
 16925  000F7E  0EC6               	movlw	low (__Display+188)
 16926  000F80  0100               	movlb	0	; () banked
 16927  000F82  2577               	addwf	Display_ProcessData@i_2672& (0+255),w,b
 16928  000F84  6EE1               	movwf	fsr1l,c
 16929  000F86  0E02               	movlw	high (__Display+188)
 16930  000F88  2178               	addwfc	(Display_ProcessData@i_2672+1)& (0+255),w,b
 16931  000F8A  6EE2               	movwf	fsr1h,c
 16932  000F8C  50E7               	movf	indf1,w,c
 16933  000F8E  0102               	movlb	2	; () banked
 16934  000F90  15D1               	andwf	(__Display+199)& (0+255),w,b
 16935  000F92  6EDF               	movwf	indf2,c
 16936                           
 16937                           ; BSR set to: 2
 16938                           ;display.c: 77: iDataIndex++;
 16939  000F94  0100               	movlb	0	; () banked
 16940  000F96  2B74               	incf	Display_ProcessData@iDataIndex& (0+255),f,b
 16941                           
 16942                           ; BSR set to: 0
 16943  000F98  4B77               	infsnz	Display_ProcessData@i_2672& (0+255),f,b
 16944  000F9A  2B78               	incf	(Display_ProcessData@i_2672+1)& (0+255),f,b
 16945  000F9C  D7DF               	goto	l7063
 16946  000F9E                     u8170:
 16947  000F9E                     l7075:
 16948                           
 16949                           ; BSR set to: 0
 16950                           ;display.c: 78: }
 16951                           ;display.c: 81: unsigned char LBit;
 16952                           ;display.c: 82: for (int j = 0; j < 8; j++)
 16953  000F9E  0E00               	movlw	0
 16954  000FA0  6F7E               	movwf	(Display_ProcessData@j+1)& (0+255),b
 16955  000FA2  0E00               	movlw	0
 16956  000FA4  6F7D               	movwf	Display_ProcessData@j& (0+255),b
 16957                           
 16958                           ; BSR set to: 0
 16959  000FA6  BF7E               	btfsc	(Display_ProcessData@j+1)& (0+255),7,b
 16960  000FA8  D008               	goto	l789
 16961  000FAA  517E               	movf	(Display_ProcessData@j+1)& (0+255),w,b
 16962  000FAC  E105               	bnz	u8180
 16963  000FAE  0E08               	movlw	8
 16964  000FB0  5D7D               	subwf	Display_ProcessData@j& (0+255),w,b
 16965  000FB2  B0D8               	btfsc	status,0,c
 16966  000FB4  D091               	goto	u8260
 16967  000FB6  D001               	goto	l789
 16968  000FB8                     u8180:
 16969                           
 16970                           ; BSR set to: 0
 16971  000FB8  D08F               	goto	u8260
 16972  000FBA                     l789:
 16973                           
 16974                           ; BSR set to: 0
 16975                           ;display.c: 83: {
 16976                           ;display.c: 84: unsigned char LData = 0x00;
 16977                           
 16978                           ; BSR set to: 0
 16979  000FBA  0E00               	movlw	0
 16980  000FBC  6F72               	movwf	Display_ProcessData@LData& (0+255),b
 16981                           
 16982                           ;display.c: 85: for (int i = 0; i < 7; i++)
 16983  000FBE  0E00               	movlw	0
 16984  000FC0  6F80               	movwf	(Display_ProcessData@i_2676+1)& (0+255),b
 16985  000FC2  0E00               	movlw	0
 16986  000FC4  6F7F               	movwf	Display_ProcessData@i_2676& (0+255),b
 16987                           
 16988                           ; BSR set to: 0
 16989  000FC6  BF80               	btfsc	(Display_ProcessData@i_2676+1)& (0+255),7,b
 16990  000FC8  D006               	goto	l791
 16991  000FCA  5180               	movf	(Display_ProcessData@i_2676+1)& (0+255),w,b
 16992  000FCC  E171               	bnz	l792
 16993  000FCE  0E07               	movlw	7
 16994  000FD0  5D7F               	subwf	Display_ProcessData@i_2676& (0+255),w,b
 16995  000FD2  B0D8               	btfsc	status,0,c
 16996  000FD4  D06D               	goto	u8250
 16997  000FD6                     l791:
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;display.c: 86: {
 17001                           ;display.c: 87: LBit = 0x00;
 17002                           
 17003                           ; BSR set to: 0
 17004  000FD6  0E00               	movlw	0
 17005  000FD8  6F73               	movwf	Display_ProcessData@LBit& (0+255),b
 17006                           
 17007                           ; BSR set to: 0
 17008                           ;display.c: 88: if (AValues[j] >= (char)(((0x01 << 6) - 1 * 1.0f) / (7 * 1.0f)) * (i + 1
      +                          ))
 17009  000FDA  0E01               	movlw	1
 17010  000FDC  257F               	addwf	Display_ProcessData@i_2676& (0+255),w,b
 17011  000FDE  6F60               	movwf	___wmul@multiplier& (0+255),b
 17012  000FE0  0E00               	movlw	0
 17013  000FE2  2180               	addwfc	(Display_ProcessData@i_2676+1)& (0+255),w,b
 17014  000FE4  6F61               	movwf	(___wmul@multiplier+1)& (0+255),b
 17015  000FE6  0E00               	movlw	0
 17016  000FE8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17017  000FEA  0E09               	movlw	9
 17018  000FEC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 17019  000FEE  ECBA  F028         	call	___wmul	;wreg free
 17020  000FF2  0100               	movlb	0	; () banked
 17021  000FF4  517D               	movf	Display_ProcessData@j& (0+255),w,b
 17022  000FF6  256A               	addwf	Display_ProcessData@AValues& (0+255),w,b
 17023  000FF8  6ED9               	movwf	fsr2l,c
 17024  000FFA  517E               	movf	(Display_ProcessData@j+1)& (0+255),w,b
 17025  000FFC  216B               	addwfc	(Display_ProcessData@AValues+1)& (0+255),w,b
 17026  000FFE  6EDA               	movwf	fsr2h,c
 17027  001000  50DF               	movf	indf2,w,c
 17028  001002  6F6E               	movwf	??_Display_ProcessData& (0+255),b
 17029  001004  6B6F               	clrf	(??_Display_ProcessData+1)& (0+255),b
 17030  001006  5160               	movf	?___wmul& (0+255),w,b
 17031  001008  5D6E               	subwf	??_Display_ProcessData& (0+255),w,b
 17032  00100A  516F               	movf	(??_Display_ProcessData+1)& (0+255),w,b
 17033  00100C  0A80               	xorlw	128
 17034  00100E  6F70               	movwf	(??_Display_ProcessData+2)& (0+255),b
 17035  001010  5161               	movf	(?___wmul+1)& (0+255),w,b
 17036  001012  0A80               	xorlw	128
 17037  001014  5970               	subwfb	(??_Display_ProcessData+2)& (0+255),w,b
 17038  001016  A0D8               	btfss	status,0,c
 17039  001018  D002               	goto	l793
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;display.c: 89: LBit = 0x01;
 17043  00101A  0E01               	movlw	1
 17044  00101C  D034               	goto	u8230
 17045  00101E                     l793:
 17046                           
 17047                           ; BSR set to: 0
 17048                           ;display.c: 90: else
 17049                           ;display.c: 91: {
 17050                           ;display.c: 92: if (AValues[j] > (char)(((0x01 << 6) - 1 * 1.0f) / (7 * 1.0f)) * i)
 17051                           
 17052                           ; BSR set to: 0
 17053  00101E  517D               	movf	Display_ProcessData@j& (0+255),w,b
 17054  001020  256A               	addwf	Display_ProcessData@AValues& (0+255),w,b
 17055  001022  6ED9               	movwf	fsr2l,c
 17056  001024  517E               	movf	(Display_ProcessData@j+1)& (0+255),w,b
 17057  001026  216B               	addwfc	(Display_ProcessData@AValues+1)& (0+255),w,b
 17058  001028  6EDA               	movwf	fsr2h,c
 17059  00102A  50DF               	movf	indf2,w,c
 17060  00102C  6F6E               	movwf	??_Display_ProcessData& (0+255),b
 17061  00102E  6B6F               	clrf	(??_Display_ProcessData+1)& (0+255),b
 17062  001030  C07F  F060         	movff	Display_ProcessData@i_2676,___wmul@multiplier
 17063  001034  C080  F061         	movff	Display_ProcessData@i_2676+1,___wmul@multiplier+1
 17064  001038  0E00               	movlw	0
 17065  00103A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 17066  00103C  0E09               	movlw	9
 17067  00103E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 17068  001040  ECBA  F028         	call	___wmul	;wreg free
 17069  001044  0100               	movlb	0	; () banked
 17070  001046  516E               	movf	??_Display_ProcessData& (0+255),w,b
 17071  001048  5D60               	subwf	?___wmul& (0+255),w,b
 17072  00104A  5161               	movf	(?___wmul+1)& (0+255),w,b
 17073  00104C  0A80               	xorlw	128
 17074  00104E  6F70               	movwf	(??_Display_ProcessData+2)& (0+255),b
 17075  001050  516F               	movf	(??_Display_ProcessData+1)& (0+255),w,b
 17076  001052  0A80               	xorlw	128
 17077  001054  5970               	subwfb	(??_Display_ProcessData+2)& (0+255),w,b
 17078  001056  B0D8               	btfsc	status,0,c
 17079  001058  D017               	goto	l795
 17080                           
 17081                           ; BSR set to: 0
 17082                           ;display.c: 93: LBit = (unsigned char)(_Display.ValueData[j] > k);
 17083  00105A  0EC8               	movlw	low (__Display+190)
 17084  00105C  257D               	addwf	Display_ProcessData@j& (0+255),w,b
 17085  00105E  6ED9               	movwf	fsr2l,c
 17086  001060  0E02               	movlw	high (__Display+190)
 17087  001062  217E               	addwfc	(Display_ProcessData@j+1)& (0+255),w,b
 17088  001064  6EDA               	movwf	fsr2h,c
 17089  001066  50DF               	movf	indf2,w,c
 17090  001068  6F6E               	movwf	??_Display_ProcessData& (0+255),b
 17091  00106A  6B6F               	clrf	(??_Display_ProcessData+1)& (0+255),b
 17092  00106C  516E               	movf	??_Display_ProcessData& (0+255),w,b
 17093  00106E  5D75               	subwf	Display_ProcessData@k& (0+255),w,b
 17094  001070  5176               	movf	(Display_ProcessData@k+1)& (0+255),w,b
 17095  001072  0A80               	xorlw	128
 17096  001074  6F70               	movwf	(??_Display_ProcessData+2)& (0+255),b
 17097  001076  516F               	movf	(??_Display_ProcessData+1)& (0+255),w,b
 17098  001078  0A80               	xorlw	128
 17099  00107A  5970               	subwfb	(??_Display_ProcessData+2)& (0+255),w,b
 17100  00107C  B0D8               	btfsc	status,0,c
 17101  00107E  D002               	goto	u8220
 17102  001080  0E01               	movlw	1
 17103  001082  D001               	goto	u8230
 17104  001084                     u8220:
 17105  001084  0E00               	movlw	0
 17106  001086                     u8230:
 17107  001086  6F73               	movwf	Display_ProcessData@LBit& (0+255),b
 17108  001088                     l795:
 17109                           
 17110                           ; BSR set to: 0
 17111                           ;display.c: 94: }
 17112                           ;display.c: 95: LData |= LBit << i;
 17113                           
 17114                           ; BSR set to: 0
 17115                           
 17116                           ; BSR set to: 0
 17117  001088  C07F  F06E         	movff	Display_ProcessData@i_2676,??_Display_ProcessData
 17118  00108C  C073  F06F         	movff	Display_ProcessData@LBit,??_Display_ProcessData+1
 17119  001090  2B6E               	incf	??_Display_ProcessData& (0+255),f,b
 17120  001092  D002               	goto	u8244
 17121  001094                     u8245:
 17122  001094  90D8               	bcf	status,0,c
 17123  001096  376F               	rlcf	(??_Display_ProcessData+1)& (0+255),f,b
 17124  001098                     u8244:
 17125  001098  2F6E               	decfsz	??_Display_ProcessData& (0+255),f,b
 17126  00109A  D7FC               	goto	u8245
 17127  00109C  0100               	movlb	0	; () banked
 17128  00109E  516F               	movf	(??_Display_ProcessData+1)& (0+255),w,b
 17129  0010A0  1372               	iorwf	Display_ProcessData@LData& (0+255),f,b
 17130                           
 17131                           ; BSR set to: 0
 17132  0010A2  4B7F               	infsnz	Display_ProcessData@i_2676& (0+255),f,b
 17133  0010A4  2B80               	incf	(Display_ProcessData@i_2676+1)& (0+255),f,b
 17134                           
 17135                           ; BSR set to: 0
 17136  0010A6  BF80               	btfsc	(Display_ProcessData@i_2676+1)& (0+255),7,b
 17137  0010A8  D796               	goto	l791
 17138  0010AA  5180               	movf	(Display_ProcessData@i_2676+1)& (0+255),w,b
 17139  0010AC  E101               	bnz	l7103
 17140  0010AE  D78F               	goto	L18
 17141  0010B0                     u8250:
 17142  0010B0                     l792:
 17143  0010B0                     l7103:
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;display.c: 96: }
 17147                           ;display.c: 97: *(_Display.SecondaryBuffer + iDataIndex) = LData;
 17148  0010B0  5174               	movf	Display_ProcessData@iDataIndex& (0+255),w,b
 17149  0010B2  0D01               	mullw	1
 17150  0010B4  50F3               	movf	prodl,w,c
 17151  0010B6  0102               	movlb	2	; () banked
 17152  0010B8  25C2               	addwf	(__Display+184)& (0+255),w,b
 17153  0010BA  6ED9               	movwf	fsr2l,c
 17154  0010BC  50F4               	movf	prodh,w,c
 17155  0010BE  21C3               	addwfc	(__Display+185)& (0+255),w,b
 17156  0010C0  6EDA               	movwf	fsr2h,c
 17157  0010C2  C072  FFDF         	movff	Display_ProcessData@LData,indf2
 17158                           
 17159                           ; BSR set to: 2
 17160                           ;display.c: 98: iDataIndex++;
 17161  0010C6  0100               	movlb	0	; () banked
 17162  0010C8  2B74               	incf	Display_ProcessData@iDataIndex& (0+255),f,b
 17163                           
 17164                           ; BSR set to: 0
 17165  0010CA  4B7D               	infsnz	Display_ProcessData@j& (0+255),f,b
 17166  0010CC  2B7E               	incf	(Display_ProcessData@j+1)& (0+255),f,b
 17167                           
 17168                           ; BSR set to: 0
 17169  0010CE  BF7E               	btfsc	(Display_ProcessData@j+1)& (0+255),7,b
 17170  0010D0  D774               	goto	l789
 17171  0010D2  517E               	movf	(Display_ProcessData@j+1)& (0+255),w,b
 17172  0010D4  E101               	bnz	l7111
 17173  0010D6  D76B               	goto	L19
 17174  0010D8                     u8260:
 17175  0010D8                     l7111:
 17176                           
 17177                           ; BSR set to: 0
 17178  0010D8  4B75               	infsnz	Display_ProcessData@k& (0+255),f,b
 17179  0010DA  2B76               	incf	(Display_ProcessData@k+1)& (0+255),f,b
 17180                           
 17181                           ; BSR set to: 0
 17182  0010DC  BF76               	btfsc	(Display_ProcessData@k+1)& (0+255),7,b
 17183  0010DE  D73A               	goto	l785
 17184  0010E0  5176               	movf	(Display_ProcessData@k+1)& (0+255),w,b
 17185  0010E2  E101               	bnz	l7115
 17186  0010E4  D731               	goto	L20
 17187  0010E6                     u8270:
 17188  0010E6                     l7115:
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;display.c: 99: }
 17192                           ;display.c: 100: }
 17193                           ;display.c: 101: _Display.ReadyToRead = 1;
 17194  0010E6  0E01               	movlw	1
 17195  0010E8  0102               	movlb	2	; () banked
 17196  0010EA  6F0A               	movwf	__Display& (0+255),b
 17197                           
 17198                           ;display.c: 102: _Display.ReadyToWrite = 0;
 17199  0010EC  0E00               	movlw	0
 17200  0010EE  6F0B               	movwf	(__Display+1)& (0+255),b
 17201  0010F0  0012               	return	
 17202  0010F2                     __end_of_Display_ProcessData:
 17203                           	opt stack 0
 17204                           tosu	equ	0xFFF
 17205                           tosh	equ	0xFFE
 17206                           tosl	equ	0xFFD
 17207                           pclath	equ	0xFFA
 17208                           tblptru	equ	0xFF8
 17209                           tblptrh	equ	0xFF7
 17210                           tblptrl	equ	0xFF6
 17211                           tablat	equ	0xFF5
 17212                           prodh	equ	0xFF4
 17213                           prodl	equ	0xFF3
 17214                           intcon	equ	0xFF2
 17215                           indf0	equ	0xFEF
 17216                           postinc0	equ	0xFEE
 17217                           plusw0	equ	0xFEB
 17218                           fsr0h	equ	0xFEA
 17219                           fsr0l	equ	0xFE9
 17220                           wreg	equ	0xFE8
 17221                           indf1	equ	0xFE7
 17222                           postinc1	equ	0xFE6
 17223                           postdec1	equ	0xFE5
 17224                           plusw1	equ	0xFE3
 17225                           fsr1h	equ	0xFE2
 17226                           fsr1l	equ	0xFE1
 17227                           indf2	equ	0xFDF
 17228                           postinc2	equ	0xFDE
 17229                           postdec2	equ	0xFDD
 17230                           plusw2	equ	0xFDB
 17231                           fsr2h	equ	0xFDA
 17232                           fsr2l	equ	0xFD9
 17233                           status	equ	0xFD8
 17234                           
 17235 ;; *************** function ___lbmod *****************
 17236 ;; Defined at:
 17237 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbmod.c"
 17238 ;; Parameters:    Size  Location     Type
 17239 ;;  dividend        1    wreg     unsigned char 
 17240 ;;  divisor         1    0[BANK0 ] unsigned char 
 17241 ;; Auto vars:     Size  Location     Type
 17242 ;;  dividend        1    1[BANK0 ] unsigned char 
 17243 ;;  rem             1    3[BANK0 ] unsigned char 
 17244 ;;  counter         1    2[BANK0 ] unsigned char 
 17245 ;; Return value:  Size  Location     Type
 17246 ;;                  1    wreg      unsigned char 
 17247 ;; Registers used:
 17248 ;;		wreg, status,2, status,0
 17249 ;; Tracked objects:
 17250 ;;		On entry : 0/0
 17251 ;;		On exit  : 0/0
 17252 ;;		Unchanged: 0/0
 17253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17254 ;;      Params:         0       1       0       0       0       0       0       0       0
 17255 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17257 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17258 ;;Total ram usage:        4 bytes
 17259 ;; Hardware stack levels used:    1
 17260 ;; Hardware stack levels required when called:    7
 17261 ;; This function calls:
 17262 ;;		Nothing
 17263 ;; This function is called by:
 17264 ;;		_Display_ProcessData
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           	psect	text85
 17269  00511E                     __ptext85:
 17270                           	opt stack 0
 17271  00511E                     ___lbmod:
 17272                           	opt stack 21
 17273                           
 17274                           ; BSR set to: 2
 17275                           ;incstack = 0
 17276                           ;___lbmod@dividend stored from wreg
 17277  00511E  0100               	movlb	0	; () banked
 17278  005120  6F61               	movwf	___lbmod@dividend& (0+255),b
 17279  005122  0E08               	movlw	8
 17280  005124  0100               	movlb	0	; () banked
 17281  005126  6F62               	movwf	___lbmod@counter& (0+255),b
 17282  005128  0E00               	movlw	0
 17283  00512A  6F63               	movwf	___lbmod@rem& (0+255),b
 17284  00512C                     
 17285                           ; BSR set to: 0
 17286                           
 17287                           ; BSR set to: 0
 17288  00512C  90D8               	bcf	status,0,c
 17289  00512E  3561               	rlcf	___lbmod@dividend& (0+255),w,b
 17290  005130  3563               	rlcf	___lbmod@rem& (0+255),w,b
 17291  005132  6F63               	movwf	___lbmod@rem& (0+255),b
 17292                           
 17293                           ; BSR set to: 0
 17294  005134  90D8               	bcf	status,0,c
 17295  005136  3761               	rlcf	___lbmod@dividend& (0+255),f,b
 17296                           
 17297                           ; BSR set to: 0
 17298  005138  5160               	movf	___lbmod@divisor& (0+255),w,b
 17299  00513A  5D63               	subwf	___lbmod@rem& (0+255),w,b
 17300  00513C  A0D8               	btfss	status,0,c
 17301  00513E  D002               	goto	l1655
 17302                           
 17303                           ; BSR set to: 0
 17304  005140  5160               	movf	___lbmod@divisor& (0+255),w,b
 17305  005142  5F63               	subwf	___lbmod@rem& (0+255),f,b
 17306  005144                     l1655:
 17307                           
 17308                           ; BSR set to: 0
 17309                           
 17310                           ; BSR set to: 0
 17311  005144  2F62               	decfsz	___lbmod@counter& (0+255),f,b
 17312  005146  D7F2               	goto	l1654
 17313                           
 17314                           ; BSR set to: 0
 17315                           
 17316                           ; BSR set to: 0
 17317  005148  5163               	movf	___lbmod@rem& (0+255),w,b
 17318  00514A  0012               	return	
 17319  00514C                     __end_of___lbmod:
 17320                           	opt stack 0
 17321                           tosu	equ	0xFFF
 17322                           tosh	equ	0xFFE
 17323                           tosl	equ	0xFFD
 17324                           pclath	equ	0xFFA
 17325                           tblptru	equ	0xFF8
 17326                           tblptrh	equ	0xFF7
 17327                           tblptrl	equ	0xFF6
 17328                           tablat	equ	0xFF5
 17329                           prodh	equ	0xFF4
 17330                           prodl	equ	0xFF3
 17331                           intcon	equ	0xFF2
 17332                           indf0	equ	0xFEF
 17333                           postinc0	equ	0xFEE
 17334                           plusw0	equ	0xFEB
 17335                           fsr0h	equ	0xFEA
 17336                           fsr0l	equ	0xFE9
 17337                           wreg	equ	0xFE8
 17338                           indf1	equ	0xFE7
 17339                           postinc1	equ	0xFE6
 17340                           postdec1	equ	0xFE5
 17341                           plusw1	equ	0xFE3
 17342                           fsr1h	equ	0xFE2
 17343                           fsr1l	equ	0xFE1
 17344                           indf2	equ	0xFDF
 17345                           postinc2	equ	0xFDE
 17346                           postdec2	equ	0xFDD
 17347                           plusw2	equ	0xFDB
 17348                           fsr2h	equ	0xFDA
 17349                           fsr2l	equ	0xFD9
 17350                           status	equ	0xFD8
 17351                           
 17352 ;; *************** function ___lbdiv *****************
 17353 ;; Defined at:
 17354 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lbdiv.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;  dividend        1    wreg     unsigned char 
 17357 ;;  divisor         1    0[BANK0 ] unsigned char 
 17358 ;; Auto vars:     Size  Location     Type
 17359 ;;  dividend        1    1[BANK0 ] unsigned char 
 17360 ;;  quotient        1    3[BANK0 ] unsigned char 
 17361 ;;  counter         1    2[BANK0 ] unsigned char 
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  1    wreg      unsigned char 
 17364 ;; Registers used:
 17365 ;;		wreg, status,2, status,0
 17366 ;; Tracked objects:
 17367 ;;		On entry : 0/0
 17368 ;;		On exit  : 0/0
 17369 ;;		Unchanged: 0/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17371 ;;      Params:         0       1       0       0       0       0       0       0       0
 17372 ;;      Locals:         0       3       0       0       0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17374 ;;      Totals:         0       4       0       0       0       0       0       0       0
 17375 ;;Total ram usage:        4 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:    7
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		_Display_ProcessData
 17382 ;; This function uses a non-reentrant model
 17383 ;;
 17384                           
 17385                           	psect	text86
 17386  004F04                     __ptext86:
 17387                           	opt stack 0
 17388  004F04                     ___lbdiv:
 17389                           	opt stack 21
 17390                           
 17391                           ; BSR set to: 0
 17392                           ;incstack = 0
 17393                           ;___lbdiv@dividend stored from wreg
 17394  004F04  0100               	movlb	0	; () banked
 17395  004F06  6F61               	movwf	___lbdiv@dividend& (0+255),b
 17396  004F08  0E00               	movlw	0
 17397  004F0A  0100               	movlb	0	; () banked
 17398  004F0C  6F63               	movwf	___lbdiv@quotient& (0+255),b
 17399                           
 17400                           ; BSR set to: 0
 17401  004F0E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17402  004F10  B4D8               	btfsc	status,2,c
 17403  004F12  D015               	goto	l1650
 17404                           
 17405                           ; BSR set to: 0
 17406  004F14  0E01               	movlw	1
 17407  004F16  6F62               	movwf	___lbdiv@counter& (0+255),b
 17408  004F18  D003               	goto	l1645
 17409  004F1A                     
 17410                           ; BSR set to: 0
 17411                           
 17412                           ; BSR set to: 0
 17413  004F1A  90D8               	bcf	status,0,c
 17414  004F1C  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 17415                           
 17416                           ; BSR set to: 0
 17417  004F1E  2B62               	incf	___lbdiv@counter& (0+255),f,b
 17418  004F20                     l1645:
 17419                           
 17420                           ; BSR set to: 0
 17421                           
 17422                           ; BSR set to: 0
 17423  004F20  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 17424  004F22  D7FB               	goto	l1646
 17425  004F24                     u7780:
 17426                           
 17427                           ; BSR set to: 0
 17428                           
 17429                           ; BSR set to: 0
 17430                           
 17431                           ; BSR set to: 0
 17432  004F24  90D8               	bcf	status,0,c
 17433  004F26  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 17434  004F28  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17435  004F2A  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 17436  004F2C  A0D8               	btfss	status,0,c
 17437  004F2E  D003               	goto	l1649
 17438                           
 17439                           ; BSR set to: 0
 17440  004F30  5160               	movf	___lbdiv@divisor& (0+255),w,b
 17441  004F32  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 17442                           
 17443                           ; BSR set to: 0
 17444  004F34  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 17445  004F36                     l1649:
 17446                           
 17447                           ; BSR set to: 0
 17448                           
 17449                           ; BSR set to: 0
 17450  004F36  90D8               	bcf	status,0,c
 17451  004F38  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 17452                           
 17453                           ; BSR set to: 0
 17454  004F3A  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 17455  004F3C  D7F3               	goto	u7780
 17456  004F3E                     l1650:
 17457                           
 17458                           ; BSR set to: 0
 17459                           
 17460                           ; BSR set to: 0
 17461                           
 17462                           ; BSR set to: 0
 17463  004F3E  5163               	movf	___lbdiv@quotient& (0+255),w,b
 17464  004F40  0012               	return	
 17465  004F42                     __end_of___lbdiv:
 17466                           	opt stack 0
 17467                           tosu	equ	0xFFF
 17468                           tosh	equ	0xFFE
 17469                           tosl	equ	0xFFD
 17470                           pclath	equ	0xFFA
 17471                           tblptru	equ	0xFF8
 17472                           tblptrh	equ	0xFF7
 17473                           tblptrl	equ	0xFF6
 17474                           tablat	equ	0xFF5
 17475                           prodh	equ	0xFF4
 17476                           prodl	equ	0xFF3
 17477                           intcon	equ	0xFF2
 17478                           indf0	equ	0xFEF
 17479                           postinc0	equ	0xFEE
 17480                           plusw0	equ	0xFEB
 17481                           fsr0h	equ	0xFEA
 17482                           fsr0l	equ	0xFE9
 17483                           wreg	equ	0xFE8
 17484                           indf1	equ	0xFE7
 17485                           postinc1	equ	0xFE6
 17486                           postdec1	equ	0xFE5
 17487                           plusw1	equ	0xFE3
 17488                           fsr1h	equ	0xFE2
 17489                           fsr1l	equ	0xFE1
 17490                           indf2	equ	0xFDF
 17491                           postinc2	equ	0xFDE
 17492                           postdec2	equ	0xFDD
 17493                           plusw2	equ	0xFDB
 17494                           fsr2h	equ	0xFDA
 17495                           fsr2l	equ	0xFD9
 17496                           status	equ	0xFD8
 17497                           
 17498 ;; *************** function ___awmod *****************
 17499 ;; Defined at:
 17500 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  dividend        2    4[BANK0 ] int 
 17503 ;;  divisor         2    6[BANK0 ] int 
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;  sign            1    9[BANK0 ] unsigned char 
 17506 ;;  counter         1    8[BANK0 ] unsigned char 
 17507 ;; Return value:  Size  Location     Type
 17508 ;;                  2    4[BANK0 ] int 
 17509 ;; Registers used:
 17510 ;;		wreg, status,2, status,0
 17511 ;; Tracked objects:
 17512 ;;		On entry : 0/0
 17513 ;;		On exit  : 0/0
 17514 ;;		Unchanged: 0/0
 17515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17516 ;;      Params:         0       4       0       0       0       0       0       0       0
 17517 ;;      Locals:         0       2       0       0       0       0       0       0       0
 17518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17519 ;;      Totals:         0       6       0       0       0       0       0       0       0
 17520 ;;Total ram usage:        6 bytes
 17521 ;; Hardware stack levels used:    1
 17522 ;; Hardware stack levels required when called:    7
 17523 ;; This function calls:
 17524 ;;		Nothing
 17525 ;; This function is called by:
 17526 ;;		_Display_ProcessData
 17527 ;; This function uses a non-reentrant model
 17528 ;;
 17529                           
 17530                           	psect	text87
 17531  00472C                     __ptext87:
 17532                           	opt stack 0
 17533  00472C                     ___awmod:
 17534                           	opt stack 21
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;incstack = 0
 17538  00472C  0E00               	movlw	0
 17539  00472E  0100               	movlb	0	; () banked
 17540  004730  6F69               	movwf	___awmod@sign& (0+255),b
 17541                           
 17542                           ; BSR set to: 0
 17543  004732  AF65               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17544  004734  D006               	goto	l1496
 17545                           
 17546                           ; BSR set to: 0
 17547  004736  6D64               	negf	___awmod@dividend& (0+255),b
 17548  004738  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 17549  00473A  B0D8               	btfsc	status,0,c
 17550  00473C  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 17551                           
 17552                           ; BSR set to: 0
 17553  00473E  0E01               	movlw	1
 17554  004740  6F69               	movwf	___awmod@sign& (0+255),b
 17555  004742                     l1496:
 17556                           
 17557                           ; BSR set to: 0
 17558                           
 17559                           ; BSR set to: 0
 17560  004742  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17561  004744  D004               	goto	l1497
 17562                           
 17563                           ; BSR set to: 0
 17564  004746  6D66               	negf	___awmod@divisor& (0+255),b
 17565  004748  1F67               	comf	(___awmod@divisor+1)& (0+255),f,b
 17566  00474A  B0D8               	btfsc	status,0,c
 17567  00474C  2B67               	incf	(___awmod@divisor+1)& (0+255),f,b
 17568  00474E                     l1497:
 17569                           
 17570                           ; BSR set to: 0
 17571                           
 17572                           ; BSR set to: 0
 17573  00474E  5166               	movf	___awmod@divisor& (0+255),w,b
 17574  004750  1167               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17575  004752  B4D8               	btfsc	status,2,c
 17576  004754  D018               	goto	l1504
 17577                           
 17578                           ; BSR set to: 0
 17579  004756  0E01               	movlw	1
 17580  004758  6F68               	movwf	___awmod@counter& (0+255),b
 17581  00475A  D004               	goto	l1499
 17582  00475C                     
 17583                           ; BSR set to: 0
 17584                           
 17585                           ; BSR set to: 0
 17586  00475C  90D8               	bcf	status,0,c
 17587  00475E  3766               	rlcf	___awmod@divisor& (0+255),f,b
 17588  004760  3767               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17589  004762  2B68               	incf	___awmod@counter& (0+255),f,b
 17590  004764                     l1499:
 17591                           
 17592                           ; BSR set to: 0
 17593                           
 17594                           ; BSR set to: 0
 17595  004764  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17596  004766  D7FA               	goto	l1500
 17597  004768                     u7740:
 17598                           
 17599                           ; BSR set to: 0
 17600                           
 17601                           ; BSR set to: 0
 17602                           
 17603                           ; BSR set to: 0
 17604  004768  5166               	movf	___awmod@divisor& (0+255),w,b
 17605  00476A  5D64               	subwf	___awmod@dividend& (0+255),w,b
 17606  00476C  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 17607  00476E  5965               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17608  004770  A0D8               	btfss	status,0,c
 17609  004772  D004               	goto	l1503
 17610                           
 17611                           ; BSR set to: 0
 17612  004774  5166               	movf	___awmod@divisor& (0+255),w,b
 17613  004776  5F64               	subwf	___awmod@dividend& (0+255),f,b
 17614  004778  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 17615  00477A  5B65               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17616  00477C                     l1503:
 17617                           
 17618                           ; BSR set to: 0
 17619                           
 17620                           ; BSR set to: 0
 17621  00477C  90D8               	bcf	status,0,c
 17622  00477E  3367               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17623  004780  3366               	rrcf	___awmod@divisor& (0+255),f,b
 17624                           
 17625                           ; BSR set to: 0
 17626  004782  2F68               	decfsz	___awmod@counter& (0+255),f,b
 17627  004784  D7F1               	goto	u7740
 17628  004786                     l1504:
 17629                           
 17630                           ; BSR set to: 0
 17631                           
 17632                           ; BSR set to: 0
 17633                           
 17634                           ; BSR set to: 0
 17635  004786  5169               	movf	___awmod@sign& (0+255),w,b
 17636  004788  B4D8               	btfsc	status,2,c
 17637  00478A  D004               	goto	l1505
 17638                           
 17639                           ; BSR set to: 0
 17640  00478C  6D64               	negf	___awmod@dividend& (0+255),b
 17641  00478E  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 17642  004790  B0D8               	btfsc	status,0,c
 17643  004792  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 17644  004794                     l1505:
 17645                           
 17646                           ; BSR set to: 0
 17647                           
 17648                           ; BSR set to: 0
 17649  004794  C064  F064         	movff	___awmod@dividend,?___awmod
 17650  004798  C065  F065         	movff	___awmod@dividend+1,?___awmod+1
 17651  00479C  0012               	return	
 17652  00479E                     __end_of___awmod:
 17653                           	opt stack 0
 17654                           tosu	equ	0xFFF
 17655                           tosh	equ	0xFFE
 17656                           tosl	equ	0xFFD
 17657                           pclath	equ	0xFFA
 17658                           tblptru	equ	0xFF8
 17659                           tblptrh	equ	0xFF7
 17660                           tblptrl	equ	0xFF6
 17661                           tablat	equ	0xFF5
 17662                           prodh	equ	0xFF4
 17663                           prodl	equ	0xFF3
 17664                           intcon	equ	0xFF2
 17665                           indf0	equ	0xFEF
 17666                           postinc0	equ	0xFEE
 17667                           plusw0	equ	0xFEB
 17668                           fsr0h	equ	0xFEA
 17669                           fsr0l	equ	0xFE9
 17670                           wreg	equ	0xFE8
 17671                           indf1	equ	0xFE7
 17672                           postinc1	equ	0xFE6
 17673                           postdec1	equ	0xFE5
 17674                           plusw1	equ	0xFE3
 17675                           fsr1h	equ	0xFE2
 17676                           fsr1l	equ	0xFE1
 17677                           indf2	equ	0xFDF
 17678                           postinc2	equ	0xFDE
 17679                           postdec2	equ	0xFDD
 17680                           plusw2	equ	0xFDB
 17681                           fsr2h	equ	0xFDA
 17682                           fsr2l	equ	0xFD9
 17683                           status	equ	0xFD8
 17684                           
 17685 ;; *************** function _Display_Init *****************
 17686 ;; Defined at:
 17687 ;;		line 6 in file "display.c"
 17688 ;; Parameters:    Size  Location     Type
 17689 ;;		None
 17690 ;; Auto vars:     Size  Location     Type
 17691 ;;  i               2  115[BANK0 ] int 
 17692 ;;  i               2  113[BANK0 ] int 
 17693 ;; Return value:  Size  Location     Type
 17694 ;;                  1    wreg      void 
 17695 ;; Registers used:
 17696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17697 ;; Tracked objects:
 17698 ;;		On entry : 0/0
 17699 ;;		On exit  : 0/0
 17700 ;;		Unchanged: 0/0
 17701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17702 ;;      Params:         0       0       0       0       0       0       0       0       0
 17703 ;;      Locals:         0      10       0       0       0       0       0       0       0
 17704 ;;      Temps:          0       2       0       0       0       0       0       0       0
 17705 ;;      Totals:         0      12       0       0       0       0       0       0       0
 17706 ;;Total ram usage:       12 bytes
 17707 ;; Hardware stack levels used:    1
 17708 ;; Hardware stack levels required when called:   12
 17709 ;; This function calls:
 17710 ;;		_InitConnector
 17711 ;;		___awtoft
 17712 ;;		___fttol
 17713 ;;		_pow
 17714 ;; This function is called by:
 17715 ;;		_InitApp
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text88
 17720  002268                     __ptext88:
 17721                           	opt stack 0
 17722  002268                     _Display_Init:
 17723                           	opt stack 17
 17724                           
 17725                           ;display.c: 8: TRISA5 = 0;
 17726                           
 17727                           ; BSR set to: 0
 17728                           ;incstack = 0
 17729  002268  9A92               	bcf	3986,5,c	;volatile
 17730                           
 17731                           ;display.c: 9: TRISC2 = 0;
 17732  00226A  9494               	bcf	3988,2,c	;volatile
 17733                           
 17734                           ;display.c: 10: TRISB4 = 0;
 17735  00226C  9893               	bcf	3987,4,c	;volatile
 17736                           
 17737                           ;display.c: 12: _Display.IO.ClockPin.Write = &Display_ClockWrite;
 17738  00226E  0E6A               	movlw	low _Display_ClockWrite
 17739  002270  0102               	movlb	2	; () banked
 17740  002272  6FD6               	movwf	(__Display+204)& (0+255),b
 17741  002274  0E54               	movlw	high _Display_ClockWrite
 17742  002276  6FD7               	movwf	(__Display+205)& (0+255),b
 17743                           
 17744                           ;display.c: 13: _Display.IO.DataPin.Write = &Display_DataWrite;
 17745  002278  0E52               	movlw	low _Display_DataWrite
 17746  00227A  6FDA               	movwf	(__Display+208)& (0+255),b
 17747  00227C  0E54               	movlw	high _Display_DataWrite
 17748  00227E  6FDB               	movwf	(__Display+209)& (0+255),b
 17749                           
 17750                           ;display.c: 14: _Display.IO.LatchPin.Write = &Display_LatchWrite;
 17751  002280  0E3A               	movlw	low _Display_LatchWrite
 17752  002282  6FDE               	movwf	(__Display+212)& (0+255),b
 17753  002284  0E54               	movlw	high _Display_LatchWrite
 17754  002286  6FDF               	movwf	(__Display+213)& (0+255),b
 17755                           
 17756                           ; BSR set to: 2
 17757                           ;display.c: 15: InitConnector(&_Display.IO);
 17758  002288  0ED4               	movlw	low (__Display+202)
 17759  00228A  0100               	movlb	0	; () banked
 17760  00228C  6F62               	movwf	InitConnector@AConnector& (0+255),b
 17761  00228E  0E02               	movlw	high (__Display+202)
 17762  002290  6F63               	movwf	(InitConnector@AConnector+1)& (0+255),b
 17763  002292  EC2F  F028         	call	_InitConnector	;wreg free
 17764                           
 17765                           ;display.c: 17: _Display.SavingMask = 0xFF;
 17766  002296  0102               	movlb	2	; () banked
 17767  002298  69D1               	setf	(__Display+199)& (0+255),b
 17768                           
 17769                           ; BSR set to: 2
 17770                           ;display.c: 18: _Display.iDisplay = 0;
 17771  00229A  0E00               	movlw	0
 17772  00229C  6FD0               	movwf	(__Display+198)& (0+255),b
 17773                           
 17774                           ; BSR set to: 2
 17775                           ;display.c: 20: _Display.ReadyToWrite = 1;
 17776  00229E  0E01               	movlw	1
 17777  0022A0  6F0B               	movwf	(__Display+1)& (0+255),b
 17778                           
 17779                           ; BSR set to: 2
 17780                           ;display.c: 21: _Display.ReadyToRead = 0;
 17781  0022A2  0E00               	movlw	0
 17782  0022A4  6F0A               	movwf	__Display& (0+255),b
 17783                           
 17784                           ; BSR set to: 2
 17785                           ;display.c: 23: _Display.PrimaryBuffer = (unsigned char*)_Display.Buffer1;
 17786  0022A6  0E0C               	movlw	low (__Display+2)
 17787  0022A8  6FC0               	movwf	(__Display+182)& (0+255),b
 17788  0022AA  0E02               	movlw	high (__Display+2)
 17789  0022AC  6FC1               	movwf	(__Display+183)& (0+255),b
 17790                           
 17791                           ; BSR set to: 2
 17792                           ;display.c: 24: _Display.SecondaryBuffer = (unsigned char*)_Display.Buffer2;
 17793  0022AE  0E66               	movlw	low (__Display+92)
 17794  0022B0  6FC2               	movwf	(__Display+184)& (0+255),b
 17795  0022B2  0E02               	movlw	high (__Display+92)
 17796  0022B4  6FC3               	movwf	(__Display+185)& (0+255),b
 17797                           
 17798                           ; BSR set to: 2
 17799                           ;display.c: 26: for (int i = 0; i < (char)(((0x01 << 6) - 1 * 1.0f) / (7 * 1.0f)) * (2 +
      +                           8); i++)
 17800  0022B6  0E00               	movlw	0
 17801  0022B8  0100               	movlb	0	; () banked
 17802  0022BA  6FD2               	movwf	(Display_Init@i+1)& (0+255),b
 17803  0022BC  0E00               	movlw	0
 17804  0022BE  6FD1               	movwf	Display_Init@i& (0+255),b
 17805  0022C0                     l7171:
 17806                           
 17807                           ; BSR set to: 0
 17808  0022C0  BFD2               	btfsc	(Display_Init@i+1)& (0+255),7,b
 17809  0022C2  D006               	goto	l762
 17810  0022C4  51D2               	movf	(Display_Init@i+1)& (0+255),w,b
 17811  0022C6  E11F               	bnz	l7181
 17812  0022C8  0E5A               	movlw	90
 17813  0022CA  5DD1               	subwf	Display_Init@i& (0+255),w,b
 17814  0022CC  B0D8               	btfsc	status,0,c
 17815  0022CE  D01B               	goto	u8310
 17816  0022D0                     l762:
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;display.c: 27: {
 17820                           ;display.c: 28: *(_Display.PrimaryBuffer + i) = 0x00;
 17821                           
 17822                           ; BSR set to: 0
 17823  0022D0  51D1               	movf	Display_Init@i& (0+255),w,b
 17824  0022D2  0102               	movlb	2	; () banked
 17825  0022D4  25C0               	addwf	(__Display+182)& (0+255),w,b
 17826  0022D6  6ED9               	movwf	fsr2l,c
 17827  0022D8  0100               	movlb	0	; () banked
 17828  0022DA  51D2               	movf	(Display_Init@i+1)& (0+255),w,b
 17829  0022DC  0102               	movlb	2	; () banked
 17830  0022DE  21C1               	addwfc	(__Display+183)& (0+255),w,b
 17831  0022E0  6EDA               	movwf	fsr2h,c
 17832  0022E2  0E00               	movlw	0
 17833  0022E4  6EDF               	movwf	indf2,c
 17834                           
 17835                           ;display.c: 29: *(_Display.SecondaryBuffer + i) = 0x00;
 17836  0022E6  0100               	movlb	0	; () banked
 17837  0022E8  51D1               	movf	Display_Init@i& (0+255),w,b
 17838  0022EA  0102               	movlb	2	; () banked
 17839  0022EC  25C2               	addwf	(__Display+184)& (0+255),w,b
 17840  0022EE  6ED9               	movwf	fsr2l,c
 17841  0022F0  0100               	movlb	0	; () banked
 17842  0022F2  51D2               	movf	(Display_Init@i+1)& (0+255),w,b
 17843  0022F4  0102               	movlb	2	; () banked
 17844  0022F6  21C3               	addwfc	(__Display+185)& (0+255),w,b
 17845  0022F8  6EDA               	movwf	fsr2h,c
 17846  0022FA  0E00               	movlw	0
 17847  0022FC  6EDF               	movwf	indf2,c
 17848                           
 17849                           ; BSR set to: 2
 17850  0022FE  0100               	movlb	0	; () banked
 17851  002300  4BD1               	infsnz	Display_Init@i& (0+255),f,b
 17852  002302  2BD2               	incf	(Display_Init@i+1)& (0+255),f,b
 17853  002304  D7DD               	goto	l7171
 17854  002306                     u8310:
 17855  002306                     l7181:
 17856                           
 17857                           ; BSR set to: 0
 17858                           ;display.c: 30: }
 17859                           ;display.c: 32: for(int i = 0; i < 2; i++)
 17860  002306  0E00               	movlw	0
 17861  002308  6FD4               	movwf	(Display_Init@i_2656+1)& (0+255),b
 17862  00230A  0E00               	movlw	0
 17863  00230C  6FD3               	movwf	Display_Init@i_2656& (0+255),b
 17864  00230E                     l7183:
 17865                           
 17866                           ; BSR set to: 0
 17867  00230E  BFD4               	btfsc	(Display_Init@i_2656+1)& (0+255),7,b
 17868  002310  D006               	goto	l764
 17869  002312  51D4               	movf	(Display_Init@i_2656+1)& (0+255),w,b
 17870  002314  E147               	bnz	l766
 17871  002316  0E02               	movlw	2
 17872  002318  5DD3               	subwf	Display_Init@i_2656& (0+255),w,b
 17873  00231A  B0D8               	btfsc	status,0,c
 17874  00231C  0012               	return	
 17875  00231E                     l764:
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;display.c: 33: _Display.DigitalValueRatio[i] = 2 * (int)pow(10, 2 - i - 1);
 17879                           
 17880                           ; BSR set to: 0
 17881  00231E  0E01               	movlw	1
 17882  002320  25D3               	addwf	Display_Init@i_2656& (0+255),w,b
 17883  002322  6FC9               	movwf	??_Display_Init& (0+255),b
 17884  002324  0E00               	movlw	0
 17885  002326  21D4               	addwfc	(Display_Init@i_2656+1)& (0+255),w,b
 17886  002328  6FCA               	movwf	(??_Display_Init+1)& (0+255),b
 17887  00232A  1FC9               	comf	??_Display_Init& (0+255),f,b
 17888  00232C  1FCA               	comf	(??_Display_Init+1)& (0+255),f,b
 17889  00232E  4BC9               	infsnz	??_Display_Init& (0+255),f,b
 17890  002330  2BCA               	incf	(??_Display_Init+1)& (0+255),f,b
 17891  002332  0E02               	movlw	2
 17892  002334  25C9               	addwf	??_Display_Init& (0+255),w,b
 17893  002336  6F68               	movwf	___awtoft@c& (0+255),b
 17894  002338  0E00               	movlw	0
 17895  00233A  21CA               	addwfc	(??_Display_Init+1)& (0+255),w,b
 17896  00233C  6F69               	movwf	(___awtoft@c+1)& (0+255),b
 17897  00233E  ECDB  F027         	call	___awtoft	;wreg free
 17898  002342  C068  F0CB         	movff	?___awtoft,_Display_Init$4455
 17899  002346  C069  F0CC         	movff	?___awtoft+1,_Display_Init$4455+1
 17900  00234A  C06A  F0CD         	movff	?___awtoft+2,_Display_Init$4455+2
 17901                           
 17902                           ;display.c: 33: _Display.DigitalValueRatio[i] = 2 * (int)pow(10, 2 - i - 1);
 17903  00234E  C0CB  F0BB         	movff	_Display_Init$4455,pow@y
 17904  002352  C0CC  F0BC         	movff	_Display_Init$4455+1,pow@y+1
 17905  002356  C0CD  F0BD         	movff	_Display_Init$4455+2,pow@y+2
 17906  00235A  0E00               	movlw	0
 17907  00235C  0100               	movlb	0	; () banked
 17908  00235E  6FB8               	movwf	pow@x& (0+255),b
 17909  002360  0E20               	movlw	32
 17910  002362  6FB9               	movwf	(pow@x+1)& (0+255),b
 17911  002364  0E41               	movlw	65
 17912  002366  6FBA               	movwf	(pow@x+2)& (0+255),b
 17913  002368  EC77  F00E         	call	_pow	;wreg free
 17914  00236C  C0B8  F0CE         	movff	?_pow,_Display_Init$4456
 17915  002370  C0B9  F0CF         	movff	?_pow+1,_Display_Init$4456+1
 17916  002374  C0BA  F0D0         	movff	?_pow+2,_Display_Init$4456+2
 17917                           
 17918                           ;display.c: 33: _Display.DigitalValueRatio[i] = 2 * (int)pow(10, 2 - i - 1);
 17919  002378  0EC4               	movlw	low (__Display+186)
 17920  00237A  0100               	movlb	0	; () banked
 17921  00237C  25D3               	addwf	Display_Init@i_2656& (0+255),w,b
 17922  00237E  6ED9               	movwf	fsr2l,c
 17923  002380  0E02               	movlw	high (__Display+186)
 17924  002382  21D4               	addwfc	(Display_Init@i_2656+1)& (0+255),w,b
 17925  002384  6EDA               	movwf	fsr2h,c
 17926  002386  C0CE  F090         	movff	_Display_Init$4456,___fttol@f1
 17927  00238A  C0CF  F091         	movff	_Display_Init$4456+1,___fttol@f1+1
 17928  00238E  C0D0  F092         	movff	_Display_Init$4456+2,___fttol@f1+2
 17929  002392  EC46  F016         	call	___fttol	;wreg free
 17930  002396  0100               	movlb	0	; () banked
 17931  002398  90D8               	bcf	status,0,c
 17932  00239A  3590               	rlcf	?___fttol& (0+255),w,b
 17933  00239C  6EDF               	movwf	indf2,c
 17934                           
 17935                           ; BSR set to: 0
 17936  00239E  4BD3               	infsnz	Display_Init@i_2656& (0+255),f,b
 17937  0023A0  2BD4               	incf	(Display_Init@i_2656+1)& (0+255),f,b
 17938  0023A2  D7B5               	goto	l7183
 17939  0023A4                     l766:
 17940                           
 17941                           ; BSR set to: 0
 17942  0023A4  0012               	return		;funcret
 17943  0023A6                     __end_of_Display_Init:
 17944                           	opt stack 0
 17945                           tosu	equ	0xFFF
 17946                           tosh	equ	0xFFE
 17947                           tosl	equ	0xFFD
 17948                           pclath	equ	0xFFA
 17949                           tblptru	equ	0xFF8
 17950                           tblptrh	equ	0xFF7
 17951                           tblptrl	equ	0xFF6
 17952                           tablat	equ	0xFF5
 17953                           prodh	equ	0xFF4
 17954                           prodl	equ	0xFF3
 17955                           intcon	equ	0xFF2
 17956                           indf0	equ	0xFEF
 17957                           postinc0	equ	0xFEE
 17958                           plusw0	equ	0xFEB
 17959                           fsr0h	equ	0xFEA
 17960                           fsr0l	equ	0xFE9
 17961                           wreg	equ	0xFE8
 17962                           indf1	equ	0xFE7
 17963                           postinc1	equ	0xFE6
 17964                           postdec1	equ	0xFE5
 17965                           plusw1	equ	0xFE3
 17966                           fsr1h	equ	0xFE2
 17967                           fsr1l	equ	0xFE1
 17968                           indf2	equ	0xFDF
 17969                           postinc2	equ	0xFDE
 17970                           postdec2	equ	0xFDD
 17971                           plusw2	equ	0xFDB
 17972                           fsr2h	equ	0xFDA
 17973                           fsr2l	equ	0xFD9
 17974                           status	equ	0xFD8
 17975                           
 17976 ;; *************** function _pow *****************
 17977 ;; Defined at:
 17978 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
 17979 ;; Parameters:    Size  Location     Type
 17980 ;;  x               3   88[BANK0 ] void 
 17981 ;;  y               3   91[BANK0 ] void 
 17982 ;; Auto vars:     Size  Location     Type
 17983 ;;  yi              4  101[BANK0 ] unsigned long 
 17984 ;;  sign            1  100[BANK0 ] unsigned char 
 17985 ;; Return value:  Size  Location     Type
 17986 ;;                  3   88[BANK0 ] unsigned char 
 17987 ;; Registers used:
 17988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17989 ;; Tracked objects:
 17990 ;;		On entry : 0/0
 17991 ;;		On exit  : 0/0
 17992 ;;		Unchanged: 0/0
 17993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17994 ;;      Params:         0       6       0       0       0       0       0       0       0
 17995 ;;      Locals:         0      11       0       0       0       0       0       0       0
 17996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 17997 ;;      Totals:         0      17       0       0       0       0       0       0       0
 17998 ;;Total ram usage:       17 bytes
 17999 ;; Hardware stack levels used:    1
 18000 ;; Hardware stack levels required when called:   11
 18001 ;; This function calls:
 18002 ;;		___ftge
 18003 ;;		___ftmul
 18004 ;;		___ftneg
 18005 ;;		___fttol
 18006 ;;		___lltoft
 18007 ;;		_exp
 18008 ;;		_log
 18009 ;; This function is called by:
 18010 ;;		_Display_Init
 18011 ;;		_InitDigiPot
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           	psect	text89
 18016  001CEE                     __ptext89:
 18017                           	opt stack 0
 18018  001CEE                     _pow:
 18019                           	opt stack 17
 18020                           
 18021                           ; BSR set to: 0
 18022                           ;incstack = 0
 18023  001CEE  0E00               	movlw	0
 18024  001CF0  0100               	movlb	0	; () banked
 18025  001CF2  6FC4               	movwf	pow@sign& (0+255),b
 18026                           
 18027                           ; BSR set to: 0
 18028  001CF4  51B8               	movf	pow@x& (0+255),w,b
 18029  001CF6  11B9               	iorwf	(pow@x+1)& (0+255),w,b
 18030  001CF8  11BA               	iorwf	(pow@x+2)& (0+255),w,b
 18031  001CFA  A4D8               	btfss	status,2,c
 18032  001CFC  D01E               	goto	l1768
 18033                           
 18034                           ; BSR set to: 0
 18035  001CFE  0E00               	movlw	0
 18036  001D00  6F60               	movwf	___ftge@ff1& (0+255),b
 18037  001D02  0E00               	movlw	0
 18038  001D04  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 18039  001D06  0E00               	movlw	0
 18040  001D08  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 18041  001D0A  C0BB  F063         	movff	pow@y,___ftge@ff2
 18042  001D0E  C0BC  F064         	movff	pow@y+1,___ftge@ff2+1
 18043  001D12  C0BD  F065         	movff	pow@y+2,___ftge@ff2+2
 18044  001D16  ECD5  F020         	call	___ftge	;wreg free
 18045  001D1A  0100               	movlb	0	; () banked
 18046  001D1C  A0D8               	btfss	status,0,c
 18047  001D1E  D005               	goto	l1769
 18048                           
 18049                           ; BSR set to: 0
 18050  001D20  0E00               	movlw	0
 18051  001D22  0101               	movlb	1	; () banked
 18052  001D24  6F29               	movwf	(_errno+1)& (0+255),b
 18053  001D26  0E21               	movlw	33
 18054  001D28  6F28               	movwf	_errno& (0+255),b
 18055  001D2A                     l1769:
 18056  001D2A  0E00               	movlw	0
 18057  001D2C  0100               	movlb	0	; () banked
 18058  001D2E  6FB8               	movwf	?_pow& (0+255),b
 18059  001D30  0E00               	movlw	0
 18060  001D32  6FB9               	movwf	(?_pow+1)& (0+255),b
 18061  001D34  0E00               	movlw	0
 18062  001D36  6FBA               	movwf	(?_pow+2)& (0+255),b
 18063                           
 18064                           ; BSR set to: 0
 18065  001D38  0012               	return	
 18066  001D3A                     l1768:
 18067                           
 18068                           ; BSR set to: 0
 18069                           
 18070                           ; BSR set to: 0
 18071  001D3A  51BB               	movf	pow@y& (0+255),w,b
 18072  001D3C  11BC               	iorwf	(pow@y+1)& (0+255),w,b
 18073  001D3E  11BD               	iorwf	(pow@y+2)& (0+255),w,b
 18074  001D40  A4D8               	btfss	status,2,c
 18075  001D42  D007               	goto	l1771
 18076                           
 18077                           ; BSR set to: 0
 18078  001D44  0E00               	movlw	0
 18079  001D46  6FB8               	movwf	?_pow& (0+255),b
 18080  001D48  0E80               	movlw	128
 18081  001D4A  6FB9               	movwf	(?_pow+1)& (0+255),b
 18082  001D4C  0E3F               	movlw	63
 18083  001D4E  6FBA               	movwf	(?_pow+2)& (0+255),b
 18084                           
 18085                           ; BSR set to: 0
 18086  001D50  0012               	return	
 18087  001D52                     l1771:
 18088                           
 18089                           ; BSR set to: 0
 18090                           
 18091                           ; BSR set to: 0
 18092  001D52  AFBA               	btfss	(pow@x+2)& (0+255),7,b
 18093  001D54  D043               	goto	l1772
 18094                           
 18095                           ; BSR set to: 0
 18096  001D56  C0BB  F090         	movff	pow@y,___fttol@f1
 18097  001D5A  C0BC  F091         	movff	pow@y+1,___fttol@f1+1
 18098  001D5E  C0BD  F092         	movff	pow@y+2,___fttol@f1+2
 18099  001D62  EC46  F016         	call	___fttol	;wreg free
 18100  001D66  C090  F0C5         	movff	?___fttol,pow@yi
 18101  001D6A  C091  F0C6         	movff	?___fttol+1,pow@yi+1
 18102  001D6E  C092  F0C7         	movff	?___fttol+2,pow@yi+2
 18103  001D72  C093  F0C8         	movff	?___fttol+3,pow@yi+3
 18104  001D76  C0C5  F068         	movff	pow@yi,___lltoft@c
 18105  001D7A  C0C6  F069         	movff	pow@yi+1,___lltoft@c+1
 18106  001D7E  C0C7  F06A         	movff	pow@yi+2,___lltoft@c+2
 18107  001D82  C0C8  F06B         	movff	pow@yi+3,___lltoft@c+3
 18108  001D86  EC6F  F025         	call	___lltoft	;wreg free
 18109  001D8A  0100               	movlb	0	; () banked
 18110  001D8C  51BB               	movf	pow@y& (0+255),w,b
 18111  001D8E  1968               	xorwf	?___lltoft& (0+255),w,b
 18112  001D90  E107               	bnz	u7560
 18113  001D92  51BC               	movf	(pow@y+1)& (0+255),w,b
 18114  001D94  1969               	xorwf	(?___lltoft+1)& (0+255),w,b
 18115  001D96  E104               	bnz	u7560
 18116  001D98  51BD               	movf	(pow@y+2)& (0+255),w,b
 18117  001D9A  196A               	xorwf	(?___lltoft+2)& (0+255),w,b
 18118  001D9C  B4D8               	btfsc	status,2,c
 18119  001D9E  D00D               	goto	l1773
 18120  001DA0                     u7560:
 18121                           
 18122                           ; BSR set to: 0
 18123  001DA0  0E00               	movlw	0
 18124  001DA2  0101               	movlb	1	; () banked
 18125  001DA4  6F29               	movwf	(_errno+1)& (0+255),b
 18126  001DA6  0E21               	movlw	33
 18127  001DA8  6F28               	movwf	_errno& (0+255),b
 18128  001DAA  0E00               	movlw	0
 18129  001DAC  0100               	movlb	0	; () banked
 18130  001DAE  6FB8               	movwf	?_pow& (0+255),b
 18131  001DB0  0E00               	movlw	0
 18132  001DB2  6FB9               	movwf	(?_pow+1)& (0+255),b
 18133  001DB4  0E00               	movlw	0
 18134  001DB6  6FBA               	movwf	(?_pow+2)& (0+255),b
 18135                           
 18136                           ; BSR set to: 0
 18137  001DB8  0012               	return	
 18138  001DBA                     l1773:
 18139                           
 18140                           ; BSR set to: 0
 18141                           
 18142                           ; BSR set to: 0
 18143  001DBA  51C5               	movf	pow@yi& (0+255),w,b
 18144  001DBC  0B01               	andlw	1
 18145  001DBE  6FC4               	movwf	pow@sign& (0+255),b
 18146                           
 18147                           ; BSR set to: 0
 18148  001DC0  C0B8  F060         	movff	pow@x,___ftneg@f1
 18149  001DC4  C0B9  F061         	movff	pow@x+1,___ftneg@f1+1
 18150  001DC8  C0BA  F062         	movff	pow@x+2,___ftneg@f1+2
 18151  001DCC  ECE1  F028         	call	___ftneg	;wreg free
 18152  001DD0  C060  F0B8         	movff	?___ftneg,pow@x
 18153  001DD4  C061  F0B9         	movff	?___ftneg+1,pow@x+1
 18154  001DD8  C062  F0BA         	movff	?___ftneg+2,pow@x+2
 18155  001DDC                     l1772:
 18156  001DDC  C0B8  F0A8         	movff	pow@x,log@x
 18157  001DE0  C0B9  F0A9         	movff	pow@x+1,log@x+1
 18158  001DE4  C0BA  F0AA         	movff	pow@x+2,log@x+2
 18159  001DE8  EC02  F013         	call	_log	;wreg free
 18160  001DEC  C0A8  F0BE         	movff	?_log,_pow$4458
 18161  001DF0  C0A9  F0BF         	movff	?_log+1,_pow$4458+1
 18162  001DF4  C0AA  F0C0         	movff	?_log+2,_pow$4458+2
 18163  001DF8  C0BE  F072         	movff	_pow$4458,___ftmul@f1
 18164  001DFC  C0BF  F073         	movff	_pow$4458+1,___ftmul@f1+1
 18165  001E00  C0C0  F074         	movff	_pow$4458+2,___ftmul@f1+2
 18166  001E04  C0BB  F075         	movff	pow@y,___ftmul@f2
 18167  001E08  C0BC  F076         	movff	pow@y+1,___ftmul@f2+1
 18168  001E0C  C0BD  F077         	movff	pow@y+2,___ftmul@f2+2
 18169  001E10  ECC2  F016         	call	___ftmul	;wreg free
 18170  001E14  C072  F0C1         	movff	?___ftmul,_pow$4459
 18171  001E18  C073  F0C2         	movff	?___ftmul+1,_pow$4459+1
 18172  001E1C  C074  F0C3         	movff	?___ftmul+2,_pow$4459+2
 18173  001E20  C0C1  F0AF         	movff	_pow$4459,exp@x
 18174  001E24  C0C2  F0B0         	movff	_pow$4459+1,exp@x+1
 18175  001E28  C0C3  F0B1         	movff	_pow$4459+2,exp@x+2
 18176  001E2C  ECE2  F00B         	call	_exp	;wreg free
 18177  001E30  C0AF  F0B8         	movff	?_exp,pow@x
 18178  001E34  C0B0  F0B9         	movff	?_exp+1,pow@x+1
 18179  001E38  C0B1  F0BA         	movff	?_exp+2,pow@x+2
 18180  001E3C  0100               	movlb	0	; () banked
 18181  001E3E  51C4               	movf	pow@sign& (0+255),w,b
 18182  001E40  B4D8               	btfsc	status,2,c
 18183  001E42  D00F               	goto	l1774
 18184                           
 18185                           ; BSR set to: 0
 18186  001E44  C0B8  F060         	movff	pow@x,___ftneg@f1
 18187  001E48  C0B9  F061         	movff	pow@x+1,___ftneg@f1+1
 18188  001E4C  C0BA  F062         	movff	pow@x+2,___ftneg@f1+2
 18189  001E50  ECE1  F028         	call	___ftneg	;wreg free
 18190  001E54  C060  F0B8         	movff	?___ftneg,?_pow
 18191  001E58  C061  F0B9         	movff	?___ftneg+1,?_pow+1
 18192  001E5C  C062  F0BA         	movff	?___ftneg+2,?_pow+2
 18193  001E60  0012               	return	
 18194  001E62                     l1774:
 18195                           
 18196                           ; BSR set to: 0
 18197  001E62  C0B8  F0B8         	movff	pow@x,?_pow
 18198  001E66  C0B9  F0B9         	movff	pow@x+1,?_pow+1
 18199  001E6A  C0BA  F0BA         	movff	pow@x+2,?_pow+2
 18200  001E6E  0012               	return		;funcret
 18201  001E70                     __end_of_pow:
 18202                           	opt stack 0
 18203                           tosu	equ	0xFFF
 18204                           tosh	equ	0xFFE
 18205                           tosl	equ	0xFFD
 18206                           pclath	equ	0xFFA
 18207                           tblptru	equ	0xFF8
 18208                           tblptrh	equ	0xFF7
 18209                           tblptrl	equ	0xFF6
 18210                           tablat	equ	0xFF5
 18211                           prodh	equ	0xFF4
 18212                           prodl	equ	0xFF3
 18213                           intcon	equ	0xFF2
 18214                           indf0	equ	0xFEF
 18215                           postinc0	equ	0xFEE
 18216                           plusw0	equ	0xFEB
 18217                           fsr0h	equ	0xFEA
 18218                           fsr0l	equ	0xFE9
 18219                           wreg	equ	0xFE8
 18220                           indf1	equ	0xFE7
 18221                           postinc1	equ	0xFE6
 18222                           postdec1	equ	0xFE5
 18223                           plusw1	equ	0xFE3
 18224                           fsr1h	equ	0xFE2
 18225                           fsr1l	equ	0xFE1
 18226                           indf2	equ	0xFDF
 18227                           postinc2	equ	0xFDE
 18228                           postdec2	equ	0xFDD
 18229                           plusw2	equ	0xFDB
 18230                           fsr2h	equ	0xFDA
 18231                           fsr2l	equ	0xFD9
 18232                           status	equ	0xFD8
 18233                           
 18234 ;; *************** function _log *****************
 18235 ;; Defined at:
 18236 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
 18237 ;; Parameters:    Size  Location     Type
 18238 ;;  x               3   72[BANK0 ] unsigned char 
 18239 ;; Auto vars:     Size  Location     Type
 18240 ;;  exponent        2   75[BANK0 ] int 
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  3   72[BANK0 ] int 
 18243 ;; Registers used:
 18244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18250 ;;      Params:         0       3       0       0       0       0       0       0       0
 18251 ;;      Locals:         0       2       0       0       0       0       0       0       0
 18252 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18253 ;;      Totals:         0       5       0       0       0       0       0       0       0
 18254 ;;Total ram usage:        5 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; Hardware stack levels required when called:   10
 18257 ;; This function calls:
 18258 ;;		___awtoft
 18259 ;;		___ftadd
 18260 ;;		___ftmul
 18261 ;;		_eval_poly
 18262 ;;		_frexp
 18263 ;; This function is called by:
 18264 ;;		_pow
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           	psect	text90
 18269  002604                     __ptext90:
 18270                           	opt stack 0
 18271  002604                     _log:
 18272                           	opt stack 17
 18273                           
 18274                           ;incstack = 0
 18275  002604  0100               	movlb	0	; () banked
 18276  002606  AFAA               	btfss	(log@x+2)& (0+255),7,b
 18277  002608  D00D               	goto	l1970
 18278                           
 18279                           ; BSR set to: 0
 18280  00260A  0E00               	movlw	0
 18281  00260C  0101               	movlb	1	; () banked
 18282  00260E  6F29               	movwf	(_errno+1)& (0+255),b
 18283  002610  0E21               	movlw	33
 18284  002612  6F28               	movwf	_errno& (0+255),b
 18285  002614  0E00               	movlw	0
 18286  002616  0100               	movlb	0	; () banked
 18287  002618  6FA8               	movwf	?_log& (0+255),b
 18288  00261A  0E00               	movlw	0
 18289  00261C  6FA9               	movwf	(?_log+1)& (0+255),b
 18290  00261E  0E00               	movlw	0
 18291  002620  6FAA               	movwf	(?_log+2)& (0+255),b
 18292                           
 18293                           ; BSR set to: 0
 18294  002622  0012               	return	
 18295  002624                     l1970:
 18296                           
 18297                           ; BSR set to: 0
 18298                           
 18299                           ; BSR set to: 0
 18300  002624  51A8               	movf	log@x& (0+255),w,b
 18301  002626  11A9               	iorwf	(log@x+1)& (0+255),w,b
 18302  002628  11AA               	iorwf	(log@x+2)& (0+255),w,b
 18303  00262A  A4D8               	btfss	status,2,c
 18304  00262C  D00D               	goto	l1972
 18305                           
 18306                           ; BSR set to: 0
 18307  00262E  0E00               	movlw	0
 18308  002630  0101               	movlb	1	; () banked
 18309  002632  6F29               	movwf	(_errno+1)& (0+255),b
 18310  002634  0E22               	movlw	34
 18311  002636  6F28               	movwf	_errno& (0+255),b
 18312  002638  0E00               	movlw	0
 18313  00263A  0100               	movlb	0	; () banked
 18314  00263C  6FA8               	movwf	?_log& (0+255),b
 18315  00263E  0E00               	movlw	0
 18316  002640  6FA9               	movwf	(?_log+1)& (0+255),b
 18317  002642  0E00               	movlw	0
 18318  002644  6FAA               	movwf	(?_log+2)& (0+255),b
 18319                           
 18320                           ; BSR set to: 0
 18321  002646  0012               	return	
 18322  002648                     l1972:
 18323                           
 18324                           ; BSR set to: 0
 18325                           
 18326                           ; BSR set to: 0
 18327  002648  0E00               	movlw	0
 18328  00264A  6F75               	movwf	___ftmul@f2& (0+255),b
 18329  00264C  0E00               	movlw	0
 18330  00264E  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 18331  002650  0E40               	movlw	64
 18332  002652  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 18333  002654  0EAB               	movlw	low log@exponent
 18334  002656  6F63               	movwf	frexp@eptr& (0+255),b
 18335  002658  0E00               	movlw	high log@exponent
 18336  00265A  6F64               	movwf	(frexp@eptr+1)& (0+255),b
 18337  00265C  C0A8  F060         	movff	log@x,frexp@value
 18338  002660  C0A9  F061         	movff	log@x+1,frexp@value+1
 18339  002664  C0AA  F062         	movff	log@x+2,frexp@value+2
 18340  002668  EC8B  F020         	call	_frexp	;wreg free
 18341  00266C  C060  F072         	movff	?_frexp,___ftmul@f1
 18342  002670  C061  F073         	movff	?_frexp+1,___ftmul@f1+1
 18343  002674  C062  F074         	movff	?_frexp+2,___ftmul@f1+2
 18344  002678  ECC2  F016         	call	___ftmul	;wreg free
 18345  00267C  C072  F090         	movff	?___ftmul,___ftadd@f1
 18346  002680  C073  F091         	movff	?___ftmul+1,___ftadd@f1+1
 18347  002684  C074  F092         	movff	?___ftmul+2,___ftadd@f1+2
 18348  002688  0E00               	movlw	0
 18349  00268A  0100               	movlb	0	; () banked
 18350  00268C  6F93               	movwf	___ftadd@f2& (0+255),b
 18351  00268E  0E80               	movlw	128
 18352  002690  6F94               	movwf	(___ftadd@f2+1)& (0+255),b
 18353  002692  0EBF               	movlw	191
 18354  002694  6F95               	movwf	(___ftadd@f2+2)& (0+255),b
 18355  002696  ECDE  F00C         	call	___ftadd	;wreg free
 18356  00269A  C090  F0A8         	movff	?___ftadd,log@x
 18357  00269E  C091  F0A9         	movff	?___ftadd+1,log@x+1
 18358  0026A2  C092  F0AA         	movff	?___ftadd+2,log@x+2
 18359  0026A6  0100               	movlb	0	; () banked
 18360  0026A8  07AB               	decf	log@exponent& (0+255),f,b
 18361  0026AA  A0D8               	btfss	status,0,c
 18362  0026AC  07AC               	decf	(log@exponent+1)& (0+255),f,b
 18363                           
 18364                           ; BSR set to: 0
 18365  0026AE  C0A8  F09C         	movff	log@x,eval_poly@x
 18366  0026B2  C0A9  F09D         	movff	log@x+1,eval_poly@x+1
 18367  0026B6  C0AA  F09E         	movff	log@x+2,eval_poly@x+2
 18368  0026BA  0E9E               	movlw	low log@coeff
 18369  0026BC  6F9F               	movwf	eval_poly@d& (0+255),b
 18370  0026BE  0E08               	movlw	high log@coeff
 18371  0026C0  6FA0               	movwf	(eval_poly@d+1)& (0+255),b
 18372  0026C2  0E00               	movlw	0
 18373  0026C4  6FA2               	movwf	(eval_poly@n+1)& (0+255),b
 18374  0026C6  0E08               	movlw	8
 18375  0026C8  6FA1               	movwf	eval_poly@n& (0+255),b
 18376  0026CA  EC81  F019         	call	_eval_poly	;wreg free
 18377  0026CE  C09C  F0A8         	movff	?_eval_poly,log@x
 18378  0026D2  C09D  F0A9         	movff	?_eval_poly+1,log@x+1
 18379  0026D6  C09E  F0AA         	movff	?_eval_poly+2,log@x+2
 18380  0026DA  0E72               	movlw	114
 18381  0026DC  0100               	movlb	0	; () banked
 18382  0026DE  6F75               	movwf	___ftmul@f2& (0+255),b
 18383  0026E0  0E31               	movlw	49
 18384  0026E2  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 18385  0026E4  0E3F               	movlw	63
 18386  0026E6  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 18387  0026E8  C0AB  F068         	movff	log@exponent,___awtoft@c
 18388  0026EC  C0AC  F069         	movff	log@exponent+1,___awtoft@c+1
 18389  0026F0  ECDB  F027         	call	___awtoft	;wreg free
 18390  0026F4  C068  F072         	movff	?___awtoft,___ftmul@f1
 18391  0026F8  C069  F073         	movff	?___awtoft+1,___ftmul@f1+1
 18392  0026FC  C06A  F074         	movff	?___awtoft+2,___ftmul@f1+2
 18393  002700  ECC2  F016         	call	___ftmul	;wreg free
 18394  002704  C072  F090         	movff	?___ftmul,___ftadd@f1
 18395  002708  C073  F091         	movff	?___ftmul+1,___ftadd@f1+1
 18396  00270C  C074  F092         	movff	?___ftmul+2,___ftadd@f1+2
 18397  002710  C0A8  F093         	movff	log@x,___ftadd@f2
 18398  002714  C0A9  F094         	movff	log@x+1,___ftadd@f2+1
 18399  002718  C0AA  F095         	movff	log@x+2,___ftadd@f2+2
 18400  00271C  ECDE  F00C         	call	___ftadd	;wreg free
 18401  002720  C090  F0A8         	movff	?___ftadd,?_log
 18402  002724  C091  F0A9         	movff	?___ftadd+1,?_log+1
 18403  002728  C092  F0AA         	movff	?___ftadd+2,?_log+2
 18404  00272C  0012               	return	
 18405  00272E                     __end_of_log:
 18406                           	opt stack 0
 18407                           tosu	equ	0xFFF
 18408                           tosh	equ	0xFFE
 18409                           tosl	equ	0xFFD
 18410                           pclath	equ	0xFFA
 18411                           tblptru	equ	0xFF8
 18412                           tblptrh	equ	0xFF7
 18413                           tblptrl	equ	0xFF6
 18414                           tablat	equ	0xFF5
 18415                           prodh	equ	0xFF4
 18416                           prodl	equ	0xFF3
 18417                           intcon	equ	0xFF2
 18418                           indf0	equ	0xFEF
 18419                           postinc0	equ	0xFEE
 18420                           plusw0	equ	0xFEB
 18421                           fsr0h	equ	0xFEA
 18422                           fsr0l	equ	0xFE9
 18423                           wreg	equ	0xFE8
 18424                           indf1	equ	0xFE7
 18425                           postinc1	equ	0xFE6
 18426                           postdec1	equ	0xFE5
 18427                           plusw1	equ	0xFE3
 18428                           fsr1h	equ	0xFE2
 18429                           fsr1l	equ	0xFE1
 18430                           indf2	equ	0xFDF
 18431                           postinc2	equ	0xFDE
 18432                           postdec2	equ	0xFDD
 18433                           plusw2	equ	0xFDB
 18434                           fsr2h	equ	0xFDA
 18435                           fsr2l	equ	0xFD9
 18436                           status	equ	0xFD8
 18437                           
 18438 ;; *************** function _exp *****************
 18439 ;; Defined at:
 18440 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
 18441 ;; Parameters:    Size  Location     Type
 18442 ;;  x               3   79[BANK0 ] int 
 18443 ;; Auto vars:     Size  Location     Type
 18444 ;;  exponent        2   85[BANK0 ] int 
 18445 ;;  sign            1   87[BANK0 ] unsigned char 
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  3   79[BANK0 ] unsigned char 
 18448 ;; Registers used:
 18449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/0
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18455 ;;      Params:         0       3       0       0       0       0       0       0       0
 18456 ;;      Locals:         0       6       0       0       0       0       0       0       0
 18457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18458 ;;      Totals:         0       9       0       0       0       0       0       0       0
 18459 ;;Total ram usage:        9 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; Hardware stack levels required when called:   10
 18462 ;; This function calls:
 18463 ;;		___awtoft
 18464 ;;		___ftdiv
 18465 ;;		___ftge
 18466 ;;		___ftmul
 18467 ;;		___ftneg
 18468 ;;		___ftsub
 18469 ;;		___fttol
 18470 ;;		_eval_poly
 18471 ;;		_floor
 18472 ;;		_ldexp
 18473 ;; This function is called by:
 18474 ;;		_pow
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           	psect	text91
 18479  0017C4                     __ptext91:
 18480                           	opt stack 0
 18481  0017C4                     _exp:
 18482                           	opt stack 17
 18483                           
 18484                           ;incstack = 0
 18485  0017C4  0100               	movlb	0	; () banked
 18486  0017C6  51AF               	movf	exp@x& (0+255),w,b
 18487  0017C8  11B0               	iorwf	(exp@x+1)& (0+255),w,b
 18488  0017CA  11B1               	iorwf	(exp@x+2)& (0+255),w,b
 18489  0017CC  A4D8               	btfss	status,2,c
 18490  0017CE  D007               	goto	l1928
 18491                           
 18492                           ; BSR set to: 0
 18493  0017D0  0E00               	movlw	0
 18494  0017D2  6FAF               	movwf	?_exp& (0+255),b
 18495  0017D4  0E80               	movlw	128
 18496  0017D6  6FB0               	movwf	(?_exp+1)& (0+255),b
 18497  0017D8  0E3F               	movlw	63
 18498  0017DA  6FB1               	movwf	(?_exp+2)& (0+255),b
 18499                           
 18500                           ; BSR set to: 0
 18501  0017DC  0012               	return	
 18502  0017DE                     l1928:
 18503                           
 18504                           ; BSR set to: 0
 18505                           
 18506                           ; BSR set to: 0
 18507  0017DE  0E72               	movlw	114
 18508  0017E0  6F60               	movwf	___ftge@ff1& (0+255),b
 18509  0017E2  0E31               	movlw	49
 18510  0017E4  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 18511  0017E6  0E44               	movlw	68
 18512  0017E8  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 18513  0017EA  C0AF  F063         	movff	exp@x,___ftge@ff2
 18514  0017EE  C0B0  F064         	movff	exp@x+1,___ftge@ff2+1
 18515  0017F2  C0B1  F065         	movff	exp@x+2,___ftge@ff2+2
 18516  0017F6  ECD5  F020         	call	___ftge	;wreg free
 18517  0017FA  0100               	movlb	0	; () banked
 18518  0017FC  B0D8               	btfsc	status,0,c
 18519  0017FE  D00D               	goto	l1930
 18520                           
 18521                           ; BSR set to: 0
 18522  001800  0E00               	movlw	0
 18523  001802  0101               	movlb	1	; () banked
 18524  001804  6F29               	movwf	(_errno+1)& (0+255),b
 18525  001806  0E22               	movlw	34
 18526  001808  6F28               	movwf	_errno& (0+255),b
 18527  00180A  0EFF               	movlw	255
 18528  00180C  0100               	movlb	0	; () banked
 18529  00180E  6FAF               	movwf	?_exp& (0+255),b
 18530  001810  0E7F               	movlw	127
 18531  001812  6FB0               	movwf	(?_exp+1)& (0+255),b
 18532  001814  0E7F               	movlw	127
 18533  001816  6FB1               	movwf	(?_exp+2)& (0+255),b
 18534                           
 18535                           ; BSR set to: 0
 18536  001818  0012               	return	
 18537  00181A                     l1930:
 18538                           
 18539                           ; BSR set to: 0
 18540                           
 18541                           ; BSR set to: 0
 18542  00181A  C0AF  F060         	movff	exp@x,___ftge@ff1
 18543  00181E  C0B0  F061         	movff	exp@x+1,___ftge@ff1+1
 18544  001822  C0B1  F062         	movff	exp@x+2,___ftge@ff1+2
 18545  001826  0E49               	movlw	73
 18546  001828  6F63               	movwf	___ftge@ff2& (0+255),b
 18547  00182A  0E3A               	movlw	58
 18548  00182C  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 18549  00182E  0EC4               	movlw	196
 18550  001830  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 18551  001832  ECD5  F020         	call	___ftge	;wreg free
 18552  001836  0100               	movlb	0	; () banked
 18553  001838  B0D8               	btfsc	status,0,c
 18554  00183A  D00D               	goto	l1931
 18555                           
 18556                           ; BSR set to: 0
 18557  00183C  0E00               	movlw	0
 18558  00183E  0101               	movlb	1	; () banked
 18559  001840  6F29               	movwf	(_errno+1)& (0+255),b
 18560  001842  0E22               	movlw	34
 18561  001844  6F28               	movwf	_errno& (0+255),b
 18562  001846  0E00               	movlw	0
 18563  001848  0100               	movlb	0	; () banked
 18564  00184A  6FAF               	movwf	?_exp& (0+255),b
 18565  00184C  0E00               	movlw	0
 18566  00184E  6FB0               	movwf	(?_exp+1)& (0+255),b
 18567  001850  0E00               	movlw	0
 18568  001852  6FB1               	movwf	(?_exp+2)& (0+255),b
 18569                           
 18570                           ; BSR set to: 0
 18571  001854  0012               	return	
 18572  001856                     l1931:
 18573                           
 18574                           ; BSR set to: 0
 18575                           
 18576                           ; BSR set to: 0
 18577  001856  AFB1               	btfss	(exp@x+2)& (0+255),7,b
 18578  001858  D002               	goto	u7270
 18579  00185A  0E01               	movlw	1
 18580  00185C  D001               	goto	u7280
 18581  00185E                     u7270:
 18582  00185E  0E00               	movlw	0
 18583  001860                     u7280:
 18584  001860  6FB7               	movwf	exp@sign& (0+255),b
 18585                           
 18586                           ; BSR set to: 0
 18587  001862  51B7               	movf	exp@sign& (0+255),w,b
 18588  001864  B4D8               	btfsc	status,2,c
 18589  001866  D00E               	goto	l1932
 18590                           
 18591                           ; BSR set to: 0
 18592  001868  C0AF  F060         	movff	exp@x,___ftneg@f1
 18593  00186C  C0B0  F061         	movff	exp@x+1,___ftneg@f1+1
 18594  001870  C0B1  F062         	movff	exp@x+2,___ftneg@f1+2
 18595  001874  ECE1  F028         	call	___ftneg	;wreg free
 18596  001878  C060  F0AF         	movff	?___ftneg,exp@x
 18597  00187C  C061  F0B0         	movff	?___ftneg+1,exp@x+1
 18598  001880  C062  F0B1         	movff	?___ftneg+2,exp@x+2
 18599  001884                     l1932:
 18600  001884  C0AF  F072         	movff	exp@x,___ftmul@f1
 18601  001888  C0B0  F073         	movff	exp@x+1,___ftmul@f1+1
 18602  00188C  C0B1  F074         	movff	exp@x+2,___ftmul@f1+2
 18603  001890  0EAA               	movlw	170
 18604  001892  0100               	movlb	0	; () banked
 18605  001894  6F75               	movwf	___ftmul@f2& (0+255),b
 18606  001896  0EB8               	movlw	184
 18607  001898  6F76               	movwf	(___ftmul@f2+1)& (0+255),b
 18608  00189A  0E3F               	movlw	63
 18609  00189C  6F77               	movwf	(___ftmul@f2+2)& (0+255),b
 18610  00189E  ECC2  F016         	call	___ftmul	;wreg free
 18611  0018A2  C072  F0AF         	movff	?___ftmul,exp@x
 18612  0018A6  C073  F0B0         	movff	?___ftmul+1,exp@x+1
 18613  0018AA  C074  F0B1         	movff	?___ftmul+2,exp@x+2
 18614  0018AE  C0AF  F09F         	movff	exp@x,floor@x
 18615  0018B2  C0B0  F0A0         	movff	exp@x+1,floor@x+1
 18616  0018B6  C0B1  F0A1         	movff	exp@x+2,floor@x+2
 18617  0018BA  EC0F  F019         	call	_floor	;wreg free
 18618  0018BE  C09F  F0B2         	movff	?_floor,_exp$4460
 18619  0018C2  C0A0  F0B3         	movff	?_floor+1,_exp$4460+1
 18620  0018C6  C0A1  F0B4         	movff	?_floor+2,_exp$4460+2
 18621  0018CA  C0B2  F090         	movff	_exp$4460,___fttol@f1
 18622  0018CE  C0B3  F091         	movff	_exp$4460+1,___fttol@f1+1
 18623  0018D2  C0B4  F092         	movff	_exp$4460+2,___fttol@f1+2
 18624  0018D6  EC46  F016         	call	___fttol	;wreg free
 18625  0018DA  C090  F0B5         	movff	?___fttol,exp@exponent
 18626  0018DE  C091  F0B6         	movff	?___fttol+1,exp@exponent+1
 18627  0018E2  C0AF  F09C         	movff	exp@x,___ftsub@f1
 18628  0018E6  C0B0  F09D         	movff	exp@x+1,___ftsub@f1+1
 18629  0018EA  C0B1  F09E         	movff	exp@x+2,___ftsub@f1+2
 18630  0018EE  C0B5  F068         	movff	exp@exponent,___awtoft@c
 18631  0018F2  C0B6  F069         	movff	exp@exponent+1,___awtoft@c+1
 18632  0018F6  ECDB  F027         	call	___awtoft	;wreg free
 18633  0018FA  C068  F09F         	movff	?___awtoft,___ftsub@f2
 18634  0018FE  C069  F0A0         	movff	?___awtoft+1,___ftsub@f2+1
 18635  001902  C06A  F0A1         	movff	?___awtoft+2,___ftsub@f2+2
 18636  001906  EC61  F027         	call	___ftsub	;wreg free
 18637  00190A  C09C  F0AF         	movff	?___ftsub,exp@x
 18638  00190E  C09D  F0B0         	movff	?___ftsub+1,exp@x+1
 18639  001912  C09E  F0B1         	movff	?___ftsub+2,exp@x+2
 18640  001916  C0AF  F09C         	movff	exp@x,eval_poly@x
 18641  00191A  C0B0  F09D         	movff	exp@x+1,eval_poly@x+1
 18642  00191E  C0B1  F09E         	movff	exp@x+2,eval_poly@x+2
 18643  001922  0E80               	movlw	low exp@coeff
 18644  001924  0100               	movlb	0	; () banked
 18645  001926  6F9F               	movwf	eval_poly@d& (0+255),b
 18646  001928  0E08               	movlw	high exp@coeff
 18647  00192A  6FA0               	movwf	(eval_poly@d+1)& (0+255),b
 18648  00192C  0E00               	movlw	0
 18649  00192E  6FA2               	movwf	(eval_poly@n+1)& (0+255),b
 18650  001930  0E09               	movlw	9
 18651  001932  6FA1               	movwf	eval_poly@n& (0+255),b
 18652  001934  EC81  F019         	call	_eval_poly	;wreg free
 18653  001938  C09C  F0A8         	movff	?_eval_poly,ldexp@value
 18654  00193C  C09D  F0A9         	movff	?_eval_poly+1,ldexp@value+1
 18655  001940  C09E  F0AA         	movff	?_eval_poly+2,ldexp@value+2
 18656  001944  C0B5  F0AB         	movff	exp@exponent,ldexp@newexp
 18657  001948  C0B6  F0AC         	movff	exp@exponent+1,ldexp@newexp+1
 18658  00194C  ECC2  F01A         	call	_ldexp	;wreg free
 18659  001950  C0A8  F0AF         	movff	?_ldexp,exp@x
 18660  001954  C0A9  F0B0         	movff	?_ldexp+1,exp@x+1
 18661  001958  C0AA  F0B1         	movff	?_ldexp+2,exp@x+2
 18662  00195C  0100               	movlb	0	; () banked
 18663  00195E  51B7               	movf	exp@sign& (0+255),w,b
 18664  001960  B4D8               	btfsc	status,2,c
 18665  001962  D025               	goto	l1933
 18666                           
 18667                           ; BSR set to: 0
 18668  001964  29AF               	incf	exp@x& (0+255),w,b
 18669  001966  E10E               	bnz	l6435
 18670  001968  0E7F               	movlw	127
 18671  00196A  19B0               	xorwf	(exp@x+1)& (0+255),w,b
 18672  00196C  E10B               	bnz	l6435
 18673  00196E  0E7F               	movlw	127
 18674  001970  19B1               	xorwf	(exp@x+2)& (0+255),w,b
 18675  001972  A4D8               	btfss	status,2,c
 18676  001974  D007               	goto	l1934
 18677                           
 18678                           ; BSR set to: 0
 18679  001976  0E00               	movlw	0
 18680  001978  6FAF               	movwf	?_exp& (0+255),b
 18681  00197A  0E00               	movlw	0
 18682  00197C  6FB0               	movwf	(?_exp+1)& (0+255),b
 18683  00197E  0E00               	movlw	0
 18684  001980  6FB1               	movwf	(?_exp+2)& (0+255),b
 18685                           
 18686                           ; BSR set to: 0
 18687  001982  0012               	return	
 18688  001984                     l1934:
 18689  001984                     l6435:
 18690                           
 18691                           ; BSR set to: 0
 18692  001984  0E00               	movlw	0
 18693  001986  6F81               	movwf	___ftdiv@f1& (0+255),b
 18694  001988  0E80               	movlw	128
 18695  00198A  6F82               	movwf	(___ftdiv@f1+1)& (0+255),b
 18696  00198C  0E3F               	movlw	63
 18697  00198E  6F83               	movwf	(___ftdiv@f1+2)& (0+255),b
 18698  001990  C0AF  F084         	movff	exp@x,___ftdiv@f2
 18699  001994  C0B0  F085         	movff	exp@x+1,___ftdiv@f2+1
 18700  001998  C0B1  F086         	movff	exp@x+2,___ftdiv@f2+2
 18701  00199C  ECB6  F017         	call	___ftdiv	;wreg free
 18702  0019A0  C081  F0AF         	movff	?___ftdiv,?_exp
 18703  0019A4  C082  F0B0         	movff	?___ftdiv+1,?_exp+1
 18704  0019A8  C083  F0B1         	movff	?___ftdiv+2,?_exp+2
 18705  0019AC  0012               	return	
 18706  0019AE                     l1933:
 18707                           
 18708                           ; BSR set to: 0
 18709  0019AE  C0AF  F0AF         	movff	exp@x,?_exp
 18710  0019B2  C0B0  F0B0         	movff	exp@x+1,?_exp+1
 18711  0019B6  C0B1  F0B1         	movff	exp@x+2,?_exp+2
 18712  0019BA  0012               	return		;funcret
 18713  0019BC                     __end_of_exp:
 18714                           	opt stack 0
 18715                           tosu	equ	0xFFF
 18716                           tosh	equ	0xFFE
 18717                           tosl	equ	0xFFD
 18718                           pclath	equ	0xFFA
 18719                           tblptru	equ	0xFF8
 18720                           tblptrh	equ	0xFF7
 18721                           tblptrl	equ	0xFF6
 18722                           tablat	equ	0xFF5
 18723                           prodh	equ	0xFF4
 18724                           prodl	equ	0xFF3
 18725                           intcon	equ	0xFF2
 18726                           indf0	equ	0xFEF
 18727                           postinc0	equ	0xFEE
 18728                           plusw0	equ	0xFEB
 18729                           fsr0h	equ	0xFEA
 18730                           fsr0l	equ	0xFE9
 18731                           wreg	equ	0xFE8
 18732                           indf1	equ	0xFE7
 18733                           postinc1	equ	0xFE6
 18734                           postdec1	equ	0xFE5
 18735                           plusw1	equ	0xFE3
 18736                           fsr1h	equ	0xFE2
 18737                           fsr1l	equ	0xFE1
 18738                           indf2	equ	0xFDF
 18739                           postinc2	equ	0xFDE
 18740                           postdec2	equ	0xFDD
 18741                           plusw2	equ	0xFDB
 18742                           fsr2h	equ	0xFDA
 18743                           fsr2l	equ	0xFD9
 18744                           status	equ	0xFD8
 18745                           
 18746 ;; *************** function _ldexp *****************
 18747 ;; Defined at:
 18748 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 18749 ;; Parameters:    Size  Location     Type
 18750 ;;  value           3   72[BANK0 ] unsigned char 
 18751 ;;  newexp          2   75[BANK0 ] int 
 18752 ;; Auto vars:     Size  Location     Type
 18753 ;;		None
 18754 ;; Return value:  Size  Location     Type
 18755 ;;                  3   72[BANK0 ] int 
 18756 ;; Registers used:
 18757 ;;		wreg, status,2, status,0
 18758 ;; Tracked objects:
 18759 ;;		On entry : 0/0
 18760 ;;		On exit  : 0/0
 18761 ;;		Unchanged: 0/0
 18762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18763 ;;      Params:         0       5       0       0       0       0       0       0       0
 18764 ;;      Locals:         0       0       0       0       0       0       0       0       0
 18765 ;;      Temps:          0       2       0       0       0       0       0       0       0
 18766 ;;      Totals:         0       7       0       0       0       0       0       0       0
 18767 ;;Total ram usage:        7 bytes
 18768 ;; Hardware stack levels used:    1
 18769 ;; Hardware stack levels required when called:    7
 18770 ;; This function calls:
 18771 ;;		Nothing
 18772 ;; This function is called by:
 18773 ;;		_exp
 18774 ;; This function uses a non-reentrant model
 18775 ;;
 18776                           
 18777                           	psect	text92
 18778  003584                     __ptext92:
 18779                           	opt stack 0
 18780  003584                     _ldexp:
 18781                           	opt stack 19
 18782                           
 18783                           ;incstack = 0
 18784  003584  0100               	movlb	0	; () banked
 18785  003586  51A8               	movf	ldexp@value& (0+255),w,b
 18786  003588  11A9               	iorwf	(ldexp@value+1)& (0+255),w,b
 18787  00358A  11AA               	iorwf	(ldexp@value+2)& (0+255),w,b
 18788  00358C  A4D8               	btfss	status,2,c
 18789  00358E  D007               	goto	l1952
 18790                           
 18791                           ; BSR set to: 0
 18792  003590  0E00               	movlw	0
 18793  003592  6FA8               	movwf	?_ldexp& (0+255),b
 18794  003594  0E00               	movlw	0
 18795  003596  6FA9               	movwf	(?_ldexp+1)& (0+255),b
 18796  003598  0E00               	movlw	0
 18797  00359A  6FAA               	movwf	(?_ldexp+2)& (0+255),b
 18798                           
 18799                           ; BSR set to: 0
 18800  00359C  0012               	return	
 18801  00359E                     l1952:
 18802                           
 18803                           ; BSR set to: 0
 18804                           
 18805                           ; BSR set to: 0
 18806  00359E  51AA               	movf	(ldexp@value+2)& (0+255),w,b
 18807  0035A0  0B7F               	andlw	127
 18808  0035A2  6FAD               	movwf	??_ldexp& (0+255),b
 18809  0035A4  6BAE               	clrf	(??_ldexp+1)& (0+255),b
 18810  0035A6  90D8               	bcf	status,0,c
 18811  0035A8  37AD               	rlcf	??_ldexp& (0+255),f,b
 18812  0035AA  37AE               	rlcf	(??_ldexp+1)& (0+255),f,b
 18813  0035AC  51AD               	movf	??_ldexp& (0+255),w,b
 18814  0035AE  27AB               	addwf	ldexp@newexp& (0+255),f,b
 18815  0035B0  51AE               	movf	(??_ldexp+1)& (0+255),w,b
 18816  0035B2  23AC               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 18817  0035B4  AFA9               	btfss	(ldexp@value+1)& (0+255),7,b
 18818  0035B6  D003               	goto	u6900
 18819  0035B8  6BAD               	clrf	??_ldexp& (0+255),b
 18820  0035BA  2BAD               	incf	??_ldexp& (0+255),f,b
 18821  0035BC  D002               	goto	u6908
 18822  0035BE                     u6900:
 18823  0035BE  0100               	movlb	0	; () banked
 18824  0035C0  6BAD               	clrf	??_ldexp& (0+255),b
 18825  0035C2                     u6908:
 18826  0035C2  51AD               	movf	??_ldexp& (0+255),w,b
 18827  0035C4  27AB               	addwf	ldexp@newexp& (0+255),f,b
 18828  0035C6  0E00               	movlw	0
 18829  0035C8  23AC               	addwfc	(ldexp@newexp+1)& (0+255),f,b
 18830  0035CA  AFAC               	btfss	(ldexp@newexp+1)& (0+255),7,b
 18831  0035CC  D00D               	goto	l1954
 18832                           
 18833                           ; BSR set to: 0
 18834  0035CE  0E00               	movlw	0
 18835  0035D0  0101               	movlb	1	; () banked
 18836  0035D2  6F29               	movwf	(_errno+1)& (0+255),b
 18837  0035D4  0E22               	movlw	34
 18838  0035D6  6F28               	movwf	_errno& (0+255),b
 18839  0035D8  0E00               	movlw	0
 18840  0035DA  0100               	movlb	0	; () banked
 18841  0035DC  6FA8               	movwf	?_ldexp& (0+255),b
 18842  0035DE  0E00               	movlw	0
 18843  0035E0  6FA9               	movwf	(?_ldexp+1)& (0+255),b
 18844  0035E2  0E00               	movlw	0
 18845  0035E4                     L21:
 18846  0035E4  6FAA               	movwf	(?_ldexp+2)& (0+255),b
 18847                           
 18848                           ; BSR set to: 0
 18849  0035E6  0012               	return	
 18850  0035E8                     l1954:
 18851                           
 18852                           ; BSR set to: 0
 18853                           
 18854                           ; BSR set to: 0
 18855  0035E8  BFAC               	btfsc	(ldexp@newexp+1)& (0+255),7,b
 18856  0035EA  D017               	goto	l1956
 18857  0035EC  05AC               	decf	(ldexp@newexp+1)& (0+255),w,b
 18858  0035EE  A0D8               	btfss	status,0,c
 18859  0035F0  D014               	goto	l1956
 18860                           
 18861                           ; BSR set to: 0
 18862  0035F2  0E00               	movlw	0
 18863  0035F4  0101               	movlb	1	; () banked
 18864  0035F6  6F29               	movwf	(_errno+1)& (0+255),b
 18865  0035F8  0E22               	movlw	34
 18866  0035FA  6F28               	movwf	_errno& (0+255),b
 18867                           
 18868                           ; BSR set to: 1
 18869  0035FC  0100               	movlb	0	; () banked
 18870  0035FE  AFAA               	btfss	(ldexp@value+2)& (0+255),7,b
 18871  003600  D006               	goto	l1957
 18872                           
 18873                           ; BSR set to: 0
 18874  003602  0EFF               	movlw	255
 18875  003604  6FA8               	movwf	?_ldexp& (0+255),b
 18876  003606  0E7F               	movlw	127
 18877  003608  6FA9               	movwf	(?_ldexp+1)& (0+255),b
 18878  00360A  0EFF               	movlw	255
 18879  00360C  D7EB               	goto	L21
 18880  00360E                     l1957:
 18881                           
 18882                           ; BSR set to: 0
 18883                           
 18884                           ; BSR set to: 0
 18885  00360E  0EFF               	movlw	255
 18886  003610  6FA8               	movwf	?_ldexp& (0+255),b
 18887  003612  0E7F               	movlw	127
 18888  003614  6FA9               	movwf	(?_ldexp+1)& (0+255),b
 18889  003616  0E7F               	movlw	127
 18890  003618  D7E5               	goto	L21
 18891  00361A                     l1956:
 18892                           
 18893                           ; BSR set to: 0
 18894                           
 18895                           ; BSR set to: 0
 18896  00361A  35AC               	rlcf	(ldexp@newexp+1)& (0+255),w,b
 18897  00361C  31AC               	rrcf	(ldexp@newexp+1)& (0+255),w,b
 18898  00361E  6FAE               	movwf	(??_ldexp+1)& (0+255),b
 18899  003620  31AB               	rrcf	ldexp@newexp& (0+255),w,b
 18900  003622  6FAD               	movwf	??_ldexp& (0+255),b
 18901  003624  51AA               	movf	(ldexp@value+2)& (0+255),w,b
 18902  003626  19AD               	xorwf	??_ldexp& (0+255),w,b
 18903  003628  0B80               	andlw	-128
 18904  00362A  19AD               	xorwf	??_ldexp& (0+255),w,b
 18905  00362C  6FAA               	movwf	(ldexp@value+2)& (0+255),b
 18906  00362E  C0AB  F0AD         	movff	ldexp@newexp,??_ldexp
 18907  003632  0E01               	movlw	1
 18908  003634  17AD               	andwf	??_ldexp& (0+255),f,b
 18909  003636  33AD               	rrcf	??_ldexp& (0+255),f,b
 18910  003638  33AD               	rrcf	??_ldexp& (0+255),f,b
 18911  00363A  51A9               	movf	(ldexp@value+1)& (0+255),w,b
 18912  00363C  19AD               	xorwf	??_ldexp& (0+255),w,b
 18913  00363E  0B7F               	andlw	-129
 18914  003640  19AD               	xorwf	??_ldexp& (0+255),w,b
 18915  003642  6FA9               	movwf	(ldexp@value+1)& (0+255),b
 18916                           
 18917                           ; BSR set to: 0
 18918                           
 18919                           ; BSR set to: 0
 18920                           
 18921                           ; BSR set to: 0
 18922  003644  C0A8  F0A8         	movff	ldexp@value,?_ldexp
 18923  003648  C0A9  F0A9         	movff	ldexp@value+1,?_ldexp+1
 18924  00364C  C0AA  F0AA         	movff	ldexp@value+2,?_ldexp+2
 18925  003650  0012               	return	
 18926  003652                     __end_of_ldexp:
 18927                           	opt stack 0
 18928                           tosu	equ	0xFFF
 18929                           tosh	equ	0xFFE
 18930                           tosl	equ	0xFFD
 18931                           pclath	equ	0xFFA
 18932                           tblptru	equ	0xFF8
 18933                           tblptrh	equ	0xFF7
 18934                           tblptrl	equ	0xFF6
 18935                           tablat	equ	0xFF5
 18936                           prodh	equ	0xFF4
 18937                           prodl	equ	0xFF3
 18938                           intcon	equ	0xFF2
 18939                           indf0	equ	0xFEF
 18940                           postinc0	equ	0xFEE
 18941                           plusw0	equ	0xFEB
 18942                           fsr0h	equ	0xFEA
 18943                           fsr0l	equ	0xFE9
 18944                           wreg	equ	0xFE8
 18945                           indf1	equ	0xFE7
 18946                           postinc1	equ	0xFE6
 18947                           postdec1	equ	0xFE5
 18948                           plusw1	equ	0xFE3
 18949                           fsr1h	equ	0xFE2
 18950                           fsr1l	equ	0xFE1
 18951                           indf2	equ	0xFDF
 18952                           postinc2	equ	0xFDE
 18953                           postdec2	equ	0xFDD
 18954                           plusw2	equ	0xFDB
 18955                           fsr2h	equ	0xFDA
 18956                           fsr2l	equ	0xFD9
 18957                           status	equ	0xFD8
 18958                           
 18959 ;; *************** function _floor *****************
 18960 ;; Defined at:
 18961 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 18962 ;; Parameters:    Size  Location     Type
 18963 ;;  x               3   63[BANK0 ] int 
 18964 ;; Auto vars:     Size  Location     Type
 18965 ;;  i               3   66[BANK0 ] int 
 18966 ;;  expon           2   69[BANK0 ] int 
 18967 ;; Return value:  Size  Location     Type
 18968 ;;                  3   63[BANK0 ] int 
 18969 ;; Registers used:
 18970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18971 ;; Tracked objects:
 18972 ;;		On entry : 0/0
 18973 ;;		On exit  : 0/0
 18974 ;;		Unchanged: 0/0
 18975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18976 ;;      Params:         0       3       0       0       0       0       0       0       0
 18977 ;;      Locals:         0       5       0       0       0       0       0       0       0
 18978 ;;      Temps:          0       0       0       0       0       0       0       0       0
 18979 ;;      Totals:         0       8       0       0       0       0       0       0       0
 18980 ;;Total ram usage:        8 bytes
 18981 ;; Hardware stack levels used:    1
 18982 ;; Hardware stack levels required when called:    9
 18983 ;; This function calls:
 18984 ;;		___altoft
 18985 ;;		___ftadd
 18986 ;;		___ftge
 18987 ;;		___fttol
 18988 ;;		_frexp
 18989 ;; This function is called by:
 18990 ;;		_exp
 18991 ;; This function uses a non-reentrant model
 18992 ;;
 18993                           
 18994                           	psect	text93
 18995  00321E                     __ptext93:
 18996                           	opt stack 0
 18997  00321E                     _floor:
 18998                           	opt stack 17
 18999                           
 19000                           ; BSR set to: 0
 19001                           ;incstack = 0
 19002  00321E  C09F  F060         	movff	floor@x,frexp@value
 19003  003222  C0A0  F061         	movff	floor@x+1,frexp@value+1
 19004  003226  C0A1  F062         	movff	floor@x+2,frexp@value+2
 19005  00322A  0EA5               	movlw	low floor@expon
 19006  00322C  0100               	movlb	0	; () banked
 19007  00322E  6F63               	movwf	frexp@eptr& (0+255),b
 19008  003230  0E00               	movlw	high floor@expon
 19009  003232  6F64               	movwf	(frexp@eptr+1)& (0+255),b
 19010  003234  EC8B  F020         	call	_frexp	;wreg free
 19011  003238  0100               	movlb	0	; () banked
 19012  00323A  AFA6               	btfss	(floor@expon+1)& (0+255),7,b
 19013  00323C  D010               	goto	l1939
 19014                           
 19015                           ; BSR set to: 0
 19016  00323E  AFA1               	btfss	(floor@x+2)& (0+255),7,b
 19017  003240  D007               	goto	l1940
 19018                           
 19019                           ; BSR set to: 0
 19020  003242  0E00               	movlw	0
 19021  003244  6F9F               	movwf	?_floor& (0+255),b
 19022  003246  0E80               	movlw	128
 19023  003248  6FA0               	movwf	(?_floor+1)& (0+255),b
 19024  00324A  0EBF               	movlw	191
 19025  00324C  6FA1               	movwf	(?_floor+2)& (0+255),b
 19026                           
 19027                           ; BSR set to: 0
 19028  00324E  0012               	return	
 19029  003250                     l1940:
 19030                           
 19031                           ; BSR set to: 0
 19032                           
 19033                           ; BSR set to: 0
 19034  003250  0E00               	movlw	0
 19035  003252  6F9F               	movwf	?_floor& (0+255),b
 19036  003254  0E00               	movlw	0
 19037  003256  6FA0               	movwf	(?_floor+1)& (0+255),b
 19038  003258  0E00               	movlw	0
 19039  00325A  6FA1               	movwf	(?_floor+2)& (0+255),b
 19040                           
 19041                           ; BSR set to: 0
 19042  00325C  0012               	return	
 19043  00325E                     l1939:
 19044                           
 19045                           ; BSR set to: 0
 19046                           
 19047                           ; BSR set to: 0
 19048  00325E  51A6               	movf	(floor@expon+1)& (0+255),w,b
 19049  003260  E104               	bnz	u6860
 19050  003262  0E15               	movlw	21
 19051  003264  5DA5               	subwf	floor@expon& (0+255),w,b
 19052  003266  A0D8               	btfss	status,0,c
 19053  003268  D007               	goto	l1942
 19054  00326A                     u6860:
 19055                           
 19056                           ; BSR set to: 0
 19057  00326A  C09F  F09F         	movff	floor@x,?_floor
 19058  00326E  C0A0  F0A0         	movff	floor@x+1,?_floor+1
 19059  003272  C0A1  F0A1         	movff	floor@x+2,?_floor+2
 19060  003276  0012               	return	
 19061  003278                     l1942:
 19062                           
 19063                           ; BSR set to: 0
 19064                           
 19065                           ; BSR set to: 0
 19066  003278  C09F  F090         	movff	floor@x,___fttol@f1
 19067  00327C  C0A0  F091         	movff	floor@x+1,___fttol@f1+1
 19068  003280  C0A1  F092         	movff	floor@x+2,___fttol@f1+2
 19069  003284  EC46  F016         	call	___fttol	;wreg free
 19070  003288  C090  F068         	movff	?___fttol,___altoft@c
 19071  00328C  C091  F069         	movff	?___fttol+1,___altoft@c+1
 19072  003290  C092  F06A         	movff	?___fttol+2,___altoft@c+2
 19073  003294  C093  F06B         	movff	?___fttol+3,___altoft@c+3
 19074  003298  ECA9  F022         	call	___altoft	;wreg free
 19075  00329C  C068  F0A2         	movff	?___altoft,floor@i
 19076  0032A0  C069  F0A3         	movff	?___altoft+1,floor@i+1
 19077  0032A4  C06A  F0A4         	movff	?___altoft+2,floor@i+2
 19078  0032A8  C09F  F060         	movff	floor@x,___ftge@ff1
 19079  0032AC  C0A0  F061         	movff	floor@x+1,___ftge@ff1+1
 19080  0032B0  C0A1  F062         	movff	floor@x+2,___ftge@ff1+2
 19081  0032B4  C0A2  F063         	movff	floor@i,___ftge@ff2
 19082  0032B8  C0A3  F064         	movff	floor@i+1,___ftge@ff2+1
 19083  0032BC  C0A4  F065         	movff	floor@i+2,___ftge@ff2+2
 19084  0032C0  ECD5  F020         	call	___ftge	;wreg free
 19085  0032C4  0100               	movlb	0	; () banked
 19086  0032C6  B0D8               	btfsc	status,0,c
 19087  0032C8  D015               	goto	l1943
 19088                           
 19089                           ; BSR set to: 0
 19090  0032CA  C0A2  F090         	movff	floor@i,___ftadd@f1
 19091  0032CE  C0A3  F091         	movff	floor@i+1,___ftadd@f1+1
 19092  0032D2  C0A4  F092         	movff	floor@i+2,___ftadd@f1+2
 19093  0032D6  0E00               	movlw	0
 19094  0032D8  6F93               	movwf	___ftadd@f2& (0+255),b
 19095  0032DA  0E80               	movlw	128
 19096  0032DC  6F94               	movwf	(___ftadd@f2+1)& (0+255),b
 19097  0032DE  0EBF               	movlw	191
 19098  0032E0  6F95               	movwf	(___ftadd@f2+2)& (0+255),b
 19099  0032E2  ECDE  F00C         	call	___ftadd	;wreg free
 19100  0032E6  C090  F09F         	movff	?___ftadd,?_floor
 19101  0032EA  C091  F0A0         	movff	?___ftadd+1,?_floor+1
 19102  0032EE  C092  F0A1         	movff	?___ftadd+2,?_floor+2
 19103  0032F2  0012               	return	
 19104  0032F4                     l1943:
 19105                           
 19106                           ; BSR set to: 0
 19107  0032F4  C0A2  F09F         	movff	floor@i,?_floor
 19108  0032F8  C0A3  F0A0         	movff	floor@i+1,?_floor+1
 19109  0032FC  C0A4  F0A1         	movff	floor@i+2,?_floor+2
 19110  003300  0012               	return		;funcret
 19111  003302                     __end_of_floor:
 19112                           	opt stack 0
 19113                           tosu	equ	0xFFF
 19114                           tosh	equ	0xFFE
 19115                           tosl	equ	0xFFD
 19116                           pclath	equ	0xFFA
 19117                           tblptru	equ	0xFF8
 19118                           tblptrh	equ	0xFF7
 19119                           tblptrl	equ	0xFF6
 19120                           tablat	equ	0xFF5
 19121                           prodh	equ	0xFF4
 19122                           prodl	equ	0xFF3
 19123                           intcon	equ	0xFF2
 19124                           indf0	equ	0xFEF
 19125                           postinc0	equ	0xFEE
 19126                           plusw0	equ	0xFEB
 19127                           fsr0h	equ	0xFEA
 19128                           fsr0l	equ	0xFE9
 19129                           wreg	equ	0xFE8
 19130                           indf1	equ	0xFE7
 19131                           postinc1	equ	0xFE6
 19132                           postdec1	equ	0xFE5
 19133                           plusw1	equ	0xFE3
 19134                           fsr1h	equ	0xFE2
 19135                           fsr1l	equ	0xFE1
 19136                           indf2	equ	0xFDF
 19137                           postinc2	equ	0xFDE
 19138                           postdec2	equ	0xFDD
 19139                           plusw2	equ	0xFDB
 19140                           fsr2h	equ	0xFDA
 19141                           fsr2l	equ	0xFD9
 19142                           status	equ	0xFD8
 19143                           
 19144 ;; *************** function _frexp *****************
 19145 ;; Defined at:
 19146 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 19147 ;; Parameters:    Size  Location     Type
 19148 ;;  value           3    0[BANK0 ] int 
 19149 ;;  eptr            2    3[BANK0 ] PTR int 
 19150 ;;		 -> log@exponent(2), floor@expon(2), 
 19151 ;; Auto vars:     Size  Location     Type
 19152 ;;		None
 19153 ;; Return value:  Size  Location     Type
 19154 ;;                  3    0[BANK0 ] PTR int 
 19155 ;; Registers used:
 19156 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19157 ;; Tracked objects:
 19158 ;;		On entry : 0/0
 19159 ;;		On exit  : 0/0
 19160 ;;		Unchanged: 0/0
 19161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19162 ;;      Params:         0       5       0       0       0       0       0       0       0
 19163 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19164 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19165 ;;      Totals:         0       7       0       0       0       0       0       0       0
 19166 ;;Total ram usage:        7 bytes
 19167 ;; Hardware stack levels used:    1
 19168 ;; Hardware stack levels required when called:    7
 19169 ;; This function calls:
 19170 ;;		Nothing
 19171 ;; This function is called by:
 19172 ;;		_floor
 19173 ;;		_log
 19174 ;; This function uses a non-reentrant model
 19175 ;;
 19176                           
 19177                           	psect	text94
 19178  004116                     __ptext94:
 19179                           	opt stack 0
 19180  004116                     _frexp:
 19181                           	opt stack 19
 19182                           
 19183                           ;incstack = 0
 19184  004116  0100               	movlb	0	; () banked
 19185  004118  5160               	movf	frexp@value& (0+255),w,b
 19186  00411A  1161               	iorwf	(frexp@value+1)& (0+255),w,b
 19187  00411C  1162               	iorwf	(frexp@value+2)& (0+255),w,b
 19188  00411E  A4D8               	btfss	status,2,c
 19189  004120  D00F               	goto	l1948
 19190                           
 19191                           ; BSR set to: 0
 19192  004122  C063  FFD9         	movff	frexp@eptr,fsr2l
 19193  004126  C064  FFDA         	movff	frexp@eptr+1,fsr2h
 19194  00412A  0E00               	movlw	0
 19195  00412C  6EDE               	movwf	postinc2,c
 19196  00412E  0E00               	movlw	0
 19197  004130  6EDD               	movwf	postdec2,c
 19198                           
 19199                           ; BSR set to: 0
 19200  004132  0E00               	movlw	0
 19201  004134  6F60               	movwf	?_frexp& (0+255),b
 19202  004136  0E00               	movlw	0
 19203  004138  6F61               	movwf	(?_frexp+1)& (0+255),b
 19204  00413A  0E00               	movlw	0
 19205  00413C  6F62               	movwf	(?_frexp+2)& (0+255),b
 19206                           
 19207                           ; BSR set to: 0
 19208  00413E  0012               	return	
 19209  004140                     l1948:
 19210                           
 19211                           ; BSR set to: 0
 19212                           
 19213                           ; BSR set to: 0
 19214  004140  5162               	movf	(frexp@value+2)& (0+255),w,b
 19215  004142  0B7F               	andlw	127
 19216  004144  6F65               	movwf	??_frexp& (0+255),b
 19217  004146  6B66               	clrf	(??_frexp+1)& (0+255),b
 19218  004148  90D8               	bcf	status,0,c
 19219  00414A  3765               	rlcf	??_frexp& (0+255),f,b
 19220  00414C  3766               	rlcf	(??_frexp+1)& (0+255),f,b
 19221  00414E  C063  FFD9         	movff	frexp@eptr,fsr2l
 19222  004152  C064  FFDA         	movff	frexp@eptr+1,fsr2h
 19223  004156  C065  FFDE         	movff	??_frexp,postinc2
 19224  00415A  C066  FFDD         	movff	??_frexp+1,postdec2
 19225  00415E  AF61               	btfss	(frexp@value+1)& (0+255),7,b
 19226  004160  D003               	goto	u6150
 19227  004162  6B65               	clrf	??_frexp& (0+255),b
 19228  004164  2B65               	incf	??_frexp& (0+255),f,b
 19229  004166  D002               	goto	u6158
 19230  004168                     u6150:
 19231  004168  0100               	movlb	0	; () banked
 19232  00416A  6B65               	clrf	??_frexp& (0+255),b
 19233  00416C                     u6158:
 19234  00416C  5165               	movf	??_frexp& (0+255),w,b
 19235  00416E  C063  FFD9         	movff	frexp@eptr,fsr2l
 19236  004172  C064  FFDA         	movff	frexp@eptr+1,fsr2h
 19237  004176  12DE               	iorwf	postinc2,f,c
 19238  004178  0E00               	movlw	0
 19239  00417A  12DD               	iorwf	postdec2,f,c
 19240                           
 19241                           ; BSR set to: 0
 19242  00417C  C063  FFD9         	movff	frexp@eptr,fsr2l
 19243  004180  C064  FFDA         	movff	frexp@eptr+1,fsr2h
 19244  004184  0E82               	movlw	130
 19245  004186  26DE               	addwf	postinc2,f,c
 19246  004188  0EFF               	movlw	255
 19247  00418A  22DD               	addwfc	postdec2,f,c
 19248                           
 19249                           ; BSR set to: 0
 19250  00418C  8162               	bsf	(frexp@value+2)& (0+255),0,b
 19251  00418E  8362               	bsf	(frexp@value+2)& (0+255),1,b
 19252  004190  8562               	bsf	(frexp@value+2)& (0+255),2,b
 19253  004192  8762               	bsf	(frexp@value+2)& (0+255),3,b
 19254  004194  8962               	bsf	(frexp@value+2)& (0+255),4,b
 19255  004196  8B62               	bsf	(frexp@value+2)& (0+255),5,b
 19256  004198  9D62               	bcf	(frexp@value+2)& (0+255),6,b
 19257                           
 19258                           ; BSR set to: 0
 19259  00419A  9F61               	bcf	(frexp@value+1)& (0+255),7,b
 19260                           
 19261                           ; BSR set to: 0
 19262  00419C  C060  F060         	movff	frexp@value,?_frexp
 19263  0041A0  C061  F061         	movff	frexp@value+1,?_frexp+1
 19264  0041A4  C062  F062         	movff	frexp@value+2,?_frexp+2
 19265  0041A8  0012               	return	
 19266  0041AA                     __end_of_frexp:
 19267                           	opt stack 0
 19268                           tosu	equ	0xFFF
 19269                           tosh	equ	0xFFE
 19270                           tosl	equ	0xFFD
 19271                           pclath	equ	0xFFA
 19272                           tblptru	equ	0xFF8
 19273                           tblptrh	equ	0xFF7
 19274                           tblptrl	equ	0xFF6
 19275                           tablat	equ	0xFF5
 19276                           prodh	equ	0xFF4
 19277                           prodl	equ	0xFF3
 19278                           intcon	equ	0xFF2
 19279                           indf0	equ	0xFEF
 19280                           postinc0	equ	0xFEE
 19281                           plusw0	equ	0xFEB
 19282                           fsr0h	equ	0xFEA
 19283                           fsr0l	equ	0xFE9
 19284                           wreg	equ	0xFE8
 19285                           indf1	equ	0xFE7
 19286                           postinc1	equ	0xFE6
 19287                           postdec1	equ	0xFE5
 19288                           plusw1	equ	0xFE3
 19289                           fsr1h	equ	0xFE2
 19290                           fsr1l	equ	0xFE1
 19291                           indf2	equ	0xFDF
 19292                           postinc2	equ	0xFDE
 19293                           postdec2	equ	0xFDD
 19294                           plusw2	equ	0xFDB
 19295                           fsr2h	equ	0xFDA
 19296                           fsr2l	equ	0xFD9
 19297                           status	equ	0xFD8
 19298                           
 19299 ;; *************** function ___fttol *****************
 19300 ;; Defined at:
 19301 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 19302 ;; Parameters:    Size  Location     Type
 19303 ;;  f1              3   48[BANK0 ] float 
 19304 ;; Auto vars:     Size  Location     Type
 19305 ;;  lval            4   58[BANK0 ] unsigned long 
 19306 ;;  exp1            1   62[BANK0 ] unsigned char 
 19307 ;;  sign1           1   57[BANK0 ] unsigned char 
 19308 ;; Return value:  Size  Location     Type
 19309 ;;                  4   48[BANK0 ] long 
 19310 ;; Registers used:
 19311 ;;		wreg, status,2, status,0
 19312 ;; Tracked objects:
 19313 ;;		On entry : 0/0
 19314 ;;		On exit  : 0/0
 19315 ;;		Unchanged: 0/0
 19316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19317 ;;      Params:         0       4       0       0       0       0       0       0       0
 19318 ;;      Locals:         0       6       0       0       0       0       0       0       0
 19319 ;;      Temps:          0       5       0       0       0       0       0       0       0
 19320 ;;      Totals:         0      15       0       0       0       0       0       0       0
 19321 ;;Total ram usage:       15 bytes
 19322 ;; Hardware stack levels used:    1
 19323 ;; Hardware stack levels required when called:    7
 19324 ;; This function calls:
 19325 ;;		Nothing
 19326 ;; This function is called by:
 19327 ;;		_Display_Init
 19328 ;;		_Sequencer_StartTimer
 19329 ;;		_InitDigiPot
 19330 ;;		_Zip
 19331 ;;		_UnZip
 19332 ;;		_I2C_Init
 19333 ;;		_pow
 19334 ;;		_exp
 19335 ;;		_floor
 19336 ;; This function uses a non-reentrant model
 19337 ;;
 19338                           
 19339                           	psect	text95
 19340  002C8C                     __ptext95:
 19341                           	opt stack 0
 19342  002C8C                     ___fttol:
 19343                           	opt stack 22
 19344                           
 19345                           ; BSR set to: 0
 19346                           ;incstack = 0
 19347  002C8C  C092  F094         	movff	___fttol@f1+2,??___fttol
 19348  002C90  0100               	movlb	0	; () banked
 19349  002C92  6B95               	clrf	(??___fttol+1)& (0+255),b
 19350  002C94  6B96               	clrf	(??___fttol+2)& (0+255),b
 19351  002C96  3591               	rlcf	(___fttol@f1+1)& (0+255),w,b
 19352  002C98  3794               	rlcf	??___fttol& (0+255),f,b
 19353  002C9A  E301               	bnc	u6061
 19354  002C9C  8195               	bsf	(??___fttol+1)& (0+255),0,b
 19355  002C9E                     u6061:
 19356  002C9E  5194               	movf	??___fttol& (0+255),w,b
 19357  002CA0  6F9E               	movwf	___fttol@exp1& (0+255),b
 19358  002CA2  519E               	movf	___fttol@exp1& (0+255),w,b
 19359  002CA4  A4D8               	btfss	status,2,c
 19360  002CA6  D009               	goto	l1630
 19361                           
 19362                           ; BSR set to: 0
 19363  002CA8  0E00               	movlw	0
 19364  002CAA  6F90               	movwf	?___fttol& (0+255),b
 19365  002CAC  0E00               	movlw	0
 19366  002CAE  6F91               	movwf	(?___fttol+1)& (0+255),b
 19367  002CB0  0E00               	movlw	0
 19368  002CB2  6F92               	movwf	(?___fttol+2)& (0+255),b
 19369  002CB4  0E00               	movlw	0
 19370  002CB6  6F93               	movwf	(?___fttol+3)& (0+255),b
 19371                           
 19372                           ; BSR set to: 0
 19373  002CB8  0012               	return	
 19374  002CBA                     l1630:
 19375                           
 19376                           ; BSR set to: 0
 19377                           
 19378                           ; BSR set to: 0
 19379  002CBA  0E17               	movlw	23
 19380  002CBC  6F94               	movwf	??___fttol& (0+255),b
 19381  002CBE  C090  F095         	movff	___fttol@f1,??___fttol+1
 19382  002CC2  C091  F096         	movff	___fttol@f1+1,??___fttol+2
 19383  002CC6  C092  F097         	movff	___fttol@f1+2,??___fttol+3
 19384  002CCA  2994               	incf	??___fttol& (0+255),w,b
 19385  002CCC  6F98               	movwf	(??___fttol+4)& (0+255),b
 19386  002CCE  D004               	goto	u6080
 19387  002CD0                     u6085:
 19388  002CD0  90D8               	bcf	status,0,c
 19389  002CD2  3397               	rrcf	(??___fttol+3)& (0+255),f,b
 19390  002CD4  3396               	rrcf	(??___fttol+2)& (0+255),f,b
 19391  002CD6  3395               	rrcf	(??___fttol+1)& (0+255),f,b
 19392  002CD8                     u6080:
 19393  002CD8  2F98               	decfsz	(??___fttol+4)& (0+255),f,b
 19394  002CDA  D7FA               	goto	u6085
 19395  002CDC  0100               	movlb	0	; () banked
 19396  002CDE  5195               	movf	(??___fttol+1)& (0+255),w,b
 19397  002CE0  6F99               	movwf	___fttol@sign1& (0+255),b
 19398                           
 19399                           ; BSR set to: 0
 19400  002CE2  8F91               	bsf	(___fttol@f1+1)& (0+255),7,b
 19401                           
 19402                           ; BSR set to: 0
 19403  002CE4  0EFF               	movlw	255
 19404  002CE6  1790               	andwf	___fttol@f1& (0+255),f,b
 19405  002CE8  0EFF               	movlw	255
 19406  002CEA  1791               	andwf	(___fttol@f1+1)& (0+255),f,b
 19407  002CEC  0E00               	movlw	0
 19408  002CEE  1792               	andwf	(___fttol@f1+2)& (0+255),f,b
 19409                           
 19410                           ; BSR set to: 0
 19411  002CF0  5190               	movf	___fttol@f1& (0+255),w,b
 19412  002CF2  6F9A               	movwf	___fttol@lval& (0+255),b
 19413  002CF4  5191               	movf	(___fttol@f1+1)& (0+255),w,b
 19414  002CF6  6F9B               	movwf	(___fttol@lval+1)& (0+255),b
 19415  002CF8  5192               	movf	(___fttol@f1+2)& (0+255),w,b
 19416  002CFA  6F9C               	movwf	(___fttol@lval+2)& (0+255),b
 19417  002CFC  6B9D               	clrf	(___fttol@lval+3)& (0+255),b
 19418                           
 19419                           ; BSR set to: 0
 19420  002CFE  0E8E               	movlw	142
 19421  002D00  5F9E               	subwf	___fttol@exp1& (0+255),f,b
 19422                           
 19423                           ; BSR set to: 0
 19424  002D02  AF9E               	btfss	___fttol@exp1& (0+255),7,b
 19425  002D04  D016               	goto	l1632
 19426                           
 19427                           ; BSR set to: 0
 19428  002D06  519E               	movf	___fttol@exp1& (0+255),w,b
 19429  002D08  0A80               	xorlw	128
 19430  002D0A  0F8F               	addlw	143
 19431  002D0C  B0D8               	btfsc	status,0,c
 19432  002D0E  D009               	goto	l1633
 19433                           
 19434                           ; BSR set to: 0
 19435  002D10  0E00               	movlw	0
 19436  002D12  6F90               	movwf	?___fttol& (0+255),b
 19437  002D14  0E00               	movlw	0
 19438  002D16  6F91               	movwf	(?___fttol+1)& (0+255),b
 19439  002D18  0E00               	movlw	0
 19440  002D1A  6F92               	movwf	(?___fttol+2)& (0+255),b
 19441  002D1C  0E00               	movlw	0
 19442  002D1E  6F93               	movwf	(?___fttol+3)& (0+255),b
 19443                           
 19444                           ; BSR set to: 0
 19445  002D20  0012               	return	
 19446  002D22                     l1633:
 19447                           
 19448                           ; BSR set to: 0
 19449                           
 19450                           ; BSR set to: 0
 19451                           
 19452                           ; BSR set to: 0
 19453  002D22  90D8               	bcf	status,0,c
 19454  002D24  339D               	rrcf	(___fttol@lval+3)& (0+255),f,b
 19455  002D26  339C               	rrcf	(___fttol@lval+2)& (0+255),f,b
 19456  002D28  339B               	rrcf	(___fttol@lval+1)& (0+255),f,b
 19457  002D2A  339A               	rrcf	___fttol@lval& (0+255),f,b
 19458                           
 19459                           ; BSR set to: 0
 19460  002D2C  3F9E               	incfsz	___fttol@exp1& (0+255),f,b
 19461  002D2E  D7F9               	goto	l1633
 19462                           
 19463                           ; BSR set to: 0
 19464  002D30  D015               	goto	u6120
 19465  002D32                     l1632:
 19466                           
 19467                           ; BSR set to: 0
 19468                           
 19469                           ; BSR set to: 0
 19470  002D32  0E17               	movlw	23
 19471  002D34  659E               	cpfsgt	___fttol@exp1& (0+255),b
 19472  002D36  D00F               	goto	l1638
 19473                           
 19474                           ; BSR set to: 0
 19475  002D38  0E00               	movlw	0
 19476  002D3A  6F90               	movwf	?___fttol& (0+255),b
 19477  002D3C  0E00               	movlw	0
 19478  002D3E  6F91               	movwf	(?___fttol+1)& (0+255),b
 19479  002D40  0E00               	movlw	0
 19480  002D42  6F92               	movwf	(?___fttol+2)& (0+255),b
 19481  002D44  0E00               	movlw	0
 19482  002D46  6F93               	movwf	(?___fttol+3)& (0+255),b
 19483                           
 19484                           ; BSR set to: 0
 19485  002D48  0012               	return	
 19486  002D4A                     
 19487                           ; BSR set to: 0
 19488                           
 19489                           ; BSR set to: 0
 19490  002D4A  90D8               	bcf	status,0,c
 19491  002D4C  379A               	rlcf	___fttol@lval& (0+255),f,b
 19492  002D4E  379B               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19493  002D50  379C               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19494  002D52  379D               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19495  002D54  079E               	decf	___fttol@exp1& (0+255),f,b
 19496  002D56                     l1638:
 19497                           
 19498                           ; BSR set to: 0
 19499                           
 19500                           ; BSR set to: 0
 19501  002D56  519E               	movf	___fttol@exp1& (0+255),w,b
 19502  002D58  A4D8               	btfss	status,2,c
 19503  002D5A  D7F7               	goto	l1639
 19504  002D5C                     u6120:
 19505                           
 19506                           ; BSR set to: 0
 19507                           
 19508                           ; BSR set to: 0
 19509                           
 19510                           ; BSR set to: 0
 19511  002D5C  5199               	movf	___fttol@sign1& (0+255),w,b
 19512  002D5E  B4D8               	btfsc	status,2,c
 19513  002D60  D008               	goto	l1641
 19514                           
 19515                           ; BSR set to: 0
 19516  002D62  1F9D               	comf	(___fttol@lval+3)& (0+255),f,b
 19517  002D64  1F9C               	comf	(___fttol@lval+2)& (0+255),f,b
 19518  002D66  1F9B               	comf	(___fttol@lval+1)& (0+255),f,b
 19519  002D68  6D9A               	negf	___fttol@lval& (0+255),b
 19520  002D6A  0E00               	movlw	0
 19521  002D6C  239B               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19522  002D6E  239C               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19523  002D70  239D               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19524  002D72                     l1641:
 19525                           
 19526                           ; BSR set to: 0
 19527                           
 19528                           ; BSR set to: 0
 19529  002D72  C09A  F090         	movff	___fttol@lval,?___fttol
 19530  002D76  C09B  F091         	movff	___fttol@lval+1,?___fttol+1
 19531  002D7A  C09C  F092         	movff	___fttol@lval+2,?___fttol+2
 19532  002D7E  C09D  F093         	movff	___fttol@lval+3,?___fttol+3
 19533  002D82  0012               	return	
 19534  002D84                     __end_of___fttol:
 19535                           	opt stack 0
 19536                           tosu	equ	0xFFF
 19537                           tosh	equ	0xFFE
 19538                           tosl	equ	0xFFD
 19539                           pclath	equ	0xFFA
 19540                           tblptru	equ	0xFF8
 19541                           tblptrh	equ	0xFF7
 19542                           tblptrl	equ	0xFF6
 19543                           tablat	equ	0xFF5
 19544                           prodh	equ	0xFF4
 19545                           prodl	equ	0xFF3
 19546                           intcon	equ	0xFF2
 19547                           indf0	equ	0xFEF
 19548                           postinc0	equ	0xFEE
 19549                           plusw0	equ	0xFEB
 19550                           fsr0h	equ	0xFEA
 19551                           fsr0l	equ	0xFE9
 19552                           wreg	equ	0xFE8
 19553                           indf1	equ	0xFE7
 19554                           postinc1	equ	0xFE6
 19555                           postdec1	equ	0xFE5
 19556                           plusw1	equ	0xFE3
 19557                           fsr1h	equ	0xFE2
 19558                           fsr1l	equ	0xFE1
 19559                           indf2	equ	0xFDF
 19560                           postinc2	equ	0xFDE
 19561                           postdec2	equ	0xFDD
 19562                           plusw2	equ	0xFDB
 19563                           fsr2h	equ	0xFDA
 19564                           fsr2l	equ	0xFD9
 19565                           status	equ	0xFD8
 19566                           
 19567 ;; *************** function ___ftge *****************
 19568 ;; Defined at:
 19569 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 19570 ;; Parameters:    Size  Location     Type
 19571 ;;  ff1             3    0[BANK0 ] float 
 19572 ;;  ff2             3    3[BANK0 ] float 
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;		None
 19575 ;; Return value:  Size  Location     Type
 19576 ;;		None               void
 19577 ;; Registers used:
 19578 ;;		wreg, status,2, status,0
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19584 ;;      Params:         0       6       0       0       0       0       0       0       0
 19585 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19586 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19587 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19588 ;;Total ram usage:        9 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; Hardware stack levels required when called:    7
 19591 ;; This function calls:
 19592 ;;		Nothing
 19593 ;; This function is called by:
 19594 ;;		_pow
 19595 ;;		_exp
 19596 ;;		_floor
 19597 ;; This function uses a non-reentrant model
 19598 ;;
 19599                           
 19600                           	psect	text96
 19601  0041AA                     __ptext96:
 19602                           	opt stack 0
 19603  0041AA                     ___ftge:
 19604                           	opt stack 18
 19605                           
 19606                           ; BSR set to: 0
 19607                           ;incstack = 0
 19608  0041AA  0100               	movlb	0	; () banked
 19609  0041AC  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
 19610  0041AE  D016               	goto	l1602
 19611                           
 19612                           ; BSR set to: 0
 19613  0041B0  C060  F066         	movff	___ftge@ff1,??___ftge
 19614  0041B4  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
 19615  0041B8  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
 19616  0041BC  1F66               	comf	??___ftge& (0+255),f,b
 19617  0041BE  1F67               	comf	(??___ftge+1)& (0+255),f,b
 19618  0041C0  1F68               	comf	(??___ftge+2)& (0+255),f,b
 19619  0041C2  2B66               	incf	??___ftge& (0+255),f,b
 19620  0041C4  0E00               	movlw	0
 19621  0041C6  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 19622  0041C8  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 19623  0041CA  0E00               	movlw	0
 19624  0041CC  2566               	addwf	??___ftge& (0+255),w,b
 19625  0041CE  6F60               	movwf	___ftge@ff1& (0+255),b
 19626  0041D0  0E00               	movlw	0
 19627  0041D2  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 19628  0041D4  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
 19629  0041D6  0E80               	movlw	128
 19630  0041D8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 19631  0041DA  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
 19632  0041DC                     l1602:
 19633                           
 19634                           ; BSR set to: 0
 19635                           
 19636                           ; BSR set to: 0
 19637  0041DC  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
 19638  0041DE  D016               	goto	l1603
 19639                           
 19640                           ; BSR set to: 0
 19641  0041E0  C063  F066         	movff	___ftge@ff2,??___ftge
 19642  0041E4  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
 19643  0041E8  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
 19644  0041EC  1F66               	comf	??___ftge& (0+255),f,b
 19645  0041EE  1F67               	comf	(??___ftge+1)& (0+255),f,b
 19646  0041F0  1F68               	comf	(??___ftge+2)& (0+255),f,b
 19647  0041F2  2B66               	incf	??___ftge& (0+255),f,b
 19648  0041F4  0E00               	movlw	0
 19649  0041F6  2367               	addwfc	(??___ftge+1)& (0+255),f,b
 19650  0041F8  2368               	addwfc	(??___ftge+2)& (0+255),f,b
 19651  0041FA  0E00               	movlw	0
 19652  0041FC  2566               	addwf	??___ftge& (0+255),w,b
 19653  0041FE  6F63               	movwf	___ftge@ff2& (0+255),b
 19654  004200  0E00               	movlw	0
 19655  004202  2167               	addwfc	(??___ftge+1)& (0+255),w,b
 19656  004204  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
 19657  004206  0E80               	movlw	128
 19658  004208  2168               	addwfc	(??___ftge+2)& (0+255),w,b
 19659  00420A  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
 19660  00420C                     l1603:
 19661                           
 19662                           ; BSR set to: 0
 19663                           
 19664                           ; BSR set to: 0
 19665  00420C  0E00               	movlw	0
 19666  00420E  1B60               	xorwf	___ftge@ff1& (0+255),f,b
 19667  004210  0E00               	movlw	0
 19668  004212  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 19669  004214  0E80               	movlw	128
 19670  004216  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 19671                           
 19672                           ; BSR set to: 0
 19673  004218  0E00               	movlw	0
 19674  00421A  1B63               	xorwf	___ftge@ff2& (0+255),f,b
 19675  00421C  0E00               	movlw	0
 19676  00421E  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 19677  004220  0E80               	movlw	128
 19678  004222  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 19679  004224  5163               	movf	___ftge@ff2& (0+255),w,b
 19680  004226  5D60               	subwf	___ftge@ff1& (0+255),w,b
 19681  004228  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
 19682  00422A  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 19683  00422C  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
 19684  00422E  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 19685  004230  B0D8               	btfsc	status,0,c
 19686  004232  D002               	goto	l5193
 19687                           
 19688                           ; BSR set to: 0
 19689  004234  90D8               	bcf	status,0,c
 19690  004236  0012               	return	
 19691  004238                     l5193:
 19692                           
 19693                           ; BSR set to: 0
 19694                           
 19695                           ; BSR set to: 0
 19696  004238  80D8               	bsf	status,0,c
 19697                           
 19698                           ; BSR set to: 0
 19699  00423A  0012               	return	
 19700  00423C                     __end_of___ftge:
 19701                           	opt stack 0
 19702                           tosu	equ	0xFFF
 19703                           tosh	equ	0xFFE
 19704                           tosl	equ	0xFFD
 19705                           pclath	equ	0xFFA
 19706                           tblptru	equ	0xFF8
 19707                           tblptrh	equ	0xFF7
 19708                           tblptrl	equ	0xFF6
 19709                           tablat	equ	0xFF5
 19710                           prodh	equ	0xFF4
 19711                           prodl	equ	0xFF3
 19712                           intcon	equ	0xFF2
 19713                           indf0	equ	0xFEF
 19714                           postinc0	equ	0xFEE
 19715                           plusw0	equ	0xFEB
 19716                           fsr0h	equ	0xFEA
 19717                           fsr0l	equ	0xFE9
 19718                           wreg	equ	0xFE8
 19719                           indf1	equ	0xFE7
 19720                           postinc1	equ	0xFE6
 19721                           postdec1	equ	0xFE5
 19722                           plusw1	equ	0xFE3
 19723                           fsr1h	equ	0xFE2
 19724                           fsr1l	equ	0xFE1
 19725                           indf2	equ	0xFDF
 19726                           postinc2	equ	0xFDE
 19727                           postdec2	equ	0xFDD
 19728                           plusw2	equ	0xFDB
 19729                           fsr2h	equ	0xFDA
 19730                           fsr2l	equ	0xFD9
 19731                           status	equ	0xFD8
 19732                           
 19733 ;; *************** function ___altoft *****************
 19734 ;; Defined at:
 19735 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 19736 ;; Parameters:    Size  Location     Type
 19737 ;;  c               4    8[BANK0 ] long 
 19738 ;; Auto vars:     Size  Location     Type
 19739 ;;  sign            1   17[BANK0 ] unsigned char 
 19740 ;;  exp             1   16[BANK0 ] unsigned char 
 19741 ;; Return value:  Size  Location     Type
 19742 ;;                  3    8[BANK0 ] float 
 19743 ;; Registers used:
 19744 ;;		wreg, status,2, status,0, cstack
 19745 ;; Tracked objects:
 19746 ;;		On entry : 0/0
 19747 ;;		On exit  : 0/0
 19748 ;;		Unchanged: 0/0
 19749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19750 ;;      Params:         0       4       0       0       0       0       0       0       0
 19751 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19752 ;;      Temps:          0       4       0       0       0       0       0       0       0
 19753 ;;      Totals:         0      10       0       0       0       0       0       0       0
 19754 ;;Total ram usage:       10 bytes
 19755 ;; Hardware stack levels used:    1
 19756 ;; Hardware stack levels required when called:    8
 19757 ;; This function calls:
 19758 ;;		___ftpack
 19759 ;; This function is called by:
 19760 ;;		_InitDigiPot
 19761 ;;		_I2C_Init
 19762 ;;		_floor
 19763 ;; This function uses a non-reentrant model
 19764 ;;
 19765                           
 19766                           	psect	text97
 19767  004552                     __ptext97:
 19768                           	opt stack 0
 19769  004552                     ___altoft:
 19770                           	opt stack 19
 19771                           
 19772                           ; BSR set to: 0
 19773                           ;incstack = 0
 19774  004552  0E00               	movlw	0
 19775  004554  0100               	movlb	0	; () banked
 19776  004556  6F71               	movwf	___altoft@sign& (0+255),b
 19777  004558  0E8E               	movlw	142
 19778  00455A  6F70               	movwf	___altoft@exp& (0+255),b
 19779                           
 19780                           ; BSR set to: 0
 19781  00455C  AF6B               	btfss	(___altoft@c+3)& (0+255),7,b
 19782  00455E  D011               	goto	l1400
 19783                           
 19784                           ; BSR set to: 0
 19785  004560  1F6B               	comf	(___altoft@c+3)& (0+255),f,b
 19786  004562  1F6A               	comf	(___altoft@c+2)& (0+255),f,b
 19787  004564  1F69               	comf	(___altoft@c+1)& (0+255),f,b
 19788  004566  6D68               	negf	___altoft@c& (0+255),b
 19789  004568  0E00               	movlw	0
 19790  00456A  2369               	addwfc	(___altoft@c+1)& (0+255),f,b
 19791  00456C  236A               	addwfc	(___altoft@c+2)& (0+255),f,b
 19792  00456E  236B               	addwfc	(___altoft@c+3)& (0+255),f,b
 19793                           
 19794                           ; BSR set to: 0
 19795  004570  0E01               	movlw	1
 19796  004572  6F71               	movwf	___altoft@sign& (0+255),b
 19797                           
 19798                           ; BSR set to: 0
 19799  004574  D006               	goto	l1400
 19800  004576                     
 19801                           ; BSR set to: 0
 19802                           
 19803                           ; BSR set to: 0
 19804  004576  90D8               	bcf	status,0,c
 19805  004578  336B               	rrcf	(___altoft@c+3)& (0+255),f,b
 19806  00457A  336A               	rrcf	(___altoft@c+2)& (0+255),f,b
 19807  00457C  3369               	rrcf	(___altoft@c+1)& (0+255),f,b
 19808  00457E  3368               	rrcf	___altoft@c& (0+255),f,b
 19809  004580  2B70               	incf	___altoft@exp& (0+255),f,b
 19810  004582                     l1400:
 19811                           
 19812                           ; BSR set to: 0
 19813                           
 19814                           ; BSR set to: 0
 19815  004582  0E00               	movlw	0
 19816  004584  1568               	andwf	___altoft@c& (0+255),w,b
 19817  004586  6F6C               	movwf	??___altoft& (0+255),b
 19818  004588  0E00               	movlw	0
 19819  00458A  1569               	andwf	(___altoft@c+1)& (0+255),w,b
 19820  00458C  6F6D               	movwf	(??___altoft+1)& (0+255),b
 19821  00458E  0E00               	movlw	0
 19822  004590  156A               	andwf	(___altoft@c+2)& (0+255),w,b
 19823  004592  6F6E               	movwf	(??___altoft+2)& (0+255),b
 19824  004594  0EFF               	movlw	255
 19825  004596  156B               	andwf	(___altoft@c+3)& (0+255),w,b
 19826  004598  6F6F               	movwf	(??___altoft+3)& (0+255),b
 19827  00459A  516C               	movf	??___altoft& (0+255),w,b
 19828  00459C  116D               	iorwf	(??___altoft+1)& (0+255),w,b
 19829  00459E  116E               	iorwf	(??___altoft+2)& (0+255),w,b
 19830  0045A0  116F               	iorwf	(??___altoft+3)& (0+255),w,b
 19831  0045A2  A4D8               	btfss	status,2,c
 19832  0045A4  D7E8               	goto	l1401
 19833                           
 19834                           ; BSR set to: 0
 19835                           
 19836                           ; BSR set to: 0
 19837  0045A6  C068  F060         	movff	___altoft@c,___ftpack@arg
 19838  0045AA  C069  F061         	movff	___altoft@c+1,___ftpack@arg+1
 19839  0045AE  C06A  F062         	movff	___altoft@c+2,___ftpack@arg+2
 19840  0045B2  C070  F063         	movff	___altoft@exp,___ftpack@exp
 19841  0045B6  C071  F064         	movff	___altoft@sign,___ftpack@sign
 19842  0045BA  ECC2  F01D         	call	___ftpack	;wreg free
 19843  0045BE  C060  F068         	movff	?___ftpack,?___altoft
 19844  0045C2  C061  F069         	movff	?___ftpack+1,?___altoft+1
 19845  0045C6  C062  F06A         	movff	?___ftpack+2,?___altoft+2
 19846  0045CA  0012               	return	
 19847  0045CC                     __end_of___altoft:
 19848                           	opt stack 0
 19849                           tosu	equ	0xFFF
 19850                           tosh	equ	0xFFE
 19851                           tosl	equ	0xFFD
 19852                           pclath	equ	0xFFA
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           intcon	equ	0xFF2
 19860                           indf0	equ	0xFEF
 19861                           postinc0	equ	0xFEE
 19862                           plusw0	equ	0xFEB
 19863                           fsr0h	equ	0xFEA
 19864                           fsr0l	equ	0xFE9
 19865                           wreg	equ	0xFE8
 19866                           indf1	equ	0xFE7
 19867                           postinc1	equ	0xFE6
 19868                           postdec1	equ	0xFE5
 19869                           plusw1	equ	0xFE3
 19870                           fsr1h	equ	0xFE2
 19871                           fsr1l	equ	0xFE1
 19872                           indf2	equ	0xFDF
 19873                           postinc2	equ	0xFDE
 19874                           postdec2	equ	0xFDD
 19875                           plusw2	equ	0xFDB
 19876                           fsr2h	equ	0xFDA
 19877                           fsr2l	equ	0xFD9
 19878                           status	equ	0xFD8
 19879                           
 19880 ;; *************** function _eval_poly *****************
 19881 ;; Defined at:
 19882 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 19883 ;; Parameters:    Size  Location     Type
 19884 ;;  x               3   60[BANK0 ] float 
 19885 ;;  d               2   63[BANK0 ] PTR const 
 19886 ;;		 -> log@coeff(27), exp@coeff(30), 
 19887 ;;  n               2   65[BANK0 ] int 
 19888 ;; Auto vars:     Size  Location     Type
 19889 ;;  res             3   69[BANK0 ] int 
 19890 ;; Return value:  Size  Location     Type
 19891 ;;                  3   60[BANK0 ] int 
 19892 ;; Registers used:
 19893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19894 ;; Tracked objects:
 19895 ;;		On entry : 0/0
 19896 ;;		On exit  : 0/0
 19897 ;;		Unchanged: 0/0
 19898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19899 ;;      Params:         0       7       0       0       0       0       0       0       0
 19900 ;;      Locals:         0       3       0       0       0       0       0       0       0
 19901 ;;      Temps:          0       2       0       0       0       0       0       0       0
 19902 ;;      Totals:         0      12       0       0       0       0       0       0       0
 19903 ;;Total ram usage:       12 bytes
 19904 ;; Hardware stack levels used:    1
 19905 ;; Hardware stack levels required when called:    9
 19906 ;; This function calls:
 19907 ;;		___ftadd
 19908 ;;		___ftmul
 19909 ;;		___wmul
 19910 ;; This function is called by:
 19911 ;;		_exp
 19912 ;;		_log
 19913 ;; This function uses a non-reentrant model
 19914 ;;
 19915                           
 19916                           	psect	text98
 19917  003302                     __ptext98:
 19918                           	opt stack 0
 19919  003302                     _eval_poly:
 19920                           	opt stack 17
 19921                           
 19922                           ;incstack = 0
 19923  003302  C0A1  F060         	movff	eval_poly@n,___wmul@multiplier
 19924  003306  C0A2  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
 19925  00330A  0E00               	movlw	0
 19926  00330C  0100               	movlb	0	; () banked
 19927  00330E  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19928  003310  0E03               	movlw	3
 19929  003312  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19930  003314  ECBA  F028         	call	___wmul	;wreg free
 19931  003318  C09F  F0A3         	movff	eval_poly@d,??_eval_poly
 19932  00331C  C0A0  F0A4         	movff	eval_poly@d+1,??_eval_poly+1
 19933  003320  0100               	movlb	0	; () banked
 19934  003322  5160               	movf	?___wmul& (0+255),w,b
 19935  003324  27A3               	addwf	??_eval_poly& (0+255),f,b
 19936  003326  5161               	movf	(?___wmul+1)& (0+255),w,b
 19937  003328  23A4               	addwfc	(??_eval_poly+1)& (0+255),f,b
 19938  00332A  C0A3  FFF6         	movff	??_eval_poly,tblptrl
 19939  00332E  C0A4  FFF7         	movff	??_eval_poly+1,tblptrh
 19940  003332                     	if	0	;tblptru may be non-zero
 19941  003332                     	endif
 19942  003332                     	if	0	;tblptru may be non-zero
 19943  003332                     	endif
 19944  003332  0009               	tblrd		*+
 19945  003334  CFF5 F0A5          	movff	tablat,eval_poly@res
 19946  003338  0009               	tblrd		*+
 19947  00333A  CFF5 F0A6          	movff	tablat,eval_poly@res+1
 19948  00333E  000A               	tblrd		*-
 19949  003340  CFF5 F0A7          	movff	tablat,eval_poly@res+2
 19950  003344  D040               	goto	l1978
 19951  003346                     
 19952                           ; BSR set to: 0
 19953                           
 19954                           ; BSR set to: 0
 19955  003346  C0A5  F075         	movff	eval_poly@res,___ftmul@f2
 19956  00334A  C0A6  F076         	movff	eval_poly@res+1,___ftmul@f2+1
 19957  00334E  C0A7  F077         	movff	eval_poly@res+2,___ftmul@f2+2
 19958  003352  C09C  F072         	movff	eval_poly@x,___ftmul@f1
 19959  003356  C09D  F073         	movff	eval_poly@x+1,___ftmul@f1+1
 19960  00335A  C09E  F074         	movff	eval_poly@x+2,___ftmul@f1+2
 19961  00335E  ECC2  F016         	call	___ftmul	;wreg free
 19962  003362  C072  F090         	movff	?___ftmul,___ftadd@f1
 19963  003366  C073  F091         	movff	?___ftmul+1,___ftadd@f1+1
 19964  00336A  C074  F092         	movff	?___ftmul+2,___ftadd@f1+2
 19965  00336E  0E00               	movlw	0
 19966  003370  0100               	movlb	0	; () banked
 19967  003372  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19968  003374  0E03               	movlw	3
 19969  003376  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19970  003378  07A1               	decf	eval_poly@n& (0+255),f,b
 19971  00337A  A0D8               	btfss	status,0,c
 19972  00337C  07A2               	decf	(eval_poly@n+1)& (0+255),f,b
 19973  00337E  C0A1  F060         	movff	eval_poly@n,___wmul@multiplier
 19974  003382  C0A2  F061         	movff	eval_poly@n+1,___wmul@multiplier+1
 19975  003386  ECBA  F028         	call	___wmul	;wreg free
 19976  00338A  C09F  F0A3         	movff	eval_poly@d,??_eval_poly
 19977  00338E  C0A0  F0A4         	movff	eval_poly@d+1,??_eval_poly+1
 19978  003392  0100               	movlb	0	; () banked
 19979  003394  5160               	movf	?___wmul& (0+255),w,b
 19980  003396  27A3               	addwf	??_eval_poly& (0+255),f,b
 19981  003398  5161               	movf	(?___wmul+1)& (0+255),w,b
 19982  00339A  23A4               	addwfc	(??_eval_poly+1)& (0+255),f,b
 19983  00339C  C0A3  FFF6         	movff	??_eval_poly,tblptrl
 19984  0033A0  C0A4  FFF7         	movff	??_eval_poly+1,tblptrh
 19985  0033A4                     	if	0	;tblptru may be non-zero
 19986  0033A4                     	endif
 19987  0033A4                     	if	0	;tblptru may be non-zero
 19988  0033A4                     	endif
 19989  0033A4  0009               	tblrd		*+
 19990  0033A6  CFF5 F093          	movff	tablat,___ftadd@f2
 19991  0033AA  0009               	tblrd		*+
 19992  0033AC  CFF5 F094          	movff	tablat,___ftadd@f2+1
 19993  0033B0  000A               	tblrd		*-
 19994  0033B2  CFF5 F095          	movff	tablat,___ftadd@f2+2
 19995  0033B6  ECDE  F00C         	call	___ftadd	;wreg free
 19996  0033BA  C090  F0A5         	movff	?___ftadd,eval_poly@res
 19997  0033BE  C091  F0A6         	movff	?___ftadd+1,eval_poly@res+1
 19998  0033C2  C092  F0A7         	movff	?___ftadd+2,eval_poly@res+2
 19999  0033C6                     l1978:
 20000  0033C6  0100               	movlb	0	; () banked
 20001  0033C8  51A1               	movf	eval_poly@n& (0+255),w,b
 20002  0033CA  11A2               	iorwf	(eval_poly@n+1)& (0+255),w,b
 20003  0033CC  A4D8               	btfss	status,2,c
 20004  0033CE  D7BB               	goto	l1979
 20005                           
 20006                           ; BSR set to: 0
 20007  0033D0  C0A5  F09C         	movff	eval_poly@res,?_eval_poly
 20008  0033D4  C0A6  F09D         	movff	eval_poly@res+1,?_eval_poly+1
 20009  0033D8  C0A7  F09E         	movff	eval_poly@res+2,?_eval_poly+2
 20010                           
 20011                           ; BSR set to: 0
 20012  0033DC  0012               	return		;funcret
 20013  0033DE                     __end_of_eval_poly:
 20014                           	opt stack 0
 20015                           tosu	equ	0xFFF
 20016                           tosh	equ	0xFFE
 20017                           tosl	equ	0xFFD
 20018                           pclath	equ	0xFFA
 20019                           tblptru	equ	0xFF8
 20020                           tblptrh	equ	0xFF7
 20021                           tblptrl	equ	0xFF6
 20022                           tablat	equ	0xFF5
 20023                           prodh	equ	0xFF4
 20024                           prodl	equ	0xFF3
 20025                           intcon	equ	0xFF2
 20026                           indf0	equ	0xFEF
 20027                           postinc0	equ	0xFEE
 20028                           plusw0	equ	0xFEB
 20029                           fsr0h	equ	0xFEA
 20030                           fsr0l	equ	0xFE9
 20031                           wreg	equ	0xFE8
 20032                           indf1	equ	0xFE7
 20033                           postinc1	equ	0xFE6
 20034                           postdec1	equ	0xFE5
 20035                           plusw1	equ	0xFE3
 20036                           fsr1h	equ	0xFE2
 20037                           fsr1l	equ	0xFE1
 20038                           indf2	equ	0xFDF
 20039                           postinc2	equ	0xFDE
 20040                           postdec2	equ	0xFDD
 20041                           plusw2	equ	0xFDB
 20042                           fsr2h	equ	0xFDA
 20043                           fsr2l	equ	0xFD9
 20044                           status	equ	0xFD8
 20045                           
 20046 ;; *************** function ___wmul *****************
 20047 ;; Defined at:
 20048 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 20049 ;; Parameters:    Size  Location     Type
 20050 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20051 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20052 ;; Auto vars:     Size  Location     Type
 20053 ;;  product         2    4[BANK0 ] unsigned int 
 20054 ;; Return value:  Size  Location     Type
 20055 ;;                  2    0[BANK0 ] unsigned int 
 20056 ;; Registers used:
 20057 ;;		wreg, status,2, status,0, prodl, prodh
 20058 ;; Tracked objects:
 20059 ;;		On entry : 0/0
 20060 ;;		On exit  : 0/0
 20061 ;;		Unchanged: 0/0
 20062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20063 ;;      Params:         0       4       0       0       0       0       0       0       0
 20064 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20065 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20066 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20067 ;;Total ram usage:        6 bytes
 20068 ;; Hardware stack levels used:    1
 20069 ;; Hardware stack levels required when called:    7
 20070 ;; This function calls:
 20071 ;;		Nothing
 20072 ;; This function is called by:
 20073 ;;		_Display_ProcessData
 20074 ;;		_eval_poly
 20075 ;; This function uses a non-reentrant model
 20076 ;;
 20077                           
 20078                           	psect	text99
 20079  005174                     __ptext99:
 20080                           	opt stack 0
 20081  005174                     ___wmul:
 20082                           	opt stack 18
 20083                           
 20084                           ; BSR set to: 0
 20085                           ;incstack = 0
 20086  005174  0100               	movlb	0	; () banked
 20087  005176  5160               	movf	___wmul@multiplier& (0+255),w,b
 20088  005178  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20089  00517A  CFF3 F064          	movff	prodl,___wmul@product
 20090  00517E  CFF4 F065          	movff	prodh,___wmul@product+1
 20091  005182  5160               	movf	___wmul@multiplier& (0+255),w,b
 20092  005184  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20093  005186  50F3               	movf	prodl,w,c
 20094  005188  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20095  00518A  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20096  00518C  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20097  00518E  50F3               	movf	prodl,w,c
 20098  005190  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20099                           
 20100                           ; BSR set to: 0
 20101  005192  C064  F060         	movff	___wmul@product,?___wmul
 20102  005196  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20103  00519A  0012               	return	
 20104  00519C                     __end_of___wmul:
 20105                           	opt stack 0
 20106                           tosu	equ	0xFFF
 20107                           tosh	equ	0xFFE
 20108                           tosl	equ	0xFFD
 20109                           pclath	equ	0xFFA
 20110                           tblptru	equ	0xFF8
 20111                           tblptrh	equ	0xFF7
 20112                           tblptrl	equ	0xFF6
 20113                           tablat	equ	0xFF5
 20114                           prodh	equ	0xFF4
 20115                           prodl	equ	0xFF3
 20116                           intcon	equ	0xFF2
 20117                           indf0	equ	0xFEF
 20118                           postinc0	equ	0xFEE
 20119                           plusw0	equ	0xFEB
 20120                           fsr0h	equ	0xFEA
 20121                           fsr0l	equ	0xFE9
 20122                           wreg	equ	0xFE8
 20123                           indf1	equ	0xFE7
 20124                           postinc1	equ	0xFE6
 20125                           postdec1	equ	0xFE5
 20126                           plusw1	equ	0xFE3
 20127                           fsr1h	equ	0xFE2
 20128                           fsr1l	equ	0xFE1
 20129                           indf2	equ	0xFDF
 20130                           postinc2	equ	0xFDE
 20131                           postdec2	equ	0xFDD
 20132                           plusw2	equ	0xFDB
 20133                           fsr2h	equ	0xFDA
 20134                           fsr2l	equ	0xFD9
 20135                           status	equ	0xFD8
 20136                           
 20137 ;; *************** function ___ftmul *****************
 20138 ;; Defined at:
 20139 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 20140 ;; Parameters:    Size  Location     Type
 20141 ;;  f1              3   18[BANK0 ] float 
 20142 ;;  f2              3   21[BANK0 ] float 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
 20145 ;;  sign            1   32[BANK0 ] unsigned char 
 20146 ;;  cntr            1   31[BANK0 ] unsigned char 
 20147 ;;  exp             1   27[BANK0 ] unsigned char 
 20148 ;; Return value:  Size  Location     Type
 20149 ;;                  3   18[BANK0 ] float 
 20150 ;; Registers used:
 20151 ;;		wreg, status,2, status,0, cstack
 20152 ;; Tracked objects:
 20153 ;;		On entry : 0/0
 20154 ;;		On exit  : 0/0
 20155 ;;		Unchanged: 0/0
 20156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20157 ;;      Params:         0       6       0       0       0       0       0       0       0
 20158 ;;      Locals:         0       6       0       0       0       0       0       0       0
 20159 ;;      Temps:          0       3       0       0       0       0       0       0       0
 20160 ;;      Totals:         0      15       0       0       0       0       0       0       0
 20161 ;;Total ram usage:       15 bytes
 20162 ;; Hardware stack levels used:    1
 20163 ;; Hardware stack levels required when called:    8
 20164 ;; This function calls:
 20165 ;;		___ftpack
 20166 ;; This function is called by:
 20167 ;;		_InitDigiPot
 20168 ;;		_I2C_Init
 20169 ;;		_pow
 20170 ;;		_exp
 20171 ;;		_log
 20172 ;;		_eval_poly
 20173 ;; This function uses a non-reentrant model
 20174 ;;
 20175                           
 20176                           	psect	text100
 20177  002D84                     __ptext100:
 20178                           	opt stack 0
 20179  002D84                     ___ftmul:
 20180                           	opt stack 19
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;incstack = 0
 20184  002D84  C074  F078         	movff	___ftmul@f1+2,??___ftmul
 20185  002D88  0100               	movlb	0	; () banked
 20186  002D8A  6B79               	clrf	(??___ftmul+1)& (0+255),b
 20187  002D8C  6B7A               	clrf	(??___ftmul+2)& (0+255),b
 20188  002D8E  3573               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 20189  002D90  3778               	rlcf	??___ftmul& (0+255),f,b
 20190  002D92  E301               	bnc	u5971
 20191  002D94  8179               	bsf	(??___ftmul+1)& (0+255),0,b
 20192  002D96                     u5971:
 20193  002D96  5178               	movf	??___ftmul& (0+255),w,b
 20194  002D98  6F7B               	movwf	___ftmul@exp& (0+255),b
 20195  002D9A  517B               	movf	___ftmul@exp& (0+255),w,b
 20196  002D9C  A4D8               	btfss	status,2,c
 20197  002D9E  D007               	goto	l1609
 20198                           
 20199                           ; BSR set to: 0
 20200  002DA0  0E00               	movlw	0
 20201  002DA2  6F72               	movwf	?___ftmul& (0+255),b
 20202  002DA4  0E00               	movlw	0
 20203  002DA6  6F73               	movwf	(?___ftmul+1)& (0+255),b
 20204  002DA8  0E00               	movlw	0
 20205  002DAA  6F74               	movwf	(?___ftmul+2)& (0+255),b
 20206                           
 20207                           ; BSR set to: 0
 20208  002DAC  0012               	return	
 20209  002DAE                     l1609:
 20210                           
 20211                           ; BSR set to: 0
 20212                           
 20213                           ; BSR set to: 0
 20214  002DAE  C077  F078         	movff	___ftmul@f2+2,??___ftmul
 20215  002DB2  6B79               	clrf	(??___ftmul+1)& (0+255),b
 20216  002DB4  6B7A               	clrf	(??___ftmul+2)& (0+255),b
 20217  002DB6  3576               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 20218  002DB8  3778               	rlcf	??___ftmul& (0+255),f,b
 20219  002DBA  E301               	bnc	u5991
 20220  002DBC  8179               	bsf	(??___ftmul+1)& (0+255),0,b
 20221  002DBE                     u5991:
 20222  002DBE  5178               	movf	??___ftmul& (0+255),w,b
 20223  002DC0  6F80               	movwf	___ftmul@sign& (0+255),b
 20224  002DC2  5180               	movf	___ftmul@sign& (0+255),w,b
 20225  002DC4  A4D8               	btfss	status,2,c
 20226  002DC6  D007               	goto	l1611
 20227                           
 20228                           ; BSR set to: 0
 20229  002DC8  0E00               	movlw	0
 20230  002DCA  6F72               	movwf	?___ftmul& (0+255),b
 20231  002DCC  0E00               	movlw	0
 20232  002DCE  6F73               	movwf	(?___ftmul+1)& (0+255),b
 20233  002DD0  0E00               	movlw	0
 20234  002DD2  6F74               	movwf	(?___ftmul+2)& (0+255),b
 20235                           
 20236                           ; BSR set to: 0
 20237  002DD4  0012               	return	
 20238  002DD6                     l1611:
 20239                           
 20240                           ; BSR set to: 0
 20241                           
 20242                           ; BSR set to: 0
 20243  002DD6  5180               	movf	___ftmul@sign& (0+255),w,b
 20244  002DD8  0F7B               	addlw	123
 20245  002DDA  277B               	addwf	___ftmul@exp& (0+255),f,b
 20246                           
 20247                           ; BSR set to: 0
 20248  002DDC  C074  F080         	movff	___ftmul@f1+2,___ftmul@sign
 20249  002DE0  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
 20250  002DE2  1B80               	xorwf	___ftmul@sign& (0+255),f,b
 20251  002DE4  0E80               	movlw	128
 20252  002DE6  1780               	andwf	___ftmul@sign& (0+255),f,b
 20253                           
 20254                           ; BSR set to: 0
 20255  002DE8  8F73               	bsf	(___ftmul@f1+1)& (0+255),7,b
 20256                           
 20257                           ; BSR set to: 0
 20258  002DEA  8F76               	bsf	(___ftmul@f2+1)& (0+255),7,b
 20259                           
 20260                           ; BSR set to: 0
 20261  002DEC  0EFF               	movlw	255
 20262  002DEE  1775               	andwf	___ftmul@f2& (0+255),f,b
 20263  002DF0  0EFF               	movlw	255
 20264  002DF2  1776               	andwf	(___ftmul@f2+1)& (0+255),f,b
 20265  002DF4  0E00               	movlw	0
 20266  002DF6  1777               	andwf	(___ftmul@f2+2)& (0+255),f,b
 20267                           
 20268                           ; BSR set to: 0
 20269  002DF8  0E00               	movlw	0
 20270  002DFA  6F7C               	movwf	___ftmul@f3_as_product& (0+255),b
 20271  002DFC  0E00               	movlw	0
 20272  002DFE  6F7D               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 20273  002E00  0E00               	movlw	0
 20274  002E02  6F7E               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 20275                           
 20276                           ; BSR set to: 0
 20277  002E04  0E07               	movlw	7
 20278  002E06  6F7F               	movwf	___ftmul@cntr& (0+255),b
 20279  002E08                     
 20280                           ; BSR set to: 0
 20281                           
 20282                           ; BSR set to: 0
 20283  002E08  A172               	btfss	___ftmul@f1& (0+255),0,b
 20284  002E0A  D006               	goto	l1613
 20285                           
 20286                           ; BSR set to: 0
 20287  002E0C  5175               	movf	___ftmul@f2& (0+255),w,b
 20288  002E0E  277C               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20289  002E10  5176               	movf	(___ftmul@f2+1)& (0+255),w,b
 20290  002E12  237D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20291  002E14  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
 20292  002E16  237E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20293  002E18                     l1613:
 20294                           
 20295                           ; BSR set to: 0
 20296                           
 20297                           ; BSR set to: 0
 20298  002E18  90D8               	bcf	status,0,c
 20299  002E1A  3374               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20300  002E1C  3373               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20301  002E1E  3372               	rrcf	___ftmul@f1& (0+255),f,b
 20302  002E20  90D8               	bcf	status,0,c
 20303  002E22  3775               	rlcf	___ftmul@f2& (0+255),f,b
 20304  002E24  3776               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 20305  002E26  3777               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 20306                           
 20307                           ; BSR set to: 0
 20308  002E28  2F7F               	decfsz	___ftmul@cntr& (0+255),f,b
 20309  002E2A  D7EE               	goto	l1612
 20310                           
 20311                           ; BSR set to: 0
 20312                           
 20313                           ; BSR set to: 0
 20314  002E2C  0E09               	movlw	9
 20315  002E2E  6F7F               	movwf	___ftmul@cntr& (0+255),b
 20316  002E30                     
 20317                           ; BSR set to: 0
 20318                           
 20319                           ; BSR set to: 0
 20320  002E30  A172               	btfss	___ftmul@f1& (0+255),0,b
 20321  002E32  D006               	goto	l1616
 20322                           
 20323                           ; BSR set to: 0
 20324  002E34  5175               	movf	___ftmul@f2& (0+255),w,b
 20325  002E36  277C               	addwf	___ftmul@f3_as_product& (0+255),f,b
 20326  002E38  5176               	movf	(___ftmul@f2+1)& (0+255),w,b
 20327  002E3A  237D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 20328  002E3C  5177               	movf	(___ftmul@f2+2)& (0+255),w,b
 20329  002E3E  237E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 20330  002E40                     l1616:
 20331                           
 20332                           ; BSR set to: 0
 20333                           
 20334                           ; BSR set to: 0
 20335  002E40  90D8               	bcf	status,0,c
 20336  002E42  3374               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 20337  002E44  3373               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 20338  002E46  3372               	rrcf	___ftmul@f1& (0+255),f,b
 20339  002E48  90D8               	bcf	status,0,c
 20340  002E4A  337E               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 20341  002E4C  337D               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 20342  002E4E  337C               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 20343                           
 20344                           ; BSR set to: 0
 20345  002E50  2F7F               	decfsz	___ftmul@cntr& (0+255),f,b
 20346  002E52  D7EE               	goto	l1615
 20347                           
 20348                           ; BSR set to: 0
 20349                           
 20350                           ; BSR set to: 0
 20351  002E54  C07C  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
 20352  002E58  C07D  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 20353  002E5C  C07E  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 20354  002E60  C07B  F063         	movff	___ftmul@exp,___ftpack@exp
 20355  002E64  C080  F064         	movff	___ftmul@sign,___ftpack@sign
 20356  002E68  ECC2  F01D         	call	___ftpack	;wreg free
 20357  002E6C  C060  F072         	movff	?___ftpack,?___ftmul
 20358  002E70  C061  F073         	movff	?___ftpack+1,?___ftmul+1
 20359  002E74  C062  F074         	movff	?___ftpack+2,?___ftmul+2
 20360  002E78  0012               	return	
 20361  002E7A                     __end_of___ftmul:
 20362                           	opt stack 0
 20363                           tosu	equ	0xFFF
 20364                           tosh	equ	0xFFE
 20365                           tosl	equ	0xFFD
 20366                           pclath	equ	0xFFA
 20367                           tblptru	equ	0xFF8
 20368                           tblptrh	equ	0xFF7
 20369                           tblptrl	equ	0xFF6
 20370                           tablat	equ	0xFF5
 20371                           prodh	equ	0xFF4
 20372                           prodl	equ	0xFF3
 20373                           intcon	equ	0xFF2
 20374                           indf0	equ	0xFEF
 20375                           postinc0	equ	0xFEE
 20376                           plusw0	equ	0xFEB
 20377                           fsr0h	equ	0xFEA
 20378                           fsr0l	equ	0xFE9
 20379                           wreg	equ	0xFE8
 20380                           indf1	equ	0xFE7
 20381                           postinc1	equ	0xFE6
 20382                           postdec1	equ	0xFE5
 20383                           plusw1	equ	0xFE3
 20384                           fsr1h	equ	0xFE2
 20385                           fsr1l	equ	0xFE1
 20386                           indf2	equ	0xFDF
 20387                           postinc2	equ	0xFDE
 20388                           postdec2	equ	0xFDD
 20389                           plusw2	equ	0xFDB
 20390                           fsr2h	equ	0xFDA
 20391                           fsr2l	equ	0xFD9
 20392                           status	equ	0xFD8
 20393                           
 20394 ;; *************** function ___ftsub *****************
 20395 ;; Defined at:
 20396 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 20397 ;; Parameters:    Size  Location     Type
 20398 ;;  f1              3   60[BANK0 ] float 
 20399 ;;  f2              3   63[BANK0 ] float 
 20400 ;; Auto vars:     Size  Location     Type
 20401 ;;		None
 20402 ;; Return value:  Size  Location     Type
 20403 ;;                  3   60[BANK0 ] float 
 20404 ;; Registers used:
 20405 ;;		wreg, status,2, status,0, cstack
 20406 ;; Tracked objects:
 20407 ;;		On entry : 0/0
 20408 ;;		On exit  : 0/0
 20409 ;;		Unchanged: 0/0
 20410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20411 ;;      Params:         0       6       0       0       0       0       0       0       0
 20412 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20413 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20414 ;;      Totals:         0       6       0       0       0       0       0       0       0
 20415 ;;Total ram usage:        6 bytes
 20416 ;; Hardware stack levels used:    1
 20417 ;; Hardware stack levels required when called:    9
 20418 ;; This function calls:
 20419 ;;		___ftadd
 20420 ;; This function is called by:
 20421 ;;		_exp
 20422 ;; This function uses a non-reentrant model
 20423 ;;
 20424                           
 20425                           	psect	text101
 20426  004EC2                     __ptext101:
 20427                           	opt stack 0
 20428  004EC2                     ___ftsub:
 20429                           	opt stack 17
 20430                           
 20431                           ;incstack = 0
 20432  004EC2  0100               	movlb	0	; () banked
 20433  004EC4  519F               	movf	___ftsub@f2& (0+255),w,b
 20434  004EC6  11A0               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 20435  004EC8  11A1               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 20436  004ECA  B4D8               	btfsc	status,2,c
 20437  004ECC  D006               	goto	l1626
 20438                           
 20439                           ; BSR set to: 0
 20440  004ECE  0E00               	movlw	0
 20441  004ED0  1B9F               	xorwf	___ftsub@f2& (0+255),f,b
 20442  004ED2  0E00               	movlw	0
 20443  004ED4  1BA0               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 20444  004ED6  0E80               	movlw	128
 20445  004ED8  1BA1               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 20446  004EDA                     l1626:
 20447                           
 20448                           ; BSR set to: 0
 20449                           
 20450                           ; BSR set to: 0
 20451  004EDA  C09C  F090         	movff	___ftsub@f1,___ftadd@f1
 20452  004EDE  C09D  F091         	movff	___ftsub@f1+1,___ftadd@f1+1
 20453  004EE2  C09E  F092         	movff	___ftsub@f1+2,___ftadd@f1+2
 20454  004EE6  C09F  F093         	movff	___ftsub@f2,___ftadd@f2
 20455  004EEA  C0A0  F094         	movff	___ftsub@f2+1,___ftadd@f2+1
 20456  004EEE  C0A1  F095         	movff	___ftsub@f2+2,___ftadd@f2+2
 20457  004EF2  ECDE  F00C         	call	___ftadd	;wreg free
 20458  004EF6  C090  F09C         	movff	?___ftadd,?___ftsub
 20459  004EFA  C091  F09D         	movff	?___ftadd+1,?___ftsub+1
 20460  004EFE  C092  F09E         	movff	?___ftadd+2,?___ftsub+2
 20461  004F02  0012               	return	
 20462  004F04                     __end_of___ftsub:
 20463                           	opt stack 0
 20464                           tosu	equ	0xFFF
 20465                           tosh	equ	0xFFE
 20466                           tosl	equ	0xFFD
 20467                           pclath	equ	0xFFA
 20468                           tblptru	equ	0xFF8
 20469                           tblptrh	equ	0xFF7
 20470                           tblptrl	equ	0xFF6
 20471                           tablat	equ	0xFF5
 20472                           prodh	equ	0xFF4
 20473                           prodl	equ	0xFF3
 20474                           intcon	equ	0xFF2
 20475                           indf0	equ	0xFEF
 20476                           postinc0	equ	0xFEE
 20477                           plusw0	equ	0xFEB
 20478                           fsr0h	equ	0xFEA
 20479                           fsr0l	equ	0xFE9
 20480                           wreg	equ	0xFE8
 20481                           indf1	equ	0xFE7
 20482                           postinc1	equ	0xFE6
 20483                           postdec1	equ	0xFE5
 20484                           plusw1	equ	0xFE3
 20485                           fsr1h	equ	0xFE2
 20486                           fsr1l	equ	0xFE1
 20487                           indf2	equ	0xFDF
 20488                           postinc2	equ	0xFDE
 20489                           postdec2	equ	0xFDD
 20490                           plusw2	equ	0xFDB
 20491                           fsr2h	equ	0xFDA
 20492                           fsr2l	equ	0xFD9
 20493                           status	equ	0xFD8
 20494                           
 20495 ;; *************** function ___ftadd *****************
 20496 ;; Defined at:
 20497 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 20498 ;; Parameters:    Size  Location     Type
 20499 ;;  f1              3   48[BANK0 ] float 
 20500 ;;  f2              3   51[BANK0 ] float 
 20501 ;; Auto vars:     Size  Location     Type
 20502 ;;  exp1            1   59[BANK0 ] unsigned char 
 20503 ;;  exp2            1   58[BANK0 ] unsigned char 
 20504 ;;  sign            1   57[BANK0 ] unsigned char 
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  3   48[BANK0 ] float 
 20507 ;; Registers used:
 20508 ;;		wreg, status,2, status,0, cstack
 20509 ;; Tracked objects:
 20510 ;;		On entry : 0/0
 20511 ;;		On exit  : 0/0
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20514 ;;      Params:         0       6       0       0       0       0       0       0       0
 20515 ;;      Locals:         0       3       0       0       0       0       0       0       0
 20516 ;;      Temps:          0       3       0       0       0       0       0       0       0
 20517 ;;      Totals:         0      12       0       0       0       0       0       0       0
 20518 ;;Total ram usage:       12 bytes
 20519 ;; Hardware stack levels used:    1
 20520 ;; Hardware stack levels required when called:    8
 20521 ;; This function calls:
 20522 ;;		___ftpack
 20523 ;; This function is called by:
 20524 ;;		_I2C_Init
 20525 ;;		___ftsub
 20526 ;;		_floor
 20527 ;;		_log
 20528 ;;		_eval_poly
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           	psect	text102
 20533  0019BC                     __ptext102:
 20534                           	opt stack 0
 20535  0019BC                     ___ftadd:
 20536                           	opt stack 19
 20537                           
 20538                           ;incstack = 0
 20539  0019BC  C092  F096         	movff	___ftadd@f1+2,??___ftadd
 20540  0019C0  0100               	movlb	0	; () banked
 20541  0019C2  6B97               	clrf	(??___ftadd+1)& (0+255),b
 20542  0019C4  6B98               	clrf	(??___ftadd+2)& (0+255),b
 20543  0019C6  3591               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 20544  0019C8  3796               	rlcf	??___ftadd& (0+255),f,b
 20545  0019CA  E301               	bnc	u5761
 20546  0019CC  8197               	bsf	(??___ftadd+1)& (0+255),0,b
 20547  0019CE                     u5761:
 20548  0019CE  5196               	movf	??___ftadd& (0+255),w,b
 20549  0019D0  6F9B               	movwf	___ftadd@exp1& (0+255),b
 20550  0019D2  C095  F096         	movff	___ftadd@f2+2,??___ftadd
 20551  0019D6  6B97               	clrf	(??___ftadd+1)& (0+255),b
 20552  0019D8  6B98               	clrf	(??___ftadd+2)& (0+255),b
 20553  0019DA  3594               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 20554  0019DC  3796               	rlcf	??___ftadd& (0+255),f,b
 20555  0019DE  E301               	bnc	u5771
 20556  0019E0  8197               	bsf	(??___ftadd+1)& (0+255),0,b
 20557  0019E2                     u5771:
 20558  0019E2  5196               	movf	??___ftadd& (0+255),w,b
 20559  0019E4  6F9A               	movwf	___ftadd@exp2& (0+255),b
 20560                           
 20561                           ; BSR set to: 0
 20562  0019E6  519B               	movf	___ftadd@exp1& (0+255),w,b
 20563  0019E8  B4D8               	btfsc	status,2,c
 20564  0019EA  D00B               	goto	u5800
 20565                           
 20566                           ; BSR set to: 0
 20567  0019EC  519A               	movf	___ftadd@exp2& (0+255),w,b
 20568  0019EE  5D9B               	subwf	___ftadd@exp1& (0+255),w,b
 20569  0019F0  B0D8               	btfsc	status,0,c
 20570  0019F2  D00E               	goto	l1561
 20571                           
 20572                           ; BSR set to: 0
 20573  0019F4  519B               	movf	___ftadd@exp1& (0+255),w,b
 20574  0019F6  0800               	sublw	0
 20575  0019F8  259A               	addwf	___ftadd@exp2& (0+255),w,b
 20576  0019FA  6F96               	movwf	??___ftadd& (0+255),b
 20577  0019FC  0E18               	movlw	24
 20578  0019FE  6596               	cpfsgt	??___ftadd& (0+255),b
 20579  001A00  D007               	goto	l1561
 20580  001A02                     u5800:
 20581                           
 20582                           ; BSR set to: 0
 20583  001A02  C093  F090         	movff	___ftadd@f2,?___ftadd
 20584  001A06  C094  F091         	movff	___ftadd@f2+1,?___ftadd+1
 20585  001A0A  C095  F092         	movff	___ftadd@f2+2,?___ftadd+2
 20586  001A0E  0012               	return	
 20587  001A10                     l1561:
 20588                           
 20589                           ; BSR set to: 0
 20590                           
 20591                           ; BSR set to: 0
 20592  001A10  519A               	movf	___ftadd@exp2& (0+255),w,b
 20593  001A12  B4D8               	btfsc	status,2,c
 20594  001A14  D00B               	goto	u5830
 20595                           
 20596                           ; BSR set to: 0
 20597  001A16  519B               	movf	___ftadd@exp1& (0+255),w,b
 20598  001A18  5D9A               	subwf	___ftadd@exp2& (0+255),w,b
 20599  001A1A  B0D8               	btfsc	status,0,c
 20600  001A1C  D00E               	goto	l1565
 20601                           
 20602                           ; BSR set to: 0
 20603  001A1E  519A               	movf	___ftadd@exp2& (0+255),w,b
 20604  001A20  0800               	sublw	0
 20605  001A22  259B               	addwf	___ftadd@exp1& (0+255),w,b
 20606  001A24  6F96               	movwf	??___ftadd& (0+255),b
 20607  001A26  0E18               	movlw	24
 20608  001A28  6596               	cpfsgt	??___ftadd& (0+255),b
 20609  001A2A  D007               	goto	l1565
 20610  001A2C                     u5830:
 20611                           
 20612                           ; BSR set to: 0
 20613  001A2C  C090  F090         	movff	___ftadd@f1,?___ftadd
 20614  001A30  C091  F091         	movff	___ftadd@f1+1,?___ftadd+1
 20615  001A34  C092  F092         	movff	___ftadd@f1+2,?___ftadd+2
 20616  001A38  0012               	return	
 20617  001A3A                     l1565:
 20618                           
 20619                           ; BSR set to: 0
 20620                           
 20621                           ; BSR set to: 0
 20622  001A3A  0E06               	movlw	6
 20623  001A3C  6F99               	movwf	___ftadd@sign& (0+255),b
 20624                           
 20625                           ; BSR set to: 0
 20626  001A3E  BF92               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 20627                           
 20628                           ; BSR set to: 0
 20629  001A40  8F99               	bsf	___ftadd@sign& (0+255),7,b
 20630                           
 20631                           ; BSR set to: 0
 20632                           
 20633                           ; BSR set to: 0
 20634  001A42  BF95               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 20635                           
 20636                           ; BSR set to: 0
 20637  001A44  8D99               	bsf	___ftadd@sign& (0+255),6,b
 20638                           
 20639                           ; BSR set to: 0
 20640  001A46  8F91               	bsf	(___ftadd@f1+1)& (0+255),7,b
 20641                           
 20642                           ; BSR set to: 0
 20643  001A48  0EFF               	movlw	255
 20644  001A4A  1790               	andwf	___ftadd@f1& (0+255),f,b
 20645  001A4C  0EFF               	movlw	255
 20646  001A4E  1791               	andwf	(___ftadd@f1+1)& (0+255),f,b
 20647  001A50  0E00               	movlw	0
 20648  001A52  1792               	andwf	(___ftadd@f1+2)& (0+255),f,b
 20649  001A54  8F94               	bsf	(___ftadd@f2+1)& (0+255),7,b
 20650                           
 20651                           ; BSR set to: 0
 20652  001A56  0EFF               	movlw	255
 20653  001A58  1793               	andwf	___ftadd@f2& (0+255),f,b
 20654  001A5A  0EFF               	movlw	255
 20655  001A5C  1794               	andwf	(___ftadd@f2+1)& (0+255),f,b
 20656  001A5E  0E00               	movlw	0
 20657  001A60  1795               	andwf	(___ftadd@f2+2)& (0+255),f,b
 20658                           
 20659                           ; BSR set to: 0
 20660  001A62  519A               	movf	___ftadd@exp2& (0+255),w,b
 20661  001A64  5D9B               	subwf	___ftadd@exp1& (0+255),w,b
 20662  001A66  B0D8               	btfsc	status,0,c
 20663  001A68  D01B               	goto	l1570
 20664  001A6A                     u5860:
 20665                           
 20666                           ; BSR set to: 0
 20667                           
 20668                           ; BSR set to: 0
 20669  001A6A  90D8               	bcf	status,0,c
 20670  001A6C  3793               	rlcf	___ftadd@f2& (0+255),f,b
 20671  001A6E  3794               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 20672  001A70  3795               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 20673  001A72  079A               	decf	___ftadd@exp2& (0+255),f,b
 20674                           
 20675                           ; BSR set to: 0
 20676  001A74  519B               	movf	___ftadd@exp1& (0+255),w,b
 20677  001A76  199A               	xorwf	___ftadd@exp2& (0+255),w,b
 20678  001A78  B4D8               	btfsc	status,2,c
 20679  001A7A  D00D               	goto	l1575
 20680                           
 20681                           ; BSR set to: 0
 20682  001A7C  0799               	decf	___ftadd@sign& (0+255),f,b
 20683  001A7E  C099  F096         	movff	___ftadd@sign,??___ftadd
 20684  001A82  0E07               	movlw	7
 20685  001A84  1796               	andwf	??___ftadd& (0+255),f,b
 20686  001A86  B4D8               	btfsc	status,2,c
 20687  001A88  D006               	goto	l1575
 20688  001A8A  D7EF               	goto	u5860
 20689  001A8C                     
 20690                           ; BSR set to: 0
 20691                           
 20692                           ; BSR set to: 0
 20693  001A8C  90D8               	bcf	status,0,c
 20694  001A8E  3392               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 20695  001A90  3391               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 20696  001A92  3390               	rrcf	___ftadd@f1& (0+255),f,b
 20697  001A94  2B9B               	incf	___ftadd@exp1& (0+255),f,b
 20698  001A96                     l1575:
 20699                           
 20700                           ; BSR set to: 0
 20701                           
 20702                           ; BSR set to: 0
 20703  001A96  519A               	movf	___ftadd@exp2& (0+255),w,b
 20704  001A98  199B               	xorwf	___ftadd@exp1& (0+255),w,b
 20705  001A9A  B4D8               	btfsc	status,2,c
 20706  001A9C  D01F               	goto	u5930
 20707  001A9E  D7F6               	goto	l1576
 20708  001AA0                     l1570:
 20709                           
 20710                           ; BSR set to: 0
 20711                           
 20712                           ; BSR set to: 0
 20713  001AA0  519B               	movf	___ftadd@exp1& (0+255),w,b
 20714  001AA2  5D9A               	subwf	___ftadd@exp2& (0+255),w,b
 20715  001AA4  B0D8               	btfsc	status,0,c
 20716  001AA6  D01A               	goto	u5930
 20717  001AA8                     u5900:
 20718                           
 20719                           ; BSR set to: 0
 20720                           
 20721                           ; BSR set to: 0
 20722  001AA8  90D8               	bcf	status,0,c
 20723  001AAA  3790               	rlcf	___ftadd@f1& (0+255),f,b
 20724  001AAC  3791               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 20725  001AAE  3792               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 20726  001AB0  079B               	decf	___ftadd@exp1& (0+255),f,b
 20727                           
 20728                           ; BSR set to: 0
 20729  001AB2  519B               	movf	___ftadd@exp1& (0+255),w,b
 20730  001AB4  199A               	xorwf	___ftadd@exp2& (0+255),w,b
 20731  001AB6  B4D8               	btfsc	status,2,c
 20732  001AB8  D00D               	goto	l1584
 20733                           
 20734                           ; BSR set to: 0
 20735  001ABA  0799               	decf	___ftadd@sign& (0+255),f,b
 20736  001ABC  C099  F096         	movff	___ftadd@sign,??___ftadd
 20737  001AC0  0E07               	movlw	7
 20738  001AC2  1796               	andwf	??___ftadd& (0+255),f,b
 20739  001AC4  B4D8               	btfsc	status,2,c
 20740  001AC6  D006               	goto	l1584
 20741  001AC8  D7EF               	goto	u5900
 20742  001ACA                     
 20743                           ; BSR set to: 0
 20744                           
 20745                           ; BSR set to: 0
 20746  001ACA  90D8               	bcf	status,0,c
 20747  001ACC  3395               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 20748  001ACE  3394               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 20749  001AD0  3393               	rrcf	___ftadd@f2& (0+255),f,b
 20750  001AD2  2B9A               	incf	___ftadd@exp2& (0+255),f,b
 20751  001AD4                     l1584:
 20752                           
 20753                           ; BSR set to: 0
 20754                           
 20755                           ; BSR set to: 0
 20756  001AD4  519A               	movf	___ftadd@exp2& (0+255),w,b
 20757  001AD6  199B               	xorwf	___ftadd@exp1& (0+255),w,b
 20758  001AD8  A4D8               	btfss	status,2,c
 20759  001ADA  D7F7               	goto	l1585
 20760  001ADC                     u5930:
 20761                           
 20762                           ; BSR set to: 0
 20763                           
 20764                           ; BSR set to: 0
 20765                           
 20766                           ; BSR set to: 0
 20767  001ADC  AF99               	btfss	___ftadd@sign& (0+255),7,b
 20768  001ADE  D00C               	goto	l1587
 20769                           
 20770                           ; BSR set to: 0
 20771  001AE0  0EFF               	movlw	255
 20772  001AE2  1B90               	xorwf	___ftadd@f1& (0+255),f,b
 20773  001AE4  0EFF               	movlw	255
 20774  001AE6  1B91               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 20775  001AE8  0EFF               	movlw	255
 20776  001AEA  1B92               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 20777  001AEC  0E01               	movlw	1
 20778  001AEE  2790               	addwf	___ftadd@f1& (0+255),f,b
 20779  001AF0  0E00               	movlw	0
 20780  001AF2  2391               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 20781  001AF4  0E00               	movlw	0
 20782  001AF6  2392               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 20783  001AF8                     l1587:
 20784                           
 20785                           ; BSR set to: 0
 20786  001AF8  AD99               	btfss	___ftadd@sign& (0+255),6,b
 20787  001AFA  D00C               	goto	l1588
 20788                           
 20789                           ; BSR set to: 0
 20790  001AFC  0EFF               	movlw	255
 20791  001AFE  1B93               	xorwf	___ftadd@f2& (0+255),f,b
 20792  001B00  0EFF               	movlw	255
 20793  001B02  1B94               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20794  001B04  0EFF               	movlw	255
 20795  001B06  1B95               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20796  001B08  0E01               	movlw	1
 20797  001B0A  2793               	addwf	___ftadd@f2& (0+255),f,b
 20798  001B0C  0E00               	movlw	0
 20799  001B0E  2394               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20800  001B10  0E00               	movlw	0
 20801  001B12  2395               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20802  001B14                     l1588:
 20803                           
 20804                           ; BSR set to: 0
 20805                           
 20806                           ; BSR set to: 0
 20807  001B14  0E00               	movlw	0
 20808  001B16  6F99               	movwf	___ftadd@sign& (0+255),b
 20809                           
 20810                           ; BSR set to: 0
 20811  001B18  5190               	movf	___ftadd@f1& (0+255),w,b
 20812  001B1A  2793               	addwf	___ftadd@f2& (0+255),f,b
 20813  001B1C  5191               	movf	(___ftadd@f1+1)& (0+255),w,b
 20814  001B1E  2394               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20815  001B20  5192               	movf	(___ftadd@f1+2)& (0+255),w,b
 20816  001B22  2395               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20817                           
 20818                           ; BSR set to: 0
 20819  001B24  AF95               	btfss	(___ftadd@f2+2)& (0+255),7,b
 20820  001B26  D00E               	goto	l1589
 20821                           
 20822                           ; BSR set to: 0
 20823  001B28  0EFF               	movlw	255
 20824  001B2A  1B93               	xorwf	___ftadd@f2& (0+255),f,b
 20825  001B2C  0EFF               	movlw	255
 20826  001B2E  1B94               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 20827  001B30  0EFF               	movlw	255
 20828  001B32  1B95               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 20829  001B34  0E01               	movlw	1
 20830  001B36  2793               	addwf	___ftadd@f2& (0+255),f,b
 20831  001B38  0E00               	movlw	0
 20832  001B3A  2394               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 20833  001B3C  0E00               	movlw	0
 20834  001B3E  2395               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 20835                           
 20836                           ; BSR set to: 0
 20837  001B40  0E01               	movlw	1
 20838  001B42  6F99               	movwf	___ftadd@sign& (0+255),b
 20839  001B44                     l1589:
 20840                           
 20841                           ; BSR set to: 0
 20842                           
 20843                           ; BSR set to: 0
 20844  001B44  C093  F060         	movff	___ftadd@f2,___ftpack@arg
 20845  001B48  C094  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
 20846  001B4C  C095  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
 20847  001B50  C09B  F063         	movff	___ftadd@exp1,___ftpack@exp
 20848  001B54  C099  F064         	movff	___ftadd@sign,___ftpack@sign
 20849  001B58  ECC2  F01D         	call	___ftpack	;wreg free
 20850  001B5C  C060  F090         	movff	?___ftpack,?___ftadd
 20851  001B60  C061  F091         	movff	?___ftpack+1,?___ftadd+1
 20852  001B64  C062  F092         	movff	?___ftpack+2,?___ftadd+2
 20853  001B68  0012               	return	
 20854  001B6A                     __end_of___ftadd:
 20855                           	opt stack 0
 20856                           tosu	equ	0xFFF
 20857                           tosh	equ	0xFFE
 20858                           tosl	equ	0xFFD
 20859                           pclath	equ	0xFFA
 20860                           tblptru	equ	0xFF8
 20861                           tblptrh	equ	0xFF7
 20862                           tblptrl	equ	0xFF6
 20863                           tablat	equ	0xFF5
 20864                           prodh	equ	0xFF4
 20865                           prodl	equ	0xFF3
 20866                           intcon	equ	0xFF2
 20867                           indf0	equ	0xFEF
 20868                           postinc0	equ	0xFEE
 20869                           plusw0	equ	0xFEB
 20870                           fsr0h	equ	0xFEA
 20871                           fsr0l	equ	0xFE9
 20872                           wreg	equ	0xFE8
 20873                           indf1	equ	0xFE7
 20874                           postinc1	equ	0xFE6
 20875                           postdec1	equ	0xFE5
 20876                           plusw1	equ	0xFE3
 20877                           fsr1h	equ	0xFE2
 20878                           fsr1l	equ	0xFE1
 20879                           indf2	equ	0xFDF
 20880                           postinc2	equ	0xFDE
 20881                           postdec2	equ	0xFDD
 20882                           plusw2	equ	0xFDB
 20883                           fsr2h	equ	0xFDA
 20884                           fsr2l	equ	0xFD9
 20885                           status	equ	0xFD8
 20886                           
 20887 ;; *************** function ___ftneg *****************
 20888 ;; Defined at:
 20889 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 20890 ;; Parameters:    Size  Location     Type
 20891 ;;  f1              3    0[BANK0 ] float 
 20892 ;; Auto vars:     Size  Location     Type
 20893 ;;		None
 20894 ;; Return value:  Size  Location     Type
 20895 ;;                  3    0[BANK0 ] float 
 20896 ;; Registers used:
 20897 ;;		wreg, status,2, status,0
 20898 ;; Tracked objects:
 20899 ;;		On entry : 0/0
 20900 ;;		On exit  : 0/0
 20901 ;;		Unchanged: 0/0
 20902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20903 ;;      Params:         0       3       0       0       0       0       0       0       0
 20904 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20905 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20906 ;;      Totals:         0       3       0       0       0       0       0       0       0
 20907 ;;Total ram usage:        3 bytes
 20908 ;; Hardware stack levels used:    1
 20909 ;; Hardware stack levels required when called:    7
 20910 ;; This function calls:
 20911 ;;		Nothing
 20912 ;; This function is called by:
 20913 ;;		_pow
 20914 ;;		_exp
 20915 ;; This function uses a non-reentrant model
 20916 ;;
 20917                           
 20918                           	psect	text103
 20919  0051C2                     __ptext103:
 20920                           	opt stack 0
 20921  0051C2                     ___ftneg:
 20922                           	opt stack 19
 20923                           
 20924                           ;incstack = 0
 20925  0051C2  0100               	movlb	0	; () banked
 20926  0051C4  5160               	movf	___ftneg@f1& (0+255),w,b
 20927  0051C6  1161               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 20928  0051C8  1162               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 20929  0051CA  B4D8               	btfsc	status,2,c
 20930  0051CC  D006               	goto	l1620
 20931                           
 20932                           ; BSR set to: 0
 20933  0051CE  0E00               	movlw	0
 20934  0051D0  1B60               	xorwf	___ftneg@f1& (0+255),f,b
 20935  0051D2  0E00               	movlw	0
 20936  0051D4  1B61               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 20937  0051D6  0E80               	movlw	128
 20938  0051D8  1B62               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 20939  0051DA                     l1620:
 20940                           
 20941                           ; BSR set to: 0
 20942  0051DA  C060  F060         	movff	___ftneg@f1,?___ftneg
 20943  0051DE  C061  F061         	movff	___ftneg@f1+1,?___ftneg+1
 20944  0051E2  C062  F062         	movff	___ftneg@f1+2,?___ftneg+2
 20945                           
 20946                           ; BSR set to: 0
 20947  0051E6  0012               	return		;funcret
 20948  0051E8                     __end_of___ftneg:
 20949                           	opt stack 0
 20950                           tosu	equ	0xFFF
 20951                           tosh	equ	0xFFE
 20952                           tosl	equ	0xFFD
 20953                           pclath	equ	0xFFA
 20954                           tblptru	equ	0xFF8
 20955                           tblptrh	equ	0xFF7
 20956                           tblptrl	equ	0xFF6
 20957                           tablat	equ	0xFF5
 20958                           prodh	equ	0xFF4
 20959                           prodl	equ	0xFF3
 20960                           intcon	equ	0xFF2
 20961                           indf0	equ	0xFEF
 20962                           postinc0	equ	0xFEE
 20963                           plusw0	equ	0xFEB
 20964                           fsr0h	equ	0xFEA
 20965                           fsr0l	equ	0xFE9
 20966                           wreg	equ	0xFE8
 20967                           indf1	equ	0xFE7
 20968                           postinc1	equ	0xFE6
 20969                           postdec1	equ	0xFE5
 20970                           plusw1	equ	0xFE3
 20971                           fsr1h	equ	0xFE2
 20972                           fsr1l	equ	0xFE1
 20973                           indf2	equ	0xFDF
 20974                           postinc2	equ	0xFDE
 20975                           postdec2	equ	0xFDD
 20976                           plusw2	equ	0xFDB
 20977                           fsr2h	equ	0xFDA
 20978                           fsr2l	equ	0xFD9
 20979                           status	equ	0xFD8
 20980                           
 20981 ;; *************** function ___ftdiv *****************
 20982 ;; Defined at:
 20983 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;  f1              3   33[BANK0 ] float 
 20986 ;;  f2              3   36[BANK0 ] float 
 20987 ;; Auto vars:     Size  Location     Type
 20988 ;;  f3              3   43[BANK0 ] float 
 20989 ;;  sign            1   47[BANK0 ] unsigned char 
 20990 ;;  exp             1   46[BANK0 ] unsigned char 
 20991 ;;  cntr            1   42[BANK0 ] unsigned char 
 20992 ;; Return value:  Size  Location     Type
 20993 ;;                  3   33[BANK0 ] float 
 20994 ;; Registers used:
 20995 ;;		wreg, status,2, status,0, cstack
 20996 ;; Tracked objects:
 20997 ;;		On entry : 0/0
 20998 ;;		On exit  : 0/0
 20999 ;;		Unchanged: 0/0
 21000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21001 ;;      Params:         0       6       0       0       0       0       0       0       0
 21002 ;;      Locals:         0       6       0       0       0       0       0       0       0
 21003 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21004 ;;      Totals:         0      15       0       0       0       0       0       0       0
 21005 ;;Total ram usage:       15 bytes
 21006 ;; Hardware stack levels used:    1
 21007 ;; Hardware stack levels required when called:    8
 21008 ;; This function calls:
 21009 ;;		___ftpack
 21010 ;; This function is called by:
 21011 ;;		_Sequencer_StartTimer
 21012 ;;		_InitDigiPot
 21013 ;;		_Zip
 21014 ;;		_UnZip
 21015 ;;		_I2C_Init
 21016 ;;		_exp
 21017 ;; This function uses a non-reentrant model
 21018 ;;
 21019                           
 21020                           	psect	text104
 21021  002F6C                     __ptext104:
 21022                           	opt stack 0
 21023  002F6C                     ___ftdiv:
 21024                           	opt stack 21
 21025                           
 21026                           ; BSR set to: 0
 21027                           ;incstack = 0
 21028  002F6C  C083  F087         	movff	___ftdiv@f1+2,??___ftdiv
 21029  002F70  0100               	movlb	0	; () banked
 21030  002F72  6B88               	clrf	(??___ftdiv+1)& (0+255),b
 21031  002F74  6B89               	clrf	(??___ftdiv+2)& (0+255),b
 21032  002F76  3582               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 21033  002F78  3787               	rlcf	??___ftdiv& (0+255),f,b
 21034  002F7A  E301               	bnc	u6761
 21035  002F7C  8188               	bsf	(??___ftdiv+1)& (0+255),0,b
 21036  002F7E                     u6761:
 21037  002F7E  5187               	movf	??___ftdiv& (0+255),w,b
 21038  002F80  6F8E               	movwf	___ftdiv@exp& (0+255),b
 21039  002F82  518E               	movf	___ftdiv@exp& (0+255),w,b
 21040  002F84  A4D8               	btfss	status,2,c
 21041  002F86  D007               	goto	l1594
 21042                           
 21043                           ; BSR set to: 0
 21044  002F88  0E00               	movlw	0
 21045  002F8A  6F81               	movwf	?___ftdiv& (0+255),b
 21046  002F8C  0E00               	movlw	0
 21047  002F8E  6F82               	movwf	(?___ftdiv+1)& (0+255),b
 21048  002F90  0E00               	movlw	0
 21049  002F92  6F83               	movwf	(?___ftdiv+2)& (0+255),b
 21050                           
 21051                           ; BSR set to: 0
 21052  002F94  0012               	return	
 21053  002F96                     l1594:
 21054                           
 21055                           ; BSR set to: 0
 21056                           
 21057                           ; BSR set to: 0
 21058  002F96  C086  F087         	movff	___ftdiv@f2+2,??___ftdiv
 21059  002F9A  6B88               	clrf	(??___ftdiv+1)& (0+255),b
 21060  002F9C  6B89               	clrf	(??___ftdiv+2)& (0+255),b
 21061  002F9E  3585               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 21062  002FA0  3787               	rlcf	??___ftdiv& (0+255),f,b
 21063  002FA2  E301               	bnc	u6781
 21064  002FA4  8188               	bsf	(??___ftdiv+1)& (0+255),0,b
 21065  002FA6                     u6781:
 21066  002FA6  5187               	movf	??___ftdiv& (0+255),w,b
 21067  002FA8  6F8F               	movwf	___ftdiv@sign& (0+255),b
 21068  002FAA  518F               	movf	___ftdiv@sign& (0+255),w,b
 21069  002FAC  A4D8               	btfss	status,2,c
 21070  002FAE  D007               	goto	l1596
 21071                           
 21072                           ; BSR set to: 0
 21073  002FB0  0E00               	movlw	0
 21074  002FB2  6F81               	movwf	?___ftdiv& (0+255),b
 21075  002FB4  0E00               	movlw	0
 21076  002FB6  6F82               	movwf	(?___ftdiv+1)& (0+255),b
 21077  002FB8  0E00               	movlw	0
 21078  002FBA  6F83               	movwf	(?___ftdiv+2)& (0+255),b
 21079                           
 21080                           ; BSR set to: 0
 21081  002FBC  0012               	return	
 21082  002FBE                     l1596:
 21083                           
 21084                           ; BSR set to: 0
 21085                           
 21086                           ; BSR set to: 0
 21087  002FBE  0E00               	movlw	0
 21088  002FC0  6F8B               	movwf	___ftdiv@f3& (0+255),b
 21089  002FC2  0E00               	movlw	0
 21090  002FC4  6F8C               	movwf	(___ftdiv@f3+1)& (0+255),b
 21091  002FC6  0E00               	movlw	0
 21092  002FC8  6F8D               	movwf	(___ftdiv@f3+2)& (0+255),b
 21093                           
 21094                           ; BSR set to: 0
 21095  002FCA  518F               	movf	___ftdiv@sign& (0+255),w,b
 21096  002FCC  0F89               	addlw	137
 21097  002FCE  5F8E               	subwf	___ftdiv@exp& (0+255),f,b
 21098                           
 21099                           ; BSR set to: 0
 21100  002FD0  C083  F08F         	movff	___ftdiv@f1+2,___ftdiv@sign
 21101                           
 21102                           ; BSR set to: 0
 21103  002FD4  5186               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21104  002FD6  1B8F               	xorwf	___ftdiv@sign& (0+255),f,b
 21105                           
 21106                           ; BSR set to: 0
 21107  002FD8  0E80               	movlw	128
 21108  002FDA  178F               	andwf	___ftdiv@sign& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 0
 21111  002FDC  8F82               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 21112                           
 21113                           ; BSR set to: 0
 21114  002FDE  0EFF               	movlw	255
 21115  002FE0  1781               	andwf	___ftdiv@f1& (0+255),f,b
 21116  002FE2  0EFF               	movlw	255
 21117  002FE4  1782               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 21118  002FE6  0E00               	movlw	0
 21119  002FE8  1783               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 21120                           
 21121                           ; BSR set to: 0
 21122  002FEA  8F85               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 21123                           
 21124                           ; BSR set to: 0
 21125  002FEC  0EFF               	movlw	255
 21126  002FEE  1784               	andwf	___ftdiv@f2& (0+255),f,b
 21127  002FF0  0EFF               	movlw	255
 21128  002FF2  1785               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 21129  002FF4  0E00               	movlw	0
 21130  002FF6  1786               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 21131                           
 21132                           ; BSR set to: 0
 21133  002FF8  0E18               	movlw	24
 21134  002FFA  6F8A               	movwf	___ftdiv@cntr& (0+255),b
 21135  002FFC                     
 21136                           ; BSR set to: 0
 21137                           
 21138                           ; BSR set to: 0
 21139  002FFC  90D8               	bcf	status,0,c
 21140  002FFE  378B               	rlcf	___ftdiv@f3& (0+255),f,b
 21141  003000  378C               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 21142  003002  378D               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 21143                           
 21144                           ; BSR set to: 0
 21145  003004  5184               	movf	___ftdiv@f2& (0+255),w,b
 21146  003006  5D81               	subwf	___ftdiv@f1& (0+255),w,b
 21147  003008  5185               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21148  00300A  5982               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 21149  00300C  5186               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21150  00300E  5983               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 21151  003010  A0D8               	btfss	status,0,c
 21152  003012  D007               	goto	l1598
 21153                           
 21154                           ; BSR set to: 0
 21155  003014  5184               	movf	___ftdiv@f2& (0+255),w,b
 21156  003016  5F81               	subwf	___ftdiv@f1& (0+255),f,b
 21157  003018  5185               	movf	(___ftdiv@f2+1)& (0+255),w,b
 21158  00301A  5B82               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 21159  00301C  5186               	movf	(___ftdiv@f2+2)& (0+255),w,b
 21160  00301E  5B83               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 21161                           
 21162                           ; BSR set to: 0
 21163  003020  818B               	bsf	___ftdiv@f3& (0+255),0,b
 21164  003022                     l1598:
 21165                           
 21166                           ; BSR set to: 0
 21167  003022  90D8               	bcf	status,0,c
 21168  003024  3781               	rlcf	___ftdiv@f1& (0+255),f,b
 21169  003026  3782               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 21170  003028  3783               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 21171                           
 21172                           ; BSR set to: 0
 21173  00302A  2F8A               	decfsz	___ftdiv@cntr& (0+255),f,b
 21174  00302C  D7E7               	goto	l1597
 21175                           
 21176                           ; BSR set to: 0
 21177                           
 21178                           ; BSR set to: 0
 21179  00302E  C08B  F060         	movff	___ftdiv@f3,___ftpack@arg
 21180  003032  C08C  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
 21181  003036  C08D  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
 21182  00303A  C08E  F063         	movff	___ftdiv@exp,___ftpack@exp
 21183  00303E  C08F  F064         	movff	___ftdiv@sign,___ftpack@sign
 21184  003042  ECC2  F01D         	call	___ftpack	;wreg free
 21185  003046  C060  F081         	movff	?___ftpack,?___ftdiv
 21186  00304A  C061  F082         	movff	?___ftpack+1,?___ftdiv+1
 21187  00304E  C062  F083         	movff	?___ftpack+2,?___ftdiv+2
 21188  003052  0012               	return	
 21189  003054                     __end_of___ftdiv:
 21190                           	opt stack 0
 21191                           tosu	equ	0xFFF
 21192                           tosh	equ	0xFFE
 21193                           tosl	equ	0xFFD
 21194                           pclath	equ	0xFFA
 21195                           tblptru	equ	0xFF8
 21196                           tblptrh	equ	0xFF7
 21197                           tblptrl	equ	0xFF6
 21198                           tablat	equ	0xFF5
 21199                           prodh	equ	0xFF4
 21200                           prodl	equ	0xFF3
 21201                           intcon	equ	0xFF2
 21202                           indf0	equ	0xFEF
 21203                           postinc0	equ	0xFEE
 21204                           plusw0	equ	0xFEB
 21205                           fsr0h	equ	0xFEA
 21206                           fsr0l	equ	0xFE9
 21207                           wreg	equ	0xFE8
 21208                           indf1	equ	0xFE7
 21209                           postinc1	equ	0xFE6
 21210                           postdec1	equ	0xFE5
 21211                           plusw1	equ	0xFE3
 21212                           fsr1h	equ	0xFE2
 21213                           fsr1l	equ	0xFE1
 21214                           indf2	equ	0xFDF
 21215                           postinc2	equ	0xFDE
 21216                           postdec2	equ	0xFDD
 21217                           plusw2	equ	0xFDB
 21218                           fsr2h	equ	0xFDA
 21219                           fsr2l	equ	0xFD9
 21220                           status	equ	0xFD8
 21221                           
 21222 ;; *************** function ___awtoft *****************
 21223 ;; Defined at:
 21224 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 21225 ;; Parameters:    Size  Location     Type
 21226 ;;  c               2    8[BANK0 ] int 
 21227 ;; Auto vars:     Size  Location     Type
 21228 ;;  sign            1   11[BANK0 ] unsigned char 
 21229 ;; Return value:  Size  Location     Type
 21230 ;;                  3    8[BANK0 ] float 
 21231 ;; Registers used:
 21232 ;;		wreg, status,2, status,0, cstack
 21233 ;; Tracked objects:
 21234 ;;		On entry : 0/0
 21235 ;;		On exit  : 0/0
 21236 ;;		Unchanged: 0/0
 21237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21238 ;;      Params:         0       3       0       0       0       0       0       0       0
 21239 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21240 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21241 ;;      Totals:         0       4       0       0       0       0       0       0       0
 21242 ;;Total ram usage:        4 bytes
 21243 ;; Hardware stack levels used:    1
 21244 ;; Hardware stack levels required when called:    8
 21245 ;; This function calls:
 21246 ;;		___ftpack
 21247 ;; This function is called by:
 21248 ;;		_Display_Init
 21249 ;;		_exp
 21250 ;;		_log
 21251 ;; This function uses a non-reentrant model
 21252 ;;
 21253                           
 21254                           	psect	text105
 21255  004FB6                     __ptext105:
 21256                           	opt stack 0
 21257  004FB6                     ___awtoft:
 21258                           	opt stack 18
 21259                           
 21260                           ;incstack = 0
 21261  004FB6  0E00               	movlw	0
 21262  004FB8  0100               	movlb	0	; () banked
 21263  004FBA  6F6B               	movwf	___awtoft@sign& (0+255),b
 21264                           
 21265                           ; BSR set to: 0
 21266  004FBC  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
 21267  004FBE  D006               	goto	l1511
 21268                           
 21269                           ; BSR set to: 0
 21270  004FC0  6D68               	negf	___awtoft@c& (0+255),b
 21271  004FC2  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
 21272  004FC4  B0D8               	btfsc	status,0,c
 21273  004FC6  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
 21274                           
 21275                           ; BSR set to: 0
 21276  004FC8  0E01               	movlw	1
 21277  004FCA  6F6B               	movwf	___awtoft@sign& (0+255),b
 21278  004FCC                     l1511:
 21279                           
 21280                           ; BSR set to: 0
 21281                           
 21282                           ; BSR set to: 0
 21283  004FCC  C068  F060         	movff	___awtoft@c,___ftpack@arg
 21284  004FD0  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
 21285  004FD4  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
 21286  004FD6  0E8E               	movlw	142
 21287  004FD8  6F63               	movwf	___ftpack@exp& (0+255),b
 21288  004FDA  C06B  F064         	movff	___awtoft@sign,___ftpack@sign
 21289  004FDE  ECC2  F01D         	call	___ftpack	;wreg free
 21290  004FE2  C060  F068         	movff	?___ftpack,?___awtoft
 21291  004FE6  C061  F069         	movff	?___ftpack+1,?___awtoft+1
 21292  004FEA  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
 21293  004FEE  0012               	return	
 21294  004FF0                     __end_of___awtoft:
 21295                           	opt stack 0
 21296                           tosu	equ	0xFFF
 21297                           tosh	equ	0xFFE
 21298                           tosl	equ	0xFFD
 21299                           pclath	equ	0xFFA
 21300                           tblptru	equ	0xFF8
 21301                           tblptrh	equ	0xFF7
 21302                           tblptrl	equ	0xFF6
 21303                           tablat	equ	0xFF5
 21304                           prodh	equ	0xFF4
 21305                           prodl	equ	0xFF3
 21306                           intcon	equ	0xFF2
 21307                           indf0	equ	0xFEF
 21308                           postinc0	equ	0xFEE
 21309                           plusw0	equ	0xFEB
 21310                           fsr0h	equ	0xFEA
 21311                           fsr0l	equ	0xFE9
 21312                           wreg	equ	0xFE8
 21313                           indf1	equ	0xFE7
 21314                           postinc1	equ	0xFE6
 21315                           postdec1	equ	0xFE5
 21316                           plusw1	equ	0xFE3
 21317                           fsr1h	equ	0xFE2
 21318                           fsr1l	equ	0xFE1
 21319                           indf2	equ	0xFDF
 21320                           postinc2	equ	0xFDE
 21321                           postdec2	equ	0xFDD
 21322                           plusw2	equ	0xFDB
 21323                           fsr2h	equ	0xFDA
 21324                           fsr2l	equ	0xFD9
 21325                           status	equ	0xFD8
 21326                           
 21327 ;; *************** function ___lltoft *****************
 21328 ;; Defined at:
 21329 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 21330 ;; Parameters:    Size  Location     Type
 21331 ;;  c               4    8[BANK0 ] unsigned long 
 21332 ;; Auto vars:     Size  Location     Type
 21333 ;;  exp             1   16[BANK0 ] unsigned char 
 21334 ;; Return value:  Size  Location     Type
 21335 ;;                  3    8[BANK0 ] float 
 21336 ;; Registers used:
 21337 ;;		wreg, status,2, status,0, cstack
 21338 ;; Tracked objects:
 21339 ;;		On entry : 0/0
 21340 ;;		On exit  : 0/0
 21341 ;;		Unchanged: 0/0
 21342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21343 ;;      Params:         0       4       0       0       0       0       0       0       0
 21344 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21345 ;;      Temps:          0       4       0       0       0       0       0       0       0
 21346 ;;      Totals:         0       9       0       0       0       0       0       0       0
 21347 ;;Total ram usage:        9 bytes
 21348 ;; Hardware stack levels used:    1
 21349 ;; Hardware stack levels required when called:    8
 21350 ;; This function calls:
 21351 ;;		___ftpack
 21352 ;; This function is called by:
 21353 ;;		_pow
 21354 ;; This function uses a non-reentrant model
 21355 ;;
 21356                           
 21357                           	psect	text106
 21358  004ADE                     __ptext106:
 21359                           	opt stack 0
 21360  004ADE                     ___lltoft:
 21361                           	opt stack 19
 21362                           
 21363                           ;incstack = 0
 21364  004ADE  0E8E               	movlw	142
 21365  004AE0  0100               	movlb	0	; () banked
 21366  004AE2  6F70               	movwf	___lltoft@exp& (0+255),b
 21367  004AE4  D006               	goto	l1687
 21368  004AE6                     
 21369                           ; BSR set to: 0
 21370                           
 21371                           ; BSR set to: 0
 21372  004AE6  90D8               	bcf	status,0,c
 21373  004AE8  336B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 21374  004AEA  336A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 21375  004AEC  3369               	rrcf	(___lltoft@c+1)& (0+255),f,b
 21376  004AEE  3368               	rrcf	___lltoft@c& (0+255),f,b
 21377  004AF0  2B70               	incf	___lltoft@exp& (0+255),f,b
 21378  004AF2                     l1687:
 21379                           
 21380                           ; BSR set to: 0
 21381                           
 21382                           ; BSR set to: 0
 21383  004AF2  0E00               	movlw	0
 21384  004AF4  1568               	andwf	___lltoft@c& (0+255),w,b
 21385  004AF6  6F6C               	movwf	??___lltoft& (0+255),b
 21386  004AF8  0E00               	movlw	0
 21387  004AFA  1569               	andwf	(___lltoft@c+1)& (0+255),w,b
 21388  004AFC  6F6D               	movwf	(??___lltoft+1)& (0+255),b
 21389  004AFE  0E00               	movlw	0
 21390  004B00  156A               	andwf	(___lltoft@c+2)& (0+255),w,b
 21391  004B02  6F6E               	movwf	(??___lltoft+2)& (0+255),b
 21392  004B04  0EFF               	movlw	255
 21393  004B06  156B               	andwf	(___lltoft@c+3)& (0+255),w,b
 21394  004B08  6F6F               	movwf	(??___lltoft+3)& (0+255),b
 21395  004B0A  516C               	movf	??___lltoft& (0+255),w,b
 21396  004B0C  116D               	iorwf	(??___lltoft+1)& (0+255),w,b
 21397  004B0E  116E               	iorwf	(??___lltoft+2)& (0+255),w,b
 21398  004B10  116F               	iorwf	(??___lltoft+3)& (0+255),w,b
 21399  004B12  A4D8               	btfss	status,2,c
 21400  004B14  D7E8               	goto	l1688
 21401                           
 21402                           ; BSR set to: 0
 21403                           
 21404                           ; BSR set to: 0
 21405  004B16  C068  F060         	movff	___lltoft@c,___ftpack@arg
 21406  004B1A  C069  F061         	movff	___lltoft@c+1,___ftpack@arg+1
 21407  004B1E  C06A  F062         	movff	___lltoft@c+2,___ftpack@arg+2
 21408  004B22  C070  F063         	movff	___lltoft@exp,___ftpack@exp
 21409  004B26  0E00               	movlw	0
 21410  004B28  6F64               	movwf	___ftpack@sign& (0+255),b
 21411  004B2A  ECC2  F01D         	call	___ftpack	;wreg free
 21412  004B2E  C060  F068         	movff	?___ftpack,?___lltoft
 21413  004B32  C061  F069         	movff	?___ftpack+1,?___lltoft+1
 21414  004B36  C062  F06A         	movff	?___ftpack+2,?___lltoft+2
 21415  004B3A  0012               	return	
 21416  004B3C                     __end_of___lltoft:
 21417                           	opt stack 0
 21418                           tosu	equ	0xFFF
 21419                           tosh	equ	0xFFE
 21420                           tosl	equ	0xFFD
 21421                           pclath	equ	0xFFA
 21422                           tblptru	equ	0xFF8
 21423                           tblptrh	equ	0xFF7
 21424                           tblptrl	equ	0xFF6
 21425                           tablat	equ	0xFF5
 21426                           prodh	equ	0xFF4
 21427                           prodl	equ	0xFF3
 21428                           intcon	equ	0xFF2
 21429                           indf0	equ	0xFEF
 21430                           postinc0	equ	0xFEE
 21431                           plusw0	equ	0xFEB
 21432                           fsr0h	equ	0xFEA
 21433                           fsr0l	equ	0xFE9
 21434                           wreg	equ	0xFE8
 21435                           indf1	equ	0xFE7
 21436                           postinc1	equ	0xFE6
 21437                           postdec1	equ	0xFE5
 21438                           plusw1	equ	0xFE3
 21439                           fsr1h	equ	0xFE2
 21440                           fsr1l	equ	0xFE1
 21441                           indf2	equ	0xFDF
 21442                           postinc2	equ	0xFDE
 21443                           postdec2	equ	0xFDD
 21444                           plusw2	equ	0xFDB
 21445                           fsr2h	equ	0xFDA
 21446                           fsr2l	equ	0xFD9
 21447                           status	equ	0xFD8
 21448                           
 21449 ;; *************** function ___ftpack *****************
 21450 ;; Defined at:
 21451 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 21452 ;; Parameters:    Size  Location     Type
 21453 ;;  arg             3    0[BANK0 ] unsigned um
 21454 ;;  exp             1    3[BANK0 ] unsigned char 
 21455 ;;  sign            1    4[BANK0 ] unsigned char 
 21456 ;; Auto vars:     Size  Location     Type
 21457 ;;		None
 21458 ;; Return value:  Size  Location     Type
 21459 ;;                  3    0[BANK0 ] float 
 21460 ;; Registers used:
 21461 ;;		wreg, status,2, status,0
 21462 ;; Tracked objects:
 21463 ;;		On entry : 0/0
 21464 ;;		On exit  : 0/0
 21465 ;;		Unchanged: 0/0
 21466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21467 ;;      Params:         0       5       0       0       0       0       0       0       0
 21468 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21469 ;;      Temps:          0       3       0       0       0       0       0       0       0
 21470 ;;      Totals:         0       8       0       0       0       0       0       0       0
 21471 ;;Total ram usage:        8 bytes
 21472 ;; Hardware stack levels used:    1
 21473 ;; Hardware stack levels required when called:    7
 21474 ;; This function calls:
 21475 ;;		Nothing
 21476 ;; This function is called by:
 21477 ;;		___altoft
 21478 ;;		___awtoft
 21479 ;;		___ftadd
 21480 ;;		___ftdiv
 21481 ;;		___ftmul
 21482 ;;		___lbtoft
 21483 ;;		___lltoft
 21484 ;; This function uses a non-reentrant model
 21485 ;;
 21486                           
 21487                           	psect	text107
 21488  003B84                     __ptext107:
 21489                           	opt stack 0
 21490  003B84                     ___ftpack:
 21491                           	opt stack 21
 21492                           
 21493                           ;incstack = 0
 21494  003B84  0100               	movlb	0	; () banked
 21495  003B86  5163               	movf	___ftpack@exp& (0+255),w,b
 21496  003B88  B4D8               	btfsc	status,2,c
 21497  003B8A  D005               	goto	u5510
 21498                           
 21499                           ; BSR set to: 0
 21500  003B8C  5160               	movf	___ftpack@arg& (0+255),w,b
 21501  003B8E  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 21502  003B90  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 21503  003B92  A4D8               	btfss	status,2,c
 21504  003B94  D00C               	goto	l1530
 21505  003B96                     u5510:
 21506                           
 21507                           ; BSR set to: 0
 21508                           
 21509                           ; BSR set to: 0
 21510  003B96  0E00               	movlw	0
 21511  003B98  6F60               	movwf	?___ftpack& (0+255),b
 21512  003B9A  0E00               	movlw	0
 21513  003B9C  6F61               	movwf	(?___ftpack+1)& (0+255),b
 21514  003B9E  0E00               	movlw	0
 21515  003BA0  6F62               	movwf	(?___ftpack+2)& (0+255),b
 21516                           
 21517                           ; BSR set to: 0
 21518  003BA2  0012               	return	
 21519  003BA4                     
 21520                           ; BSR set to: 0
 21521                           
 21522                           ; BSR set to: 0
 21523  003BA4  2B63               	incf	___ftpack@exp& (0+255),f,b
 21524  003BA6  90D8               	bcf	status,0,c
 21525  003BA8  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 21526  003BAA  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 21527  003BAC  3360               	rrcf	___ftpack@arg& (0+255),f,b
 21528  003BAE                     l1530:
 21529                           
 21530                           ; BSR set to: 0
 21531                           
 21532                           ; BSR set to: 0
 21533  003BAE  0E00               	movlw	0
 21534  003BB0  1560               	andwf	___ftpack@arg& (0+255),w,b
 21535  003BB2  6F65               	movwf	??___ftpack& (0+255),b
 21536  003BB4  0E00               	movlw	0
 21537  003BB6  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 21538  003BB8  6F66               	movwf	(??___ftpack+1)& (0+255),b
 21539  003BBA  0EFE               	movlw	254
 21540  003BBC  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 21541  003BBE  6F67               	movwf	(??___ftpack+2)& (0+255),b
 21542  003BC0  5165               	movf	??___ftpack& (0+255),w,b
 21543  003BC2  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 21544  003BC4  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 21545  003BC6  B4D8               	btfsc	status,2,c
 21546  003BC8  D00C               	goto	l1533
 21547  003BCA  D7EC               	goto	l1531
 21548  003BCC                     
 21549                           ; BSR set to: 0
 21550                           
 21551                           ; BSR set to: 0
 21552  003BCC  2B63               	incf	___ftpack@exp& (0+255),f,b
 21553                           
 21554                           ; BSR set to: 0
 21555  003BCE  0E01               	movlw	1
 21556  003BD0  2760               	addwf	___ftpack@arg& (0+255),f,b
 21557  003BD2  0E00               	movlw	0
 21558  003BD4  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 21559  003BD6  0E00               	movlw	0
 21560  003BD8  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 21561  003BDA  90D8               	bcf	status,0,c
 21562  003BDC  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 21563  003BDE  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 21564  003BE0  3360               	rrcf	___ftpack@arg& (0+255),f,b
 21565  003BE2                     l1533:
 21566                           
 21567                           ; BSR set to: 0
 21568                           
 21569                           ; BSR set to: 0
 21570  003BE2  0E00               	movlw	0
 21571  003BE4  1560               	andwf	___ftpack@arg& (0+255),w,b
 21572  003BE6  6F65               	movwf	??___ftpack& (0+255),b
 21573  003BE8  0E00               	movlw	0
 21574  003BEA  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
 21575  003BEC  6F66               	movwf	(??___ftpack+1)& (0+255),b
 21576  003BEE  0EFF               	movlw	255
 21577  003BF0  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
 21578  003BF2  6F67               	movwf	(??___ftpack+2)& (0+255),b
 21579  003BF4  5165               	movf	??___ftpack& (0+255),w,b
 21580  003BF6  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
 21581  003BF8  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
 21582  003BFA  B4D8               	btfsc	status,2,c
 21583  003BFC  D006               	goto	l1536
 21584  003BFE  D7E6               	goto	l1534
 21585  003C00                     
 21586                           ; BSR set to: 0
 21587                           
 21588                           ; BSR set to: 0
 21589  003C00  0763               	decf	___ftpack@exp& (0+255),f,b
 21590  003C02  90D8               	bcf	status,0,c
 21591  003C04  3760               	rlcf	___ftpack@arg& (0+255),f,b
 21592  003C06  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 21593  003C08  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 21594  003C0A                     l1536:
 21595                           
 21596                           ; BSR set to: 0
 21597                           
 21598                           ; BSR set to: 0
 21599  003C0A  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 21600  003C0C  D003               	goto	u5550
 21601                           
 21602                           ; BSR set to: 0
 21603  003C0E  0E02               	movlw	2
 21604  003C10  6163               	cpfslt	___ftpack@exp& (0+255),b
 21605  003C12  D7F6               	goto	l1537
 21606  003C14                     u5550:
 21607                           
 21608                           ; BSR set to: 0
 21609                           
 21610                           ; BSR set to: 0
 21611  003C14  A163               	btfss	___ftpack@exp& (0+255),0,b
 21612                           
 21613                           ; BSR set to: 0
 21614  003C16  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
 21615                           
 21616                           ; BSR set to: 0
 21617                           
 21618                           ; BSR set to: 0
 21619  003C18  90D8               	bcf	status,0,c
 21620  003C1A  3363               	rrcf	___ftpack@exp& (0+255),f,b
 21621  003C1C  5163               	movf	___ftpack@exp& (0+255),w,b
 21622  003C1E  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 21623                           
 21624                           ; BSR set to: 0
 21625  003C20  5164               	movf	___ftpack@sign& (0+255),w,b
 21626  003C22  A4D8               	btfss	status,2,c
 21627                           
 21628                           ; BSR set to: 0
 21629  003C24  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
 21630                           
 21631                           ; BSR set to: 0
 21632                           
 21633                           ; BSR set to: 0
 21634  003C26  C060  F060         	movff	___ftpack@arg,?___ftpack
 21635  003C2A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
 21636  003C2E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
 21637  003C32  0012               	return	
 21638  003C34                     __end_of___ftpack:
 21639                           	opt stack 0
 21640                           tosu	equ	0xFFF
 21641                           tosh	equ	0xFFE
 21642                           tosl	equ	0xFFD
 21643                           pclath	equ	0xFFA
 21644                           tblptru	equ	0xFF8
 21645                           tblptrh	equ	0xFF7
 21646                           tblptrl	equ	0xFF6
 21647                           tablat	equ	0xFF5
 21648                           prodh	equ	0xFF4
 21649                           prodl	equ	0xFF3
 21650                           intcon	equ	0xFF2
 21651                           indf0	equ	0xFEF
 21652                           postinc0	equ	0xFEE
 21653                           plusw0	equ	0xFEB
 21654                           fsr0h	equ	0xFEA
 21655                           fsr0l	equ	0xFE9
 21656                           wreg	equ	0xFE8
 21657                           indf1	equ	0xFE7
 21658                           postinc1	equ	0xFE6
 21659                           postdec1	equ	0xFE5
 21660                           plusw1	equ	0xFE3
 21661                           fsr1h	equ	0xFE2
 21662                           fsr1l	equ	0xFE1
 21663                           indf2	equ	0xFDF
 21664                           postinc2	equ	0xFDE
 21665                           postdec2	equ	0xFDD
 21666                           plusw2	equ	0xFDB
 21667                           fsr2h	equ	0xFDA
 21668                           fsr2l	equ	0xFD9
 21669                           status	equ	0xFD8
 21670                           
 21671 ;; *************** function _InitConnector *****************
 21672 ;; Defined at:
 21673 ;;		line 20 in file "harware.c"
 21674 ;; Parameters:    Size  Location     Type
 21675 ;;  AConnector      2    2[BANK0 ] PTR struct .
 21676 ;;		 -> _DigiPot(14), _Hub(154), _Display(214), 
 21677 ;; Auto vars:     Size  Location     Type
 21678 ;;		None
 21679 ;; Return value:  Size  Location     Type
 21680 ;;                  1    wreg      void 
 21681 ;; Registers used:
 21682 ;;		wreg, status,2, status,0, cstack
 21683 ;; Tracked objects:
 21684 ;;		On entry : 0/0
 21685 ;;		On exit  : 0/0
 21686 ;;		Unchanged: 0/0
 21687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21688 ;;      Params:         0       2       0       0       0       0       0       0       0
 21689 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21690 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21691 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21692 ;;Total ram usage:        2 bytes
 21693 ;; Hardware stack levels used:    1
 21694 ;; Hardware stack levels required when called:    8
 21695 ;; This function calls:
 21696 ;;		_InitPin
 21697 ;; This function is called by:
 21698 ;;		_Display_Init
 21699 ;;		_Hub_Init
 21700 ;;		_InitDigiPot
 21701 ;; This function uses a non-reentrant model
 21702 ;;
 21703                           
 21704                           	psect	text108
 21705  00505E                     __ptext108:
 21706                           	opt stack 0
 21707  00505E                     _InitConnector:
 21708                           	opt stack 20
 21709                           
 21710                           ;harware.c: 22: InitPin(&AConnector->ClockPin);
 21711                           
 21712                           ; BSR set to: 0
 21713                           ;incstack = 0
 21714  00505E  C062  F060         	movff	InitConnector@AConnector,InitPin@APin
 21715  005062  C063  F061         	movff	InitConnector@AConnector+1,InitPin@APin+1
 21716  005066  ECC7  F02A         	call	_InitPin	;wreg free
 21717                           
 21718                           ;harware.c: 23: InitPin(&AConnector->DataPin);
 21719  00506A  0E04               	movlw	4
 21720  00506C  0100               	movlb	0	; () banked
 21721  00506E  2562               	addwf	InitConnector@AConnector& (0+255),w,b
 21722  005070  6F60               	movwf	InitPin@APin& (0+255),b
 21723  005072  0E00               	movlw	0
 21724  005074  2163               	addwfc	(InitConnector@AConnector+1)& (0+255),w,b
 21725  005076  6F61               	movwf	(InitPin@APin+1)& (0+255),b
 21726  005078  ECC7  F02A         	call	_InitPin	;wreg free
 21727                           
 21728                           ;harware.c: 24: InitPin(&AConnector->LatchPin);
 21729  00507C  0E08               	movlw	8
 21730  00507E  0100               	movlb	0	; () banked
 21731  005080  2562               	addwf	InitConnector@AConnector& (0+255),w,b
 21732  005082  6F60               	movwf	InitPin@APin& (0+255),b
 21733  005084  0E00               	movlw	0
 21734  005086  2163               	addwfc	(InitConnector@AConnector+1)& (0+255),w,b
 21735  005088  6F61               	movwf	(InitPin@APin+1)& (0+255),b
 21736  00508A  ECC7  F02A         	call	_InitPin	;wreg free
 21737  00508E  0012               	return		;funcret
 21738  005090                     __end_of_InitConnector:
 21739                           	opt stack 0
 21740                           tosu	equ	0xFFF
 21741                           tosh	equ	0xFFE
 21742                           tosl	equ	0xFFD
 21743                           pclath	equ	0xFFA
 21744                           tblptru	equ	0xFF8
 21745                           tblptrh	equ	0xFF7
 21746                           tblptrl	equ	0xFF6
 21747                           tablat	equ	0xFF5
 21748                           prodh	equ	0xFF4
 21749                           prodl	equ	0xFF3
 21750                           intcon	equ	0xFF2
 21751                           indf0	equ	0xFEF
 21752                           postinc0	equ	0xFEE
 21753                           plusw0	equ	0xFEB
 21754                           fsr0h	equ	0xFEA
 21755                           fsr0l	equ	0xFE9
 21756                           wreg	equ	0xFE8
 21757                           indf1	equ	0xFE7
 21758                           postinc1	equ	0xFE6
 21759                           postdec1	equ	0xFE5
 21760                           plusw1	equ	0xFE3
 21761                           fsr1h	equ	0xFE2
 21762                           fsr1l	equ	0xFE1
 21763                           indf2	equ	0xFDF
 21764                           postinc2	equ	0xFDE
 21765                           postdec2	equ	0xFDD
 21766                           plusw2	equ	0xFDB
 21767                           fsr2h	equ	0xFDA
 21768                           fsr2l	equ	0xFD9
 21769                           status	equ	0xFD8
 21770                           
 21771 ;; *************** function _InitPin *****************
 21772 ;; Defined at:
 21773 ;;		line 12 in file "harware.c"
 21774 ;; Parameters:    Size  Location     Type
 21775 ;;  APin            2    0[BANK0 ] PTR struct .
 21776 ;;		 -> _DigiPot(14), _Hub(154), _Display(214), 
 21777 ;; Auto vars:     Size  Location     Type
 21778 ;;		None
 21779 ;; Return value:  Size  Location     Type
 21780 ;;                  1    wreg      void 
 21781 ;; Registers used:
 21782 ;;		None
 21783 ;; Tracked objects:
 21784 ;;		On entry : 0/0
 21785 ;;		On exit  : 0/0
 21786 ;;		Unchanged: 0/0
 21787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21788 ;;      Params:         0       2       0       0       0       0       0       0       0
 21789 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21790 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21791 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21792 ;;Total ram usage:        2 bytes
 21793 ;; Hardware stack levels used:    1
 21794 ;; Hardware stack levels required when called:    7
 21795 ;; This function calls:
 21796 ;;		Nothing
 21797 ;; This function is called by:
 21798 ;;		_InitConnector
 21799 ;; This function uses a non-reentrant model
 21800 ;;
 21801                           
 21802                           	psect	text109
 21803  00558E                     __ptext109:
 21804                           	opt stack 0
 21805  00558E                     _InitPin:
 21806                           	opt stack 20
 21807                           
 21808                           ;incstack = 0
 21809  00558E  0012               	return		;funcret
 21810  005590                     __end_of_InitPin:
 21811                           	opt stack 0
 21812                           tosu	equ	0xFFF
 21813                           tosh	equ	0xFFE
 21814                           tosl	equ	0xFFD
 21815                           pclath	equ	0xFFA
 21816                           tblptru	equ	0xFF8
 21817                           tblptrh	equ	0xFF7
 21818                           tblptrl	equ	0xFF6
 21819                           tablat	equ	0xFF5
 21820                           prodh	equ	0xFF4
 21821                           prodl	equ	0xFF3
 21822                           intcon	equ	0xFF2
 21823                           indf0	equ	0xFEF
 21824                           postinc0	equ	0xFEE
 21825                           plusw0	equ	0xFEB
 21826                           fsr0h	equ	0xFEA
 21827                           fsr0l	equ	0xFE9
 21828                           wreg	equ	0xFE8
 21829                           indf1	equ	0xFE7
 21830                           postinc1	equ	0xFE6
 21831                           postdec1	equ	0xFE5
 21832                           plusw1	equ	0xFE3
 21833                           fsr1h	equ	0xFE2
 21834                           fsr1l	equ	0xFE1
 21835                           indf2	equ	0xFDF
 21836                           postinc2	equ	0xFDE
 21837                           postdec2	equ	0xFDD
 21838                           plusw2	equ	0xFDB
 21839                           fsr2h	equ	0xFDA
 21840                           fsr2l	equ	0xFD9
 21841                           status	equ	0xFD8
 21842                           
 21843 ;; *************** function _ConfigureOscillator *****************
 21844 ;; Defined at:
 21845 ;;		line 24 in file "system.c"
 21846 ;; Parameters:    Size  Location     Type
 21847 ;;		None
 21848 ;; Auto vars:     Size  Location     Type
 21849 ;;		None
 21850 ;; Return value:  Size  Location     Type
 21851 ;;                  1    wreg      void 
 21852 ;; Registers used:
 21853 ;;		None
 21854 ;; Tracked objects:
 21855 ;;		On entry : 0/0
 21856 ;;		On exit  : 0/0
 21857 ;;		Unchanged: 0/0
 21858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21859 ;;      Params:         0       0       0       0       0       0       0       0       0
 21860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21863 ;;Total ram usage:        0 bytes
 21864 ;; Hardware stack levels used:    1
 21865 ;; Hardware stack levels required when called:    7
 21866 ;; This function calls:
 21867 ;;		Nothing
 21868 ;; This function is called by:
 21869 ;;		_main
 21870 ;; This function uses a non-reentrant model
 21871 ;;
 21872                           
 21873                           	psect	text110
 21874  005590                     __ptext110:
 21875                           	opt stack 0
 21876  005590                     _ConfigureOscillator:
 21877                           	opt stack 23
 21878                           
 21879                           ;incstack = 0
 21880  005590  0012               	return		;funcret
 21881  005592                     __end_of_ConfigureOscillator:
 21882                           	opt stack 0
 21883                           tosu	equ	0xFFF
 21884                           tosh	equ	0xFFE
 21885                           tosl	equ	0xFFD
 21886                           pclath	equ	0xFFA
 21887                           tblptru	equ	0xFF8
 21888                           tblptrh	equ	0xFF7
 21889                           tblptrl	equ	0xFF6
 21890                           tablat	equ	0xFF5
 21891                           prodh	equ	0xFF4
 21892                           prodl	equ	0xFF3
 21893                           intcon	equ	0xFF2
 21894                           indf0	equ	0xFEF
 21895                           postinc0	equ	0xFEE
 21896                           plusw0	equ	0xFEB
 21897                           fsr0h	equ	0xFEA
 21898                           fsr0l	equ	0xFE9
 21899                           wreg	equ	0xFE8
 21900                           indf1	equ	0xFE7
 21901                           postinc1	equ	0xFE6
 21902                           postdec1	equ	0xFE5
 21903                           plusw1	equ	0xFE3
 21904                           fsr1h	equ	0xFE2
 21905                           fsr1l	equ	0xFE1
 21906                           indf2	equ	0xFDF
 21907                           postinc2	equ	0xFDE
 21908                           postdec2	equ	0xFDD
 21909                           plusw2	equ	0xFDB
 21910                           fsr2h	equ	0xFDA
 21911                           fsr2l	equ	0xFD9
 21912                           status	equ	0xFD8
 21913                           
 21914 ;; *************** function _Interrupt *****************
 21915 ;; Defined at:
 21916 ;;		line 53 in file "main.c"
 21917 ;; Parameters:    Size  Location     Type
 21918 ;;		None
 21919 ;; Auto vars:     Size  Location     Type
 21920 ;;  LData           1   90[COMRAM] unsigned char 
 21921 ;; Return value:  Size  Location     Type
 21922 ;;                  1    wreg      void 
 21923 ;; Registers used:
 21924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21925 ;; Tracked objects:
 21926 ;;		On entry : 0/0
 21927 ;;		On exit  : 0/0
 21928 ;;		Unchanged: 0/0
 21929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21930 ;;      Params:         0       0       0       0       0       0       0       0       0
 21931 ;;      Locals:         1       0       0       0       0       0       0       0       0
 21932 ;;      Temps:         19       0       0       0       0       0       0       0       0
 21933 ;;      Totals:        20       0       0       0       0       0       0       0       0
 21934 ;;Total ram usage:       20 bytes
 21935 ;; Hardware stack levels used:    1
 21936 ;; Hardware stack levels required when called:    6
 21937 ;; This function calls:
 21938 ;;		_Display_SwapBuffer
 21939 ;;		_Hub_UpdateValues
 21940 ;;		_Sequencer_TimerEvent
 21941 ;;		i2_Hub_CopyBuffer
 21942 ;;		i2_Midi_ResetBuffer
 21943 ;;		i2_Midi_Write
 21944 ;;		i2_Sequencer_StopTimer
 21945 ;;		i2_WriteData
 21946 ;; This function is called by:
 21947 ;;		Interrupt level 2
 21948 ;; This function uses a non-reentrant model
 21949 ;;
 21950                           
 21951                           	psect	intcode
 21952  000008                     __pintcode:
 21953                           	opt stack 0
 21954  000008                     _Interrupt:
 21955                           	opt stack 15
 21956                           
 21957                           ;incstack = 0
 21958  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21959  00000A  EDB5  F00D         	call	int_func,f	;refresh shadow registers
 21960                           tosu	equ	0xFFF
 21961                           tosh	equ	0xFFE
 21962                           tosl	equ	0xFFD
 21963                           pclath	equ	0xFFA
 21964                           tblptru	equ	0xFF8
 21965                           tblptrh	equ	0xFF7
 21966                           tblptrl	equ	0xFF6
 21967                           tablat	equ	0xFF5
 21968                           prodh	equ	0xFF4
 21969                           prodl	equ	0xFF3
 21970                           intcon	equ	0xFF2
 21971                           indf0	equ	0xFEF
 21972                           postinc0	equ	0xFEE
 21973                           plusw0	equ	0xFEB
 21974                           fsr0h	equ	0xFEA
 21975                           fsr0l	equ	0xFE9
 21976                           wreg	equ	0xFE8
 21977                           indf1	equ	0xFE7
 21978                           postinc1	equ	0xFE6
 21979                           postdec1	equ	0xFE5
 21980                           plusw1	equ	0xFE3
 21981                           fsr1h	equ	0xFE2
 21982                           fsr1l	equ	0xFE1
 21983                           indf2	equ	0xFDF
 21984                           postinc2	equ	0xFDE
 21985                           postdec2	equ	0xFDD
 21986                           plusw2	equ	0xFDB
 21987                           fsr2h	equ	0xFDA
 21988                           fsr2l	equ	0xFD9
 21989                           status	equ	0xFD8
 21990                           
 21991                           	psect	intcode_body
 21992  001B6A                     __pintcode_body:
 21993                           	opt stack 15
 21994  001B6A                     int_func:
 21995                           	opt stack 15
 21996  001B6A  0006               	pop		; remove dummy address from shadow register refresh
 21997  001B6C  CFFA F049          	movff	pclath,??_Interrupt+1
 21998  001B70  CFFB F04A          	movff	pclatu,??_Interrupt+2
 21999  001B74  CFE9 F04B          	movff	fsr0l,??_Interrupt+3
 22000  001B78  CFEA F04C          	movff	fsr0h,??_Interrupt+4
 22001  001B7C  CFE1 F04D          	movff	fsr1l,??_Interrupt+5
 22002  001B80  CFE2 F04E          	movff	fsr1h,??_Interrupt+6
 22003  001B84  CFD9 F04F          	movff	fsr2l,??_Interrupt+7
 22004  001B88  CFDA F050          	movff	fsr2h,??_Interrupt+8
 22005  001B8C  CFF3 F051          	movff	prodl,??_Interrupt+9
 22006  001B90  CFF4 F052          	movff	prodh,??_Interrupt+10
 22007  001B94  CFF6 F053          	movff	tblptrl,??_Interrupt+11
 22008  001B98  CFF7 F054          	movff	tblptrh,??_Interrupt+12
 22009  001B9C  CFF8 F055          	movff	tblptru,??_Interrupt+13
 22010  001BA0  CFF5 F056          	movff	tablat,??_Interrupt+14
 22011  001BA4  C05F  F057         	movff	btemp,??_Interrupt+15
 22012  001BA8  C060  F058         	movff	btemp+1,??_Interrupt+16
 22013  001BAC  C061  F059         	movff	btemp+2,??_Interrupt+17
 22014  001BB0  C062  F05A         	movff	btemp+3,??_Interrupt+18
 22015                           
 22016                           ;main.c: 55: if (TMR0IF)
 22017  001BB4  A4F2               	btfss	intcon,2,c	;volatile
 22018  001BB6  D035               	goto	i2l590
 22019                           
 22020                           ;main.c: 56: {
 22021                           ;main.c: 57: TMR0IF = 0;
 22022  001BB8  94F2               	bcf	intcon,2,c	;volatile
 22023                           
 22024                           ;main.c: 59: WriteData(_Display.PrimaryBuffer + _Display.iDisplay * (2 + 8), 2 + 8, _Dis
      +                          play.IO);
 22025  001BBA  0102               	movlb	2	; () banked
 22026  001BBC  51D0               	movf	(__Display+198)& (0+255),w,b
 22027  001BBE  0D0A               	mullw	10
 22028  001BC0  50F3               	movf	prodl,w,c
 22029  001BC2  25C0               	addwf	(__Display+182)& (0+255),w,b
 22030  001BC4  6E1F               	movwf	i2WriteData@AData,c
 22031  001BC6  50F4               	movf	prodh,w,c
 22032  001BC8  21C1               	addwfc	(__Display+183)& (0+255),w,b
 22033  001BCA  6E20               	movwf	i2WriteData@AData+1,c
 22034  001BCC  0E0A               	movlw	10
 22035  001BCE  6E21               	movwf	i2WriteData@ASize,c
 22036  001BD0  EE22  F0D4         	lfsr	2,__Display+202
 22037  001BD4  EE00  F022         	lfsr	0,i2WriteData@AIO
 22038  001BD8  0E0B               	movlw	11
 22039  001BDA                     i2u992_41:
 22040  001BDA  CFDB FFEB          	movff	plusw2,plusw0
 22041  001BDE  06E8               	decf	wreg,f,c
 22042  001BE0  E2FC               	bc	i2u992_41
 22043  001BE2  EC73  F024         	call	i2_WriteData	;wreg free
 22044                           
 22045                           ;main.c: 61: _Display.iDisplay++;
 22046  001BE6  0102               	movlb	2	; () banked
 22047  001BE8  2BD0               	incf	(__Display+198)& (0+255),f,b
 22048                           
 22049                           ; BSR set to: 2
 22050                           ;main.c: 62: if (_Display.iDisplay >= (char)(((0x01 << 6) - 1 * 1.0f) / (7 * 1.0f)))
 22051  001BEA  0E08               	movlw	8
 22052  001BEC  65D0               	cpfsgt	(__Display+198)& (0+255),b
 22053  001BEE  D007               	goto	i2l591
 22054                           
 22055                           ; BSR set to: 2
 22056                           ;main.c: 63: {
 22057                           ;main.c: 67: if (_Display.ReadyToRead)
 22058  001BF0  510A               	movf	__Display& (0+255),w,b
 22059  001BF2  A4D8               	btfss	status,2,c
 22060                           
 22061                           ; BSR set to: 2
 22062                           ;main.c: 68: Display_SwapBuffer();
 22063  001BF4  EC18  F029         	call	_Display_SwapBuffer	;wreg free
 22064                           
 22065                           ;main.c: 69: _Display.iDisplay = 0;
 22066  001BF8  0E00               	movlw	0
 22067  001BFA  0102               	movlb	2	; () banked
 22068  001BFC  6FD0               	movwf	(__Display+198)& (0+255),b
 22069  001BFE                     i2l591:
 22070                           
 22071                           ; BSR set to: 2
 22072                           ;main.c: 70: }
 22073                           ;main.c: 72: if (_Hub.ReadyToRead)
 22074                           
 22075                           ; BSR set to: 2
 22076  001BFE  0101               	movlb	1	; () banked
 22077  001C00  51C6               	movf	(__Hub+135)& (0+255),w,b
 22078  001C02  B4D8               	btfsc	status,2,c
 22079  001C04  D005               	goto	i2l593
 22080                           
 22081                           ; BSR set to: 1
 22082                           ;main.c: 73: {
 22083                           ;main.c: 74: Hub_UpdateValues();
 22084  001C06  EC3D  F017         	call	_Hub_UpdateValues	;wreg free
 22085                           
 22086                           ;main.c: 75: _Hub.Paused = 0;
 22087  001C0A  0E00               	movlw	0
 22088  001C0C  0101               	movlb	1	; () banked
 22089  001C0E  D001               	goto	L22
 22090  001C10                     i2l593:
 22091                           
 22092                           ; BSR set to: 1
 22093                           ;main.c: 77: else
 22094                           ;main.c: 78: _Hub.Paused = 1;
 22095                           
 22096                           ; BSR set to: 1
 22097  001C10  0E01               	movlw	1
 22098  001C12                     L22:
 22099  001C12  6FC7               	movwf	(__Hub+136)& (0+255),b
 22100                           
 22101                           ; BSR set to: 1
 22102                           ;main.c: 80: if (_Hub.ReadyToWrite)
 22103  001C14  51C5               	movf	(__Hub+134)& (0+255),w,b
 22104  001C16  A4D8               	btfss	status,2,c
 22105                           
 22106                           ; BSR set to: 1
 22107                           ;main.c: 81: Hub_CopyBuffer();
 22108  001C18  EC06  F029         	call	i2_Hub_CopyBuffer	;wreg free
 22109                           
 22110                           ;main.c: 83: _DigiPot.Counter++;
 22111  001C1C  0101               	movlb	1	; () banked
 22112  001C1E  2BDA               	incf	(__DigiPot+1)& (0+255),f,b
 22113                           
 22114                           ;main.c: 84: }
 22115  001C20  D040               	goto	i2u1003_40
 22116  001C22                     i2l590:
 22117                           
 22118                           ;main.c: 85: else if (TMR1IF)
 22119  001C22  A09E               	btfss	3998,0,c	;volatile
 22120  001C24  D020               	goto	i2l597
 22121                           
 22122                           ;main.c: 86: {
 22123                           ;main.c: 87: TMR1IF = 0;
 22124  001C26  909E               	bcf	3998,0,c	;volatile
 22125                           
 22126                           ;main.c: 88: _Timer.Counter++;
 22127  001C28  0101               	movlb	1	; () banked
 22128  001C2A  4B0C               	infsnz	(__Timer+4)& (0+255),f,b
 22129  001C2C  2B0D               	incf	(__Timer+5)& (0+255),f,b
 22130                           
 22131                           ; BSR set to: 1
 22132                           ;main.c: 89: if (_Timer.Counter >= _Timer.Ticks)
 22133  001C2E  510A               	movf	(__Timer+2)& (0+255),w,b
 22134  001C30  5D0C               	subwf	(__Timer+4)& (0+255),w,b
 22135  001C32  510D               	movf	(__Timer+5)& (0+255),w,b
 22136  001C34  0A80               	xorlw	128
 22137  001C36  6E48               	movwf	??_Interrupt& (0+255),c
 22138  001C38  510B               	movf	(__Timer+3)& (0+255),w,b
 22139  001C3A  0A80               	xorlw	128
 22140  001C3C  5848               	subwfb	??_Interrupt& (0+255),w,c
 22141  001C3E  A0D8               	btfss	status,0,c
 22142  001C40  D030               	goto	i2u1003_40
 22143                           
 22144                           ; BSR set to: 1
 22145                           ;main.c: 90: {
 22146                           ;main.c: 91: _Timer.Counter = 0;
 22147  001C42  0E00               	movlw	0
 22148  001C44  6F0D               	movwf	(__Timer+5)& (0+255),b
 22149  001C46  0E00               	movlw	0
 22150  001C48  6F0C               	movwf	(__Timer+4)& (0+255),b
 22151                           
 22152                           ;main.c: 92: _Timer.Elapsed = 1;
 22153  001C4A  0E01               	movlw	1
 22154  001C4C  6F08               	movwf	__Timer& (0+255),b
 22155                           
 22156                           ; BSR set to: 1
 22157                           ;main.c: 93: Sequencer_TimerEvent();
 22158  001C4E  EC2A  F029         	call	_Sequencer_TimerEvent	;wreg free
 22159                           
 22160                           ;main.c: 94: if (_Timer.Loop)
 22161  001C52  0101               	movlb	1	; () banked
 22162  001C54  5109               	movf	(__Timer+1)& (0+255),w,b
 22163  001C56  B4D8               	btfsc	status,2,c
 22164  001C58  D003               	goto	i2l599
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;main.c: 95: _Timer.Elapsed = 0;
 22168  001C5A  0E00               	movlw	0
 22169  001C5C  6F08               	movwf	__Timer& (0+255),b
 22170  001C5E  D021               	goto	i2u1003_40
 22171  001C60                     i2l599:
 22172                           
 22173                           ; BSR set to: 1
 22174                           ;main.c: 96: else
 22175                           ;main.c: 97: Sequencer_StopTimer();
 22176                           
 22177                           ; BSR set to: 1
 22178  001C60  EC7D  F02A         	call	i2_Sequencer_StopTimer	;wreg free
 22179                           
 22180                           ;main.c: 98: }
 22181                           ;main.c: 99: }
 22182  001C64  D01E               	goto	i2u1003_40
 22183  001C66                     i2l597:
 22184                           
 22185                           ;main.c: 100: else if (PIR1bits.RCIF)
 22186  001C66  AA9E               	btfss	3998,5,c	;volatile
 22187  001C68  D01C               	goto	i2u1003_40
 22188                           
 22189                           ;main.c: 101: {
 22190                           ;main.c: 103: LATB4 = 0;
 22191  001C6A  988A               	bcf	3978,4,c	;volatile
 22192                           
 22193                           ;main.c: 104: unsigned char LData = 0x00;
 22194  001C6C  0E00               	movlw	0
 22195  001C6E  6E5B               	movwf	Interrupt@LData,c
 22196                           
 22197                           ;main.c: 105: while (PIR1bits.RCIF)
 22198  001C70  D016               	goto	i2l608
 22199  001C72                     i2l604:
 22200                           
 22201                           ;main.c: 106: {
 22202                           ;main.c: 107: LData = RCREG;
 22203  001C72  CFAE F05B          	movff	4014,Interrupt@LData	;volatile
 22204                           
 22205                           ;main.c: 108: if (RCSTAbits.FERR || RCSTAbits.OERR)
 22206  001C76  B4AB               	btfsc	4011,2,c	;volatile
 22207  001C78  D002               	goto	i2u1002_40
 22208  001C7A  A2AB               	btfss	4011,1,c	;volatile
 22209  001C7C  D009               	goto	i2l605
 22210  001C7E                     i2u1002_40:
 22211                           
 22212                           ;main.c: 109: {
 22213                           ;main.c: 110: Midi_ResetBuffer(&_MidiInput);
 22214  001C7E  0E84               	movlw	low __MidiInput
 22215  001C80  6E01               	movwf	i2Midi_ResetBuffer@AMidiBuffer,c
 22216  001C82  0E05               	movlw	high __MidiInput
 22217  001C84  6E02               	movwf	i2Midi_ResetBuffer@AMidiBuffer+1,c
 22218  001C86  EC8E  F01B         	call	i2_Midi_ResetBuffer	;wreg free
 22219                           
 22220                           ;main.c: 111: CREN = 0;
 22221  001C8A  98AB               	bcf	4011,4,c	;volatile
 22222                           
 22223                           ;main.c: 112: CREN = 1;
 22224  001C8C  88AB               	bsf	4011,4,c	;volatile
 22225                           
 22226                           ;main.c: 113: }
 22227  001C8E  D007               	goto	i2l608
 22228  001C90                     i2l605:
 22229                           
 22230                           ;main.c: 114: else
 22231                           ;main.c: 115: Midi_Write(LData, &_MidiInput);
 22232  001C90  0E84               	movlw	low __MidiInput
 22233  001C92  6E01               	movwf	i2Midi_Write@AMidiBuffer,c
 22234  001C94  0E05               	movlw	high __MidiInput
 22235  001C96  6E02               	movwf	i2Midi_Write@AMidiBuffer+1,c
 22236  001C98  505B               	movf	Interrupt@LData,w,c
 22237  001C9A  ECA5  F009         	call	i2_Midi_Write
 22238  001C9E                     i2l608:
 22239  001C9E  BA9E               	btfsc	3998,5,c	;volatile
 22240  001CA0  D7E8               	goto	i2l604
 22241  001CA2                     i2u1003_40:
 22242  001CA2  C05A  F062         	movff	??_Interrupt+18,btemp+3
 22243  001CA6  C059  F061         	movff	??_Interrupt+17,btemp+2
 22244  001CAA  C058  F060         	movff	??_Interrupt+16,btemp+1
 22245  001CAE  C057  F05F         	movff	??_Interrupt+15,btemp
 22246  001CB2  C056  FFF5         	movff	??_Interrupt+14,tablat
 22247  001CB6  C055  FFF8         	movff	??_Interrupt+13,tblptru
 22248  001CBA  C054  FFF7         	movff	??_Interrupt+12,tblptrh
 22249  001CBE  C053  FFF6         	movff	??_Interrupt+11,tblptrl
 22250  001CC2  C052  FFF4         	movff	??_Interrupt+10,prodh
 22251  001CC6  C051  FFF3         	movff	??_Interrupt+9,prodl
 22252  001CCA  C050  FFDA         	movff	??_Interrupt+8,fsr2h
 22253  001CCE  C04F  FFD9         	movff	??_Interrupt+7,fsr2l
 22254  001CD2  C04E  FFE2         	movff	??_Interrupt+6,fsr1h
 22255  001CD6  C04D  FFE1         	movff	??_Interrupt+5,fsr1l
 22256  001CDA  C04C  FFEA         	movff	??_Interrupt+4,fsr0h
 22257  001CDE  C04B  FFE9         	movff	??_Interrupt+3,fsr0l
 22258  001CE2  C04A  FFFB         	movff	??_Interrupt+2,pclatu
 22259  001CE6  C049  FFFA         	movff	??_Interrupt+1,pclath
 22260  001CEA  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22261  001CEC  0011               	retfie		f
 22262  001CEE                     __end_of_Interrupt:
 22263                           	opt stack 0
 22264                           tosu	equ	0xFFF
 22265                           tosh	equ	0xFFE
 22266                           tosl	equ	0xFFD
 22267                           pclatu	equ	0xFFB
 22268                           pclath	equ	0xFFA
 22269                           tblptru	equ	0xFF8
 22270                           tblptrh	equ	0xFF7
 22271                           tblptrl	equ	0xFF6
 22272                           tablat	equ	0xFF5
 22273                           prodh	equ	0xFF4
 22274                           prodl	equ	0xFF3
 22275                           intcon	equ	0xFF2
 22276                           indf0	equ	0xFEF
 22277                           postinc0	equ	0xFEE
 22278                           plusw0	equ	0xFEB
 22279                           fsr0h	equ	0xFEA
 22280                           fsr0l	equ	0xFE9
 22281                           wreg	equ	0xFE8
 22282                           indf1	equ	0xFE7
 22283                           postinc1	equ	0xFE6
 22284                           postdec1	equ	0xFE5
 22285                           plusw1	equ	0xFE3
 22286                           fsr1h	equ	0xFE2
 22287                           fsr1l	equ	0xFE1
 22288                           indf2	equ	0xFDF
 22289                           postinc2	equ	0xFDE
 22290                           postdec2	equ	0xFDD
 22291                           plusw2	equ	0xFDB
 22292                           fsr2h	equ	0xFDA
 22293                           fsr2l	equ	0xFD9
 22294                           status	equ	0xFD8
 22295                           
 22296 ;; *************** function i2_WriteData *****************
 22297 ;; Defined at:
 22298 ;;		line 37 in file "harware.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;  AData           2   30[COMRAM] PTR unsigned char 
 22301 ;;		 -> _Display.Buffer2(90), _Display.Buffer1(90), _Hub.SecondaryBuffer(12), _Hub(154), 
 22302 ;;		 -> _Display(214), 
 22303 ;;  ASize           1   32[COMRAM] unsigned char 
 22304 ;;  AIO            12   33[COMRAM] struct .
 22305 ;; Auto vars:     Size  Location     Type
 22306 ;;  WriteData       2   45[COMRAM] int 
 22307 ;; Return value:  Size  Location     Type
 22308 ;;                  1    wreg      void 
 22309 ;; Registers used:
 22310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 22311 ;; Tracked objects:
 22312 ;;		On entry : 0/0
 22313 ;;		On exit  : 0/0
 22314 ;;		Unchanged: 0/0
 22315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22316 ;;      Params:        15       0       0       0       0       0       0       0       0
 22317 ;;      Locals:         2       0       0       0       0       0       0       0       0
 22318 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22319 ;;      Totals:        17       0       0       0       0       0       0       0       0
 22320 ;;Total ram usage:       17 bytes
 22321 ;; Hardware stack levels used:    1
 22322 ;; Hardware stack levels required when called:    3
 22323 ;; This function calls:
 22324 ;;		i2_LatchOff
 22325 ;;		i2_LatchOn
 22326 ;;		i2_WriteChar
 22327 ;; This function is called by:
 22328 ;;		_Interrupt
 22329 ;; This function uses a non-reentrant model
 22330 ;;
 22331                           
 22332                           	psect	text112
 22333  0048E6                     __ptext112:
 22334                           	opt stack 0
 22335  0048E6                     i2_WriteData:
 22336                           	opt stack 17
 22337                           
 22338                           ;harware.c: 39: LatchOn(AIO);
 22339                           
 22340                           ;incstack = 0
 22341  0048E6  EE20  F022         	lfsr	2,i2WriteData@AIO
 22342  0048EA  EE00  F002         	lfsr	0,i2LatchOn@AIO
 22343  0048EE  0E0B               	movlw	11
 22344  0048F0                     i2u955_41:
 22345  0048F0  CFDB FFEB          	movff	plusw2,plusw0
 22346  0048F4  06E8               	decf	wreg,f,c
 22347  0048F6  E2FC               	bc	i2u955_41
 22348  0048F8  ECA5  F029         	call	i2_LatchOn	;wreg free
 22349                           
 22350                           ;harware.c: 40: for (int i = ASize - 1; i >= 0; i--)
 22351  0048FC  0EFF               	movlw	255
 22352  0048FE  2421               	addwf	i2WriteData@ASize,w,c
 22353  004900  6E2E               	movwf	i2WriteData@i,c
 22354  004902  6A2F               	clrf	i2WriteData@i+1,c
 22355  004904  0EFF               	movlw	255
 22356  004906  222F               	addwfc	i2WriteData@i+1,f,c
 22357  004908                     i2l7827:
 22358  004908  BE2F               	btfsc	i2WriteData@i+1,7,c
 22359  00490A  D016               	goto	i2u958_40
 22360                           
 22361                           ;harware.c: 41: WriteChar(AData[i], AIO);
 22362  00490C  EE20  F022         	lfsr	2,i2WriteData@AIO
 22363  004910  EE00  F00E         	lfsr	0,i2WriteChar@AIO
 22364  004914  0E0B               	movlw	11
 22365  004916                     i2u957_41:
 22366  004916  CFDB FFEB          	movff	plusw2,plusw0
 22367  00491A  06E8               	decf	wreg,f,c
 22368  00491C  E2FC               	bc	i2u957_41
 22369  00491E  502E               	movf	i2WriteData@i,w,c
 22370  004920  241F               	addwf	i2WriteData@AData,w,c
 22371  004922  6ED9               	movwf	fsr2l,c
 22372  004924  502F               	movf	i2WriteData@i+1,w,c
 22373  004926  2020               	addwfc	i2WriteData@AData+1,w,c
 22374  004928  6EDA               	movwf	fsr2h,c
 22375  00492A  50DF               	movf	indf2,w,c
 22376  00492C  EC22  F023         	call	i2_WriteChar
 22377  004930  062E               	decf	i2WriteData@i,f,c
 22378  004932  A0D8               	btfss	status,0,c
 22379  004934  062F               	decf	i2WriteData@i+1,f,c
 22380  004936  D7E8               	goto	i2l7827
 22381  004938                     i2u958_40:
 22382                           
 22383                           ;harware.c: 42: LatchOff(AIO);
 22384  004938  EE20  F022         	lfsr	2,i2WriteData@AIO
 22385  00493C  EE00  F002         	lfsr	0,i2LatchOff@AIO
 22386  004940  0E0B               	movlw	11
 22387  004942                     i2u959_41:
 22388  004942  CFDB FFEB          	movff	plusw2,plusw0
 22389  004946  06E8               	decf	wreg,f,c
 22390  004948  E2FC               	bc	i2u959_41
 22391  00494A  ECB4  F029         	call	i2_LatchOff	;wreg free
 22392  00494E  0012               	return		;funcret
 22393  004950                     __end_ofi2_WriteData:
 22394                           	opt stack 0
 22395                           tosu	equ	0xFFF
 22396                           tosh	equ	0xFFE
 22397                           tosl	equ	0xFFD
 22398                           pclatu	equ	0xFFB
 22399                           pclath	equ	0xFFA
 22400                           tblptru	equ	0xFF8
 22401                           tblptrh	equ	0xFF7
 22402                           tblptrl	equ	0xFF6
 22403                           tablat	equ	0xFF5
 22404                           prodh	equ	0xFF4
 22405                           prodl	equ	0xFF3
 22406                           intcon	equ	0xFF2
 22407                           indf0	equ	0xFEF
 22408                           postinc0	equ	0xFEE
 22409                           plusw0	equ	0xFEB
 22410                           fsr0h	equ	0xFEA
 22411                           fsr0l	equ	0xFE9
 22412                           wreg	equ	0xFE8
 22413                           indf1	equ	0xFE7
 22414                           postinc1	equ	0xFE6
 22415                           postdec1	equ	0xFE5
 22416                           plusw1	equ	0xFE3
 22417                           fsr1h	equ	0xFE2
 22418                           fsr1l	equ	0xFE1
 22419                           indf2	equ	0xFDF
 22420                           postinc2	equ	0xFDE
 22421                           postdec2	equ	0xFDD
 22422                           plusw2	equ	0xFDB
 22423                           fsr2h	equ	0xFDA
 22424                           fsr2l	equ	0xFD9
 22425                           status	equ	0xFD8
 22426                           
 22427 ;; *************** function i2_WriteChar *****************
 22428 ;; Defined at:
 22429 ;;		line 27 in file "harware.c"
 22430 ;; Parameters:    Size  Location     Type
 22431 ;;  AChar           1    wreg     unsigned char 
 22432 ;;  AIO            12   13[COMRAM] struct .
 22433 ;; Auto vars:     Size  Location     Type
 22434 ;;  AChar           1   27[COMRAM] unsigned char 
 22435 ;;  WriteChar       2   28[COMRAM] int 
 22436 ;; Return value:  Size  Location     Type
 22437 ;;                  1    wreg      void 
 22438 ;; Registers used:
 22439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 22440 ;; Tracked objects:
 22441 ;;		On entry : 0/0
 22442 ;;		On exit  : 0/0
 22443 ;;		Unchanged: 0/0
 22444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22445 ;;      Params:        12       0       0       0       0       0       0       0       0
 22446 ;;      Locals:         3       0       0       0       0       0       0       0       0
 22447 ;;      Temps:          2       0       0       0       0       0       0       0       0
 22448 ;;      Totals:        17       0       0       0       0       0       0       0       0
 22449 ;;Total ram usage:       17 bytes
 22450 ;; Hardware stack levels used:    1
 22451 ;; Hardware stack levels required when called:    2
 22452 ;; This function calls:
 22453 ;;		i2_ClockDown
 22454 ;;		i2_ClockUp
 22455 ;;		i2_DigiPot_ClockWrite
 22456 ;;		i2_DigiPot_DataWrite
 22457 ;;		i2_DigiPot_LatchWrite
 22458 ;;		i2_Display_ClockWrite
 22459 ;;		i2_Display_DataWrite
 22460 ;;		i2_Display_LatchWrite
 22461 ;;		i2_Hub_ClockWrite
 22462 ;;		i2_Hub_LatchWrite
 22463 ;; This function is called by:
 22464 ;;		i2_WriteData
 22465 ;; This function uses a non-reentrant model
 22466 ;;
 22467                           
 22468                           	psect	text113
 22469  004644                     __ptext113:
 22470                           	opt stack 0
 22471  004644                     i2_WriteChar:
 22472                           	opt stack 17
 22473                           
 22474                           ;incstack = 0
 22475                           ;i2WriteChar@AChar stored from wreg
 22476  004644  6E1C               	movwf	i2WriteChar@AChar,c
 22477                           
 22478                           ;harware.c: 29: for (int i = 7; i >= 0; i--)
 22479  004646  0E00               	movlw	0
 22480  004648  6E1E               	movwf	i2WriteChar@i+1,c
 22481  00464A  0E07               	movlw	7
 22482  00464C  6E1D               	movwf	i2WriteChar@i,c
 22483  00464E                     i2l7383:
 22484  00464E  BE1E               	btfsc	i2WriteChar@i+1,7,c
 22485  004650  0012               	return	
 22486                           
 22487                           ;harware.c: 30: {
 22488                           ;harware.c: 31: ClockUp(AIO);
 22489  004652  EE20  F00E         	lfsr	2,i2WriteChar@AIO
 22490  004656  EE00  F002         	lfsr	0,i2ClockUp@AIO
 22491  00465A  0E0B               	movlw	11
 22492  00465C                     i2u884_41:
 22493  00465C  CFDB FFEB          	movff	plusw2,plusw0
 22494  004660  06E8               	decf	wreg,f,c
 22495  004662  E2FC               	bc	i2u884_41
 22496  004664  ECC3  F029         	call	i2_ClockUp	;wreg free
 22497                           
 22498                           ;harware.c: 32: AIO.DataPin.Write((AChar >> i) & 0x01);
 22499  004668  EE20  F014         	lfsr	2,i2WriteChar@AIO+6
 22500  00466C  D801               	call	i2u885_48
 22501  00466E  D016               	goto	i2u885_49
 22502  004670                     i2u885_48:
 22503  004670  0005               	push	
 22504  004672  6EFA               	movwf	pclath,c
 22505  004674  50DE               	movf	postinc2,w,c
 22506  004676  6EFD               	movwf	tosl,c
 22507  004678  50DE               	movf	postinc2,w,c
 22508  00467A  6EFE               	movwf	tosh,c
 22509  00467C  50F8               	movf	tblptru,w,c
 22510  00467E  6EFF               	movwf	tosu,c
 22511  004680  50FA               	movf	pclath,w,c
 22512  004682  C01D  F01A         	movff	i2WriteChar@i,??i2_WriteChar
 22513  004686  C01C  F01B         	movff	i2WriteChar@AChar,??i2_WriteChar+1
 22514  00468A  2A1A               	incf	??i2_WriteChar,f,c
 22515  00468C  D002               	goto	i2u886_44
 22516  00468E                     i2u886_45:
 22517  00468E  90D8               	bcf	status,0,c
 22518  004690  321B               	rrcf	??i2_WriteChar+1,f,c
 22519  004692                     i2u886_44:
 22520  004692  2E1A               	decfsz	??i2_WriteChar,f,c
 22521  004694  D7FC               	goto	i2u886_45
 22522  004696  501B               	movf	??i2_WriteChar+1,w,c
 22523  004698  0B01               	andlw	1
 22524  00469A  0012               	return		;indir
 22525  00469C                     i2u885_49:
 22526                           
 22527                           ;harware.c: 33: ClockDown(AIO);
 22528  00469C  EE20  F00E         	lfsr	2,i2WriteChar@AIO
 22529  0046A0  EE00  F002         	lfsr	0,i2ClockDown@AIO
 22530  0046A4  0E0B               	movlw	11
 22531  0046A6                     i2u887_41:
 22532  0046A6  CFDB FFEB          	movff	plusw2,plusw0
 22533  0046AA  06E8               	decf	wreg,f,c
 22534  0046AC  E2FC               	bc	i2u887_41
 22535  0046AE  ECD2  F029         	call	i2_ClockDown
 22536  0046B2  061D               	decf	i2WriteChar@i,f,c
 22537  0046B4  A0D8               	btfss	status,0,c
 22538  0046B6  061E               	decf	i2WriteChar@i+1,f,c
 22539  0046B8  D7CA               	goto	i2l7383
 22540  0046BA                     __end_ofi2_WriteChar:
 22541                           	opt stack 0
 22542                           tosu	equ	0xFFF
 22543                           tosh	equ	0xFFE
 22544                           tosl	equ	0xFFD
 22545                           pclatu	equ	0xFFB
 22546                           pclath	equ	0xFFA
 22547                           tblptru	equ	0xFF8
 22548                           tblptrh	equ	0xFF7
 22549                           tblptrl	equ	0xFF6
 22550                           tablat	equ	0xFF5
 22551                           prodh	equ	0xFF4
 22552                           prodl	equ	0xFF3
 22553                           intcon	equ	0xFF2
 22554                           indf0	equ	0xFEF
 22555                           postinc0	equ	0xFEE
 22556                           plusw0	equ	0xFEB
 22557                           fsr0h	equ	0xFEA
 22558                           fsr0l	equ	0xFE9
 22559                           wreg	equ	0xFE8
 22560                           indf1	equ	0xFE7
 22561                           postinc1	equ	0xFE6
 22562                           postdec1	equ	0xFE5
 22563                           plusw1	equ	0xFE3
 22564                           fsr1h	equ	0xFE2
 22565                           fsr1l	equ	0xFE1
 22566                           indf2	equ	0xFDF
 22567                           postinc2	equ	0xFDE
 22568                           postdec2	equ	0xFDD
 22569                           plusw2	equ	0xFDB
 22570                           fsr2h	equ	0xFDA
 22571                           fsr2l	equ	0xFD9
 22572                           status	equ	0xFD8
 22573                           
 22574 ;; *************** function i2_Sequencer_StopTimer *****************
 22575 ;; Defined at:
 22576 ;;		line 21 in file "sequencer.c"
 22577 ;; Parameters:    Size  Location     Type
 22578 ;;		None
 22579 ;; Auto vars:     Size  Location     Type
 22580 ;;		None
 22581 ;; Return value:  Size  Location     Type
 22582 ;;                  1    wreg      void 
 22583 ;; Registers used:
 22584 ;;		wreg, status,2
 22585 ;; Tracked objects:
 22586 ;;		On entry : 0/0
 22587 ;;		On exit  : 0/0
 22588 ;;		Unchanged: 0/0
 22589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22590 ;;      Params:         0       0       0       0       0       0       0       0       0
 22591 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22592 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22593 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22594 ;;Total ram usage:        0 bytes
 22595 ;; Hardware stack levels used:    1
 22596 ;; This function calls:
 22597 ;;		Nothing
 22598 ;; This function is called by:
 22599 ;;		_Interrupt
 22600 ;; This function uses a non-reentrant model
 22601 ;;
 22602                           
 22603                           	psect	text114
 22604  0054FA                     __ptext114:
 22605                           	opt stack 0
 22606  0054FA                     i2_Sequencer_StopTimer:
 22607                           	opt stack 20
 22608                           
 22609                           ;sequencer.c: 23: TMR1ON = 0;
 22610                           
 22611                           ;incstack = 0
 22612  0054FA  90CD               	bcf	4045,0,c	;volatile
 22613                           
 22614                           ;sequencer.c: 24: _Timer.Counter = 0;
 22615  0054FC  0E00               	movlw	0
 22616  0054FE  0101               	movlb	1	; () banked
 22617  005500  6F0D               	movwf	(__Timer+5)& (0+255),b
 22618  005502  0E00               	movlw	0
 22619  005504  6F0C               	movwf	(__Timer+4)& (0+255),b
 22620                           
 22621                           ; BSR set to: 1
 22622  005506  0012               	return		;funcret
 22623  005508                     __end_ofi2_Sequencer_StopTimer:
 22624                           	opt stack 0
 22625                           tosu	equ	0xFFF
 22626                           tosh	equ	0xFFE
 22627                           tosl	equ	0xFFD
 22628                           pclatu	equ	0xFFB
 22629                           pclath	equ	0xFFA
 22630                           tblptru	equ	0xFF8
 22631                           tblptrh	equ	0xFF7
 22632                           tblptrl	equ	0xFF6
 22633                           tablat	equ	0xFF5
 22634                           prodh	equ	0xFF4
 22635                           prodl	equ	0xFF3
 22636                           intcon	equ	0xFF2
 22637                           indf0	equ	0xFEF
 22638                           postinc0	equ	0xFEE
 22639                           plusw0	equ	0xFEB
 22640                           fsr0h	equ	0xFEA
 22641                           fsr0l	equ	0xFE9
 22642                           wreg	equ	0xFE8
 22643                           indf1	equ	0xFE7
 22644                           postinc1	equ	0xFE6
 22645                           postdec1	equ	0xFE5
 22646                           plusw1	equ	0xFE3
 22647                           fsr1h	equ	0xFE2
 22648                           fsr1l	equ	0xFE1
 22649                           indf2	equ	0xFDF
 22650                           postinc2	equ	0xFDE
 22651                           postdec2	equ	0xFDD
 22652                           plusw2	equ	0xFDB
 22653                           fsr2h	equ	0xFDA
 22654                           fsr2l	equ	0xFD9
 22655                           status	equ	0xFD8
 22656                           
 22657 ;; *************** function i2_Midi_Write *****************
 22658 ;; Defined at:
 22659 ;;		line 56 in file "midi.c"
 22660 ;; Parameters:    Size  Location     Type
 22661 ;;  AData           1    wreg     unsigned char 
 22662 ;;  AMidiBuffer     2    0[COMRAM] PTR struct .
 22663 ;;		 -> _MidiInput(324), 
 22664 ;; Auto vars:     Size  Location     Type
 22665 ;;  AData           1    9[COMRAM] unsigned char 
 22666 ;; Return value:  Size  Location     Type
 22667 ;;                  1    wreg      void 
 22668 ;; Registers used:
 22669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22670 ;; Tracked objects:
 22671 ;;		On entry : 0/0
 22672 ;;		On exit  : 0/0
 22673 ;;		Unchanged: 0/0
 22674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22675 ;;      Params:         2       0       0       0       0       0       0       0       0
 22676 ;;      Locals:         1       0       0       0       0       0       0       0       0
 22677 ;;      Temps:          7       0       0       0       0       0       0       0       0
 22678 ;;      Totals:        10       0       0       0       0       0       0       0       0
 22679 ;;Total ram usage:       10 bytes
 22680 ;; Hardware stack levels used:    1
 22681 ;; This function calls:
 22682 ;;		Nothing
 22683 ;; This function is called by:
 22684 ;;		_Interrupt
 22685 ;; This function uses a non-reentrant model
 22686 ;;
 22687                           
 22688                           	psect	text115
 22689  00134A                     __ptext115:
 22690                           	opt stack 0
 22691  00134A                     i2_Midi_Write:
 22692                           	opt stack 20
 22693                           
 22694                           ; BSR set to: 1
 22695                           ;incstack = 0
 22696                           ;i2Midi_Write@AData stored from wreg
 22697  00134A  6E0A               	movwf	i2Midi_Write@AData,c
 22698                           
 22699                           ;midi.c: 58: if (AData & 0x80 == 0x80)
 22700  00134C  A00A               	btfss	i2Midi_Write@AData,0,c
 22701  00134E  D0A0               	goto	i2l1169
 22702                           
 22703                           ;midi.c: 59: {
 22704                           ;midi.c: 60: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Code = AData & 0xF0;
 22705  001350  EE21 F041          	lfsr	2,321
 22706  001354  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22707  001356  26D9               	addwf	fsr2l,f,c
 22708  001358  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22709  00135A  22DA               	addwfc	fsr2h,f,c
 22710  00135C  50DF               	movf	indf2,w,c
 22711  00135E  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22712  001360  5003               	movf	??i2_Midi_Write,w,c
 22713  001362  0D05               	mullw	5
 22714  001364  50F3               	movf	prodl,w,c
 22715  001366  2401               	addwf	i2Midi_Write@AMidiBuffer,w,c
 22716  001368  6ED9               	movwf	fsr2l,c
 22717  00136A  50F4               	movf	prodh,w,c
 22718  00136C  2002               	addwfc	i2Midi_Write@AMidiBuffer+1,w,c
 22719  00136E  6EDA               	movwf	fsr2h,c
 22720  001370  500A               	movf	i2Midi_Write@AData,w,c
 22721  001372  0BF0               	andlw	240
 22722  001374  6EDF               	movwf	indf2,c
 22723                           
 22724                           ;midi.c: 61: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Channel = AData & 0x0F;
 22725  001376  EE21 F041          	lfsr	2,321
 22726  00137A  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22727  00137C  26D9               	addwf	fsr2l,f,c
 22728  00137E  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22729  001380  22DA               	addwfc	fsr2h,f,c
 22730  001382  50DF               	movf	indf2,w,c
 22731  001384  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22732  001386  5003               	movf	??i2_Midi_Write,w,c
 22733  001388  0D05               	mullw	5
 22734  00138A  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22735  00138E  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22736  001392  50F3               	movf	prodl,w,c
 22737  001394  2604               	addwf	??i2_Midi_Write+1,f,c
 22738  001396  50F4               	movf	prodh,w,c
 22739  001398  2205               	addwfc	??i2_Midi_Write+2,f,c
 22740  00139A  0E01               	movlw	1
 22741  00139C  2404               	addwf	??i2_Midi_Write+1,w,c
 22742  00139E  6ED9               	movwf	fsr2l,c
 22743  0013A0  0E00               	movlw	0
 22744  0013A2  2005               	addwfc	??i2_Midi_Write+2,w,c
 22745  0013A4  6EDA               	movwf	fsr2h,c
 22746  0013A6  500A               	movf	i2Midi_Write@AData,w,c
 22747  0013A8  0B0F               	andlw	15
 22748  0013AA  6EDF               	movwf	indf2,c
 22749                           
 22750                           ;midi.c: 62: switch(AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Code)
 22751  0013AC  D050               	goto	i2l1170
 22752  0013AE                     
 22753                           ;midi.c: 65: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = 2;
 22754  0013AE  EE21 F041          	lfsr	2,321
 22755  0013B2  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22756  0013B4  26D9               	addwf	fsr2l,f,c
 22757  0013B6  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22758  0013B8  22DA               	addwfc	fsr2h,f,c
 22759  0013BA  50DF               	movf	indf2,w,c
 22760  0013BC  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22761  0013BE  5003               	movf	??i2_Midi_Write,w,c
 22762  0013C0  0D05               	mullw	5
 22763  0013C2  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22764  0013C6  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22765  0013CA  50F3               	movf	prodl,w,c
 22766  0013CC  2604               	addwf	??i2_Midi_Write+1,f,c
 22767  0013CE  50F4               	movf	prodh,w,c
 22768  0013D0  2205               	addwfc	??i2_Midi_Write+2,f,c
 22769  0013D2  0E04               	movlw	4
 22770  0013D4  2404               	addwf	??i2_Midi_Write+1,w,c
 22771  0013D6  6ED9               	movwf	fsr2l,c
 22772  0013D8  0E00               	movlw	0
 22773  0013DA  2005               	addwfc	??i2_Midi_Write+2,w,c
 22774  0013DC  6EDA               	movwf	fsr2h,c
 22775  0013DE  0E02               	movlw	2
 22776  0013E0  D019               	goto	L23
 22777  0013E2                     
 22778                           ;midi.c: 69: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = 1;
 22779  0013E2  EE21 F041          	lfsr	2,321
 22780  0013E6  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22781  0013E8  26D9               	addwf	fsr2l,f,c
 22782  0013EA  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22783  0013EC  22DA               	addwfc	fsr2h,f,c
 22784  0013EE  50DF               	movf	indf2,w,c
 22785  0013F0  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22786  0013F2  5003               	movf	??i2_Midi_Write,w,c
 22787  0013F4  0D05               	mullw	5
 22788  0013F6  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22789  0013FA  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22790  0013FE  50F3               	movf	prodl,w,c
 22791  001400  2604               	addwf	??i2_Midi_Write+1,f,c
 22792  001402  50F4               	movf	prodh,w,c
 22793  001404  2205               	addwfc	??i2_Midi_Write+2,f,c
 22794  001406  0E04               	movlw	4
 22795  001408  2404               	addwf	??i2_Midi_Write+1,w,c
 22796  00140A  6ED9               	movwf	fsr2l,c
 22797  00140C  0E00               	movlw	0
 22798  00140E  2005               	addwfc	??i2_Midi_Write+2,w,c
 22799  001410  6EDA               	movwf	fsr2h,c
 22800  001412  0E01               	movlw	1
 22801  001414                     L23:
 22802  001414  6EDF               	movwf	indf2,c
 22803                           
 22804                           ;midi.c: 70: break;
 22805  001416  D033               	goto	i2l1172
 22806  001418                     
 22807                           ;midi.c: 73: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].DataCount = -1;
 22808  001418  EE21 F041          	lfsr	2,321
 22809  00141C  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22810  00141E  26D9               	addwf	fsr2l,f,c
 22811  001420  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22812  001422  22DA               	addwfc	fsr2h,f,c
 22813  001424  50DF               	movf	indf2,w,c
 22814  001426  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22815  001428  5003               	movf	??i2_Midi_Write,w,c
 22816  00142A  0D05               	mullw	5
 22817  00142C  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22818  001430  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22819  001434  50F3               	movf	prodl,w,c
 22820  001436  2604               	addwf	??i2_Midi_Write+1,f,c
 22821  001438  50F4               	movf	prodh,w,c
 22822  00143A  2205               	addwfc	??i2_Midi_Write+2,f,c
 22823  00143C  0E04               	movlw	4
 22824  00143E  2404               	addwf	??i2_Midi_Write+1,w,c
 22825  001440  6ED9               	movwf	fsr2l,c
 22826  001442  0E00               	movlw	0
 22827  001444  2005               	addwfc	??i2_Midi_Write+2,w,c
 22828  001446  6EDA               	movwf	fsr2h,c
 22829  001448  0EFF               	movlw	255
 22830  00144A  6EDF               	movwf	indf2,c
 22831                           
 22832                           ;midi.c: 74: return;
 22833  00144C  0012               	return	
 22834  00144E                     i2l1170:
 22835  00144E  EE21 F041          	lfsr	2,321
 22836  001452  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22837  001454  26D9               	addwf	fsr2l,f,c
 22838  001456  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22839  001458  22DA               	addwfc	fsr2h,f,c
 22840  00145A  50DF               	movf	indf2,w,c
 22841  00145C  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22842  00145E  5003               	movf	??i2_Midi_Write,w,c
 22843  001460  0D05               	mullw	5
 22844  001462  50F3               	movf	prodl,w,c
 22845  001464  2401               	addwf	i2Midi_Write@AMidiBuffer,w,c
 22846  001466  6ED9               	movwf	fsr2l,c
 22847  001468  50F4               	movf	prodh,w,c
 22848  00146A  2002               	addwfc	i2Midi_Write@AMidiBuffer+1,w,c
 22849  00146C  6EDA               	movwf	fsr2h,c
 22850  00146E  50DF               	movf	indf2,w,c
 22851                           
 22852                           ; Switch size 1, requested type "space"
 22853                           ; Number of cases is 2, Range of values is 176 to 192
 22854                           ; switch strategies available:
 22855                           ; Name         Instructions Cycles
 22856                           ; simple_byte            7     4 (average)
 22857                           ;	Chosen strategy is simple_byte
 22858  001470  0AB0               	xorlw	176	; case 176
 22859  001472  B4D8               	btfsc	status,2,c
 22860  001474  D79C               	goto	i2l1171
 22861  001476  0A70               	xorlw	112	; case 192
 22862  001478  B4D8               	btfsc	status,2,c
 22863  00147A  D7B3               	goto	i2l1173
 22864  00147C  D7CD               	goto	i2l1174
 22865  00147E                     i2l1172:
 22866                           
 22867                           ;midi.c: 76: AMidiBuffer->iData = 0;
 22868  00147E  EE21 F042          	lfsr	2,322
 22869  001482  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22870  001484  26D9               	addwf	fsr2l,f,c
 22871  001486  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22872  001488  22DA               	addwfc	fsr2h,f,c
 22873  00148A  0E00               	movlw	0
 22874  00148C  6EDF               	movwf	indf2,c
 22875                           
 22876                           ;midi.c: 77: }
 22877  00148E  D02F               	goto	i2l1176
 22878  001490                     i2l1169:
 22879                           
 22880                           ;midi.c: 78: else
 22881                           ;midi.c: 79: {
 22882                           ;midi.c: 80: AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Data[AMidiBuffer->iData] = A
      +                          Data;
 22883  001490  EE21 F042          	lfsr	2,322
 22884  001494  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22885  001496  26D9               	addwf	fsr2l,f,c
 22886  001498  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22887  00149A  22DA               	addwfc	fsr2h,f,c
 22888  00149C  50DF               	movf	indf2,w,c
 22889  00149E  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22890  0014A0  5003               	movf	??i2_Midi_Write,w,c
 22891  0014A2  0D01               	mullw	1
 22892  0014A4  0E02               	movlw	2
 22893  0014A6  26F3               	addwf	prodl,f,c
 22894  0014A8  0E00               	movlw	0
 22895  0014AA  22F4               	addwfc	prodh,f,c
 22896  0014AC  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22897  0014B0  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22898  0014B4  50F3               	movf	prodl,w,c
 22899  0014B6  2604               	addwf	??i2_Midi_Write+1,f,c
 22900  0014B8  50F4               	movf	prodh,w,c
 22901  0014BA  2205               	addwfc	??i2_Midi_Write+2,f,c
 22902  0014BC  EE21 F041          	lfsr	2,321
 22903  0014C0  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22904  0014C2  26D9               	addwf	fsr2l,f,c
 22905  0014C4  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22906  0014C6  22DA               	addwfc	fsr2h,f,c
 22907  0014C8  50DF               	movf	indf2,w,c
 22908  0014CA  6E06               	movwf	(??i2_Midi_Write+3)& (0+255),c
 22909  0014CC  5006               	movf	??i2_Midi_Write+3,w,c
 22910  0014CE  0D05               	mullw	5
 22911  0014D0  50F3               	movf	prodl,w,c
 22912  0014D2  2404               	addwf	??i2_Midi_Write+1,w,c
 22913  0014D4  6ED9               	movwf	fsr2l,c
 22914  0014D6  50F4               	movf	prodh,w,c
 22915  0014D8  2005               	addwfc	??i2_Midi_Write+2,w,c
 22916  0014DA  6EDA               	movwf	fsr2h,c
 22917  0014DC  C00A  FFDF         	movff	i2Midi_Write@AData,indf2
 22918                           
 22919                           ;midi.c: 81: AMidiBuffer->iData++;
 22920  0014E0  EE21 F042          	lfsr	2,322
 22921  0014E4  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22922  0014E6  26D9               	addwf	fsr2l,f,c
 22923  0014E8  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22924  0014EA  22DA               	addwfc	fsr2h,f,c
 22925  0014EC  2ADF               	incf	indf2,f,c
 22926  0014EE                     i2l1176:
 22927                           
 22928                           ;midi.c: 82: }
 22929                           ;midi.c: 84: if (AMidiBuffer->iData == AMidiBuffer->Buffer[AMidiBuffer->iBufferWrite].Da
      +                          taCount && AMidiBuffer->Size <= 64)
 22930  0014EE  EE21 F041          	lfsr	2,321
 22931  0014F2  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22932  0014F4  26D9               	addwf	fsr2l,f,c
 22933  0014F6  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22934  0014F8  22DA               	addwfc	fsr2h,f,c
 22935  0014FA  50DF               	movf	indf2,w,c
 22936  0014FC  6E03               	movwf	??i2_Midi_Write& (0+255),c
 22937  0014FE  5003               	movf	??i2_Midi_Write,w,c
 22938  001500  0D05               	mullw	5
 22939  001502  C001  F004         	movff	i2Midi_Write@AMidiBuffer,??i2_Midi_Write+1
 22940  001506  C002  F005         	movff	i2Midi_Write@AMidiBuffer+1,??i2_Midi_Write+2
 22941  00150A  50F3               	movf	prodl,w,c
 22942  00150C  2604               	addwf	??i2_Midi_Write+1,f,c
 22943  00150E  50F4               	movf	prodh,w,c
 22944  001510  2205               	addwfc	??i2_Midi_Write+2,f,c
 22945  001512  0E04               	movlw	4
 22946  001514  2404               	addwf	??i2_Midi_Write+1,w,c
 22947  001516  6ED9               	movwf	fsr2l,c
 22948  001518  0E00               	movlw	0
 22949  00151A  2005               	addwfc	??i2_Midi_Write+2,w,c
 22950  00151C  6EDA               	movwf	fsr2h,c
 22951  00151E  50DF               	movf	indf2,w,c
 22952  001520  6E06               	movwf	(??i2_Midi_Write+3)& (0+255),c
 22953  001522  6A07               	clrf	(??i2_Midi_Write+4)& (0+255),c
 22954  001524  BE06               	btfsc	(??i2_Midi_Write+3)& (0+255),7,c
 22955  001526  0607               	decf	(??i2_Midi_Write+4)& (0+255),f,c
 22956  001528  EE21 F042          	lfsr	2,322
 22957  00152C  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22958  00152E  26D9               	addwf	fsr2l,f,c
 22959  001530  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22960  001532  22DA               	addwfc	fsr2h,f,c
 22961  001534  50DF               	movf	indf2,w,c
 22962  001536  6E08               	movwf	(??i2_Midi_Write+5)& (0+255),c
 22963  001538  6A09               	clrf	(??i2_Midi_Write+6)& (0+255),c
 22964  00153A  5006               	movf	??i2_Midi_Write+3,w,c
 22965  00153C  1808               	xorwf	??i2_Midi_Write+5,w,c
 22966  00153E  E12E               	bnz	i2l1175
 22967  001540  5007               	movf	??i2_Midi_Write+4,w,c
 22968  001542  1809               	xorwf	??i2_Midi_Write+6,w,c
 22969  001544  A4D8               	btfss	status,2,c
 22970  001546  0012               	return	
 22971  001548  EE21 F043          	lfsr	2,323
 22972  00154C  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22973  00154E  26D9               	addwf	fsr2l,f,c
 22974  001550  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22975  001552  22DA               	addwfc	fsr2h,f,c
 22976  001554  0E41               	movlw	65
 22977  001556  60DF               	cpfslt	indf2,c
 22978  001558  0012               	return	
 22979                           
 22980                           ;midi.c: 85: {
 22981                           ;midi.c: 86: LATB4 = 1;
 22982  00155A  888A               	bsf	3978,4,c	;volatile
 22983                           
 22984                           ;midi.c: 87: AMidiBuffer->Size++;
 22985  00155C  EE21 F043          	lfsr	2,323
 22986  001560  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22987  001562  26D9               	addwf	fsr2l,f,c
 22988  001564  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22989  001566  22DA               	addwfc	fsr2h,f,c
 22990  001568  2ADF               	incf	indf2,f,c
 22991                           
 22992                           ;midi.c: 88: AMidiBuffer->iBufferWrite++;
 22993  00156A  EE21 F041          	lfsr	2,321
 22994  00156E  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 22995  001570  26D9               	addwf	fsr2l,f,c
 22996  001572  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 22997  001574  22DA               	addwfc	fsr2h,f,c
 22998  001576  2ADF               	incf	indf2,f,c
 22999                           
 23000                           ;midi.c: 89: if (AMidiBuffer->iBufferWrite >= 64)
 23001  001578  EE21 F041          	lfsr	2,321
 23002  00157C  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 23003  00157E  26D9               	addwf	fsr2l,f,c
 23004  001580  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 23005  001582  22DA               	addwfc	fsr2h,f,c
 23006  001584  0E3F               	movlw	63
 23007  001586  64DF               	cpfsgt	indf2,c
 23008  001588  0012               	return	
 23009                           
 23010                           ;midi.c: 90: AMidiBuffer->iBufferWrite = 0;
 23011  00158A  EE21 F041          	lfsr	2,321
 23012  00158E  5001               	movf	i2Midi_Write@AMidiBuffer,w,c
 23013  001590  26D9               	addwf	fsr2l,f,c
 23014  001592  5002               	movf	i2Midi_Write@AMidiBuffer+1,w,c
 23015  001594  22DA               	addwfc	fsr2h,f,c
 23016  001596  0E00               	movlw	0
 23017  001598  6EDF               	movwf	indf2,c
 23018  00159A  0012               	return	
 23019  00159C                     i2l1175:
 23020  00159C  0012               	return		;funcret
 23021  00159E                     __end_ofi2_Midi_Write:
 23022                           	opt stack 0
 23023                           tosu	equ	0xFFF
 23024                           tosh	equ	0xFFE
 23025                           tosl	equ	0xFFD
 23026                           pclatu	equ	0xFFB
 23027                           pclath	equ	0xFFA
 23028                           tblptru	equ	0xFF8
 23029                           tblptrh	equ	0xFF7
 23030                           tblptrl	equ	0xFF6
 23031                           tablat	equ	0xFF5
 23032                           prodh	equ	0xFF4
 23033                           prodl	equ	0xFF3
 23034                           intcon	equ	0xFF2
 23035                           indf0	equ	0xFEF
 23036                           postinc0	equ	0xFEE
 23037                           plusw0	equ	0xFEB
 23038                           fsr0h	equ	0xFEA
 23039                           fsr0l	equ	0xFE9
 23040                           wreg	equ	0xFE8
 23041                           indf1	equ	0xFE7
 23042                           postinc1	equ	0xFE6
 23043                           postdec1	equ	0xFE5
 23044                           plusw1	equ	0xFE3
 23045                           fsr1h	equ	0xFE2
 23046                           fsr1l	equ	0xFE1
 23047                           indf2	equ	0xFDF
 23048                           postinc2	equ	0xFDE
 23049                           postdec2	equ	0xFDD
 23050                           plusw2	equ	0xFDB
 23051                           fsr2h	equ	0xFDA
 23052                           fsr2l	equ	0xFD9
 23053                           status	equ	0xFD8
 23054                           
 23055 ;; *************** function i2_Midi_ResetBuffer *****************
 23056 ;; Defined at:
 23057 ;;		line 41 in file "midi.c"
 23058 ;; Parameters:    Size  Location     Type
 23059 ;;  AMidiBuffer     2    0[COMRAM] PTR struct .
 23060 ;;		 -> _MidiOutput(324), _MidiInput(324), 
 23061 ;; Auto vars:     Size  Location     Type
 23062 ;;  Midi_ResetBu    1    5[COMRAM] unsigned char 
 23063 ;;  Midi_ResetBu    1    4[COMRAM] unsigned char 
 23064 ;; Return value:  Size  Location     Type
 23065 ;;                  1    wreg      void 
 23066 ;; Registers used:
 23067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23068 ;; Tracked objects:
 23069 ;;		On entry : 0/0
 23070 ;;		On exit  : 0/0
 23071 ;;		Unchanged: 0/0
 23072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23073 ;;      Params:         2       0       0       0       0       0       0       0       0
 23074 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23075 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23076 ;;      Totals:         6       0       0       0       0       0       0       0       0
 23077 ;;Total ram usage:        6 bytes
 23078 ;; Hardware stack levels used:    1
 23079 ;; This function calls:
 23080 ;;		Nothing
 23081 ;; This function is called by:
 23082 ;;		_Interrupt
 23083 ;; This function uses a non-reentrant model
 23084 ;;
 23085                           
 23086                           	psect	text116
 23087  00371C                     __ptext116:
 23088                           	opt stack 0
 23089  00371C                     i2_Midi_ResetBuffer:
 23090                           	opt stack 20
 23091                           
 23092                           ;midi.c: 43: AMidiBuffer->iBufferRead = 0;
 23093                           
 23094                           ;incstack = 0
 23095  00371C  EE21 F040          	lfsr	2,320
 23096  003720  5001               	movf	i2Midi_ResetBuffer@AMidiBuffer,w,c
 23097  003722  26D9               	addwf	fsr2l,f,c
 23098  003724  5002               	movf	i2Midi_ResetBuffer@AMidiBuffer+1,w,c
 23099  003726  22DA               	addwfc	fsr2h,f,c
 23100  003728  0E00               	movlw	0
 23101  00372A  6EDF               	movwf	indf2,c
 23102                           
 23103                           ;midi.c: 44: AMidiBuffer->iBufferWrite = 0;
 23104  00372C  EE21 F041          	lfsr	2,321
 23105  003730  5001               	movf	i2Midi_ResetBuffer@AMidiBuffer,w,c
 23106  003732  26D9               	addwf	fsr2l,f,c
 23107  003734  5002               	movf	i2Midi_ResetBuffer@AMidiBuffer+1,w,c
 23108  003736  22DA               	addwfc	fsr2h,f,c
 23109  003738  0E00               	movlw	0
 23110  00373A  6EDF               	movwf	indf2,c
 23111                           
 23112                           ;midi.c: 45: AMidiBuffer->iData = 0;
 23113  00373C  EE21 F042          	lfsr	2,322
 23114  003740  5001               	movf	i2Midi_ResetBuffer@AMidiBuffer,w,c
 23115  003742  26D9               	addwf	fsr2l,f,c
 23116  003744  5002               	movf	i2Midi_ResetBuffer@AMidiBuffer+1,w,c
 23117  003746  22DA               	addwfc	fsr2h,f,c
 23118  003748  0E00               	movlw	0
 23119  00374A  6EDF               	movwf	indf2,c
 23120                           
 23121                           ;midi.c: 46: AMidiBuffer->Size = 0;
 23122  00374C  EE21 F043          	lfsr	2,323
 23123  003750  5001               	movf	i2Midi_ResetBuffer@AMidiBuffer,w,c
 23124  003752  26D9               	addwf	fsr2l,f,c
 23125  003754  5002               	movf	i2Midi_ResetBuffer@AMidiBuffer+1,w,c
 23126  003756  22DA               	addwfc	fsr2h,f,c
 23127  003758  0E00               	movlw	0
 23128  00375A  6EDF               	movwf	indf2,c
 23129                           
 23130                           ;midi.c: 47: for (char i = 0; i < 64; i++)
 23131  00375C  0E00               	movlw	0
 23132  00375E  6E06               	movwf	i2Midi_ResetBuffer@i,c
 23133  003760                     i2l7843:
 23134  003760  0E3F               	movlw	63
 23135  003762  6406               	cpfsgt	i2Midi_ResetBuffer@i,c
 23136  003764  D001               	goto	i2l1162
 23137  003766  0012               	return	
 23138  003768                     i2l1162:
 23139                           
 23140                           ;midi.c: 48: {
 23141                           ;midi.c: 49: AMidiBuffer->Buffer[i].Code = 0x00;
 23142  003768  5006               	movf	i2Midi_ResetBuffer@i,w,c
 23143  00376A  0D05               	mullw	5
 23144  00376C  50F3               	movf	prodl,w,c
 23145  00376E  2401               	addwf	i2Midi_ResetBuffer@AMidiBuffer,w,c
 23146  003770  6ED9               	movwf	fsr2l,c
 23147  003772  50F4               	movf	prodh,w,c
 23148  003774  2002               	addwfc	i2Midi_ResetBuffer@AMidiBuffer+1,w,c
 23149  003776  6EDA               	movwf	fsr2h,c
 23150  003778  0E00               	movlw	0
 23151  00377A  6EDF               	movwf	indf2,c
 23152                           
 23153                           ;midi.c: 50: AMidiBuffer->Buffer[i].Channel = 0x00;
 23154  00377C  5006               	movf	i2Midi_ResetBuffer@i,w,c
 23155  00377E  0D05               	mullw	5
 23156  003780  C001  F003         	movff	i2Midi_ResetBuffer@AMidiBuffer,??i2_Midi_ResetBuffer
 23157  003784  C002  F004         	movff	i2Midi_ResetBuffer@AMidiBuffer+1,??i2_Midi_ResetBuffer+1
 23158  003788  50F3               	movf	prodl,w,c
 23159  00378A  2603               	addwf	??i2_Midi_ResetBuffer,f,c
 23160  00378C  50F4               	movf	prodh,w,c
 23161  00378E  2204               	addwfc	??i2_Midi_ResetBuffer+1,f,c
 23162  003790  0E01               	movlw	1
 23163  003792  2403               	addwf	??i2_Midi_ResetBuffer,w,c
 23164  003794  6ED9               	movwf	fsr2l,c
 23165  003796  0E00               	movlw	0
 23166  003798  2004               	addwfc	??i2_Midi_ResetBuffer+1,w,c
 23167  00379A  6EDA               	movwf	fsr2h,c
 23168  00379C  0E00               	movlw	0
 23169  00379E  6EDF               	movwf	indf2,c
 23170                           
 23171                           ;midi.c: 51: for (char j = 0; j < sizeof(AMidiBuffer->Buffer[i].Data); j++)
 23172  0037A0  0E00               	movlw	0
 23173  0037A2  6E05               	movwf	i2Midi_ResetBuffer@j,c
 23174  0037A4                     i2l7851:
 23175  0037A4  0E01               	movlw	1
 23176  0037A6  6405               	cpfsgt	i2Midi_ResetBuffer@j,c
 23177  0037A8  D001               	goto	i2l1164
 23178  0037AA  D01A               	goto	i2u962_40
 23179  0037AC                     i2l1164:
 23180                           
 23181                           ;midi.c: 52: AMidiBuffer->Buffer[i].Data[j] = 0x00;
 23182  0037AC  5005               	movf	i2Midi_ResetBuffer@j,w,c
 23183  0037AE  0D01               	mullw	1
 23184  0037B0  0E02               	movlw	2
 23185  0037B2  26F3               	addwf	prodl,f,c
 23186  0037B4  0E00               	movlw	0
 23187  0037B6  22F4               	addwfc	prodh,f,c
 23188  0037B8  C001  F003         	movff	i2Midi_ResetBuffer@AMidiBuffer,??i2_Midi_ResetBuffer
 23189  0037BC  C002  F004         	movff	i2Midi_ResetBuffer@AMidiBuffer+1,??i2_Midi_ResetBuffer+1
 23190  0037C0  50F3               	movf	prodl,w,c
 23191  0037C2  2603               	addwf	??i2_Midi_ResetBuffer,f,c
 23192  0037C4  50F4               	movf	prodh,w,c
 23193  0037C6  2204               	addwfc	??i2_Midi_ResetBuffer+1,f,c
 23194  0037C8  5006               	movf	i2Midi_ResetBuffer@i,w,c
 23195  0037CA  0D05               	mullw	5
 23196  0037CC  50F3               	movf	prodl,w,c
 23197  0037CE  2403               	addwf	??i2_Midi_ResetBuffer,w,c
 23198  0037D0  6ED9               	movwf	fsr2l,c
 23199  0037D2  50F4               	movf	prodh,w,c
 23200  0037D4  2004               	addwfc	??i2_Midi_ResetBuffer+1,w,c
 23201  0037D6  6EDA               	movwf	fsr2h,c
 23202  0037D8  0E00               	movlw	0
 23203  0037DA  6EDF               	movwf	indf2,c
 23204  0037DC  2A05               	incf	i2Midi_ResetBuffer@j,f,c
 23205  0037DE  D7E2               	goto	i2l7851
 23206  0037E0                     i2u962_40:
 23207  0037E0  2A06               	incf	i2Midi_ResetBuffer@i,f,c
 23208  0037E2  D7BE               	goto	i2l7843
 23209  0037E4                     __end_ofi2_Midi_ResetBuffer:
 23210                           	opt stack 0
 23211                           tosu	equ	0xFFF
 23212                           tosh	equ	0xFFE
 23213                           tosl	equ	0xFFD
 23214                           pclatu	equ	0xFFB
 23215                           pclath	equ	0xFFA
 23216                           tblptru	equ	0xFF8
 23217                           tblptrh	equ	0xFF7
 23218                           tblptrl	equ	0xFF6
 23219                           tablat	equ	0xFF5
 23220                           prodh	equ	0xFF4
 23221                           prodl	equ	0xFF3
 23222                           intcon	equ	0xFF2
 23223                           indf0	equ	0xFEF
 23224                           postinc0	equ	0xFEE
 23225                           plusw0	equ	0xFEB
 23226                           fsr0h	equ	0xFEA
 23227                           fsr0l	equ	0xFE9
 23228                           wreg	equ	0xFE8
 23229                           indf1	equ	0xFE7
 23230                           postinc1	equ	0xFE6
 23231                           postdec1	equ	0xFE5
 23232                           plusw1	equ	0xFE3
 23233                           fsr1h	equ	0xFE2
 23234                           fsr1l	equ	0xFE1
 23235                           indf2	equ	0xFDF
 23236                           postinc2	equ	0xFDE
 23237                           postdec2	equ	0xFDD
 23238                           plusw2	equ	0xFDB
 23239                           fsr2h	equ	0xFDA
 23240                           fsr2l	equ	0xFD9
 23241                           status	equ	0xFD8
 23242                           
 23243 ;; *************** function i2_Hub_CopyBuffer *****************
 23244 ;; Defined at:
 23245 ;;		line 125 in file "hub.c"
 23246 ;; Parameters:    Size  Location     Type
 23247 ;;		None
 23248 ;; Auto vars:     Size  Location     Type
 23249 ;;		None
 23250 ;; Return value:  Size  Location     Type
 23251 ;;                  1    wreg      void 
 23252 ;; Registers used:
 23253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23254 ;; Tracked objects:
 23255 ;;		On entry : 0/0
 23256 ;;		On exit  : 0/0
 23257 ;;		Unchanged: 0/0
 23258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23259 ;;      Params:         0       0       0       0       0       0       0       0       0
 23260 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23261 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23262 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23263 ;;Total ram usage:        0 bytes
 23264 ;; Hardware stack levels used:    1
 23265 ;; Hardware stack levels required when called:    1
 23266 ;; This function calls:
 23267 ;;		i2_memcpy
 23268 ;; This function is called by:
 23269 ;;		_Interrupt
 23270 ;; This function uses a non-reentrant model
 23271 ;;
 23272                           
 23273                           	psect	text117
 23274  00520C                     __ptext117:
 23275                           	opt stack 0
 23276  00520C                     i2_Hub_CopyBuffer:
 23277                           	opt stack 19
 23278                           
 23279                           ;hub.c: 127: memcpy(&_Hub.SecondaryBuffer, &_Hub.PrimaryBuffer, sizeof(DataBuffer));
 23280                           
 23281                           ;incstack = 0
 23282  00520C  0EAD               	movlw	low (__Hub+110)
 23283  00520E  6E01               	movwf	i2memcpy@d1,c
 23284  005210  0E01               	movlw	high (__Hub+110)
 23285  005212  6E02               	movwf	i2memcpy@d1+1,c
 23286  005214  0EA1               	movlw	low (__Hub+98)
 23287  005216  6E03               	movwf	i2memcpy@s1,c
 23288  005218  0E01               	movlw	high (__Hub+98)
 23289  00521A  6E04               	movwf	i2memcpy@s1+1,c
 23290  00521C  0E00               	movlw	0
 23291  00521E  6E06               	movwf	i2memcpy@n+1,c
 23292  005220  0E0C               	movlw	12
 23293  005222  6E05               	movwf	i2memcpy@n,c
 23294  005224  EC1E  F027         	call	i2_memcpy	;wreg free
 23295                           
 23296                           ;hub.c: 129: _Hub.ReadyToWrite = 0;
 23297  005228  0E00               	movlw	0
 23298  00522A  0101               	movlb	1	; () banked
 23299  00522C  6FC5               	movwf	(__Hub+134)& (0+255),b
 23300                           
 23301                           ; BSR set to: 1
 23302  00522E  0012               	return		;funcret
 23303  005230                     __end_ofi2_Hub_CopyBuffer:
 23304                           	opt stack 0
 23305                           tosu	equ	0xFFF
 23306                           tosh	equ	0xFFE
 23307                           tosl	equ	0xFFD
 23308                           pclatu	equ	0xFFB
 23309                           pclath	equ	0xFFA
 23310                           tblptru	equ	0xFF8
 23311                           tblptrh	equ	0xFF7
 23312                           tblptrl	equ	0xFF6
 23313                           tablat	equ	0xFF5
 23314                           prodh	equ	0xFF4
 23315                           prodl	equ	0xFF3
 23316                           intcon	equ	0xFF2
 23317                           indf0	equ	0xFEF
 23318                           postinc0	equ	0xFEE
 23319                           plusw0	equ	0xFEB
 23320                           fsr0h	equ	0xFEA
 23321                           fsr0l	equ	0xFE9
 23322                           wreg	equ	0xFE8
 23323                           indf1	equ	0xFE7
 23324                           postinc1	equ	0xFE6
 23325                           postdec1	equ	0xFE5
 23326                           plusw1	equ	0xFE3
 23327                           fsr1h	equ	0xFE2
 23328                           fsr1l	equ	0xFE1
 23329                           indf2	equ	0xFDF
 23330                           postinc2	equ	0xFDE
 23331                           postdec2	equ	0xFDD
 23332                           plusw2	equ	0xFDB
 23333                           fsr2h	equ	0xFDA
 23334                           fsr2l	equ	0xFD9
 23335                           status	equ	0xFD8
 23336                           
 23337 ;; *************** function _Sequencer_TimerEvent *****************
 23338 ;; Defined at:
 23339 ;;		line 44 in file "main.c"
 23340 ;; Parameters:    Size  Location     Type
 23341 ;;		None
 23342 ;; Auto vars:     Size  Location     Type
 23343 ;;		None
 23344 ;; Return value:  Size  Location     Type
 23345 ;;                  1    wreg      void 
 23346 ;; Registers used:
 23347 ;;		wreg, status,2, status,0
 23348 ;; Tracked objects:
 23349 ;;		On entry : 0/0
 23350 ;;		On exit  : 0/0
 23351 ;;		Unchanged: 0/0
 23352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23353 ;;      Params:         0       0       0       0       0       0       0       0       0
 23354 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23355 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23356 ;;      Totals:         0       0       0       0       0       0       0       0       0
 23357 ;;Total ram usage:        0 bytes
 23358 ;; Hardware stack levels used:    1
 23359 ;; This function calls:
 23360 ;;		Nothing
 23361 ;; This function is called by:
 23362 ;;		_Interrupt
 23363 ;; This function uses a non-reentrant model
 23364 ;;
 23365                           
 23366                           	psect	text118
 23367  005254                     __ptext118:
 23368                           	opt stack 0
 23369  005254                     _Sequencer_TimerEvent:
 23370                           	opt stack 20
 23371                           
 23372                           ;main.c: 46: if (_Saving)
 23373                           
 23374                           ; BSR set to: 1
 23375                           ;incstack = 0
 23376  005254  0100               	movlb	0	; () banked
 23377  005256  51F4               	movf	__Saving& (0+255),w,b
 23378  005258  B4D8               	btfsc	status,2,c
 23379  00525A  D004               	goto	i2l581
 23380                           
 23381                           ; BSR set to: 0
 23382                           ;main.c: 47: _Display.SavingMask = ~_Display.SavingMask;
 23383  00525C  0102               	movlb	2	; () banked
 23384  00525E  51D1               	movf	(__Display+199)& (0+255),w,b
 23385  005260  0AFF               	xorlw	255
 23386  005262  6FD1               	movwf	(__Display+199)& (0+255),b
 23387  005264                     i2l581:
 23388                           
 23389                           ;main.c: 48: if (_Modified && (2 > 1))
 23390                           
 23391                           ; BSR set to: 2
 23392  005264  0101               	movlb	1	; () banked
 23393  005266  5134               	movf	__Modified& (0+255),w,b
 23394  005268  B4D8               	btfsc	status,2,c
 23395  00526A  0012               	return	
 23396                           
 23397                           ; BSR set to: 1
 23398                           ;main.c: 49: _Display.PointMask[1] = ~_Display.PointMask[1];
 23399  00526C  0102               	movlb	2	; () banked
 23400  00526E  51D3               	movf	(__Display+201)& (0+255),w,b
 23401  005270  0AFF               	xorlw	255
 23402  005272  6FD3               	movwf	(__Display+201)& (0+255),b
 23403  005274  0012               	return	
 23404  005276                     __end_of_Sequencer_TimerEvent:
 23405                           	opt stack 0
 23406                           tosu	equ	0xFFF
 23407                           tosh	equ	0xFFE
 23408                           tosl	equ	0xFFD
 23409                           pclatu	equ	0xFFB
 23410                           pclath	equ	0xFFA
 23411                           tblptru	equ	0xFF8
 23412                           tblptrh	equ	0xFF7
 23413                           tblptrl	equ	0xFF6
 23414                           tablat	equ	0xFF5
 23415                           prodh	equ	0xFF4
 23416                           prodl	equ	0xFF3
 23417                           intcon	equ	0xFF2
 23418                           indf0	equ	0xFEF
 23419                           postinc0	equ	0xFEE
 23420                           plusw0	equ	0xFEB
 23421                           fsr0h	equ	0xFEA
 23422                           fsr0l	equ	0xFE9
 23423                           wreg	equ	0xFE8
 23424                           indf1	equ	0xFE7
 23425                           postinc1	equ	0xFE6
 23426                           postdec1	equ	0xFE5
 23427                           plusw1	equ	0xFE3
 23428                           fsr1h	equ	0xFE2
 23429                           fsr1l	equ	0xFE1
 23430                           indf2	equ	0xFDF
 23431                           postinc2	equ	0xFDE
 23432                           postdec2	equ	0xFDD
 23433                           plusw2	equ	0xFDB
 23434                           fsr2h	equ	0xFDA
 23435                           fsr2l	equ	0xFD9
 23436                           status	equ	0xFD8
 23437                           
 23438 ;; *************** function _Hub_UpdateValues *****************
 23439 ;; Defined at:
 23440 ;;		line 94 in file "hub.c"
 23441 ;; Parameters:    Size  Location     Type
 23442 ;;		None
 23443 ;; Auto vars:     Size  Location     Type
 23444 ;;  i               2   69[COMRAM] int 
 23445 ;; Return value:  Size  Location     Type
 23446 ;;                  1    wreg      void 
 23447 ;; Registers used:
 23448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23449 ;; Tracked objects:
 23450 ;;		On entry : 0/0
 23451 ;;		On exit  : 0/0
 23452 ;;		Unchanged: 0/0
 23453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23454 ;;      Params:         0       0       0       0       0       0       0       0       0
 23455 ;;      Locals:         2       0       0       0       0       0       0       0       0
 23456 ;;      Temps:          2       0       0       0       0       0       0       0       0
 23457 ;;      Totals:         4       0       0       0       0       0       0       0       0
 23458 ;;Total ram usage:        4 bytes
 23459 ;; Hardware stack levels used:    1
 23460 ;; Hardware stack levels required when called:    5
 23461 ;; This function calls:
 23462 ;;		_Hub_DecodeSwitch
 23463 ;;		_Hub_SetValue
 23464 ;;		i2_Hub_ReadSwitch
 23465 ;;		i2_LatchOff
 23466 ;;		i2_LatchOn
 23467 ;;		i2_memcpy
 23468 ;; This function is called by:
 23469 ;;		_Interrupt
 23470 ;; This function uses a non-reentrant model
 23471 ;;
 23472                           
 23473                           	psect	text119
 23474  002E7A                     __ptext119:
 23475                           	opt stack 0
 23476  002E7A                     _Hub_UpdateValues:
 23477                           	opt stack 15
 23478                           
 23479                           ;hub.c: 96: if (_Hub.iRead == 0)
 23480                           
 23481                           ;incstack = 0
 23482  002E7A  0101               	movlb	1	; () banked
 23483  002E7C  51A0               	movf	(__Hub+97)& (0+255),w,b
 23484  002E7E  A4D8               	btfss	status,2,c
 23485  002E80  D024               	goto	i2l873
 23486                           
 23487                           ; BSR set to: 1
 23488                           ;hub.c: 97: {
 23489                           ;hub.c: 98: memcpy(_Hub.SwitchOld, _Hub.Switch, sizeof(_Hub.Switch));
 23490  002E82  0E6F               	movlw	low (__Hub+48)
 23491  002E84  6E01               	movwf	i2memcpy@d1,c
 23492  002E86  0E01               	movlw	high (__Hub+48)
 23493  002E88  6E02               	movwf	i2memcpy@d1+1,c
 23494  002E8A  0E3F               	movlw	low __Hub
 23495  002E8C  6E03               	movwf	i2memcpy@s1,c
 23496  002E8E  0E01               	movlw	high __Hub
 23497  002E90  6E04               	movwf	i2memcpy@s1+1,c
 23498  002E92  0E00               	movlw	0
 23499  002E94  6E06               	movwf	i2memcpy@n+1,c
 23500  002E96  0E30               	movlw	48
 23501  002E98  6E05               	movwf	i2memcpy@n,c
 23502  002E9A  EC1E  F027         	call	i2_memcpy	;wreg free
 23503                           
 23504                           ;hub.c: 101: LatchOn(_Hub.IO);
 23505  002E9E  EE21  F0CD         	lfsr	2,__Hub+142
 23506  002EA2  EE00  F002         	lfsr	0,i2LatchOn@AIO
 23507  002EA6  0E0B               	movlw	11
 23508  002EA8                     i2u929_41:
 23509  002EA8  CFDB FFEB          	movff	plusw2,plusw0
 23510  002EAC  06E8               	decf	wreg,f,c
 23511  002EAE  E2FC               	bc	i2u929_41
 23512  002EB0  ECA5  F029         	call	i2_LatchOn	;wreg free
 23513                           
 23514                           ;hub.c: 102: LatchOff(_Hub.IO);
 23515  002EB4  EE21  F0CD         	lfsr	2,__Hub+142
 23516  002EB8  EE00  F002         	lfsr	0,i2LatchOff@AIO
 23517  002EBC  0E0B               	movlw	11
 23518  002EBE                     i2u930_41:
 23519  002EBE  CFDB FFEB          	movff	plusw2,plusw0
 23520  002EC2  06E8               	decf	wreg,f,c
 23521  002EC4  E2FC               	bc	i2u930_41
 23522  002EC6  ECB4  F029         	call	i2_LatchOff	;wreg free
 23523  002ECA                     i2l873:
 23524                           
 23525                           ;hub.c: 103: }
 23526                           ;hub.c: 105: if (_Hub.iRead < 6 * 8)
 23527  002ECA  0E30               	movlw	48
 23528  002ECC  0101               	movlb	1	; () banked
 23529  002ECE  61A0               	cpfslt	(__Hub+97)& (0+255),b
 23530  002ED0  D003               	goto	i2l874
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;hub.c: 106: Hub_ReadSwitch();
 23534  002ED2  EC8E  F026         	call	i2_Hub_ReadSwitch	;wreg free
 23535  002ED6  0012               	return	
 23536  002ED8                     i2l874:
 23537                           
 23538                           ;hub.c: 107: else
 23539                           ;hub.c: 108: {
 23540                           ;hub.c: 109: _Hub.ReadComplete = 0;
 23541  002ED8  0E00               	movlw	0
 23542  002EDA  0101               	movlb	1	; () banked
 23543  002EDC  6F9F               	movwf	(__Hub+96)& (0+255),b
 23544                           
 23545                           ; BSR set to: 1
 23546                           ;hub.c: 112: if (_Hub.Switch[5] && !_Hub.SwitchOld[5])
 23547  002EDE  C141  F1A1         	movff	__Hub+2,__Hub+98
 23548                           
 23549                           ; BSR set to: 1
 23550                           ;hub.c: 115: Hub_SetValue(&_Hub.PrimaryBuffer.Channel, 0, _Hub.MaxChannel, Hub_DecodeSwi
      +                          tch(0, 1));
 23551                           
 23552                           ; BSR set to: 1
 23553                           
 23554                           ; BSR set to: 1
 23555  002EE2  0EA3               	movlw	low (__Hub+100)
 23556  002EE4  6E05               	movwf	Hub_SetValue@ASourceValue,c
 23557  002EE6  0E01               	movlw	high (__Hub+100)
 23558  002EE8  6E06               	movwf	Hub_SetValue@ASourceValue+1,c
 23559  002EEA  0E00               	movlw	0
 23560  002EEC  6E07               	movwf	Hub_SetValue@AMinValue,c
 23561  002EEE  C1C8  F008         	movff	__Hub+137,Hub_SetValue@AMaxValue
 23562  002EF2  C1C9  F009         	movff	__Hub+138,Hub_SetValue@AMaxValue+1
 23563  002EF6  0E01               	movlw	1
 23564  002EF8  6E01               	movwf	Hub_DecodeSwitch@AIndex2,c
 23565  002EFA  0E00               	movlw	0
 23566  002EFC  ECCF  F00A         	call	_Hub_DecodeSwitch
 23567  002F00  6E0A               	movwf	Hub_SetValue@AIncrement,c
 23568  002F02  ECA8  F024         	call	_Hub_SetValue	;wreg free
 23569                           
 23570                           ;hub.c: 116: for (int i = 0; i < sizeof(_Hub.PrimaryBuffer.Values); i++)
 23571  002F06  0E00               	movlw	0
 23572  002F08  6E47               	movwf	Hub_UpdateValues@i+1,c
 23573  002F0A  0E00               	movlw	0
 23574  002F0C  6E46               	movwf	Hub_UpdateValues@i,c
 23575  002F0E                     i2l7591:
 23576  002F0E  5047               	movf	Hub_UpdateValues@i+1,w,c
 23577  002F10  E127               	bnz	i2l7601
 23578  002F12  0E08               	movlw	8
 23579  002F14  5C46               	subwf	Hub_UpdateValues@i,w,c
 23580  002F16  B0D8               	btfsc	status,0,c
 23581  002F18  D023               	goto	i2u933_40
 23582                           
 23583                           ;hub.c: 117: {
 23584                           ;hub.c: 118: Hub_SetValue(&_Hub.PrimaryBuffer.Values[i], 0, (0x01 << 6) - 1, Hub_DecodeS
      +                          witch(i * 3 + 3, i * 3 + 4));
 23585  002F1A  0E04               	movlw	4
 23586  002F1C  2446               	addwf	Hub_UpdateValues@i,w,c
 23587  002F1E  6E44               	movwf	??_Hub_UpdateValues& (0+255),c
 23588  002F20  0E00               	movlw	0
 23589  002F22  2047               	addwfc	Hub_UpdateValues@i+1,w,c
 23590  002F24  6E45               	movwf	(??_Hub_UpdateValues+1)& (0+255),c
 23591  002F26  0EA1               	movlw	low (__Hub+98)
 23592  002F28  2444               	addwf	??_Hub_UpdateValues,w,c
 23593  002F2A  6E05               	movwf	Hub_SetValue@ASourceValue,c
 23594  002F2C  0E01               	movlw	high (__Hub+98)
 23595  002F2E  2045               	addwfc	??_Hub_UpdateValues+1,w,c
 23596  002F30  6E06               	movwf	Hub_SetValue@ASourceValue+1,c
 23597  002F32  0E00               	movlw	0
 23598  002F34  6E07               	movwf	Hub_SetValue@AMinValue,c
 23599  002F36  0E00               	movlw	0
 23600  002F38  6E09               	movwf	Hub_SetValue@AMaxValue+1,c
 23601  002F3A  0E3F               	movlw	63
 23602  002F3C  6E08               	movwf	Hub_SetValue@AMaxValue,c
 23603  002F3E  5046               	movf	Hub_UpdateValues@i,w,c
 23604  002F40  0D03               	mullw	3
 23605  002F42  50F3               	movf	prodl,w,c
 23606  002F44  0F04               	addlw	4
 23607  002F46  6E01               	movwf	Hub_DecodeSwitch@AIndex2,c
 23608  002F48  5046               	movf	Hub_UpdateValues@i,w,c
 23609  002F4A  0D03               	mullw	3
 23610  002F4C  50F3               	movf	prodl,w,c
 23611  002F4E  0F03               	addlw	3
 23612  002F50  ECCF  F00A         	call	_Hub_DecodeSwitch
 23613  002F54  6E0A               	movwf	Hub_SetValue@AIncrement,c
 23614  002F56  ECA8  F024         	call	_Hub_SetValue	;wreg free
 23615  002F5A  4A46               	infsnz	Hub_UpdateValues@i,f,c
 23616  002F5C  2A47               	incf	Hub_UpdateValues@i+1,f,c
 23617  002F5E  D7D7               	goto	i2l7591
 23618  002F60                     i2u933_40:
 23619  002F60                     i2l7601:
 23620                           
 23621                           ;hub.c: 119: }
 23622                           ;hub.c: 120: _Hub.iRead = 0;
 23623  002F60  0E00               	movlw	0
 23624  002F62  0101               	movlb	1	; () banked
 23625  002F64  6FA0               	movwf	(__Hub+97)& (0+255),b
 23626                           
 23627                           ;hub.c: 121: _Hub.ReadComplete = 1;
 23628  002F66  0E01               	movlw	1
 23629  002F68  6F9F               	movwf	(__Hub+96)& (0+255),b
 23630  002F6A  0012               	return	
 23631  002F6C                     __end_of_Hub_UpdateValues:
 23632                           	opt stack 0
 23633                           tosu	equ	0xFFF
 23634                           tosh	equ	0xFFE
 23635                           tosl	equ	0xFFD
 23636                           pclatu	equ	0xFFB
 23637                           pclath	equ	0xFFA
 23638                           tblptru	equ	0xFF8
 23639                           tblptrh	equ	0xFF7
 23640                           tblptrl	equ	0xFF6
 23641                           tablat	equ	0xFF5
 23642                           prodh	equ	0xFF4
 23643                           prodl	equ	0xFF3
 23644                           intcon	equ	0xFF2
 23645                           indf0	equ	0xFEF
 23646                           postinc0	equ	0xFEE
 23647                           plusw0	equ	0xFEB
 23648                           fsr0h	equ	0xFEA
 23649                           fsr0l	equ	0xFE9
 23650                           wreg	equ	0xFE8
 23651                           indf1	equ	0xFE7
 23652                           postinc1	equ	0xFE6
 23653                           postdec1	equ	0xFE5
 23654                           plusw1	equ	0xFE3
 23655                           fsr1h	equ	0xFE2
 23656                           fsr1l	equ	0xFE1
 23657                           indf2	equ	0xFDF
 23658                           postinc2	equ	0xFDE
 23659                           postdec2	equ	0xFDD
 23660                           plusw2	equ	0xFDB
 23661                           fsr2h	equ	0xFDA
 23662                           fsr2l	equ	0xFD9
 23663                           status	equ	0xFD8
 23664                           
 23665 ;; *************** function i2_LatchOn *****************
 23666 ;; Defined at:
 23667 ;;		line 79 in file "harware.c"
 23668 ;; Parameters:    Size  Location     Type
 23669 ;;  AIO            12    1[COMRAM] struct .
 23670 ;; Auto vars:     Size  Location     Type
 23671 ;;		None
 23672 ;; Return value:  Size  Location     Type
 23673 ;;                  1    wreg      void 
 23674 ;; Registers used:
 23675 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 23676 ;; Tracked objects:
 23677 ;;		On entry : 0/0
 23678 ;;		On exit  : 0/0
 23679 ;;		Unchanged: 0/0
 23680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23681 ;;      Params:        12       0       0       0       0       0       0       0       0
 23682 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23683 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23684 ;;      Totals:        12       0       0       0       0       0       0       0       0
 23685 ;;Total ram usage:       12 bytes
 23686 ;; Hardware stack levels used:    1
 23687 ;; Hardware stack levels required when called:    1
 23688 ;; This function calls:
 23689 ;;		i2_DigiPot_ClockWrite
 23690 ;;		i2_DigiPot_DataWrite
 23691 ;;		i2_DigiPot_LatchWrite
 23692 ;;		i2_Display_ClockWrite
 23693 ;;		i2_Display_DataWrite
 23694 ;;		i2_Display_LatchWrite
 23695 ;;		i2_Hub_ClockWrite
 23696 ;;		i2_Hub_LatchWrite
 23697 ;; This function is called by:
 23698 ;;		_Hub_UpdateValues
 23699 ;;		i2_WriteData
 23700 ;; This function uses a non-reentrant model
 23701 ;;
 23702                           
 23703                           	psect	text120
 23704  00534A                     __ptext120:
 23705                           	opt stack 0
 23706  00534A                     i2_LatchOn:
 23707                           	opt stack 18
 23708                           
 23709                           ;harware.c: 81: AIO.LatchPin.Write(0x00);
 23710                           
 23711                           ;incstack = 0
 23712  00534A  EE20  F00C         	lfsr	2,i2LatchOn@AIO+10
 23713  00534E  D801               	call	i2u889_48
 23714  005350  0012               	return	
 23715  005352                     i2u889_48:
 23716  005352  0005               	push	
 23717  005354  6EFA               	movwf	pclath,c
 23718  005356  50DE               	movf	postinc2,w,c
 23719  005358  6EFD               	movwf	tosl,c
 23720  00535A  50DE               	movf	postinc2,w,c
 23721  00535C  6EFE               	movwf	tosh,c
 23722  00535E  50F8               	movf	tblptru,w,c
 23723  005360  6EFF               	movwf	tosu,c
 23724  005362  50FA               	movf	pclath,w,c
 23725  005364  0E00               	movlw	0
 23726  005366  0012               	return		;indir
 23727  005368                     __end_ofi2_LatchOn:
 23728                           	opt stack 0
 23729                           tosu	equ	0xFFF
 23730                           tosh	equ	0xFFE
 23731                           tosl	equ	0xFFD
 23732                           pclatu	equ	0xFFB
 23733                           pclath	equ	0xFFA
 23734                           tblptru	equ	0xFF8
 23735                           tblptrh	equ	0xFF7
 23736                           tblptrl	equ	0xFF6
 23737                           tablat	equ	0xFF5
 23738                           prodh	equ	0xFF4
 23739                           prodl	equ	0xFF3
 23740                           intcon	equ	0xFF2
 23741                           indf0	equ	0xFEF
 23742                           postinc0	equ	0xFEE
 23743                           plusw0	equ	0xFEB
 23744                           fsr0h	equ	0xFEA
 23745                           fsr0l	equ	0xFE9
 23746                           wreg	equ	0xFE8
 23747                           indf1	equ	0xFE7
 23748                           postinc1	equ	0xFE6
 23749                           postdec1	equ	0xFE5
 23750                           plusw1	equ	0xFE3
 23751                           fsr1h	equ	0xFE2
 23752                           fsr1l	equ	0xFE1
 23753                           indf2	equ	0xFDF
 23754                           postinc2	equ	0xFDE
 23755                           postdec2	equ	0xFDD
 23756                           plusw2	equ	0xFDB
 23757                           fsr2h	equ	0xFDA
 23758                           fsr2l	equ	0xFD9
 23759                           status	equ	0xFD8
 23760                           
 23761 ;; *************** function i2_LatchOff *****************
 23762 ;; Defined at:
 23763 ;;		line 84 in file "harware.c"
 23764 ;; Parameters:    Size  Location     Type
 23765 ;;  AIO            12    1[COMRAM] struct .
 23766 ;; Auto vars:     Size  Location     Type
 23767 ;;		None
 23768 ;; Return value:  Size  Location     Type
 23769 ;;                  1    wreg      void 
 23770 ;; Registers used:
 23771 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 23772 ;; Tracked objects:
 23773 ;;		On entry : 0/0
 23774 ;;		On exit  : 0/0
 23775 ;;		Unchanged: 0/0
 23776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23777 ;;      Params:        12       0       0       0       0       0       0       0       0
 23778 ;;      Locals:         0       0       0       0       0       0       0       0       0
 23779 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23780 ;;      Totals:        12       0       0       0       0       0       0       0       0
 23781 ;;Total ram usage:       12 bytes
 23782 ;; Hardware stack levels used:    1
 23783 ;; Hardware stack levels required when called:    1
 23784 ;; This function calls:
 23785 ;;		i2_DigiPot_ClockWrite
 23786 ;;		i2_DigiPot_DataWrite
 23787 ;;		i2_DigiPot_LatchWrite
 23788 ;;		i2_Display_ClockWrite
 23789 ;;		i2_Display_DataWrite
 23790 ;;		i2_Display_LatchWrite
 23791 ;;		i2_Hub_ClockWrite
 23792 ;;		i2_Hub_LatchWrite
 23793 ;; This function is called by:
 23794 ;;		_Hub_UpdateValues
 23795 ;;		i2_WriteData
 23796 ;; This function uses a non-reentrant model
 23797 ;;
 23798                           
 23799                           	psect	text121
 23800  005368                     __ptext121:
 23801                           	opt stack 0
 23802  005368                     i2_LatchOff:
 23803                           	opt stack 18
 23804                           
 23805                           ;harware.c: 86: AIO.LatchPin.Write(0x01);
 23806                           
 23807                           ;incstack = 0
 23808  005368  EE20  F00C         	lfsr	2,i2LatchOff@AIO+10
 23809  00536C  D801               	call	i2u890_48
 23810  00536E  0012               	return	
 23811  005370                     i2u890_48:
 23812  005370  0005               	push	
 23813  005372  6EFA               	movwf	pclath,c
 23814  005374  50DE               	movf	postinc2,w,c
 23815  005376  6EFD               	movwf	tosl,c
 23816  005378  50DE               	movf	postinc2,w,c
 23817  00537A  6EFE               	movwf	tosh,c
 23818  00537C  50F8               	movf	tblptru,w,c
 23819  00537E  6EFF               	movwf	tosu,c
 23820  005380  50FA               	movf	pclath,w,c
 23821  005382  0E01               	movlw	1
 23822  005384  0012               	return		;indir
 23823  005386                     __end_ofi2_LatchOff:
 23824                           	opt stack 0
 23825                           tosu	equ	0xFFF
 23826                           tosh	equ	0xFFE
 23827                           tosl	equ	0xFFD
 23828                           pclatu	equ	0xFFB
 23829                           pclath	equ	0xFFA
 23830                           tblptru	equ	0xFF8
 23831                           tblptrh	equ	0xFF7
 23832                           tblptrl	equ	0xFF6
 23833                           tablat	equ	0xFF5
 23834                           prodh	equ	0xFF4
 23835                           prodl	equ	0xFF3
 23836                           intcon	equ	0xFF2
 23837                           indf0	equ	0xFEF
 23838                           postinc0	equ	0xFEE
 23839                           plusw0	equ	0xFEB
 23840                           fsr0h	equ	0xFEA
 23841                           fsr0l	equ	0xFE9
 23842                           wreg	equ	0xFE8
 23843                           indf1	equ	0xFE7
 23844                           postinc1	equ	0xFE6
 23845                           postdec1	equ	0xFE5
 23846                           plusw1	equ	0xFE3
 23847                           fsr1h	equ	0xFE2
 23848                           fsr1l	equ	0xFE1
 23849                           indf2	equ	0xFDF
 23850                           postinc2	equ	0xFDE
 23851                           postdec2	equ	0xFDD
 23852                           plusw2	equ	0xFDB
 23853                           fsr2h	equ	0xFDA
 23854                           fsr2l	equ	0xFD9
 23855                           status	equ	0xFD8
 23856                           
 23857 ;; *************** function i2_Hub_ReadSwitch *****************
 23858 ;; Defined at:
 23859 ;;		line 56 in file "hub.c"
 23860 ;; Parameters:    Size  Location     Type
 23861 ;;		None
 23862 ;; Auto vars:     Size  Location     Type
 23863 ;;  Hub_ReadSwit   24   43[COMRAM] unsigned char [24]
 23864 ;; Return value:  Size  Location     Type
 23865 ;;                  1    wreg      void 
 23866 ;; Registers used:
 23867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23868 ;; Tracked objects:
 23869 ;;		On entry : 0/0
 23870 ;;		On exit  : 0/0
 23871 ;;		Unchanged: 0/0
 23872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23873 ;;      Params:         0       0       0       0       0       0       0       0       0
 23874 ;;      Locals:        24       0       0       0       0       0       0       0       0
 23875 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23876 ;;      Totals:        24       0       0       0       0       0       0       0       0
 23877 ;;Total ram usage:       24 bytes
 23878 ;; Hardware stack levels used:    1
 23879 ;; Hardware stack levels required when called:    4
 23880 ;; This function calls:
 23881 ;;		i2_ReadBitArray
 23882 ;;		i2_memcpy
 23883 ;; This function is called by:
 23884 ;;		_Hub_UpdateValues
 23885 ;; This function uses a non-reentrant model
 23886 ;;
 23887                           
 23888                           	psect	text122
 23889  004D1C                     __ptext122:
 23890                           	opt stack 0
 23891  004D1C                     i2_Hub_ReadSwitch:
 23892                           	opt stack 15
 23893                           
 23894                           ;hub.c: 58: bool LBitArray[24];
 23895                           ;hub.c: 59: ReadBitArray(LBitArray, _Hub.IO);
 23896                           
 23897                           ;incstack = 0
 23898  004D1C  0E2C               	movlw	low i2Hub_ReadSwitch@LBitArray
 23899  004D1E  6E1B               	movwf	i2ReadBitArray@AData,c
 23900  004D20  0E00               	movlw	high i2Hub_ReadSwitch@LBitArray
 23901  004D22  6E1C               	movwf	i2ReadBitArray@AData+1,c
 23902  004D24  EE21  F0CD         	lfsr	2,__Hub+142
 23903  004D28  EE00  F01D         	lfsr	0,i2ReadBitArray@AIO
 23904  004D2C  0E0B               	movlw	11
 23905  004D2E                     i2u882_41:
 23906  004D2E  CFDB FFEB          	movff	plusw2,plusw0
 23907  004D32  06E8               	decf	wreg,f,c
 23908  004D34  E2FC               	bc	i2u882_41
 23909  004D36  ECD8  F026         	call	i2_ReadBitArray
 23910                           
 23911                           ;hub.c: 60: memcpy(_Hub.Switch + _Hub.iRead, LBitArray, sizeof(LBitArray));
 23912  004D3A  0101               	movlb	1	; () banked
 23913  004D3C  51A0               	movf	(__Hub+97)& (0+255),w,b
 23914  004D3E  0D01               	mullw	1
 23915  004D40  0E3F               	movlw	low __Hub
 23916  004D42  24F3               	addwf	prodl,w,c
 23917  004D44  6E01               	movwf	i2memcpy@d1,c
 23918  004D46  0E01               	movlw	high __Hub
 23919  004D48  20F4               	addwfc	prodh,w,c
 23920  004D4A  6E02               	movwf	i2memcpy@d1+1,c
 23921  004D4C  0E2C               	movlw	low i2Hub_ReadSwitch@LBitArray
 23922  004D4E  6E03               	movwf	i2memcpy@s1,c
 23923  004D50  0E00               	movlw	high i2Hub_ReadSwitch@LBitArray
 23924  004D52  6E04               	movwf	i2memcpy@s1+1,c
 23925  004D54  0E00               	movlw	0
 23926  004D56  6E06               	movwf	i2memcpy@n+1,c
 23927  004D58  0E18               	movlw	24
 23928  004D5A  6E05               	movwf	i2memcpy@n,c
 23929  004D5C  EC1E  F027         	call	i2_memcpy	;wreg free
 23930                           
 23931                           ;hub.c: 61: _Hub.iRead += 24;
 23932  004D60  0E18               	movlw	24
 23933  004D62  0101               	movlb	1	; () banked
 23934  004D64  27A0               	addwf	(__Hub+97)& (0+255),f,b
 23935                           
 23936                           ; BSR set to: 1
 23937  004D66  0012               	return		;funcret
 23938  004D68                     __end_ofi2_Hub_ReadSwitch:
 23939                           	opt stack 0
 23940                           tosu	equ	0xFFF
 23941                           tosh	equ	0xFFE
 23942                           tosl	equ	0xFFD
 23943                           pclatu	equ	0xFFB
 23944                           pclath	equ	0xFFA
 23945                           tblptru	equ	0xFF8
 23946                           tblptrh	equ	0xFF7
 23947                           tblptrl	equ	0xFF6
 23948                           tablat	equ	0xFF5
 23949                           prodh	equ	0xFF4
 23950                           prodl	equ	0xFF3
 23951                           intcon	equ	0xFF2
 23952                           indf0	equ	0xFEF
 23953                           postinc0	equ	0xFEE
 23954                           plusw0	equ	0xFEB
 23955                           fsr0h	equ	0xFEA
 23956                           fsr0l	equ	0xFE9
 23957                           wreg	equ	0xFE8
 23958                           indf1	equ	0xFE7
 23959                           postinc1	equ	0xFE6
 23960                           postdec1	equ	0xFE5
 23961                           plusw1	equ	0xFE3
 23962                           fsr1h	equ	0xFE2
 23963                           fsr1l	equ	0xFE1
 23964                           indf2	equ	0xFDF
 23965                           postinc2	equ	0xFDE
 23966                           postdec2	equ	0xFDD
 23967                           plusw2	equ	0xFDB
 23968                           fsr2h	equ	0xFDA
 23969                           fsr2l	equ	0xFD9
 23970                           status	equ	0xFD8
 23971                           
 23972 ;; *************** function i2_memcpy *****************
 23973 ;; Defined at:
 23974 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
 23975 ;; Parameters:    Size  Location     Type
 23976 ;;  d1              2    0[COMRAM] PTR void 
 23977 ;;		 -> _Hub.Switch(48), Load@LBuffer(12), _Hub(154), SetupPkt(8), 
 23978 ;;  s1              2    2[COMRAM] PTR const void 
 23979 ;;		 -> Persistant_SaveBuffer@ABuffer(12), _Hub.Switch(48), Hub_ReadSwitch@LBitArray(24), _Config(12), 
 23980 ;;		 -> _Hub.PrimaryBuffer(12), _Hub(154), CtrlTrfData(8), RAM(2047), 
 23981 ;;		 -> SetupPkt(8), 
 23982 ;;  n               2    4[COMRAM] unsigned int 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 23985 ;;		 -> Persistant_SaveBuffer@ABuffer(12), _Hub.Switch(48), Hub_ReadSwitch@LBitArray(24), _Config(12), 
 23986 ;;		 -> _Hub.PrimaryBuffer(12), _Hub(154), CtrlTrfData(8), RAM(2047), 
 23987 ;;		 -> SetupPkt(8), 
 23988 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 23989 ;;		 -> _Hub.Switch(48), Load@LBuffer(12), _Hub(154), SetupPkt(8), 
 23990 ;;  memcpy          1   10[COMRAM] unsigned char 
 23991 ;; Return value:  Size  Location     Type
 23992 ;;                  2    0[COMRAM] PTR void 
 23993 ;; Registers used:
 23994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23995 ;; Tracked objects:
 23996 ;;		On entry : 0/0
 23997 ;;		On exit  : 0/0
 23998 ;;		Unchanged: 0/0
 23999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24000 ;;      Params:         6       0       0       0       0       0       0       0       0
 24001 ;;      Locals:         5       0       0       0       0       0       0       0       0
 24002 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24003 ;;      Totals:        11       0       0       0       0       0       0       0       0
 24004 ;;Total ram usage:       11 bytes
 24005 ;; Hardware stack levels used:    1
 24006 ;; This function calls:
 24007 ;;		Nothing
 24008 ;; This function is called by:
 24009 ;;		_Hub_UpdateValues
 24010 ;;		i2_Hub_ReadSwitch
 24011 ;;		i2_Hub_CopyBuffer
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text123
 24016  004E3C                     __ptext123:
 24017                           	opt stack 0
 24018  004E3C                     i2_memcpy:
 24019                           	opt stack 19
 24020                           
 24021                           ; BSR set to: 1
 24022                           ;incstack = 0
 24023  004E3C  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 24024  004E40  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 24025  004E44  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 24026  004E48  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 24027  004E4C  D010               	goto	i2l1750
 24028  004E4E                     i2l6819:
 24029  004E4E  C009  FFD9         	movff	i2memcpy@s,fsr2l
 24030  004E52  C00A  FFDA         	movff	i2memcpy@s+1,fsr2h
 24031  004E56  50DF               	movf	indf2,w,c
 24032  004E58  6E0B               	movwf	i2memcpy@tmp,c
 24033  004E5A  4A09               	infsnz	i2memcpy@s,f,c
 24034  004E5C  2A0A               	incf	i2memcpy@s+1,f,c
 24035  004E5E  C007  FFD9         	movff	i2memcpy@d,fsr2l
 24036  004E62  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 24037  004E66  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 24038  004E6A  4A07               	infsnz	i2memcpy@d,f,c
 24039  004E6C  2A08               	incf	i2memcpy@d+1,f,c
 24040  004E6E                     i2l1750:
 24041  004E6E  0605               	decf	i2memcpy@n,f,c
 24042  004E70  A0D8               	btfss	status,0,c
 24043  004E72  0606               	decf	i2memcpy@n+1,f,c
 24044  004E74  2805               	incf	i2memcpy@n,w,c
 24045  004E76  E1EB               	bnz	i2l6819
 24046  004E78  2806               	incf	i2memcpy@n+1,w,c
 24047  004E7A  B4D8               	btfsc	status,2,c
 24048  004E7C  0012               	return	
 24049  004E7E  D7E7               	goto	i2l1751
 24050  004E80                     __end_ofi2_memcpy:
 24051                           	opt stack 0
 24052                           tosu	equ	0xFFF
 24053                           tosh	equ	0xFFE
 24054                           tosl	equ	0xFFD
 24055                           pclatu	equ	0xFFB
 24056                           pclath	equ	0xFFA
 24057                           tblptru	equ	0xFF8
 24058                           tblptrh	equ	0xFF7
 24059                           tblptrl	equ	0xFF6
 24060                           tablat	equ	0xFF5
 24061                           prodh	equ	0xFF4
 24062                           prodl	equ	0xFF3
 24063                           intcon	equ	0xFF2
 24064                           indf0	equ	0xFEF
 24065                           postinc0	equ	0xFEE
 24066                           plusw0	equ	0xFEB
 24067                           fsr0h	equ	0xFEA
 24068                           fsr0l	equ	0xFE9
 24069                           wreg	equ	0xFE8
 24070                           indf1	equ	0xFE7
 24071                           postinc1	equ	0xFE6
 24072                           postdec1	equ	0xFE5
 24073                           plusw1	equ	0xFE3
 24074                           fsr1h	equ	0xFE2
 24075                           fsr1l	equ	0xFE1
 24076                           indf2	equ	0xFDF
 24077                           postinc2	equ	0xFDE
 24078                           postdec2	equ	0xFDD
 24079                           plusw2	equ	0xFDB
 24080                           fsr2h	equ	0xFDA
 24081                           fsr2l	equ	0xFD9
 24082                           status	equ	0xFD8
 24083                           
 24084 ;; *************** function i2_ReadBitArray *****************
 24085 ;; Defined at:
 24086 ;;		line 71 in file "harware.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;  AData           2   26[COMRAM] PTR unsigned char 
 24089 ;;		 -> Hub_ReadSwitch@LBitArray(24), 
 24090 ;;  AIO            12   28[COMRAM] struct .
 24091 ;; Auto vars:     Size  Location     Type
 24092 ;;  ReadBitArray    2   41[COMRAM] int 
 24093 ;; Return value:  Size  Location     Type
 24094 ;;                  1    wreg      void 
 24095 ;; Registers used:
 24096 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 24097 ;; Tracked objects:
 24098 ;;		On entry : 0/0
 24099 ;;		On exit  : 0/0
 24100 ;;		Unchanged: 0/0
 24101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24102 ;;      Params:        14       0       0       0       0       0       0       0       0
 24103 ;;      Locals:         2       0       0       0       0       0       0       0       0
 24104 ;;      Temps:          1       0       0       0       0       0       0       0       0
 24105 ;;      Totals:        17       0       0       0       0       0       0       0       0
 24106 ;;Total ram usage:       17 bytes
 24107 ;; Hardware stack levels used:    1
 24108 ;; Hardware stack levels required when called:    3
 24109 ;; This function calls:
 24110 ;;		i2_ReadBit
 24111 ;; This function is called by:
 24112 ;;		i2_Hub_ReadSwitch
 24113 ;; This function uses a non-reentrant model
 24114 ;;
 24115                           
 24116                           	psect	text124
 24117  004DB0                     __ptext124:
 24118                           	opt stack 0
 24119  004DB0                     i2_ReadBitArray:
 24120                           	opt stack 15
 24121                           
 24122                           ;harware.c: 75: for (int i = 0; i < 24; i++)
 24123                           
 24124                           ;incstack = 0
 24125  004DB0  0E00               	movlw	0
 24126  004DB2  6E2B               	movwf	i2ReadBitArray@i+1,c
 24127  004DB4  0E00               	movlw	0
 24128  004DB6  6E2A               	movwf	i2ReadBitArray@i,c
 24129  004DB8                     i2l6807:
 24130  004DB8  BE2B               	btfsc	i2ReadBitArray@i+1,7,c
 24131  004DBA  D006               	goto	i2l1060
 24132  004DBC  502B               	movf	i2ReadBitArray@i+1,w,c
 24133  004DBE  E11B               	bnz	i2l1062
 24134  004DC0  0E18               	movlw	24
 24135  004DC2  5C2A               	subwf	i2ReadBitArray@i,w,c
 24136  004DC4  B0D8               	btfsc	status,0,c
 24137  004DC6  0012               	return	
 24138  004DC8                     i2l1060:
 24139                           
 24140                           ;harware.c: 76: AData[i] = ReadBit(AIO);
 24141  004DC8  EE20  F01D         	lfsr	2,i2ReadBitArray@AIO
 24142  004DCC  EE00  F00E         	lfsr	0,i2ReadBit@AIO
 24143  004DD0  0E0B               	movlw	11
 24144  004DD2                     i2u785_41:
 24145  004DD2  CFDB FFEB          	movff	plusw2,plusw0
 24146  004DD6  06E8               	decf	wreg,f,c
 24147  004DD8  E2FC               	bc	i2u785_41
 24148  004DDA  EC41  F026         	call	i2_ReadBit	;wreg free
 24149  004DDE  6E29               	movwf	??i2_ReadBitArray& (0+255),c
 24150  004DE0  502A               	movf	i2ReadBitArray@i,w,c
 24151  004DE2  241B               	addwf	i2ReadBitArray@AData,w,c
 24152  004DE4  6ED9               	movwf	fsr2l,c
 24153  004DE6  502B               	movf	i2ReadBitArray@i+1,w,c
 24154  004DE8  201C               	addwfc	i2ReadBitArray@AData+1,w,c
 24155  004DEA  6EDA               	movwf	fsr2h,c
 24156  004DEC  C029  FFDF         	movff	??i2_ReadBitArray,indf2
 24157  004DF0  4A2A               	infsnz	i2ReadBitArray@i,f,c
 24158  004DF2  2A2B               	incf	i2ReadBitArray@i+1,f,c
 24159  004DF4  D7E1               	goto	i2l6807
 24160  004DF6                     i2l1062:
 24161  004DF6  0012               	return		;funcret
 24162  004DF8                     __end_ofi2_ReadBitArray:
 24163                           	opt stack 0
 24164                           tosu	equ	0xFFF
 24165                           tosh	equ	0xFFE
 24166                           tosl	equ	0xFFD
 24167                           pclatu	equ	0xFFB
 24168                           pclath	equ	0xFFA
 24169                           tblptru	equ	0xFF8
 24170                           tblptrh	equ	0xFF7
 24171                           tblptrl	equ	0xFF6
 24172                           tablat	equ	0xFF5
 24173                           prodh	equ	0xFF4
 24174                           prodl	equ	0xFF3
 24175                           intcon	equ	0xFF2
 24176                           indf0	equ	0xFEF
 24177                           postinc0	equ	0xFEE
 24178                           plusw0	equ	0xFEB
 24179                           fsr0h	equ	0xFEA
 24180                           fsr0l	equ	0xFE9
 24181                           wreg	equ	0xFE8
 24182                           indf1	equ	0xFE7
 24183                           postinc1	equ	0xFE6
 24184                           postdec1	equ	0xFE5
 24185                           plusw1	equ	0xFE3
 24186                           fsr1h	equ	0xFE2
 24187                           fsr1l	equ	0xFE1
 24188                           indf2	equ	0xFDF
 24189                           postinc2	equ	0xFDE
 24190                           postdec2	equ	0xFDD
 24191                           plusw2	equ	0xFDB
 24192                           fsr2h	equ	0xFDA
 24193                           fsr2l	equ	0xFD9
 24194                           status	equ	0xFD8
 24195                           
 24196 ;; *************** function i2_ReadBit *****************
 24197 ;; Defined at:
 24198 ;;		line 45 in file "harware.c"
 24199 ;; Parameters:    Size  Location     Type
 24200 ;;  AIO            12   13[COMRAM] struct .
 24201 ;; Auto vars:     Size  Location     Type
 24202 ;;  ReadBit         1   25[COMRAM] unsigned char 
 24203 ;; Return value:  Size  Location     Type
 24204 ;;                  1    wreg      unsigned char 
 24205 ;; Registers used:
 24206 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 24207 ;; Tracked objects:
 24208 ;;		On entry : 0/0
 24209 ;;		On exit  : 0/0
 24210 ;;		Unchanged: 0/0
 24211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24212 ;;      Params:        12       0       0       0       0       0       0       0       0
 24213 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24214 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24215 ;;      Totals:        13       0       0       0       0       0       0       0       0
 24216 ;;Total ram usage:       13 bytes
 24217 ;; Hardware stack levels used:    1
 24218 ;; Hardware stack levels required when called:    2
 24219 ;; This function calls:
 24220 ;;		i2_ClockDown
 24221 ;;		i2_ClockUp
 24222 ;;		i2_Hub_DataRead
 24223 ;; This function is called by:
 24224 ;;		i2_ReadBitArray
 24225 ;; This function uses a non-reentrant model
 24226 ;;
 24227                           
 24228                           	psect	text125
 24229  004C82                     __ptext125:
 24230                           	opt stack 0
 24231  004C82                     i2_ReadBit:
 24232                           	opt stack 15
 24233                           
 24234                           ;harware.c: 47: bool LBit = AIO.DataPin.Read();
 24235                           
 24236                           ;incstack = 0
 24237  004C82  EE20  F012         	lfsr	2,i2ReadBit@AIO+4
 24238  004C86  D801               	call	i2u732_48
 24239  004C88  D00A               	goto	i2u732_49
 24240  004C8A                     i2u732_48:
 24241  004C8A  0005               	push	
 24242  004C8C  6EFA               	movwf	pclath,c
 24243  004C8E  50DE               	movf	postinc2,w,c
 24244  004C90  6EFD               	movwf	tosl,c
 24245  004C92  50DE               	movf	postinc2,w,c
 24246  004C94  6EFE               	movwf	tosh,c
 24247  004C96  50F8               	movf	tblptru,w,c
 24248  004C98  6EFF               	movwf	tosu,c
 24249  004C9A  50FA               	movf	pclath,w,c
 24250  004C9C  0012               	return		;indir
 24251  004C9E                     i2u732_49:
 24252  004C9E  6E1A               	movwf	i2ReadBit@LBit,c
 24253                           
 24254                           ;harware.c: 48: ClockUp(AIO);
 24255  004CA0  EE20  F00E         	lfsr	2,i2ReadBit@AIO
 24256  004CA4  EE00  F002         	lfsr	0,i2ClockUp@AIO
 24257  004CA8  0E0B               	movlw	11
 24258  004CAA                     i2u733_41:
 24259  004CAA  CFDB FFEB          	movff	plusw2,plusw0
 24260  004CAE  06E8               	decf	wreg,f,c
 24261  004CB0  E2FC               	bc	i2u733_41
 24262  004CB2  ECC3  F029         	call	i2_ClockUp	;wreg free
 24263                           
 24264                           ;harware.c: 49: ClockDown(AIO);
 24265  004CB6  EE20  F00E         	lfsr	2,i2ReadBit@AIO
 24266  004CBA  EE00  F002         	lfsr	0,i2ClockDown@AIO
 24267  004CBE  0E0B               	movlw	11
 24268  004CC0                     i2u734_41:
 24269  004CC0  CFDB FFEB          	movff	plusw2,plusw0
 24270  004CC4  06E8               	decf	wreg,f,c
 24271  004CC6  E2FC               	bc	i2u734_41
 24272  004CC8  ECD2  F029         	call	i2_ClockDown	;wreg free
 24273                           
 24274                           ;harware.c: 50: return LBit;
 24275  004CCC  501A               	movf	i2ReadBit@LBit,w,c
 24276  004CCE  0012               	return	
 24277  004CD0                     __end_ofi2_ReadBit:
 24278                           	opt stack 0
 24279                           tosu	equ	0xFFF
 24280                           tosh	equ	0xFFE
 24281                           tosl	equ	0xFFD
 24282                           pclatu	equ	0xFFB
 24283                           pclath	equ	0xFFA
 24284                           tblptru	equ	0xFF8
 24285                           tblptrh	equ	0xFF7
 24286                           tblptrl	equ	0xFF6
 24287                           tablat	equ	0xFF5
 24288                           prodh	equ	0xFF4
 24289                           prodl	equ	0xFF3
 24290                           intcon	equ	0xFF2
 24291                           indf0	equ	0xFEF
 24292                           postinc0	equ	0xFEE
 24293                           plusw0	equ	0xFEB
 24294                           fsr0h	equ	0xFEA
 24295                           fsr0l	equ	0xFE9
 24296                           wreg	equ	0xFE8
 24297                           indf1	equ	0xFE7
 24298                           postinc1	equ	0xFE6
 24299                           postdec1	equ	0xFE5
 24300                           plusw1	equ	0xFE3
 24301                           fsr1h	equ	0xFE2
 24302                           fsr1l	equ	0xFE1
 24303                           indf2	equ	0xFDF
 24304                           postinc2	equ	0xFDE
 24305                           postdec2	equ	0xFDD
 24306                           plusw2	equ	0xFDB
 24307                           fsr2h	equ	0xFDA
 24308                           fsr2l	equ	0xFD9
 24309                           status	equ	0xFD8
 24310                           
 24311 ;; *************** function i2_Hub_DataRead *****************
 24312 ;; Defined at:
 24313 ;;		line 51 in file "hub.c"
 24314 ;; Parameters:    Size  Location     Type
 24315 ;;		None
 24316 ;; Auto vars:     Size  Location     Type
 24317 ;;		None
 24318 ;; Return value:  Size  Location     Type
 24319 ;;                  1    wreg      unsigned char 
 24320 ;; Registers used:
 24321 ;;		wreg
 24322 ;; Tracked objects:
 24323 ;;		On entry : 0/0
 24324 ;;		On exit  : 0/0
 24325 ;;		Unchanged: 0/0
 24326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24327 ;;      Params:         0       0       0       0       0       0       0       0       0
 24328 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24330 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24331 ;;Total ram usage:        0 bytes
 24332 ;; Hardware stack levels used:    1
 24333 ;; This function calls:
 24334 ;;		Nothing
 24335 ;; This function is called by:
 24336 ;; This function uses a non-reentrant model
 24337 ;;
 24338                           
 24339                           	psect	text126
 24340  005578                     __ptext126:
 24341                           	opt stack 0
 24342  005578                     i2_Hub_DataRead:
 24343                           	opt stack 16
 24344                           
 24345                           ;hub.c: 53: return PORTBbits.RB2;
 24346                           
 24347                           ;incstack = 0
 24348  005578  A481               	btfss	3969,2,c	;volatile
 24349  00557A  D002               	goto	i2u694_40
 24350  00557C  0E01               	movlw	1
 24351  00557E  0012               	return	
 24352  005580                     i2u694_40:
 24353  005580  0E00               	movlw	0
 24354  005582  0012               	return	
 24355  005584                     __end_ofi2_Hub_DataRead:
 24356                           	opt stack 0
 24357                           tosu	equ	0xFFF
 24358                           tosh	equ	0xFFE
 24359                           tosl	equ	0xFFD
 24360                           pclatu	equ	0xFFB
 24361                           pclath	equ	0xFFA
 24362                           tblptru	equ	0xFF8
 24363                           tblptrh	equ	0xFF7
 24364                           tblptrl	equ	0xFF6
 24365                           tablat	equ	0xFF5
 24366                           prodh	equ	0xFF4
 24367                           prodl	equ	0xFF3
 24368                           intcon	equ	0xFF2
 24369                           indf0	equ	0xFEF
 24370                           postinc0	equ	0xFEE
 24371                           plusw0	equ	0xFEB
 24372                           fsr0h	equ	0xFEA
 24373                           fsr0l	equ	0xFE9
 24374                           wreg	equ	0xFE8
 24375                           indf1	equ	0xFE7
 24376                           postinc1	equ	0xFE6
 24377                           postdec1	equ	0xFE5
 24378                           plusw1	equ	0xFE3
 24379                           fsr1h	equ	0xFE2
 24380                           fsr1l	equ	0xFE1
 24381                           indf2	equ	0xFDF
 24382                           postinc2	equ	0xFDE
 24383                           postdec2	equ	0xFDD
 24384                           plusw2	equ	0xFDB
 24385                           fsr2h	equ	0xFDA
 24386                           fsr2l	equ	0xFD9
 24387                           status	equ	0xFD8
 24388                           
 24389 ;; *************** function i2_ClockUp *****************
 24390 ;; Defined at:
 24391 ;;		line 89 in file "harware.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;  AIO            12    1[COMRAM] struct .
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24405 ;;      Params:        12       0       0       0       0       0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24408 ;;      Totals:        12       0       0       0       0       0       0       0       0
 24409 ;;Total ram usage:       12 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:    1
 24412 ;; This function calls:
 24413 ;;		i2_DigiPot_ClockWrite
 24414 ;;		i2_DigiPot_DataWrite
 24415 ;;		i2_DigiPot_LatchWrite
 24416 ;;		i2_Display_ClockWrite
 24417 ;;		i2_Display_DataWrite
 24418 ;;		i2_Display_LatchWrite
 24419 ;;		i2_Hub_ClockWrite
 24420 ;;		i2_Hub_LatchWrite
 24421 ;; This function is called by:
 24422 ;;		i2_WriteChar
 24423 ;;		i2_ReadBit
 24424 ;; This function uses a non-reentrant model
 24425 ;;
 24426                           
 24427                           	psect	text127
 24428  005386                     __ptext127:
 24429                           	opt stack 0
 24430  005386                     i2_ClockUp:
 24431                           	opt stack 17
 24432                           
 24433                           ;harware.c: 91: AIO.ClockPin.Write(0x00);
 24434                           
 24435                           ;incstack = 0
 24436  005386  EE20  F004         	lfsr	2,i2ClockUp@AIO+2
 24437  00538A  D801               	call	i2u695_48
 24438  00538C  0012               	return	
 24439  00538E                     i2u695_48:
 24440  00538E  0005               	push	
 24441  005390  6EFA               	movwf	pclath,c
 24442  005392  50DE               	movf	postinc2,w,c
 24443  005394  6EFD               	movwf	tosl,c
 24444  005396  50DE               	movf	postinc2,w,c
 24445  005398  6EFE               	movwf	tosh,c
 24446  00539A  50F8               	movf	tblptru,w,c
 24447  00539C  6EFF               	movwf	tosu,c
 24448  00539E  50FA               	movf	pclath,w,c
 24449  0053A0  0E00               	movlw	0
 24450  0053A2  0012               	return		;indir
 24451  0053A4                     __end_ofi2_ClockUp:
 24452                           	opt stack 0
 24453                           tosu	equ	0xFFF
 24454                           tosh	equ	0xFFE
 24455                           tosl	equ	0xFFD
 24456                           pclatu	equ	0xFFB
 24457                           pclath	equ	0xFFA
 24458                           tblptru	equ	0xFF8
 24459                           tblptrh	equ	0xFF7
 24460                           tblptrl	equ	0xFF6
 24461                           tablat	equ	0xFF5
 24462                           prodh	equ	0xFF4
 24463                           prodl	equ	0xFF3
 24464                           intcon	equ	0xFF2
 24465                           indf0	equ	0xFEF
 24466                           postinc0	equ	0xFEE
 24467                           plusw0	equ	0xFEB
 24468                           fsr0h	equ	0xFEA
 24469                           fsr0l	equ	0xFE9
 24470                           wreg	equ	0xFE8
 24471                           indf1	equ	0xFE7
 24472                           postinc1	equ	0xFE6
 24473                           postdec1	equ	0xFE5
 24474                           plusw1	equ	0xFE3
 24475                           fsr1h	equ	0xFE2
 24476                           fsr1l	equ	0xFE1
 24477                           indf2	equ	0xFDF
 24478                           postinc2	equ	0xFDE
 24479                           postdec2	equ	0xFDD
 24480                           plusw2	equ	0xFDB
 24481                           fsr2h	equ	0xFDA
 24482                           fsr2l	equ	0xFD9
 24483                           status	equ	0xFD8
 24484                           
 24485 ;; *************** function i2_ClockDown *****************
 24486 ;; Defined at:
 24487 ;;		line 94 in file "harware.c"
 24488 ;; Parameters:    Size  Location     Type
 24489 ;;  AIO            12    1[COMRAM] struct .
 24490 ;; Auto vars:     Size  Location     Type
 24491 ;;		None
 24492 ;; Return value:  Size  Location     Type
 24493 ;;                  1    wreg      void 
 24494 ;; Registers used:
 24495 ;;		wreg, fsr2l, fsr2h, pclath, tosl, cstack
 24496 ;; Tracked objects:
 24497 ;;		On entry : 0/0
 24498 ;;		On exit  : 0/0
 24499 ;;		Unchanged: 0/0
 24500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24501 ;;      Params:        12       0       0       0       0       0       0       0       0
 24502 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24503 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24504 ;;      Totals:        12       0       0       0       0       0       0       0       0
 24505 ;;Total ram usage:       12 bytes
 24506 ;; Hardware stack levels used:    1
 24507 ;; Hardware stack levels required when called:    1
 24508 ;; This function calls:
 24509 ;;		i2_DigiPot_ClockWrite
 24510 ;;		i2_DigiPot_DataWrite
 24511 ;;		i2_DigiPot_LatchWrite
 24512 ;;		i2_Display_ClockWrite
 24513 ;;		i2_Display_DataWrite
 24514 ;;		i2_Display_LatchWrite
 24515 ;;		i2_Hub_ClockWrite
 24516 ;;		i2_Hub_LatchWrite
 24517 ;; This function is called by:
 24518 ;;		i2_WriteChar
 24519 ;;		i2_ReadBit
 24520 ;; This function uses a non-reentrant model
 24521 ;;
 24522                           
 24523                           	psect	text128
 24524  0053A4                     __ptext128:
 24525                           	opt stack 0
 24526  0053A4                     i2_ClockDown:
 24527                           	opt stack 17
 24528                           
 24529                           ;harware.c: 96: AIO.ClockPin.Write(0x01);
 24530                           
 24531                           ;incstack = 0
 24532  0053A4  EE20  F004         	lfsr	2,i2ClockDown@AIO+2
 24533  0053A8  D801               	call	i2u696_48
 24534  0053AA  0012               	return	
 24535  0053AC                     i2u696_48:
 24536  0053AC  0005               	push	
 24537  0053AE  6EFA               	movwf	pclath,c
 24538  0053B0  50DE               	movf	postinc2,w,c
 24539  0053B2  6EFD               	movwf	tosl,c
 24540  0053B4  50DE               	movf	postinc2,w,c
 24541  0053B6  6EFE               	movwf	tosh,c
 24542  0053B8  50F8               	movf	tblptru,w,c
 24543  0053BA  6EFF               	movwf	tosu,c
 24544  0053BC  50FA               	movf	pclath,w,c
 24545  0053BE  0E01               	movlw	1
 24546  0053C0  0012               	return		;indir
 24547  0053C2                     __end_ofi2_ClockDown:
 24548                           	opt stack 0
 24549                           tosu	equ	0xFFF
 24550                           tosh	equ	0xFFE
 24551                           tosl	equ	0xFFD
 24552                           pclatu	equ	0xFFB
 24553                           pclath	equ	0xFFA
 24554                           tblptru	equ	0xFF8
 24555                           tblptrh	equ	0xFF7
 24556                           tblptrl	equ	0xFF6
 24557                           tablat	equ	0xFF5
 24558                           prodh	equ	0xFF4
 24559                           prodl	equ	0xFF3
 24560                           intcon	equ	0xFF2
 24561                           indf0	equ	0xFEF
 24562                           postinc0	equ	0xFEE
 24563                           plusw0	equ	0xFEB
 24564                           fsr0h	equ	0xFEA
 24565                           fsr0l	equ	0xFE9
 24566                           wreg	equ	0xFE8
 24567                           indf1	equ	0xFE7
 24568                           postinc1	equ	0xFE6
 24569                           postdec1	equ	0xFE5
 24570                           plusw1	equ	0xFE3
 24571                           fsr1h	equ	0xFE2
 24572                           fsr1l	equ	0xFE1
 24573                           indf2	equ	0xFDF
 24574                           postinc2	equ	0xFDE
 24575                           postdec2	equ	0xFDD
 24576                           plusw2	equ	0xFDB
 24577                           fsr2h	equ	0xFDA
 24578                           fsr2l	equ	0xFD9
 24579                           status	equ	0xFD8
 24580                           
 24581 ;; *************** function i2_DigiPot_DataWrite *****************
 24582 ;; Defined at:
 24583 ;;		line 35 in file "digipot.c"
 24584 ;; Parameters:    Size  Location     Type
 24585 ;;  value           1    wreg     unsigned char 
 24586 ;; Auto vars:     Size  Location     Type
 24587 ;;  value           1    0[COMRAM] unsigned char 
 24588 ;; Return value:  Size  Location     Type
 24589 ;;                  1    wreg      unsigned char 
 24590 ;; Registers used:
 24591 ;;		wreg
 24592 ;; Tracked objects:
 24593 ;;		On entry : 0/0
 24594 ;;		On exit  : 0/0
 24595 ;;		Unchanged: 0/0
 24596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24597 ;;      Params:         0       0       0       0       0       0       0       0       0
 24598 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24599 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24600 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24601 ;;Total ram usage:        1 bytes
 24602 ;; Hardware stack levels used:    1
 24603 ;; This function calls:
 24604 ;;		Nothing
 24605 ;; This function is called by:
 24606 ;; This function uses a non-reentrant model
 24607 ;;
 24608                           
 24609                           	psect	text129
 24610  005508                     __ptext129:
 24611                           	opt stack 0
 24612  005508                     i2_DigiPot_DataWrite:
 24613                           	opt stack 18
 24614                           
 24615                           ;incstack = 0
 24616                           ;i2DigiPot_DataWrite@value stored from wreg
 24617  005508  6E01               	movwf	i2DigiPot_DataWrite@value,c
 24618                           
 24619                           ;digipot.c: 37: LATA2 = value;
 24620  00550A  A001               	btfss	i2DigiPot_DataWrite@value,0,c
 24621  00550C  D002               	goto	i2u630_40
 24622  00550E  8489               	bsf	3977,2,c	;volatile
 24623  005510  0012               	return	
 24624  005512                     i2u630_40:
 24625  005512  9489               	bcf	3977,2,c	;volatile
 24626  005514  0012               	return		;funcret
 24627  005516                     __end_ofi2_DigiPot_DataWrite:
 24628                           	opt stack 0
 24629                           tosu	equ	0xFFF
 24630                           tosh	equ	0xFFE
 24631                           tosl	equ	0xFFD
 24632                           pclatu	equ	0xFFB
 24633                           pclath	equ	0xFFA
 24634                           tblptru	equ	0xFF8
 24635                           tblptrh	equ	0xFF7
 24636                           tblptrl	equ	0xFF6
 24637                           tablat	equ	0xFF5
 24638                           prodh	equ	0xFF4
 24639                           prodl	equ	0xFF3
 24640                           intcon	equ	0xFF2
 24641                           indf0	equ	0xFEF
 24642                           postinc0	equ	0xFEE
 24643                           plusw0	equ	0xFEB
 24644                           fsr0h	equ	0xFEA
 24645                           fsr0l	equ	0xFE9
 24646                           wreg	equ	0xFE8
 24647                           indf1	equ	0xFE7
 24648                           postinc1	equ	0xFE6
 24649                           postdec1	equ	0xFE5
 24650                           plusw1	equ	0xFE3
 24651                           fsr1h	equ	0xFE2
 24652                           fsr1l	equ	0xFE1
 24653                           indf2	equ	0xFDF
 24654                           postinc2	equ	0xFDE
 24655                           postdec2	equ	0xFDD
 24656                           plusw2	equ	0xFDB
 24657                           fsr2h	equ	0xFDA
 24658                           fsr2l	equ	0xFD9
 24659                           status	equ	0xFD8
 24660                           
 24661 ;; *************** function i2_DigiPot_LatchWrite *****************
 24662 ;; Defined at:
 24663 ;;		line 30 in file "digipot.c"
 24664 ;; Parameters:    Size  Location     Type
 24665 ;;  value           1    wreg     unsigned char 
 24666 ;; Auto vars:     Size  Location     Type
 24667 ;;  value           1    0[COMRAM] unsigned char 
 24668 ;; Return value:  Size  Location     Type
 24669 ;;                  1    wreg      void 
 24670 ;; Registers used:
 24671 ;;		wreg
 24672 ;; Tracked objects:
 24673 ;;		On entry : 0/0
 24674 ;;		On exit  : 0/0
 24675 ;;		Unchanged: 0/0
 24676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24677 ;;      Params:         0       0       0       0       0       0       0       0       0
 24678 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24679 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24680 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24681 ;;Total ram usage:        1 bytes
 24682 ;; Hardware stack levels used:    1
 24683 ;; This function calls:
 24684 ;;		Nothing
 24685 ;; This function is called by:
 24686 ;; This function uses a non-reentrant model
 24687 ;;
 24688                           
 24689                           	psect	text130
 24690  005516                     __ptext130:
 24691                           	opt stack 0
 24692  005516                     i2_DigiPot_LatchWrite:
 24693                           	opt stack 18
 24694                           
 24695                           ;incstack = 0
 24696                           ;i2DigiPot_LatchWrite@value stored from wreg
 24697  005516  6E01               	movwf	i2DigiPot_LatchWrite@value,c
 24698                           
 24699                           ;digipot.c: 32: LATA3 = value;
 24700  005518  A001               	btfss	i2DigiPot_LatchWrite@value,0,c
 24701  00551A  D002               	goto	i2u628_40
 24702  00551C  8689               	bsf	3977,3,c	;volatile
 24703  00551E  0012               	return	
 24704  005520                     i2u628_40:
 24705  005520  9689               	bcf	3977,3,c	;volatile
 24706  005522  0012               	return		;funcret
 24707  005524                     __end_ofi2_DigiPot_LatchWrite:
 24708                           	opt stack 0
 24709                           tosu	equ	0xFFF
 24710                           tosh	equ	0xFFE
 24711                           tosl	equ	0xFFD
 24712                           pclatu	equ	0xFFB
 24713                           pclath	equ	0xFFA
 24714                           tblptru	equ	0xFF8
 24715                           tblptrh	equ	0xFF7
 24716                           tblptrl	equ	0xFF6
 24717                           tablat	equ	0xFF5
 24718                           prodh	equ	0xFF4
 24719                           prodl	equ	0xFF3
 24720                           intcon	equ	0xFF2
 24721                           indf0	equ	0xFEF
 24722                           postinc0	equ	0xFEE
 24723                           plusw0	equ	0xFEB
 24724                           fsr0h	equ	0xFEA
 24725                           fsr0l	equ	0xFE9
 24726                           wreg	equ	0xFE8
 24727                           indf1	equ	0xFE7
 24728                           postinc1	equ	0xFE6
 24729                           postdec1	equ	0xFE5
 24730                           plusw1	equ	0xFE3
 24731                           fsr1h	equ	0xFE2
 24732                           fsr1l	equ	0xFE1
 24733                           indf2	equ	0xFDF
 24734                           postinc2	equ	0xFDE
 24735                           postdec2	equ	0xFDD
 24736                           plusw2	equ	0xFDB
 24737                           fsr2h	equ	0xFDA
 24738                           fsr2l	equ	0xFD9
 24739                           status	equ	0xFD8
 24740                           
 24741 ;; *************** function i2_DigiPot_ClockWrite *****************
 24742 ;; Defined at:
 24743 ;;		line 25 in file "digipot.c"
 24744 ;; Parameters:    Size  Location     Type
 24745 ;;  value           1    wreg     unsigned char 
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;  value           1    0[COMRAM] unsigned char 
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      void 
 24750 ;; Registers used:
 24751 ;;		wreg
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24757 ;;      Params:         0       0       0       0       0       0       0       0       0
 24758 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24759 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24760 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24761 ;;Total ram usage:        1 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; This function calls:
 24764 ;;		Nothing
 24765 ;; This function is called by:
 24766 ;; This function uses a non-reentrant model
 24767 ;;
 24768                           
 24769                           	psect	text131
 24770  005524                     __ptext131:
 24771                           	opt stack 0
 24772  005524                     i2_DigiPot_ClockWrite:
 24773                           	opt stack 18
 24774                           
 24775                           ;incstack = 0
 24776                           ;i2DigiPot_ClockWrite@value stored from wreg
 24777  005524  6E01               	movwf	i2DigiPot_ClockWrite@value,c
 24778                           
 24779                           ;digipot.c: 27: LATA4 = value;
 24780  005526  A001               	btfss	i2DigiPot_ClockWrite@value,0,c
 24781  005528  D002               	goto	i2u626_40
 24782  00552A  8889               	bsf	3977,4,c	;volatile
 24783  00552C  0012               	return	
 24784  00552E                     i2u626_40:
 24785  00552E  9889               	bcf	3977,4,c	;volatile
 24786  005530  0012               	return		;funcret
 24787  005532                     __end_ofi2_DigiPot_ClockWrite:
 24788                           	opt stack 0
 24789                           tosu	equ	0xFFF
 24790                           tosh	equ	0xFFE
 24791                           tosl	equ	0xFFD
 24792                           pclatu	equ	0xFFB
 24793                           pclath	equ	0xFFA
 24794                           tblptru	equ	0xFF8
 24795                           tblptrh	equ	0xFF7
 24796                           tblptrl	equ	0xFF6
 24797                           tablat	equ	0xFF5
 24798                           prodh	equ	0xFF4
 24799                           prodl	equ	0xFF3
 24800                           intcon	equ	0xFF2
 24801                           indf0	equ	0xFEF
 24802                           postinc0	equ	0xFEE
 24803                           plusw0	equ	0xFEB
 24804                           fsr0h	equ	0xFEA
 24805                           fsr0l	equ	0xFE9
 24806                           wreg	equ	0xFE8
 24807                           indf1	equ	0xFE7
 24808                           postinc1	equ	0xFE6
 24809                           postdec1	equ	0xFE5
 24810                           plusw1	equ	0xFE3
 24811                           fsr1h	equ	0xFE2
 24812                           fsr1l	equ	0xFE1
 24813                           indf2	equ	0xFDF
 24814                           postinc2	equ	0xFDE
 24815                           postdec2	equ	0xFDD
 24816                           plusw2	equ	0xFDB
 24817                           fsr2h	equ	0xFDA
 24818                           fsr2l	equ	0xFD9
 24819                           status	equ	0xFD8
 24820                           
 24821 ;; *************** function i2_Hub_ClockWrite *****************
 24822 ;; Defined at:
 24823 ;;		line 41 in file "hub.c"
 24824 ;; Parameters:    Size  Location     Type
 24825 ;;  value           1    wreg     unsigned char 
 24826 ;; Auto vars:     Size  Location     Type
 24827 ;;  value           1    0[COMRAM] unsigned char 
 24828 ;; Return value:  Size  Location     Type
 24829 ;;                  1    wreg      void 
 24830 ;; Registers used:
 24831 ;;		wreg
 24832 ;; Tracked objects:
 24833 ;;		On entry : 0/0
 24834 ;;		On exit  : 0/0
 24835 ;;		Unchanged: 0/0
 24836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24837 ;;      Params:         0       0       0       0       0       0       0       0       0
 24838 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24839 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24840 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24841 ;;Total ram usage:        1 bytes
 24842 ;; Hardware stack levels used:    1
 24843 ;; This function calls:
 24844 ;;		Nothing
 24845 ;; This function is called by:
 24846 ;; This function uses a non-reentrant model
 24847 ;;
 24848                           
 24849                           	psect	text132
 24850  005532                     __ptext132:
 24851                           	opt stack 0
 24852  005532                     i2_Hub_ClockWrite:
 24853                           	opt stack 18
 24854                           
 24855                           ;incstack = 0
 24856                           ;i2Hub_ClockWrite@value stored from wreg
 24857  005532  6E01               	movwf	i2Hub_ClockWrite@value,c
 24858                           
 24859                           ;hub.c: 43: LATB4 = value;
 24860  005534  A001               	btfss	i2Hub_ClockWrite@value,0,c
 24861  005536  D002               	goto	i2u622_40
 24862  005538  888A               	bsf	3978,4,c	;volatile
 24863  00553A  0012               	return	
 24864  00553C                     i2u622_40:
 24865  00553C  988A               	bcf	3978,4,c	;volatile
 24866  00553E  0012               	return		;funcret
 24867  005540                     __end_ofi2_Hub_ClockWrite:
 24868                           	opt stack 0
 24869                           tosu	equ	0xFFF
 24870                           tosh	equ	0xFFE
 24871                           tosl	equ	0xFFD
 24872                           pclatu	equ	0xFFB
 24873                           pclath	equ	0xFFA
 24874                           tblptru	equ	0xFF8
 24875                           tblptrh	equ	0xFF7
 24876                           tblptrl	equ	0xFF6
 24877                           tablat	equ	0xFF5
 24878                           prodh	equ	0xFF4
 24879                           prodl	equ	0xFF3
 24880                           intcon	equ	0xFF2
 24881                           indf0	equ	0xFEF
 24882                           postinc0	equ	0xFEE
 24883                           plusw0	equ	0xFEB
 24884                           fsr0h	equ	0xFEA
 24885                           fsr0l	equ	0xFE9
 24886                           wreg	equ	0xFE8
 24887                           indf1	equ	0xFE7
 24888                           postinc1	equ	0xFE6
 24889                           postdec1	equ	0xFE5
 24890                           plusw1	equ	0xFE3
 24891                           fsr1h	equ	0xFE2
 24892                           fsr1l	equ	0xFE1
 24893                           indf2	equ	0xFDF
 24894                           postinc2	equ	0xFDE
 24895                           postdec2	equ	0xFDD
 24896                           plusw2	equ	0xFDB
 24897                           fsr2h	equ	0xFDA
 24898                           fsr2l	equ	0xFD9
 24899                           status	equ	0xFD8
 24900                           
 24901 ;; *************** function i2_Display_DataWrite *****************
 24902 ;; Defined at:
 24903 ;;		line 46 in file "display.c"
 24904 ;; Parameters:    Size  Location     Type
 24905 ;;  value           1    wreg     unsigned char 
 24906 ;; Auto vars:     Size  Location     Type
 24907 ;;  value           1    0[COMRAM] unsigned char 
 24908 ;; Return value:  Size  Location     Type
 24909 ;;                  1    wreg      unsigned char 
 24910 ;; Registers used:
 24911 ;;		wreg
 24912 ;; Tracked objects:
 24913 ;;		On entry : 0/0
 24914 ;;		On exit  : 0/0
 24915 ;;		Unchanged: 0/0
 24916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24917 ;;      Params:         0       0       0       0       0       0       0       0       0
 24918 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24919 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24920 ;;      Totals:         1       0       0       0       0       0       0       0       0
 24921 ;;Total ram usage:        1 bytes
 24922 ;; Hardware stack levels used:    1
 24923 ;; This function calls:
 24924 ;;		Nothing
 24925 ;; This function is called by:
 24926 ;; This function uses a non-reentrant model
 24927 ;;
 24928                           
 24929                           	psect	text133
 24930  005540                     __ptext133:
 24931                           	opt stack 0
 24932  005540                     i2_Display_DataWrite:
 24933                           	opt stack 18
 24934                           
 24935                           ;incstack = 0
 24936                           ;i2Display_DataWrite@value stored from wreg
 24937  005540  6E01               	movwf	i2Display_DataWrite@value,c
 24938                           
 24939                           ;display.c: 48: LATA5 = value;
 24940  005542  A001               	btfss	i2Display_DataWrite@value,0,c
 24941  005544  D002               	goto	i2u620_40
 24942  005546  8A89               	bsf	3977,5,c	;volatile
 24943  005548  0012               	return	
 24944  00554A                     i2u620_40:
 24945  00554A  9A89               	bcf	3977,5,c	;volatile
 24946  00554C  0012               	return		;funcret
 24947  00554E                     __end_ofi2_Display_DataWrite:
 24948                           	opt stack 0
 24949                           tosu	equ	0xFFF
 24950                           tosh	equ	0xFFE
 24951                           tosl	equ	0xFFD
 24952                           pclatu	equ	0xFFB
 24953                           pclath	equ	0xFFA
 24954                           tblptru	equ	0xFF8
 24955                           tblptrh	equ	0xFF7
 24956                           tblptrl	equ	0xFF6
 24957                           tablat	equ	0xFF5
 24958                           prodh	equ	0xFF4
 24959                           prodl	equ	0xFF3
 24960                           intcon	equ	0xFF2
 24961                           indf0	equ	0xFEF
 24962                           postinc0	equ	0xFEE
 24963                           plusw0	equ	0xFEB
 24964                           fsr0h	equ	0xFEA
 24965                           fsr0l	equ	0xFE9
 24966                           wreg	equ	0xFE8
 24967                           indf1	equ	0xFE7
 24968                           postinc1	equ	0xFE6
 24969                           postdec1	equ	0xFE5
 24970                           plusw1	equ	0xFE3
 24971                           fsr1h	equ	0xFE2
 24972                           fsr1l	equ	0xFE1
 24973                           indf2	equ	0xFDF
 24974                           postinc2	equ	0xFDE
 24975                           postdec2	equ	0xFDD
 24976                           plusw2	equ	0xFDB
 24977                           fsr2h	equ	0xFDA
 24978                           fsr2l	equ	0xFD9
 24979                           status	equ	0xFD8
 24980                           
 24981 ;; *************** function i2_Display_LatchWrite *****************
 24982 ;; Defined at:
 24983 ;;		line 41 in file "display.c"
 24984 ;; Parameters:    Size  Location     Type
 24985 ;;  value           1    wreg     unsigned char 
 24986 ;; Auto vars:     Size  Location     Type
 24987 ;;  value           1    0[COMRAM] unsigned char 
 24988 ;; Return value:  Size  Location     Type
 24989 ;;                  1    wreg      void 
 24990 ;; Registers used:
 24991 ;;		wreg
 24992 ;; Tracked objects:
 24993 ;;		On entry : 0/0
 24994 ;;		On exit  : 0/0
 24995 ;;		Unchanged: 0/0
 24996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24997 ;;      Params:         0       0       0       0       0       0       0       0       0
 24998 ;;      Locals:         1       0       0       0       0       0       0       0       0
 24999 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25000 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25001 ;;Total ram usage:        1 bytes
 25002 ;; Hardware stack levels used:    1
 25003 ;; This function calls:
 25004 ;;		Nothing
 25005 ;; This function is called by:
 25006 ;; This function uses a non-reentrant model
 25007 ;;
 25008                           
 25009                           	psect	text134
 25010  00554E                     __ptext134:
 25011                           	opt stack 0
 25012  00554E                     i2_Display_LatchWrite:
 25013                           	opt stack 18
 25014                           
 25015                           ;incstack = 0
 25016                           ;i2Display_LatchWrite@value stored from wreg
 25017  00554E  6E01               	movwf	i2Display_LatchWrite@value,c
 25018                           
 25019                           ;display.c: 43: LATC2 = value;
 25020  005550  A001               	btfss	i2Display_LatchWrite@value,0,c
 25021  005552  D002               	goto	i2u618_40
 25022  005554  848B               	bsf	3979,2,c	;volatile
 25023  005556  0012               	return	
 25024  005558                     i2u618_40:
 25025  005558  948B               	bcf	3979,2,c	;volatile
 25026  00555A  0012               	return		;funcret
 25027  00555C                     __end_ofi2_Display_LatchWrite:
 25028                           	opt stack 0
 25029                           tosu	equ	0xFFF
 25030                           tosh	equ	0xFFE
 25031                           tosl	equ	0xFFD
 25032                           pclatu	equ	0xFFB
 25033                           pclath	equ	0xFFA
 25034                           tblptru	equ	0xFF8
 25035                           tblptrh	equ	0xFF7
 25036                           tblptrl	equ	0xFF6
 25037                           tablat	equ	0xFF5
 25038                           prodh	equ	0xFF4
 25039                           prodl	equ	0xFF3
 25040                           intcon	equ	0xFF2
 25041                           indf0	equ	0xFEF
 25042                           postinc0	equ	0xFEE
 25043                           plusw0	equ	0xFEB
 25044                           fsr0h	equ	0xFEA
 25045                           fsr0l	equ	0xFE9
 25046                           wreg	equ	0xFE8
 25047                           indf1	equ	0xFE7
 25048                           postinc1	equ	0xFE6
 25049                           postdec1	equ	0xFE5
 25050                           plusw1	equ	0xFE3
 25051                           fsr1h	equ	0xFE2
 25052                           fsr1l	equ	0xFE1
 25053                           indf2	equ	0xFDF
 25054                           postinc2	equ	0xFDE
 25055                           postdec2	equ	0xFDD
 25056                           plusw2	equ	0xFDB
 25057                           fsr2h	equ	0xFDA
 25058                           fsr2l	equ	0xFD9
 25059                           status	equ	0xFD8
 25060                           
 25061 ;; *************** function i2_Display_ClockWrite *****************
 25062 ;; Defined at:
 25063 ;;		line 36 in file "display.c"
 25064 ;; Parameters:    Size  Location     Type
 25065 ;;  value           1    wreg     unsigned char 
 25066 ;; Auto vars:     Size  Location     Type
 25067 ;;  value           1    0[COMRAM] unsigned char 
 25068 ;; Return value:  Size  Location     Type
 25069 ;;                  1    wreg      void 
 25070 ;; Registers used:
 25071 ;;		wreg
 25072 ;; Tracked objects:
 25073 ;;		On entry : 0/0
 25074 ;;		On exit  : 0/0
 25075 ;;		Unchanged: 0/0
 25076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25077 ;;      Params:         0       0       0       0       0       0       0       0       0
 25078 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25079 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25080 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25081 ;;Total ram usage:        1 bytes
 25082 ;; Hardware stack levels used:    1
 25083 ;; This function calls:
 25084 ;;		Nothing
 25085 ;; This function is called by:
 25086 ;; This function uses a non-reentrant model
 25087 ;;
 25088                           
 25089                           	psect	text135
 25090  00555C                     __ptext135:
 25091                           	opt stack 0
 25092  00555C                     i2_Display_ClockWrite:
 25093                           	opt stack 18
 25094                           
 25095                           ;incstack = 0
 25096                           ;i2Display_ClockWrite@value stored from wreg
 25097  00555C  6E01               	movwf	i2Display_ClockWrite@value,c
 25098                           
 25099                           ;display.c: 38: LATB4 = value;
 25100  00555E  A001               	btfss	i2Display_ClockWrite@value,0,c
 25101  005560  D002               	goto	i2u616_40
 25102  005562  888A               	bsf	3978,4,c	;volatile
 25103  005564  0012               	return	
 25104  005566                     i2u616_40:
 25105  005566  988A               	bcf	3978,4,c	;volatile
 25106  005568  0012               	return		;funcret
 25107  00556A                     __end_ofi2_Display_ClockWrite:
 25108                           	opt stack 0
 25109                           tosu	equ	0xFFF
 25110                           tosh	equ	0xFFE
 25111                           tosl	equ	0xFFD
 25112                           pclatu	equ	0xFFB
 25113                           pclath	equ	0xFFA
 25114                           tblptru	equ	0xFF8
 25115                           tblptrh	equ	0xFF7
 25116                           tblptrl	equ	0xFF6
 25117                           tablat	equ	0xFF5
 25118                           prodh	equ	0xFF4
 25119                           prodl	equ	0xFF3
 25120                           intcon	equ	0xFF2
 25121                           indf0	equ	0xFEF
 25122                           postinc0	equ	0xFEE
 25123                           plusw0	equ	0xFEB
 25124                           fsr0h	equ	0xFEA
 25125                           fsr0l	equ	0xFE9
 25126                           wreg	equ	0xFE8
 25127                           indf1	equ	0xFE7
 25128                           postinc1	equ	0xFE6
 25129                           postdec1	equ	0xFE5
 25130                           plusw1	equ	0xFE3
 25131                           fsr1h	equ	0xFE2
 25132                           fsr1l	equ	0xFE1
 25133                           indf2	equ	0xFDF
 25134                           postinc2	equ	0xFDE
 25135                           postdec2	equ	0xFDD
 25136                           plusw2	equ	0xFDB
 25137                           fsr2h	equ	0xFDA
 25138                           fsr2l	equ	0xFD9
 25139                           status	equ	0xFD8
 25140                           
 25141 ;; *************** function i2_Hub_LatchWrite *****************
 25142 ;; Defined at:
 25143 ;;		line 46 in file "hub.c"
 25144 ;; Parameters:    Size  Location     Type
 25145 ;;  value           1    wreg     unsigned char 
 25146 ;; Auto vars:     Size  Location     Type
 25147 ;;  value           1    0[COMRAM] unsigned char 
 25148 ;; Return value:  Size  Location     Type
 25149 ;;                  1    wreg      void 
 25150 ;; Registers used:
 25151 ;;		wreg
 25152 ;; Tracked objects:
 25153 ;;		On entry : 0/0
 25154 ;;		On exit  : 0/0
 25155 ;;		Unchanged: 0/0
 25156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25157 ;;      Params:         0       0       0       0       0       0       0       0       0
 25158 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25159 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25160 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25161 ;;Total ram usage:        1 bytes
 25162 ;; Hardware stack levels used:    1
 25163 ;; This function calls:
 25164 ;;		Nothing
 25165 ;; This function is called by:
 25166 ;; This function uses a non-reentrant model
 25167 ;;
 25168                           
 25169                           	psect	text136
 25170  00556A                     __ptext136:
 25171                           	opt stack 0
 25172  00556A                     i2_Hub_LatchWrite:
 25173                           	opt stack 18
 25174                           
 25175                           ;incstack = 0
 25176                           ;i2Hub_LatchWrite@value stored from wreg
 25177  00556A  6E01               	movwf	i2Hub_LatchWrite@value,c
 25178                           
 25179                           ;hub.c: 48: LATB3 = value;
 25180  00556C  A001               	btfss	i2Hub_LatchWrite@value,0,c
 25181  00556E  D002               	goto	i2u624_40
 25182  005570  868A               	bsf	3978,3,c	;volatile
 25183  005572  0012               	return	
 25184  005574                     i2u624_40:
 25185  005574  968A               	bcf	3978,3,c	;volatile
 25186  005576  0012               	return		;funcret
 25187  005578                     __end_ofi2_Hub_LatchWrite:
 25188                           	opt stack 0
 25189                           tosu	equ	0xFFF
 25190                           tosh	equ	0xFFE
 25191                           tosl	equ	0xFFD
 25192                           pclatu	equ	0xFFB
 25193                           pclath	equ	0xFFA
 25194                           tblptru	equ	0xFF8
 25195                           tblptrh	equ	0xFF7
 25196                           tblptrl	equ	0xFF6
 25197                           tablat	equ	0xFF5
 25198                           prodh	equ	0xFF4
 25199                           prodl	equ	0xFF3
 25200                           intcon	equ	0xFF2
 25201                           indf0	equ	0xFEF
 25202                           postinc0	equ	0xFEE
 25203                           plusw0	equ	0xFEB
 25204                           fsr0h	equ	0xFEA
 25205                           fsr0l	equ	0xFE9
 25206                           wreg	equ	0xFE8
 25207                           indf1	equ	0xFE7
 25208                           postinc1	equ	0xFE6
 25209                           postdec1	equ	0xFE5
 25210                           plusw1	equ	0xFE3
 25211                           fsr1h	equ	0xFE2
 25212                           fsr1l	equ	0xFE1
 25213                           indf2	equ	0xFDF
 25214                           postinc2	equ	0xFDE
 25215                           postdec2	equ	0xFDD
 25216                           plusw2	equ	0xFDB
 25217                           fsr2h	equ	0xFDA
 25218                           fsr2l	equ	0xFD9
 25219                           status	equ	0xFD8
 25220                           
 25221 ;; *************** function _Hub_SetValue *****************
 25222 ;; Defined at:
 25223 ;;		line 85 in file "hub.c"
 25224 ;; Parameters:    Size  Location     Type
 25225 ;;  ASourceValue    2    4[COMRAM] PTR unsigned char 
 25226 ;;		 -> _Hub.PrimaryBuffer.Values(8), _Hub.PrimaryBuffer(12), _Hub(154), 
 25227 ;;  AMinValue       1    6[COMRAM] char 
 25228 ;;  AMaxValue       2    7[COMRAM] int 
 25229 ;;  AIncrement      1    9[COMRAM] char 
 25230 ;; Auto vars:     Size  Location     Type
 25231 ;;  LValue          2   11[COMRAM] int 
 25232 ;; Return value:  Size  Location     Type
 25233 ;;                  1    wreg      void 
 25234 ;; Registers used:
 25235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25236 ;; Tracked objects:
 25237 ;;		On entry : 0/0
 25238 ;;		On exit  : 0/0
 25239 ;;		Unchanged: 0/0
 25240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25241 ;;      Params:         6       0       0       0       0       0       0       0       0
 25242 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25243 ;;      Temps:          1       0       0       0       0       0       0       0       0
 25244 ;;      Totals:         9       0       0       0       0       0       0       0       0
 25245 ;;Total ram usage:        9 bytes
 25246 ;; Hardware stack levels used:    1
 25247 ;; This function calls:
 25248 ;;		Nothing
 25249 ;; This function is called by:
 25250 ;;		_Hub_UpdateValues
 25251 ;; This function uses a non-reentrant model
 25252 ;;
 25253                           
 25254                           	psect	text137
 25255  004950                     __ptext137:
 25256                           	opt stack 0
 25257  004950                     _Hub_SetValue:
 25258                           	opt stack 19
 25259                           
 25260                           ;hub.c: 87: signed int LValue = *ASourceValue;
 25261                           
 25262                           ;incstack = 0
 25263  004950  C005  FFD9         	movff	Hub_SetValue@ASourceValue,fsr2l
 25264  004954  C006  FFDA         	movff	Hub_SetValue@ASourceValue+1,fsr2h
 25265  004958  50DF               	movf	indf2,w,c
 25266  00495A  6E0B               	movwf	??_Hub_SetValue& (0+255),c
 25267  00495C  500B               	movf	??_Hub_SetValue,w,c
 25268  00495E  6E0C               	movwf	Hub_SetValue@LValue,c
 25269  004960  6A0D               	clrf	Hub_SetValue@LValue+1,c
 25270                           
 25271                           ;hub.c: 88: LValue += AIncrement;
 25272  004962  500A               	movf	Hub_SetValue@AIncrement,w,c
 25273  004964  260C               	addwf	Hub_SetValue@LValue,f,c
 25274  004966  0E00               	movlw	0
 25275  004968  BE0A               	btfsc	Hub_SetValue@AIncrement,7,c
 25276  00496A  0EFF               	movlw	255
 25277  00496C  220D               	addwfc	Hub_SetValue@LValue+1,f,c
 25278                           
 25279                           ;hub.c: 89: if (LValue < AMinValue) LValue = AMinValue;
 25280  00496E  500D               	movf	Hub_SetValue@LValue+1,w,c
 25281  004970  0A80               	xorlw	128
 25282  004972  6E0B               	movwf	??_Hub_SetValue& (0+255),c
 25283  004974  5007               	movf	Hub_SetValue@AMinValue,w,c
 25284  004976  5C0C               	subwf	Hub_SetValue@LValue,w,c
 25285  004978  0E80               	movlw	128
 25286  00497A  BE07               	btfsc	Hub_SetValue@AMinValue,7,c
 25287  00497C  0E7F               	movlw	127
 25288  00497E  580B               	subwfb	??_Hub_SetValue& (0+255),w,c
 25289  004980  B0D8               	btfsc	status,0,c
 25290  004982  D005               	goto	i2l868
 25291  004984  5007               	movf	Hub_SetValue@AMinValue,w,c
 25292  004986  6E0C               	movwf	Hub_SetValue@LValue,c
 25293  004988  6A0D               	clrf	Hub_SetValue@LValue+1,c
 25294  00498A  BE0C               	btfsc	Hub_SetValue@LValue,7,c
 25295  00498C  060D               	decf	Hub_SetValue@LValue+1,f,c
 25296  00498E                     i2l868:
 25297                           
 25298                           ;hub.c: 90: if (LValue > AMaxValue) LValue = AMaxValue;
 25299  00498E  500C               	movf	Hub_SetValue@LValue,w,c
 25300  004990  5C08               	subwf	Hub_SetValue@AMaxValue,w,c
 25301  004992  5009               	movf	Hub_SetValue@AMaxValue+1,w,c
 25302  004994  0A80               	xorlw	128
 25303  004996  6E0B               	movwf	??_Hub_SetValue& (0+255),c
 25304  004998  500D               	movf	Hub_SetValue@LValue+1,w,c
 25305  00499A  0A80               	xorlw	128
 25306  00499C  580B               	subwfb	??_Hub_SetValue& (0+255),w,c
 25307  00499E  B0D8               	btfsc	status,0,c
 25308  0049A0  D004               	goto	i2l869
 25309  0049A2  C008  F00C         	movff	Hub_SetValue@AMaxValue,Hub_SetValue@LValue
 25310  0049A6  C009  F00D         	movff	Hub_SetValue@AMaxValue+1,Hub_SetValue@LValue+1
 25311  0049AA                     i2l869:
 25312                           
 25313                           ;hub.c: 91: *ASourceValue = LValue;
 25314  0049AA  C005  FFD9         	movff	Hub_SetValue@ASourceValue,fsr2l
 25315  0049AE  C006  FFDA         	movff	Hub_SetValue@ASourceValue+1,fsr2h
 25316  0049B2  C00C  FFDF         	movff	Hub_SetValue@LValue,indf2
 25317  0049B6  0012               	return		;funcret
 25318  0049B8                     __end_of_Hub_SetValue:
 25319                           	opt stack 0
 25320                           tosu	equ	0xFFF
 25321                           tosh	equ	0xFFE
 25322                           tosl	equ	0xFFD
 25323                           pclatu	equ	0xFFB
 25324                           pclath	equ	0xFFA
 25325                           tblptru	equ	0xFF8
 25326                           tblptrh	equ	0xFF7
 25327                           tblptrl	equ	0xFF6
 25328                           tablat	equ	0xFF5
 25329                           prodh	equ	0xFF4
 25330                           prodl	equ	0xFF3
 25331                           intcon	equ	0xFF2
 25332                           indf0	equ	0xFEF
 25333                           postinc0	equ	0xFEE
 25334                           plusw0	equ	0xFEB
 25335                           fsr0h	equ	0xFEA
 25336                           fsr0l	equ	0xFE9
 25337                           wreg	equ	0xFE8
 25338                           indf1	equ	0xFE7
 25339                           postinc1	equ	0xFE6
 25340                           postdec1	equ	0xFE5
 25341                           plusw1	equ	0xFE3
 25342                           fsr1h	equ	0xFE2
 25343                           fsr1l	equ	0xFE1
 25344                           indf2	equ	0xFDF
 25345                           postinc2	equ	0xFDE
 25346                           postdec2	equ	0xFDD
 25347                           plusw2	equ	0xFDB
 25348                           fsr2h	equ	0xFDA
 25349                           fsr2l	equ	0xFD9
 25350                           status	equ	0xFD8
 25351                           
 25352 ;; *************** function _Hub_DecodeSwitch *****************
 25353 ;; Defined at:
 25354 ;;		line 64 in file "hub.c"
 25355 ;; Parameters:    Size  Location     Type
 25356 ;;  AIndex1         1    wreg     unsigned char 
 25357 ;;  AIndex2         1    0[COMRAM] unsigned char 
 25358 ;; Auto vars:     Size  Location     Type
 25359 ;;  AIndex1         1    3[COMRAM] unsigned char 
 25360 ;; Return value:  Size  Location     Type
 25361 ;;                  1    wreg      char 
 25362 ;; Registers used:
 25363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25364 ;; Tracked objects:
 25365 ;;		On entry : 0/0
 25366 ;;		On exit  : 0/0
 25367 ;;		Unchanged: 0/0
 25368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25369 ;;      Params:         1       0       0       0       0       0       0       0       0
 25370 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25371 ;;      Temps:          2       0       0       0       0       0       0       0       0
 25372 ;;      Totals:         4       0       0       0       0       0       0       0       0
 25373 ;;Total ram usage:        4 bytes
 25374 ;; Hardware stack levels used:    1
 25375 ;; This function calls:
 25376 ;;		Nothing
 25377 ;; This function is called by:
 25378 ;;		_Hub_UpdateValues
 25379 ;; This function uses a non-reentrant model
 25380 ;;
 25381                           
 25382                           	psect	text138
 25383  00159E                     __ptext138:
 25384                           	opt stack 0
 25385  00159E                     _Hub_DecodeSwitch:
 25386                           	opt stack 19
 25387                           
 25388                           ;incstack = 0
 25389                           ;Hub_DecodeSwitch@AIndex1 stored from wreg
 25390  00159E  6E04               	movwf	Hub_DecodeSwitch@AIndex1,c
 25391                           
 25392                           ;hub.c: 68: if (_Hub.Switch[AIndex1] == _Hub.SwitchOld[AIndex1] && _Hub.Switch[AIndex1] 
      +                          == _Hub.SwitchOld[AIndex2] && _Hub.SwitchOld[AIndex2] == !_Hub.Switch[AIndex2] ||
 25393                           ;hub.c: 69: _Hub.Switch[AIndex2] == _Hub.SwitchOld[AIndex2] && _Hub.Switch[AIndex2] == _
      +                          Hub.Switch[AIndex1] && _Hub.Switch[AIndex2] == !_Hub.SwitchOld[AIndex1])
 25394  0015A0  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25395  0015A2  0D01               	mullw	1
 25396  0015A4  0E6F               	movlw	low (__Hub+48)
 25397  0015A6  24F3               	addwf	prodl,w,c
 25398  0015A8  6ED9               	movwf	fsr2l,c
 25399  0015AA  0E01               	movlw	high (__Hub+48)
 25400  0015AC  20F4               	addwfc	prodh,w,c
 25401  0015AE  6EDA               	movwf	fsr2h,c
 25402  0015B0  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25403  0015B2  0D01               	mullw	1
 25404  0015B4  0E3F               	movlw	low __Hub
 25405  0015B6  24F3               	addwf	prodl,w,c
 25406  0015B8  6EE1               	movwf	fsr1l,c
 25407  0015BA  0E01               	movlw	high __Hub
 25408  0015BC  20F4               	addwfc	prodh,w,c
 25409  0015BE  6EE2               	movwf	fsr1h,c
 25410  0015C0  50DE               	movf	postinc2,w,c
 25411  0015C2  18E6               	xorwf	postinc1,w,c
 25412  0015C4  A4D8               	btfss	status,2,c
 25413  0015C6  D02F               	goto	i2u848_40
 25414  0015C8  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25415  0015CA  0D01               	mullw	1
 25416  0015CC  0E6F               	movlw	low (__Hub+48)
 25417  0015CE  24F3               	addwf	prodl,w,c
 25418  0015D0  6ED9               	movwf	fsr2l,c
 25419  0015D2  0E01               	movlw	high (__Hub+48)
 25420  0015D4  20F4               	addwfc	prodh,w,c
 25421  0015D6  6EDA               	movwf	fsr2h,c
 25422  0015D8  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25423  0015DA  0D01               	mullw	1
 25424  0015DC  0E3F               	movlw	low __Hub
 25425  0015DE  24F3               	addwf	prodl,w,c
 25426  0015E0  6EE1               	movwf	fsr1l,c
 25427  0015E2  0E01               	movlw	high __Hub
 25428  0015E4  20F4               	addwfc	prodh,w,c
 25429  0015E6  6EE2               	movwf	fsr1h,c
 25430  0015E8  50DE               	movf	postinc2,w,c
 25431  0015EA  18E6               	xorwf	postinc1,w,c
 25432  0015EC  A4D8               	btfss	status,2,c
 25433  0015EE  D01B               	goto	i2u848_40
 25434  0015F0  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25435  0015F2  0D01               	mullw	1
 25436  0015F4  0E6F               	movlw	low (__Hub+48)
 25437  0015F6  24F3               	addwf	prodl,w,c
 25438  0015F8  6ED9               	movwf	fsr2l,c
 25439  0015FA  0E01               	movlw	high (__Hub+48)
 25440  0015FC  20F4               	addwfc	prodh,w,c
 25441  0015FE  6EDA               	movwf	fsr2h,c
 25442  001600  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25443  001602  0D01               	mullw	1
 25444  001604  0E3F               	movlw	low __Hub
 25445  001606  24F3               	addwf	prodl,w,c
 25446  001608  6EE1               	movwf	fsr1l,c
 25447  00160A  0E01               	movlw	high __Hub
 25448  00160C  20F4               	addwfc	prodh,w,c
 25449  00160E  6EE2               	movwf	fsr1h,c
 25450  001610  50E7               	movf	indf1,w,c
 25451  001612  A4D8               	btfss	status,2,c
 25452  001614  D003               	goto	i2u846_40
 25453  001616  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25454  001618  2A03               	incf	(??_Hub_DecodeSwitch+1)& (0+255),f,c
 25455  00161A  D001               	goto	i2u847_48
 25456  00161C                     i2u846_40:
 25457  00161C  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25458  00161E                     i2u847_48:
 25459  00161E  50DE               	movf	postinc2,w,c
 25460  001620  1803               	xorwf	??_Hub_DecodeSwitch+1,w,c
 25461  001622  B4D8               	btfsc	status,2,c
 25462  001624  D043               	goto	i2u853_40
 25463  001626                     i2u848_40:
 25464  001626  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25465  001628  0D01               	mullw	1
 25466  00162A  0E6F               	movlw	low (__Hub+48)
 25467  00162C  24F3               	addwf	prodl,w,c
 25468  00162E  6ED9               	movwf	fsr2l,c
 25469  001630  0E01               	movlw	high (__Hub+48)
 25470  001632  20F4               	addwfc	prodh,w,c
 25471  001634  6EDA               	movwf	fsr2h,c
 25472  001636  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25473  001638  0D01               	mullw	1
 25474  00163A  0E3F               	movlw	low __Hub
 25475  00163C  24F3               	addwf	prodl,w,c
 25476  00163E  6EE1               	movwf	fsr1l,c
 25477  001640  0E01               	movlw	high __Hub
 25478  001642  20F4               	addwfc	prodh,w,c
 25479  001644  6EE2               	movwf	fsr1h,c
 25480  001646  50DE               	movf	postinc2,w,c
 25481  001648  18E6               	xorwf	postinc1,w,c
 25482  00164A  A4D8               	btfss	status,2,c
 25483  00164C  D031               	goto	i2l855
 25484  00164E  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25485  001650  0D01               	mullw	1
 25486  001652  0E3F               	movlw	low __Hub
 25487  001654  24F3               	addwf	prodl,w,c
 25488  001656  6ED9               	movwf	fsr2l,c
 25489  001658  0E01               	movlw	high __Hub
 25490  00165A  20F4               	addwfc	prodh,w,c
 25491  00165C  6EDA               	movwf	fsr2h,c
 25492  00165E  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25493  001660  0D01               	mullw	1
 25494  001662  0E3F               	movlw	low __Hub
 25495  001664  24F3               	addwf	prodl,w,c
 25496  001666  6EE1               	movwf	fsr1l,c
 25497  001668  0E01               	movlw	high __Hub
 25498  00166A  20F4               	addwfc	prodh,w,c
 25499  00166C  6EE2               	movwf	fsr1h,c
 25500  00166E  50DE               	movf	postinc2,w,c
 25501  001670  18E6               	xorwf	postinc1,w,c
 25502  001672  A4D8               	btfss	status,2,c
 25503  001674  D01D               	goto	i2l855
 25504  001676  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25505  001678  0D01               	mullw	1
 25506  00167A  0E3F               	movlw	low __Hub
 25507  00167C  24F3               	addwf	prodl,w,c
 25508  00167E  6ED9               	movwf	fsr2l,c
 25509  001680  0E01               	movlw	high __Hub
 25510  001682  20F4               	addwfc	prodh,w,c
 25511  001684  6EDA               	movwf	fsr2h,c
 25512  001686  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25513  001688  0D01               	mullw	1
 25514  00168A  0E6F               	movlw	low (__Hub+48)
 25515  00168C  24F3               	addwf	prodl,w,c
 25516  00168E  6EE1               	movwf	fsr1l,c
 25517  001690  0E01               	movlw	high (__Hub+48)
 25518  001692  20F4               	addwfc	prodh,w,c
 25519  001694  6EE2               	movwf	fsr1h,c
 25520  001696  50E7               	movf	indf1,w,c
 25521  001698  A4D8               	btfss	status,2,c
 25522  00169A  D003               	goto	i2u851_40
 25523  00169C  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25524  00169E  2A03               	incf	(??_Hub_DecodeSwitch+1)& (0+255),f,c
 25525  0016A0  D001               	goto	i2u852_48
 25526  0016A2                     i2u851_40:
 25527  0016A2  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25528  0016A4                     i2u852_48:
 25529  0016A4  50DE               	movf	postinc2,w,c
 25530  0016A6  1803               	xorwf	??_Hub_DecodeSwitch+1,w,c
 25531  0016A8  A4D8               	btfss	status,2,c
 25532  0016AA  D002               	goto	i2l855
 25533  0016AC                     i2u853_40:
 25534                           
 25535                           ;hub.c: 70: {
 25536                           ;hub.c: 71: return 1;
 25537  0016AC  0E01               	movlw	1
 25538  0016AE  0012               	return	
 25539  0016B0                     i2l855:
 25540                           
 25541                           ;hub.c: 72: }
 25542                           ;hub.c: 76: if (_Hub.Switch[AIndex2] == _Hub.SwitchOld[AIndex2] && _Hub.Switch[AIndex2] 
      +                          == _Hub.SwitchOld[AIndex1] && _Hub.SwitchOld[AIndex1] == !_Hub.Switch[AIndex1] ||
 25543                           ;hub.c: 77: _Hub.Switch[AIndex1] == _Hub.SwitchOld[AIndex1] && _Hub.Switch[AIndex1] == _
      +                          Hub.Switch[AIndex2] && _Hub.Switch[AIndex1] == !_Hub.SwitchOld[AIndex2])
 25544  0016B0  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25545  0016B2  0D01               	mullw	1
 25546  0016B4  0E6F               	movlw	low (__Hub+48)
 25547  0016B6  24F3               	addwf	prodl,w,c
 25548  0016B8  6ED9               	movwf	fsr2l,c
 25549  0016BA  0E01               	movlw	high (__Hub+48)
 25550  0016BC  20F4               	addwfc	prodh,w,c
 25551  0016BE  6EDA               	movwf	fsr2h,c
 25552  0016C0  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25553  0016C2  0D01               	mullw	1
 25554  0016C4  0E3F               	movlw	low __Hub
 25555  0016C6  24F3               	addwf	prodl,w,c
 25556  0016C8  6EE1               	movwf	fsr1l,c
 25557  0016CA  0E01               	movlw	high __Hub
 25558  0016CC  20F4               	addwfc	prodh,w,c
 25559  0016CE  6EE2               	movwf	fsr1h,c
 25560  0016D0  50DE               	movf	postinc2,w,c
 25561  0016D2  18E6               	xorwf	postinc1,w,c
 25562  0016D4  A4D8               	btfss	status,2,c
 25563  0016D6  D02F               	goto	i2u858_40
 25564  0016D8  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25565  0016DA  0D01               	mullw	1
 25566  0016DC  0E6F               	movlw	low (__Hub+48)
 25567  0016DE  24F3               	addwf	prodl,w,c
 25568  0016E0  6ED9               	movwf	fsr2l,c
 25569  0016E2  0E01               	movlw	high (__Hub+48)
 25570  0016E4  20F4               	addwfc	prodh,w,c
 25571  0016E6  6EDA               	movwf	fsr2h,c
 25572  0016E8  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25573  0016EA  0D01               	mullw	1
 25574  0016EC  0E3F               	movlw	low __Hub
 25575  0016EE  24F3               	addwf	prodl,w,c
 25576  0016F0  6EE1               	movwf	fsr1l,c
 25577  0016F2  0E01               	movlw	high __Hub
 25578  0016F4  20F4               	addwfc	prodh,w,c
 25579  0016F6  6EE2               	movwf	fsr1h,c
 25580  0016F8  50DE               	movf	postinc2,w,c
 25581  0016FA  18E6               	xorwf	postinc1,w,c
 25582  0016FC  A4D8               	btfss	status,2,c
 25583  0016FE  D01B               	goto	i2u858_40
 25584  001700  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25585  001702  0D01               	mullw	1
 25586  001704  0E6F               	movlw	low (__Hub+48)
 25587  001706  24F3               	addwf	prodl,w,c
 25588  001708  6ED9               	movwf	fsr2l,c
 25589  00170A  0E01               	movlw	high (__Hub+48)
 25590  00170C  20F4               	addwfc	prodh,w,c
 25591  00170E  6EDA               	movwf	fsr2h,c
 25592  001710  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25593  001712  0D01               	mullw	1
 25594  001714  0E3F               	movlw	low __Hub
 25595  001716  24F3               	addwf	prodl,w,c
 25596  001718  6EE1               	movwf	fsr1l,c
 25597  00171A  0E01               	movlw	high __Hub
 25598  00171C  20F4               	addwfc	prodh,w,c
 25599  00171E  6EE2               	movwf	fsr1h,c
 25600  001720  50E7               	movf	indf1,w,c
 25601  001722  A4D8               	btfss	status,2,c
 25602  001724  D003               	goto	i2u856_40
 25603  001726  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25604  001728  2A03               	incf	(??_Hub_DecodeSwitch+1)& (0+255),f,c
 25605  00172A  D001               	goto	i2u857_48
 25606  00172C                     i2u856_40:
 25607  00172C  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25608  00172E                     i2u857_48:
 25609  00172E  50DE               	movf	postinc2,w,c
 25610  001730  1803               	xorwf	??_Hub_DecodeSwitch+1,w,c
 25611  001732  B4D8               	btfsc	status,2,c
 25612  001734  D043               	goto	i2u863_40
 25613  001736                     i2u858_40:
 25614  001736  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25615  001738  0D01               	mullw	1
 25616  00173A  0E6F               	movlw	low (__Hub+48)
 25617  00173C  24F3               	addwf	prodl,w,c
 25618  00173E  6ED9               	movwf	fsr2l,c
 25619  001740  0E01               	movlw	high (__Hub+48)
 25620  001742  20F4               	addwfc	prodh,w,c
 25621  001744  6EDA               	movwf	fsr2h,c
 25622  001746  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25623  001748  0D01               	mullw	1
 25624  00174A  0E3F               	movlw	low __Hub
 25625  00174C  24F3               	addwf	prodl,w,c
 25626  00174E  6EE1               	movwf	fsr1l,c
 25627  001750  0E01               	movlw	high __Hub
 25628  001752  20F4               	addwfc	prodh,w,c
 25629  001754  6EE2               	movwf	fsr1h,c
 25630  001756  50DE               	movf	postinc2,w,c
 25631  001758  18E6               	xorwf	postinc1,w,c
 25632  00175A  A4D8               	btfss	status,2,c
 25633  00175C  D031               	goto	i2l861
 25634  00175E  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25635  001760  0D01               	mullw	1
 25636  001762  0E3F               	movlw	low __Hub
 25637  001764  24F3               	addwf	prodl,w,c
 25638  001766  6ED9               	movwf	fsr2l,c
 25639  001768  0E01               	movlw	high __Hub
 25640  00176A  20F4               	addwfc	prodh,w,c
 25641  00176C  6EDA               	movwf	fsr2h,c
 25642  00176E  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25643  001770  0D01               	mullw	1
 25644  001772  0E3F               	movlw	low __Hub
 25645  001774  24F3               	addwf	prodl,w,c
 25646  001776  6EE1               	movwf	fsr1l,c
 25647  001778  0E01               	movlw	high __Hub
 25648  00177A  20F4               	addwfc	prodh,w,c
 25649  00177C  6EE2               	movwf	fsr1h,c
 25650  00177E  50DE               	movf	postinc2,w,c
 25651  001780  18E6               	xorwf	postinc1,w,c
 25652  001782  A4D8               	btfss	status,2,c
 25653  001784  D01D               	goto	i2l861
 25654  001786  5004               	movf	Hub_DecodeSwitch@AIndex1,w,c
 25655  001788  0D01               	mullw	1
 25656  00178A  0E3F               	movlw	low __Hub
 25657  00178C  24F3               	addwf	prodl,w,c
 25658  00178E  6ED9               	movwf	fsr2l,c
 25659  001790  0E01               	movlw	high __Hub
 25660  001792  20F4               	addwfc	prodh,w,c
 25661  001794  6EDA               	movwf	fsr2h,c
 25662  001796  5001               	movf	Hub_DecodeSwitch@AIndex2,w,c
 25663  001798  0D01               	mullw	1
 25664  00179A  0E6F               	movlw	low (__Hub+48)
 25665  00179C  24F3               	addwf	prodl,w,c
 25666  00179E  6EE1               	movwf	fsr1l,c
 25667  0017A0  0E01               	movlw	high (__Hub+48)
 25668  0017A2  20F4               	addwfc	prodh,w,c
 25669  0017A4  6EE2               	movwf	fsr1h,c
 25670  0017A6  50E7               	movf	indf1,w,c
 25671  0017A8  A4D8               	btfss	status,2,c
 25672  0017AA  D003               	goto	i2u861_40
 25673  0017AC  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25674  0017AE  2A03               	incf	(??_Hub_DecodeSwitch+1)& (0+255),f,c
 25675  0017B0  D001               	goto	i2u862_48
 25676  0017B2                     i2u861_40:
 25677  0017B2  6A03               	clrf	(??_Hub_DecodeSwitch+1)& (0+255),c
 25678  0017B4                     i2u862_48:
 25679  0017B4  50DE               	movf	postinc2,w,c
 25680  0017B6  1803               	xorwf	??_Hub_DecodeSwitch+1,w,c
 25681  0017B8  A4D8               	btfss	status,2,c
 25682  0017BA  D002               	goto	i2l861
 25683  0017BC                     i2u863_40:
 25684                           
 25685                           ;hub.c: 78: {
 25686                           ;hub.c: 79: return -1;
 25687  0017BC  0EFF               	movlw	255
 25688  0017BE  0012               	return	
 25689  0017C0                     i2l861:
 25690                           
 25691                           ;hub.c: 80: }
 25692                           ;hub.c: 82: return 0;
 25693  0017C0  0E00               	movlw	0
 25694  0017C2  0012               	return	
 25695  0017C4                     __end_of_Hub_DecodeSwitch:
 25696                           	opt stack 0
 25697                           tosu	equ	0xFFF
 25698                           tosh	equ	0xFFE
 25699                           tosl	equ	0xFFD
 25700                           pclatu	equ	0xFFB
 25701                           pclath	equ	0xFFA
 25702                           tblptru	equ	0xFF8
 25703                           tblptrh	equ	0xFF7
 25704                           tblptrl	equ	0xFF6
 25705                           tablat	equ	0xFF5
 25706                           prodh	equ	0xFF4
 25707                           prodl	equ	0xFF3
 25708                           intcon	equ	0xFF2
 25709                           indf0	equ	0xFEF
 25710                           postinc0	equ	0xFEE
 25711                           plusw0	equ	0xFEB
 25712                           fsr0h	equ	0xFEA
 25713                           fsr0l	equ	0xFE9
 25714                           wreg	equ	0xFE8
 25715                           indf1	equ	0xFE7
 25716                           postinc1	equ	0xFE6
 25717                           postdec1	equ	0xFE5
 25718                           plusw1	equ	0xFE3
 25719                           fsr1h	equ	0xFE2
 25720                           fsr1l	equ	0xFE1
 25721                           indf2	equ	0xFDF
 25722                           postinc2	equ	0xFDE
 25723                           postdec2	equ	0xFDD
 25724                           plusw2	equ	0xFDB
 25725                           fsr2h	equ	0xFDA
 25726                           fsr2l	equ	0xFD9
 25727                           status	equ	0xFD8
 25728                           
 25729 ;; *************** function _Display_SwapBuffer *****************
 25730 ;; Defined at:
 25731 ;;		line 106 in file "display.c"
 25732 ;; Parameters:    Size  Location     Type
 25733 ;;		None
 25734 ;; Auto vars:     Size  Location     Type
 25735 ;;  LSwap           2    0[COMRAM] PTR unsigned char 
 25736 ;;		 -> _Display.Buffer2(90), _Display.Buffer1(90), _Display(214), 
 25737 ;; Return value:  Size  Location     Type
 25738 ;;                  1    wreg      void 
 25739 ;; Registers used:
 25740 ;;		wreg, status,2, status,0
 25741 ;; Tracked objects:
 25742 ;;		On entry : 0/0
 25743 ;;		On exit  : 0/0
 25744 ;;		Unchanged: 0/0
 25745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25746 ;;      Params:         0       0       0       0       0       0       0       0       0
 25747 ;;      Locals:         2       0       0       0       0       0       0       0       0
 25748 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25749 ;;      Totals:         2       0       0       0       0       0       0       0       0
 25750 ;;Total ram usage:        2 bytes
 25751 ;; Hardware stack levels used:    1
 25752 ;; This function calls:
 25753 ;;		Nothing
 25754 ;; This function is called by:
 25755 ;;		_Interrupt
 25756 ;; This function uses a non-reentrant model
 25757 ;;
 25758                           
 25759                           	psect	text139
 25760  005230                     __ptext139:
 25761                           	opt stack 0
 25762  005230                     _Display_SwapBuffer:
 25763                           	opt stack 20
 25764                           
 25765                           ;display.c: 108: unsigned char *LSwap = _Display.PrimaryBuffer;
 25766                           
 25767                           ;incstack = 0
 25768  005230  C2C0  F001         	movff	__Display+182,Display_SwapBuffer@LSwap
 25769  005234  C2C1  F002         	movff	__Display+183,Display_SwapBuffer@LSwap+1
 25770                           
 25771                           ;display.c: 109: _Display.PrimaryBuffer = _Display.SecondaryBuffer;
 25772  005238  C2C2  F2C0         	movff	__Display+184,__Display+182
 25773  00523C  C2C3  F2C1         	movff	__Display+185,__Display+183
 25774                           
 25775                           ;display.c: 110: _Display.SecondaryBuffer = LSwap;
 25776  005240  C001  F2C2         	movff	Display_SwapBuffer@LSwap,__Display+184
 25777  005244  C002  F2C3         	movff	Display_SwapBuffer@LSwap+1,__Display+185
 25778                           
 25779                           ;display.c: 112: _Display.ReadyToWrite = 1;
 25780  005248  0E01               	movlw	1
 25781  00524A  0102               	movlb	2	; () banked
 25782  00524C  6F0B               	movwf	(__Display+1)& (0+255),b
 25783                           
 25784                           ; BSR set to: 2
 25785                           ;display.c: 113: _Display.ReadyToRead = 0;
 25786  00524E  0E00               	movlw	0
 25787  005250  6F0A               	movwf	__Display& (0+255),b
 25788                           
 25789                           ; BSR set to: 2
 25790  005252  0012               	return		;funcret
 25791  005254                     __end_of_Display_SwapBuffer:
 25792                           	opt stack 0
 25793                           tosu	equ	0xFFF
 25794                           tosh	equ	0xFFE
 25795                           tosl	equ	0xFFD
 25796                           pclatu	equ	0xFFB
 25797                           pclath	equ	0xFFA
 25798                           tblptru	equ	0xFF8
 25799                           tblptrh	equ	0xFF7
 25800                           tblptrl	equ	0xFF6
 25801                           tablat	equ	0xFF5
 25802                           prodh	equ	0xFF4
 25803                           prodl	equ	0xFF3
 25804                           intcon	equ	0xFF2
 25805                           indf0	equ	0xFEF
 25806                           postinc0	equ	0xFEE
 25807                           plusw0	equ	0xFEB
 25808                           fsr0h	equ	0xFEA
 25809                           fsr0l	equ	0xFE9
 25810                           wreg	equ	0xFE8
 25811                           indf1	equ	0xFE7
 25812                           postinc1	equ	0xFE6
 25813                           postdec1	equ	0xFE5
 25814                           plusw1	equ	0xFE3
 25815                           fsr1h	equ	0xFE2
 25816                           fsr1l	equ	0xFE1
 25817                           indf2	equ	0xFDF
 25818                           postinc2	equ	0xFDE
 25819                           postdec2	equ	0xFDD
 25820                           plusw2	equ	0xFDB
 25821                           fsr2h	equ	0xFDA
 25822                           fsr2l	equ	0xFD9
 25823                           status	equ	0xFD8
 25824                           tosu	equ	0xFFF
 25825                           tosh	equ	0xFFE
 25826                           tosl	equ	0xFFD
 25827                           pclatu	equ	0xFFB
 25828                           pclath	equ	0xFFA
 25829                           tblptru	equ	0xFF8
 25830                           tblptrh	equ	0xFF7
 25831                           tblptrl	equ	0xFF6
 25832                           tablat	equ	0xFF5
 25833                           prodh	equ	0xFF4
 25834                           prodl	equ	0xFF3
 25835                           intcon	equ	0xFF2
 25836                           indf0	equ	0xFEF
 25837                           postinc0	equ	0xFEE
 25838                           plusw0	equ	0xFEB
 25839                           fsr0h	equ	0xFEA
 25840                           fsr0l	equ	0xFE9
 25841                           wreg	equ	0xFE8
 25842                           indf1	equ	0xFE7
 25843                           postinc1	equ	0xFE6
 25844                           postdec1	equ	0xFE5
 25845                           plusw1	equ	0xFE3
 25846                           fsr1h	equ	0xFE2
 25847                           fsr1l	equ	0xFE1
 25848                           indf2	equ	0xFDF
 25849                           postinc2	equ	0xFDE
 25850                           postdec2	equ	0xFDD
 25851                           plusw2	equ	0xFDB
 25852                           fsr2h	equ	0xFDA
 25853                           fsr2l	equ	0xFD9
 25854                           status	equ	0xFD8
 25855                           
 25856                           	psect	text140
 25857  000000                     __ptext140:
 25858                           	opt stack 0
 25859                           tosu	equ	0xFFF
 25860                           tosh	equ	0xFFE
 25861                           tosl	equ	0xFFD
 25862                           pclatu	equ	0xFFB
 25863                           pclath	equ	0xFFA
 25864                           tblptru	equ	0xFF8
 25865                           tblptrh	equ	0xFF7
 25866                           tblptrl	equ	0xFF6
 25867                           tablat	equ	0xFF5
 25868                           prodh	equ	0xFF4
 25869                           prodl	equ	0xFF3
 25870                           intcon	equ	0xFF2
 25871                           indf0	equ	0xFEF
 25872                           postinc0	equ	0xFEE
 25873                           plusw0	equ	0xFEB
 25874                           fsr0h	equ	0xFEA
 25875                           fsr0l	equ	0xFE9
 25876                           wreg	equ	0xFE8
 25877                           indf1	equ	0xFE7
 25878                           postinc1	equ	0xFE6
 25879                           postdec1	equ	0xFE5
 25880                           plusw1	equ	0xFE3
 25881                           fsr1h	equ	0xFE2
 25882                           fsr1l	equ	0xFE1
 25883                           indf2	equ	0xFDF
 25884                           postinc2	equ	0xFDE
 25885                           postdec2	equ	0xFDD
 25886                           plusw2	equ	0xFDB
 25887                           fsr2h	equ	0xFDA
 25888                           fsr2l	equ	0xFD9
 25889                           status	equ	0xFD8
 25890                           
 25891                           	psect	rparam
 25892  0000                     tosu	equ	0xFFF
 25893                           tosh	equ	0xFFE
 25894                           tosl	equ	0xFFD
 25895                           pclatu	equ	0xFFB
 25896                           pclath	equ	0xFFA
 25897                           tblptru	equ	0xFF8
 25898                           tblptrh	equ	0xFF7
 25899                           tblptrl	equ	0xFF6
 25900                           tablat	equ	0xFF5
 25901                           prodh	equ	0xFF4
 25902                           prodl	equ	0xFF3
 25903                           intcon	equ	0xFF2
 25904                           indf0	equ	0xFEF
 25905                           postinc0	equ	0xFEE
 25906                           plusw0	equ	0xFEB
 25907                           fsr0h	equ	0xFEA
 25908                           fsr0l	equ	0xFE9
 25909                           wreg	equ	0xFE8
 25910                           indf1	equ	0xFE7
 25911                           postinc1	equ	0xFE6
 25912                           postdec1	equ	0xFE5
 25913                           plusw1	equ	0xFE3
 25914                           fsr1h	equ	0xFE2
 25915                           fsr1l	equ	0xFE1
 25916                           indf2	equ	0xFDF
 25917                           postinc2	equ	0xFDE
 25918                           postdec2	equ	0xFDD
 25919                           plusw2	equ	0xFDB
 25920                           fsr2h	equ	0xFDA
 25921                           fsr2l	equ	0xFD9
 25922                           status	equ	0xFD8
 25923                           
 25924                           	psect	temp
 25925  00005F                     btemp:
 25926                           	opt stack 0
 25927  00005F                     	ds	1
 25928  0000                     int$flags	set	btemp
 25929  0000                     wtemp6	set	btemp+1
 25930                           tosu	equ	0xFFF
 25931                           tosh	equ	0xFFE
 25932                           tosl	equ	0xFFD
 25933                           pclatu	equ	0xFFB
 25934                           pclath	equ	0xFFA
 25935                           tblptru	equ	0xFF8
 25936                           tblptrh	equ	0xFF7
 25937                           tblptrl	equ	0xFF6
 25938                           tablat	equ	0xFF5
 25939                           prodh	equ	0xFF4
 25940                           prodl	equ	0xFF3
 25941                           intcon	equ	0xFF2
 25942                           indf0	equ	0xFEF
 25943                           postinc0	equ	0xFEE
 25944                           plusw0	equ	0xFEB
 25945                           fsr0h	equ	0xFEA
 25946                           fsr0l	equ	0xFE9
 25947                           wreg	equ	0xFE8
 25948                           indf1	equ	0xFE7
 25949                           postinc1	equ	0xFE6
 25950                           postdec1	equ	0xFE5
 25951                           plusw1	equ	0xFE3
 25952                           fsr1h	equ	0xFE2
 25953                           fsr1l	equ	0xFE1
 25954                           indf2	equ	0xFDF
 25955                           postinc2	equ	0xFDE
 25956                           postdec2	equ	0xFDD
 25957                           plusw2	equ	0xFDB
 25958                           fsr2h	equ	0xFDA
 25959                           fsr2l	equ	0xFD9
 25960                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    232
    Data        10
    BSS         1291
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      94
    BANK0           160    132     160
    BANK1           256      0     248
    BANK2           256      0     246
    BANK3           256      0     128
    BANK4           192      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    _Display.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _Display.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _Display.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _Hub.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _Hub.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _Hub.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _DigiPot.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _DigiPot.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    _DigiPot.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 0
		 -> Hub_DataRead(), 

    InitPin@APin	PTR struct . size(2) Largest target is 216
		 -> _DigiPot(BANK1[14]), _Hub(BANK1[154]), _Display(BANK2[214]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMl[48]), 

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 154
		 -> _Hub.Switch(BANK1[48]), Load@LBuffer(BANK0[12]), _Hub(BANK1[154]), SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 154
		 -> _Hub.Switch(BANK1[48]), Load@LBuffer(BANK0[12]), _Hub(BANK1[154]), SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 2047
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub.Switch(BANK1[48]), Hub_ReadSwitch@LBitArray(BANK0[24]), _Config(BANK2[12]), 
		 -> _Hub.PrimaryBuffer(BANK1[12]), _Hub(BANK1[154]), CtrlTrfData(BIGRAMh[8]), RAM(DATA[2047]), 
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub.Switch(BANK1[48]), Hub_ReadSwitch@LBitArray(BANK0[24]), _Config(BANK2[12]), 
		 -> _Hub.PrimaryBuffer(BANK1[12]), _Hub(BANK1[154]), CtrlTrfData(BIGRAMh[8]), RAM(DATA[2047]), 
		 -> SetupPkt(BIGRAMh[8]), 

    memcmp@s2	PTR const void  size(2) Largest target is 12
		 -> _Hub.BackupBuffer.Values(BANK1[8]), _Hub.BackupBuffer(BANK1[12]), 

    memcmp@s1	PTR const void  size(2) Largest target is 12
		 -> _Hub.SecondaryBuffer.Values(BANK1[8]), _Hub.SecondaryBuffer(BANK1[12]), 

    UnZip@AZip.Buffer	PTR struct . size(2) Largest target is 154
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub(BANK1[154]), 

    UnZip@AZip	PTR struct . size(2) Largest target is 11
		 -> Persistant_LoadBuffer@LZip(BANK0[10]), 

    Zip@AZip.Buffer	PTR struct . size(2) Largest target is 154
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub(BANK1[154]), 

    Zip@AZip	PTR struct . size(2) Largest target is 11
		 -> Persistant_SaveBuffer@LZip(BANK0[10]), 

    Zip@LBytes	PTR unsigned char  size(2) Largest target is 11
		 -> LZip.Bytes(COMRAM[8]), Persistant_SaveBuffer@LZip(BANK0[10]), 

    Midi_Read@AData	PTR struct . size(2) Largest target is 5
		 -> main@LMidiData(BANK0[5]), 

    Midi_Read@AMidiBuffer	PTR struct . size(2) Largest target is 324
		 -> _MidiInput(BIGRAMl[324]), 

    Midi_Write@AMidiBuffer	PTR struct . size(2) Largest target is 324
		 -> _MidiInput(BIGRAMl[324]), 

    Midi_ResetBuffer@AMidiBuffer	PTR struct . size(2) Largest target is 324
		 -> _MidiOutput(BIGRAMl[324]), _MidiInput(BIGRAMl[324]), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    ReadBitArray@AData	PTR unsigned char  size(2) Largest target is 24
		 -> Hub_ReadSwitch@LBitArray(BANK0[24]), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    sp__ReadData	PTR unsigned char  size(2) Largest target is 0

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    WriteData@AData	PTR unsigned char  size(2) Largest target is 216
		 -> _Display.Buffer2(BANK2[90]), _Display.Buffer1(BANK2[90]), _Hub.SecondaryBuffer(BANK1[12]), _Hub(BANK1[154]), 
		 -> _Display(BANK2[214]), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    AIO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    AIO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    InitConnector@AConnector.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    InitConnector@AConnector.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    InitConnector@AConnector.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    InitConnector@AConnector.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    InitConnector@AConnector.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    InitConnector@AConnector.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    InitConnector@AConnector	PTR struct . size(2) Largest target is 216
		 -> _DigiPot(BANK1[14]), _Hub(BANK1[154]), _Display(BANK2[214]), 

    LZip.Buffer	PTR struct . size(2) Largest target is 154
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub(BANK1[154]), 

    Persistant_LoadBuffer@ABuffer	PTR struct . size(2) Largest target is 154
		 -> _Hub(BANK1[154]), 

    S3007$Buffer	PTR struct . size(2) Largest target is 154
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub(BANK1[154]), 

    LZip.Buffer	PTR struct . size(2) Largest target is 154
		 -> Persistant_SaveBuffer@ABuffer(BANK0[12]), _Hub(BANK1[154]), 

    Hub_SetValue@ASourceValue	PTR unsigned char  size(2) Largest target is 154
		 -> _Hub.PrimaryBuffer.Values(BANK1[8]), _Hub.PrimaryBuffer(BANK1[12]), _Hub(BANK1[154]), 

    Display_SwapBuffer@LSwap	PTR unsigned char  size(2) Largest target is 216
		 -> _Display.Buffer2(BANK2[90]), _Display.Buffer1(BANK2[90]), _Display(BANK2[214]), 

    Display_ProcessData@AValues	PTR unsigned char  size(2) Largest target is 154
		 -> _Hub.SecondaryBuffer(BANK1[12]), _Hub.PrimaryBuffer(BANK1[12]), _Hub(BANK1[154]), 

    _DigiPot.IO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.IO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _DigiPot.IO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.IO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _DigiPot.IO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _DigiPot.IO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _Display.IO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.IO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _Display.IO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.IO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _Display.IO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Display.IO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    S2056$SecondaryBuffer	PTR unsigned char  size(2) Largest target is 216
		 -> _Display(BANK2[214]), 

    _Display.SecondaryBuffer	PTR unsigned char  size(2) Largest target is 216
		 -> _Display.Buffer2(BANK2[90]), _Display.Buffer1(BANK2[90]), _Display(BANK2[214]), 

    S2056$PrimaryBuffer	PTR unsigned char  size(2) Largest target is 216
		 -> _Display(BANK2[214]), 

    _Display.PrimaryBuffer	PTR unsigned char  size(2) Largest target is 216
		 -> _Display.Buffer2(BANK2[90]), _Display.Buffer1(BANK2[90]), _Display(BANK2[214]), 

    _Hub.IO.LatchPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.IO.LatchPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _Hub.IO.DataPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.IO.DataPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    S2027$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    _Hub.IO.ClockPin.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DigiPot_LatchWrite(), DigiPot_DataWrite(), DigiPot_ClockWrite(), Hub_LatchWrite(), 
		 -> Hub_ClockWrite(), Display_LatchWrite(), Display_DataWrite(), Display_ClockWrite(), 

    S2027$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    _Hub.IO.ClockPin.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> Hub_DataRead(), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 1
		 -> _USBBufferIn(BANK0[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1641_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1641_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1641_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1641_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 154
		 -> _Hub.Switch(BANK1[48]), Load@LBuffer(BANK0[12]), _Hub(BANK1[154]), SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[26]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK3[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S102$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S92$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S92$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S68$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S68$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S68$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S68$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt in COMRAM

    _Interrupt->_Hub_UpdateValues
    i2_WriteData->i2_WriteChar
    i2_WriteChar->i2_ClockDown
    i2_WriteChar->i2_ClockUp
    i2_Hub_CopyBuffer->i2_memcpy
    _Hub_UpdateValues->i2_Hub_ReadSwitch
    i2_LatchOn->i2_DigiPot_ClockWrite
    i2_LatchOn->i2_DigiPot_DataWrite
    i2_LatchOn->i2_DigiPot_LatchWrite
    i2_LatchOn->i2_Display_ClockWrite
    i2_LatchOn->i2_Display_DataWrite
    i2_LatchOn->i2_Display_LatchWrite
    i2_LatchOn->i2_Hub_ClockWrite
    i2_LatchOn->i2_Hub_LatchWrite
    i2_LatchOff->i2_DigiPot_ClockWrite
    i2_LatchOff->i2_DigiPot_DataWrite
    i2_LatchOff->i2_DigiPot_LatchWrite
    i2_LatchOff->i2_Display_ClockWrite
    i2_LatchOff->i2_Display_DataWrite
    i2_LatchOff->i2_Display_LatchWrite
    i2_LatchOff->i2_Hub_ClockWrite
    i2_LatchOff->i2_Hub_LatchWrite
    i2_Hub_ReadSwitch->i2_ReadBitArray
    i2_ReadBitArray->i2_ReadBit
    i2_ReadBit->i2_ClockDown
    i2_ReadBit->i2_ClockUp
    i2_ClockUp->i2_DigiPot_ClockWrite
    i2_ClockUp->i2_DigiPot_DataWrite
    i2_ClockUp->i2_DigiPot_LatchWrite
    i2_ClockUp->i2_Display_ClockWrite
    i2_ClockUp->i2_Display_DataWrite
    i2_ClockUp->i2_Display_LatchWrite
    i2_ClockUp->i2_Hub_ClockWrite
    i2_ClockUp->i2_Hub_LatchWrite
    i2_ClockDown->i2_DigiPot_ClockWrite
    i2_ClockDown->i2_DigiPot_DataWrite
    i2_ClockDown->i2_DigiPot_LatchWrite
    i2_ClockDown->i2_Display_ClockWrite
    i2_ClockDown->i2_Display_DataWrite
    i2_ClockDown->i2_Display_LatchWrite
    i2_ClockDown->i2_Hub_ClockWrite
    i2_ClockDown->i2_Hub_LatchWrite
    _Hub_SetValue->_Hub_DecodeSwitch

Critical Paths under _main in BANK0

    _main->_InitApp
    _getsUSBUSART->_USBTransferOnePacket
    _WriteData->_WriteChar
    _WriteChar->_ClockDown
    _WriteChar->_ClockUp
    _LatchOn->_DigiPot_ClockWrite
    _LatchOn->_DigiPot_DataWrite
    _LatchOn->_DigiPot_LatchWrite
    _LatchOn->_Display_ClockWrite
    _LatchOn->_Display_DataWrite
    _LatchOn->_Display_LatchWrite
    _LatchOn->_Hub_ClockWrite
    _LatchOn->_Hub_LatchWrite
    _LatchOff->_DigiPot_ClockWrite
    _LatchOff->_DigiPot_DataWrite
    _LatchOff->_DigiPot_LatchWrite
    _LatchOff->_Display_ClockWrite
    _LatchOff->_Display_DataWrite
    _LatchOff->_Display_LatchWrite
    _LatchOff->_Hub_ClockWrite
    _LatchOff->_Hub_LatchWrite
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _Sequencer_StartTimer->___fttol
    _Persistant_SaveBuffer->_Zip
    _Zip->___fttol
    _Load->_Persistant_LoadBuffer
    _Persistant_WriteInternalMemory->_Persistant_ReadInternalMemory
    _InitApp->_Display_Init
    _Persistant_WriteExternalMemory->_Persistant_ReadExternalMemory
    _Persistant_ReadExternalMemory->_Persistant_Address
    _Persistant_Address->_Persistant_ControlByte
    _Persistant_ControlByte->_I2C_Ack
    _Persistant_ControlByte->_I2C_Write
    _I2C_Write->_I2C_Wait
    _I2C_Start->_I2C_Wait
    _I2C_Stop->_I2C_Wait
    _I2C_Read->_I2C_Ack
    _I2C_Ack->_I2C_Wait
    _Persistant_LoadBuffer->_UnZip
    _UnZip->___fttol
    _Persistant_ReadInternalMemory->___awdiv
    _Persistant_Init->_I2C_Init
    _I2C_Init->___fttol
    _Midi_Init->___lldiv
    _InitDigiPot->_pow
    ___lbtoft->___ftpack
    _Hub_Init->_Hub_ReadSwitch
    _Hub_ReadSwitch->_ReadBitArray
    _ReadBitArray->_ReadBit
    _ReadBit->_ClockDown
    _ReadBit->_ClockUp
    _ClockUp->_DigiPot_ClockWrite
    _ClockUp->_DigiPot_DataWrite
    _ClockUp->_DigiPot_LatchWrite
    _ClockUp->_Display_ClockWrite
    _ClockUp->_Display_DataWrite
    _ClockUp->_Display_LatchWrite
    _ClockUp->_Hub_ClockWrite
    _ClockUp->_Hub_LatchWrite
    _ClockDown->_DigiPot_ClockWrite
    _ClockDown->_DigiPot_DataWrite
    _ClockDown->_DigiPot_LatchWrite
    _ClockDown->_Display_ClockWrite
    _ClockDown->_Display_DataWrite
    _ClockDown->_Display_LatchWrite
    _ClockDown->_Hub_ClockWrite
    _ClockDown->_Hub_LatchWrite
    _Hub_CopyBuffer->_memcpy
    _Display_ProcessData->___awmod
    ___awmod->___lbdiv
    _Display_Init->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fttol
    ___fttol->___ftdiv
    ___altoft->___ftpack
    _eval_poly->___ftadd
    ___ftmul->___altoft
    ___ftsub->___ftadd
    ___ftadd->___ftdiv
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _InitConnector->_InitPin

Critical Paths under _Interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  371451
                                            119 BANK0     13    13      0
                _ConfigureOscillator
                _Display_ProcessData
                            _InitApp
                               _Load
                          _Midi_Read
                         _Midi_Write
                           _PauseHub
              _Persistant_SaveBuffer
                             _RunHub
               _Sequencer_StartTimer
                _Sequencer_StopTimer
                      _USBDeviceInit
                     _USBDeviceTasks
                          _WriteData
                            ___awdiv
                       _getsUSBUSART
                             _memcmp
 ---------------------------------------------------------------------------------
 (1) _memcmp                                               9     3      6     379
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _getsUSBUSART                                         4     1      3    1956
                                             11 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _WriteData                                           17     2     15    2695
                                             30 BANK0     17     2     15
                           _LatchOff
                            _LatchOn
                          _WriteChar
 ---------------------------------------------------------------------------------
 (2) _WriteChar                                           17     5     12    1179
                                             13 BANK0     17     5     12
                          _ClockDown
                            _ClockUp
                 _DigiPot_ClockWrite *
                  _DigiPot_DataWrite *
                 _DigiPot_LatchWrite *
                 _Display_ClockWrite *
                  _Display_DataWrite *
                 _Display_LatchWrite *
                     _Hub_ClockWrite *
                     _Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (2) _LatchOn                                             12     0     12     441
                                              1 BANK0     12     0     12
                 _DigiPot_ClockWrite *
                  _DigiPot_DataWrite *
                 _DigiPot_LatchWrite *
                 _Display_ClockWrite *
                  _Display_DataWrite *
                 _Display_LatchWrite *
                     _Hub_ClockWrite *
                     _Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (2) _LatchOff                                            12     0     12     441
                                              1 BANK0     12     0     12
                 _DigiPot_ClockWrite *
                  _DigiPot_DataWrite *
                 _DigiPot_LatchWrite *
                 _Display_ClockWrite *
                  _Display_DataWrite *
                 _Display_LatchWrite *
                     _Hub_ClockWrite *
                     _Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0   41390
                                             27 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    5136
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    5136
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     1     1      0   24570
                                             26 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   22407
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   17179
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0    6390
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0    5607
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5136
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            0     0      0    2444
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _USBTransferOnePacket                                11     7      4    1711
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Sequencer_StopTimer                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Sequencer_StartTimer                                 4     0      4    6410
                                             63 BANK0      4     0      4
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _RunHub                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Persistant_SaveBuffer                               24    12     12   13261
                                             81 BANK0     24    12     12
     _Persistant_WriteInternalMemory
                                _Zip
                            ___awdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Zip                                                 18    16      2    9338
                                             63 BANK0     18    16      2
                            ___ftdiv
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (1) _PauseHub                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Midi_Write                                          10     8      2     790
                                              0 BANK0     10     8      2
 ---------------------------------------------------------------------------------
 (1) _Midi_Read                                            5     1      4     354
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _Load                                                17    17      0   18648
                                             90 BANK0     17    17      0
                     _Hub_CopyBuffer
              _Persistant_LoadBuffer
     _Persistant_WriteInternalMemory
                            ___awdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Persistant_WriteInternalMemory                       4     1      3     667
                                             10 BANK0      4     1      3
      _Persistant_ReadInternalMemory
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              2     2      0  272849
                                            117 BANK0      2     2      0
                       _Display_Init
                _Display_ProcessData
                     _Hub_CopyBuffer
                           _Hub_Init
                        _InitDigiPot
                          _Midi_Init
                    _Persistant_Init
              _Persistant_LoadBuffer
      _Persistant_ReadExternalMemory
     _Persistant_WriteExternalMemory
                    _Sequencer_Start
 ---------------------------------------------------------------------------------
 (2) _Sequencer_Start                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Persistant_WriteExternalMemory                       4     1      3    5146
                                             18 BANK0      4     1      3
                            _I2C_Ack
                           _I2C_Stop
                          _I2C_Write
                 _Persistant_Address
      _Persistant_ReadExternalMemory
 ---------------------------------------------------------------------------------
 (3) _Persistant_ReadExternalMemory                        3     1      2    3022
                                             15 BANK0      3     1      2
                            _I2C_Ack
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                 _Persistant_Address
             _Persistant_ControlByte
 ---------------------------------------------------------------------------------
 (4) _Persistant_Address                                   3     0      3    1475
                                             12 BANK0      3     0      3
                            _I2C_Ack
                          _I2C_Start
                          _I2C_Write
             _Persistant_ControlByte
 ---------------------------------------------------------------------------------
 (4) _Persistant_ControlByte                               6     3      3     670
                                              6 BANK0      6     3      3
                            _I2C_Ack
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Write                                            1     1      0     135
                                              5 BANK0      1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0     113
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Stop                                             0     0      0     113
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Read                                             1     1      0     271
                                              6 BANK0      1     1      0
                            _I2C_Ack
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Ack                                              1     1      0     135
                                              5 BANK0      1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Wait                                             5     5      0     113
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _Persistant_LoadBuffer                               15    13      2   12873
                                             75 BANK0     15    13      2
      _Persistant_ReadInternalMemory
                              _UnZip
                            ___awdiv
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1012
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _UnZip                                               12    10      2    9248
                                             63 BANK0     12    10      2
                            ___ftdiv
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (3) _Persistant_ReadInternalMemory                        2     0      2     200
                                              8 BANK0      2     0      2
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Persistant_Init                                      0     0      0   19521
                           _I2C_Init
 ---------------------------------------------------------------------------------
 (3) _I2C_Init                                             7     3      4   19521
                                             63 BANK0      7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _Midi_Init                                           12    12      0    1206
                                             13 BANK0     12    12      0
                   _Midi_ResetBuffer
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (3) _Midi_ResetBuffer                                     6     4      2     575
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _InitDigiPot                                         11    11      0  113954
                                            105 BANK0     11    11      0
                      _InitConnector
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (3) ___lbtoft                                             4     1      3    3034
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _Hub_Init                                             4     4      0    3967
                                             67 BANK0      4     4      0
                     _Hub_ReadSwitch
                      _InitConnector
 ---------------------------------------------------------------------------------
 (3) _Hub_ReadSwitch                                      24    24      0    3299
                                             43 BANK0     24    24      0
                       _ReadBitArray
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _ReadBitArray                                        17     3     14    1315
                                             26 BANK0     17     3     14
                            _ReadBit
 ---------------------------------------------------------------------------------
 (5) _ReadBit                                             13     1     12    1025
                                             13 BANK0     13     1     12
                          _ClockDown
                            _ClockUp
                       _Hub_DataRead *
 ---------------------------------------------------------------------------------
 (6) _Hub_DataRead                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ClockUp                                             12     0     12     378
                                              1 BANK0     12     0     12
                 _DigiPot_ClockWrite *
                  _DigiPot_DataWrite *
                 _DigiPot_LatchWrite *
                 _Display_ClockWrite *
                  _Display_DataWrite *
                 _Display_LatchWrite *
                     _Hub_ClockWrite *
                     _Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (3) _ClockDown                                           12     0     12     378
                                              1 BANK0     12     0     12
                 _DigiPot_ClockWrite *
                  _DigiPot_DataWrite *
                 _DigiPot_LatchWrite *
                 _Display_ClockWrite *
                  _Display_DataWrite *
                 _Display_LatchWrite *
                     _Hub_ClockWrite *
                     _Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (3) _Hub_LatchWrite                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Hub_ClockWrite                                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Display_LatchWrite                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Display_DataWrite                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Display_ClockWrite                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DigiPot_LatchWrite                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DigiPot_DataWrite                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _DigiPot_ClockWrite                                   1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Hub_CopyBuffer                                       0     0      0    1934
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6    1934
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _Display_ProcessData                                 23    19      4    9951
                                             10 BANK0     23    19      4
                            ___awmod
                            ___lbdiv
                            ___lbmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     248
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     251
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     474
                                              4 BANK0      6     2      4
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _Display_Init                                        12    12      0  101251
                                            105 BANK0     12    12      0
                      _InitConnector
                           ___awtoft
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (3) _pow                                                 17    11      6   95913
                                             88 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  5     2      3   32943
                                             72 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _exp                                                  9     6      3   51717
                                             79 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (5) _ldexp                                                7     2      5     426
                                             72 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (5) _floor                                                8     5      3   11399
                                             63 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     580
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4    1142
                                             48 BANK0     15    11      4
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     848
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                            10     6      4    3417
                                              8 BANK0     10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           12     5      7   18525
                                             60 BANK0     12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    7675
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    5066
                                             18 BANK0     15     9      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    5469
                                             60 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5072
                                             48 BANK0     12     6      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftneg                                              3     0      3     312
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4690
                                             33 BANK0     15     9      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awtoft                                             4     1      3    3370
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3170
                                              8 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3012
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _InitConnector                                        2     0      2     600
                                              2 BANK0      2     0      2
                            _InitPin
 ---------------------------------------------------------------------------------
 (4) _InitPin                                              2     0      2     267
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Interrupt                                          20    20      0    6893
                                             71 COMRAM    20    20      0
                 _Display_SwapBuffer
                   _Hub_UpdateValues
               _Sequencer_TimerEvent
                   i2_Hub_CopyBuffer
                 i2_Midi_ResetBuffer
                       i2_Midi_Write
              i2_Sequencer_StopTimer
                        i2_WriteData
 ---------------------------------------------------------------------------------
 (11) i2_WriteData                                        17     2     15    1614
                                             30 COMRAM    17     2     15
                         i2_LatchOff
                          i2_LatchOn
                        i2_WriteChar
 ---------------------------------------------------------------------------------
 (12) i2_WriteChar                                        17     5     12     858
                                             13 COMRAM    17     5     12
                        i2_ClockDown
                          i2_ClockUp
               i2_DigiPot_ClockWrite *
                i2_DigiPot_DataWrite *
               i2_DigiPot_LatchWrite *
               i2_Display_ClockWrite *
                i2_Display_DataWrite *
               i2_Display_LatchWrite *
                   i2_Hub_ClockWrite *
                   i2_Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (11) i2_Sequencer_StopTimer                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_Midi_Write                                       10     8      2     664
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 (11) i2_Midi_ResetBuffer                                  6     4      2     360
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (11) i2_Hub_CopyBuffer                                    0     0      0     377
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (11) _Sequencer_TimerEvent                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Hub_UpdateValues                                    4     4      0    3831
                                             67 COMRAM     4     4      0
                   _Hub_DecodeSwitch
                       _Hub_SetValue
                   i2_Hub_ReadSwitch
                         i2_LatchOff
                          i2_LatchOn
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_LatchOn                                          12     0     12     250
                                              1 COMRAM    12     0     12
               i2_DigiPot_ClockWrite *
                i2_DigiPot_DataWrite *
               i2_DigiPot_LatchWrite *
               i2_Display_ClockWrite *
                i2_Display_DataWrite *
               i2_Display_LatchWrite *
                   i2_Hub_ClockWrite *
                   i2_Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (12) i2_LatchOff                                         12     0     12     250
                                              1 COMRAM    12     0     12
               i2_DigiPot_ClockWrite *
                i2_DigiPot_DataWrite *
               i2_DigiPot_LatchWrite *
               i2_Display_ClockWrite *
                i2_Display_DataWrite *
               i2_Display_LatchWrite *
                   i2_Hub_ClockWrite *
                   i2_Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (12) i2_Hub_ReadSwitch                                   24    24      0    1200
                                             43 COMRAM    24    24      0
                     i2_ReadBitArray
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) i2_memcpy                                           11     5      6     377
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (13) i2_ReadBitArray                                     17     3     14     779
                                             26 COMRAM    17     3     14
                          i2_ReadBit
 ---------------------------------------------------------------------------------
 (14) i2_ReadBit                                          13     1     12     615
                                             13 COMRAM    13     1     12
                        i2_ClockDown
                          i2_ClockUp
                     i2_Hub_DataRead *
 ---------------------------------------------------------------------------------
 (15) i2_Hub_DataRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) i2_ClockUp                                          12     0     12     250
                                              1 COMRAM    12     0     12
               i2_DigiPot_ClockWrite *
                i2_DigiPot_DataWrite *
               i2_DigiPot_LatchWrite *
               i2_Display_ClockWrite *
                i2_Display_DataWrite *
               i2_Display_LatchWrite *
                   i2_Hub_ClockWrite *
                   i2_Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (13) i2_ClockDown                                        12     0     12     250
                                              1 COMRAM    12     0     12
               i2_DigiPot_ClockWrite *
                i2_DigiPot_DataWrite *
               i2_DigiPot_LatchWrite *
               i2_Display_ClockWrite *
                i2_Display_DataWrite *
               i2_Display_LatchWrite *
                   i2_Hub_ClockWrite *
                   i2_Hub_LatchWrite *
 ---------------------------------------------------------------------------------
 (13) i2_Hub_LatchWrite                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_Hub_ClockWrite                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_Display_LatchWrite                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_Display_DataWrite                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_Display_ClockWrite                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_DigiPot_LatchWrite                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_DigiPot_DataWrite                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) i2_DigiPot_ClockWrite                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _Hub_SetValue                                        9     3      6     936
                                              4 COMRAM     9     3      6
                   _Hub_DecodeSwitch (ARG)
 ---------------------------------------------------------------------------------
 (12) _Hub_DecodeSwitch                                    4     3      1     706
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (11) _Display_SwapBuffer                                  2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Display_ProcessData
     ___awmod
       ___lbdiv (ARG)
     ___lbdiv
     ___lbmod
     ___wmul
   _InitApp
     _Display_Init
       _InitConnector
         _InitPin
       ___awtoft
         ___ftpack
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       _pow
         ___ftge
         ___ftmul
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
         _exp (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftge
           ___ftmul
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
     _Display_ProcessData
       ___awmod
         ___lbdiv (ARG)
       ___lbdiv
       ___lbmod
       ___wmul
     _Hub_CopyBuffer
       _memcpy
     _Hub_Init
       _Hub_ReadSwitch
         _ReadBitArray
           _ReadBit
             _ClockDown
               _DigiPot_ClockWrite *
               _DigiPot_DataWrite *
               _DigiPot_LatchWrite *
               _Display_ClockWrite *
               _Display_DataWrite *
               _Display_LatchWrite *
               _Hub_ClockWrite *
               _Hub_LatchWrite *
             _ClockUp
               _DigiPot_ClockWrite *
               _DigiPot_DataWrite *
               _DigiPot_LatchWrite *
               _Display_ClockWrite *
               _Display_DataWrite *
               _Display_LatchWrite *
               _Hub_ClockWrite *
               _Hub_LatchWrite *
             _Hub_DataRead *
         _memcpy
       _InitConnector
         _InitPin
     _InitDigiPot
       _InitConnector
         _InitPin
       ___altoft
         ___ftpack
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
       _pow
         ___ftge
         ___ftmul
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
         _exp (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftge
           ___ftmul
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___lbtoft (ARG)
               ___ftpack
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___ftmul (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftmul (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
     _Midi_Init
       _Midi_ResetBuffer
       ___lldiv
     _Persistant_Init
       _I2C_Init
         ___altoft
           ___ftpack
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
     _Persistant_LoadBuffer
       _Persistant_ReadInternalMemory
         ___awdiv (ARG)
       _UnZip
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       ___awdiv
       _memcpy
     _Persistant_ReadExternalMemory
       _I2C_Ack
         _I2C_Wait
       _I2C_Read
         _I2C_Ack
           _I2C_Wait
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _Persistant_Address
         _I2C_Ack
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Write
           _I2C_Wait
         _Persistant_ControlByte
           _I2C_Ack
             _I2C_Wait
           _I2C_Write
             _I2C_Wait
       _Persistant_ControlByte
         _I2C_Ack
           _I2C_Wait
         _I2C_Write
           _I2C_Wait
     _Persistant_WriteExternalMemory
       _I2C_Ack
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait
       _I2C_Write
         _I2C_Wait
       _Persistant_Address
         _I2C_Ack
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Write
           _I2C_Wait
         _Persistant_ControlByte
           _I2C_Ack
             _I2C_Wait
           _I2C_Write
             _I2C_Wait
       _Persistant_ReadExternalMemory
         _I2C_Ack
           _I2C_Wait
         _I2C_Read
           _I2C_Ack
             _I2C_Wait
           _I2C_Wait
         _I2C_Start
           _I2C_Wait
         _I2C_Stop
           _I2C_Wait
         _Persistant_Address
           _I2C_Ack
             _I2C_Wait
           _I2C_Start
             _I2C_Wait
           _I2C_Write
             _I2C_Wait
           _Persistant_ControlByte
             _I2C_Ack
               _I2C_Wait
             _I2C_Write
               _I2C_Wait
         _Persistant_ControlByte
           _I2C_Ack
             _I2C_Wait
           _I2C_Write
             _I2C_Wait
     _Sequencer_Start
   _Load
     _Hub_CopyBuffer
       _memcpy
     _Persistant_LoadBuffer
       _Persistant_ReadInternalMemory
         ___awdiv (ARG)
       _UnZip
         ___ftdiv
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       ___awdiv
       _memcpy
     _Persistant_WriteInternalMemory
       _Persistant_ReadInternalMemory
         ___awdiv (ARG)
       ___awdiv (ARG)
     ___awdiv
     _memcpy
   _Midi_Read
   _Midi_Write
   _PauseHub
   _Persistant_SaveBuffer
     _Persistant_WriteInternalMemory
       _Persistant_ReadInternalMemory
         ___awdiv (ARG)
       ___awdiv (ARG)
     _Zip
       ___ftdiv
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     ___awdiv
     _memcpy
   _RunHub
   _Sequencer_StartTimer
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
   _Sequencer_StopTimer
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _USBCheckCDCRequest
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _USBCheckCDCRequest
     _USER_USB_CALLBACK_EVENT_HANDLER
       _CDCInitEP
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _USBCheckCDCRequest
   _WriteData
     _LatchOff
       _DigiPot_ClockWrite *
       _DigiPot_DataWrite *
       _DigiPot_LatchWrite *
       _Display_ClockWrite *
       _Display_DataWrite *
       _Display_LatchWrite *
       _Hub_ClockWrite *
       _Hub_LatchWrite *
     _LatchOn
       _DigiPot_ClockWrite *
       _DigiPot_DataWrite *
       _DigiPot_LatchWrite *
       _Display_ClockWrite *
       _Display_DataWrite *
       _Display_LatchWrite *
       _Hub_ClockWrite *
       _Hub_LatchWrite *
     _WriteChar
       _ClockDown
         _DigiPot_ClockWrite *
         _DigiPot_DataWrite *
         _DigiPot_LatchWrite *
         _Display_ClockWrite *
         _Display_DataWrite *
         _Display_LatchWrite *
         _Hub_ClockWrite *
         _Hub_LatchWrite *
       _ClockUp
         _DigiPot_ClockWrite *
         _DigiPot_DataWrite *
         _DigiPot_LatchWrite *
         _Display_ClockWrite *
         _Display_DataWrite *
         _Display_LatchWrite *
         _Hub_ClockWrite *
         _Hub_LatchWrite *
       _DigiPot_ClockWrite *
       _DigiPot_DataWrite *
       _DigiPot_LatchWrite *
       _Display_ClockWrite *
       _Display_DataWrite *
       _Display_LatchWrite *
       _Hub_ClockWrite *
       _Hub_LatchWrite *
   ___awdiv
   _getsUSBUSART
     _USBTransferOnePacket
   _memcmp

 _Interrupt (ROOT)
   _Display_SwapBuffer
   _Hub_UpdateValues
     _Hub_DecodeSwitch
     _Hub_SetValue
       _Hub_DecodeSwitch (ARG)
     i2_Hub_ReadSwitch
       i2_ReadBitArray
         i2_ReadBit
           i2_ClockDown
             i2_DigiPot_ClockWrite *
             i2_DigiPot_DataWrite *
             i2_DigiPot_LatchWrite *
             i2_Display_ClockWrite *
             i2_Display_DataWrite *
             i2_Display_LatchWrite *
             i2_Hub_ClockWrite *
             i2_Hub_LatchWrite *
           i2_ClockUp
             i2_DigiPot_ClockWrite *
             i2_DigiPot_DataWrite *
             i2_DigiPot_LatchWrite *
             i2_Display_ClockWrite *
             i2_Display_DataWrite *
             i2_Display_LatchWrite *
             i2_Hub_ClockWrite *
             i2_Hub_LatchWrite *
           i2_Hub_DataRead *
       i2_memcpy
     i2_LatchOff
       i2_DigiPot_ClockWrite *
       i2_DigiPot_DataWrite *
       i2_DigiPot_LatchWrite *
       i2_Display_ClockWrite *
       i2_Display_DataWrite *
       i2_Display_LatchWrite *
       i2_Hub_ClockWrite *
       i2_Hub_LatchWrite *
     i2_LatchOn
       i2_DigiPot_ClockWrite *
       i2_DigiPot_DataWrite *
       i2_DigiPot_LatchWrite *
       i2_Display_ClockWrite *
       i2_Display_DataWrite *
       i2_Display_LatchWrite *
       i2_Hub_ClockWrite *
       i2_Hub_LatchWrite *
     i2_memcpy
   _Sequencer_TimerEvent
   i2_Hub_CopyBuffer
     i2_memcpy
   i2_Midi_ResetBuffer
   i2_Midi_Write
   i2_Sequencer_StopTimer
   i2_WriteData
     i2_LatchOff
       i2_DigiPot_ClockWrite *
       i2_DigiPot_DataWrite *
       i2_DigiPot_LatchWrite *
       i2_Display_ClockWrite *
       i2_Display_DataWrite *
       i2_Display_LatchWrite *
       i2_Hub_ClockWrite *
       i2_Hub_LatchWrite *
     i2_LatchOn
       i2_DigiPot_ClockWrite *
       i2_DigiPot_DataWrite *
       i2_DigiPot_LatchWrite *
       i2_Display_ClockWrite *
       i2_Display_DataWrite *
       i2_Display_LatchWrite *
       i2_Hub_ClockWrite *
       i2_Hub_LatchWrite *
     i2_WriteChar
       i2_ClockDown
         i2_DigiPot_ClockWrite *
         i2_DigiPot_DataWrite *
         i2_DigiPot_LatchWrite *
         i2_Display_ClockWrite *
         i2_Display_DataWrite *
         i2_Display_LatchWrite *
         i2_Hub_ClockWrite *
         i2_Hub_LatchWrite *
       i2_ClockUp
         i2_DigiPot_ClockWrite *
         i2_DigiPot_DataWrite *
         i2_DigiPot_LatchWrite *
         i2_Display_ClockWrite *
         i2_Display_DataWrite *
         i2_Display_LatchWrite *
         i2_Hub_ClockWrite *
         i2_Hub_LatchWrite *
       i2_DigiPot_ClockWrite *
       i2_DigiPot_DataWrite *
       i2_DigiPot_LatchWrite *
       i2_Display_ClockWrite *
       i2_Display_DataWrite *
       i2_Display_LatchWrite *
       i2_Hub_ClockWrite *
       i2_Hub_LatchWrite *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0     288      22       63.3%
BIGRAMh            3C0      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      80      11       50.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F6       9       96.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F8       7       96.9%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36C      16        0.0%
DATA                 0      0     5F4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 18 20:49:59 2018

                             main@LResult 00D7                               Load@LBuffer 00BA  
                            ___altoft@exp 0070                                _USB_SD_Ptr 0801  
                              LatchOn@AIO 0061                             ?_Hub_SetValue 0005  
                      __size_of_I2C_Start 001E                                Load@i_2411 00C9  
                           ___altoft@sign 0071                        __size_of_I2C_Write 0024  
                      main@LChannelSwitch 00DD                                        _RW 007E3A  
                            ___awdiv@sign 0065                               __CFG_BOR$ON 000000  
                           _USBDeviceInit 1FDC                       ___wmul@multiplicand 0062  
                             __CFG_BORV$3 000000                        __size_of_CDCInitEP 006C  
             __end_of_Sequencer_StopTimer 54DE                   Persistant_Address@ARead 006E  
                            __CFG_CP0$OFF 000000              __end_of_Sequencer_StartTimer 4B90  
                            __CFG_CP1$OFF 000000                              __CFG_CP2$OFF 000000  
                             LatchOff@AIO 0061                              __CFG_CP3$OFF 000000  
                            ___ftadd@exp1 009B                              ___ftadd@exp2 009A  
    USER_USB_CALLBACK_EVENT_HANDLER@event 006C      USER_USB_CALLBACK_EVENT_HANDLER@pdata 006E  
                            ___ftadd@sign 0099                                       l202 3D28  
                                     l204 3D42                                       l213 29F8  
                                     l133 2022                                       l214 29A0  
                                     l150 1EBE                                       l231 346C  
                                     l303 3F3E                                       l135 2048  
                                     l151 1EC6                                       l232 3432  
                                     l208 404E                                       l304 3F38  
                                     l160 1F5A                                       l152 1ED8  
                                     l144 1E9A                                       l137 2084  
                                     l153 1EE2                                       l145 1E90  
                                     l322 381A                                       l242 278A  
                                     l314 49C8                                       l218 2A26  
                                     l162 1F6A                                       l146 1E8E  
                                     l235 34AE                                       l227 33FE  
                                     l323 3820                                       l243 2764  
                                     l155 1F08                                       l236 3474  
                                     l324 389C                                       l316 4A16  
                                     l172 4E0C                                       l340 3154  
                                     l229 3408                                       l325 3862  
                                     l245 2802                                       l173 4E1C  
                                     l181 2B42                                       l341 315A  
                                     l165 1F90                                       l157 1F1E  
                                     l149 1EB2                                       l246 27E8  
                                     l262 25EC               __end_of_USBStdGetDscHandler 2604  
                                     l254 30A2                                       l342 3160  
                                     l158 1F28                                       l327 3882  
                                     l431 3B60                                       l271 25E4  
                                     l263 24E8                                       l343 3174  
                                     l167 1FB4                                       l159 1F4E  
                                     l432 3AFA                                       l280 3A40  
                                     l256 3116                                       l344 317A  
                                     l177 2A9A                                       l361 0CB4  
                                     l265 24FC                                       l281 3A46  
                                     l337 31DA                                       l169 1FD2  
                                     l434 3B12                                       l370 0E1E  
                                     l354 0BC6                                       l266 2584  
                                     l282 3A66                                       l346 3180  
                                     l338 314A                                       l290 4EBC  
                                     l179 2AC4                                       l435 3B20  
                                     l363 0D42                                       l355 0BCC  
                                     l275 3AA8                                       l347 319E  
                                     l196 3500                                       l436 3B3E  
                                     l268 258C                                       l276 3A2E  
                                     l348 31BA                                       l621 54E4  
                                     l437 3B56                                       l373 0DD4  
                                     l365 0D0A                                       l357 0C3E  
                                     l269 25DC                                       l453 4110  
                                     l366 0D28                                       l615 3A04  
                                     l375 0E2A                                       l359 0C8E  
                                     l279 3ABE                                       l368 0D90  
                                     l456 40BE                                       l369 0D9C  
                                     l289 4EBE                                       l297 501C  
                                     l457 40EA                                       l641 094C  
                                     l298 501A                                       l458 40C4  
                                     l627 54A0                                       l651 09B8  
                                     l643 0952                                       l660 0A8E  
                                     l661 0A70                                       l645 09F4  
                                     l654 0A28                                       l646 09E2  
                                     l638 0900                                       l671 0B3A  
                                     l655 0AC4                                       l663 0A76  
                                     l647 0968                                       l656 0AB0  
                                     l664 0A7C                                       l648 099C  
                                     l665 0A82                                       l657 0A4A  
                                     l762 22D0                                       l674 0B9C  
                                     l658 0AC0                                       l666 0A88  
                                     l667 0B2C                                       l659 0A54  
                                     l764 231E                                       _BDT 000400  
                                     l781 0EE2                                       l766 23A4  
                                     l782 0EF2                                       l934 4F78  
                                     l942 4A7C                                       l791 0FD6  
                                     l783 0F0C                                       l792 10B0  
                                     l928 505A                                       l793 101E  
                                     l785 0F54                                       l962 3D9E  
                                     l795 1088                                       l787 0F6C  
                                     l779 0E84                                       l789 0FBA  
                                     l949 4876                                       l967 38D4  
                                     _GIE 007F97                              __CFG_CPB$OFF 000000  
                                     _PEN 007E2A                              __CFG_CPD$OFF 000000  
                                     _SEN 007E28                                       _PSA 007EAB  
                                     _UIE 000F69                                       _RX9 007D5E  
                                     _UIR 000F68                                       _TX9 007D66  
                                     _Zip 2852                           __end_of_I2C_Ack 511E  
                                     _exp 17C4                                       _log 2604  
                        ??i2_Hub_DataRead 0001                                _USBSuspend 5090  
                                     _pow 1CEE                              ___awmod@sign 0069  
                    USBStdSetCfgHandler@i 0074                                       prod 000FF3  
                __end_of_Hub_UpdateValues 2F6C                                       tosl 000FFD  
                                     wreg 000FE8                            _USBDeviceTasks 1E70  
                          _USBDeviceState 00FC                            ??_Hub_DataRead 0060  
            __end_ofi2_Display_LatchWrite 555C                               i2_WriteChar 4644  
                             i2_WriteData 48E6                     ??_USBCtrlTrfRxService 0060  
                          ??_getsUSBUSART 006E                  _Hub_LatchWrite$intlevel0 5488  
                USBEnableEndpoint@options 0068                             _InitConnector 505E  
                            __CFG_LVP$OFF 000000                                ReadBit@AIO 006D  
                            ___ftdiv@cntr 008A                              ___ftdiv@sign 008F  
                                    ?_Zip 009F                              __CFG_WDT$OFF 000000  
                                    l1200 2BA4                                      l1202 2BC0  
                                    l1060 4CEA                                      l1204 2C8A  
                                    l1062 4D1A                                      l1400 4582  
                                    l1401 4576                                      l1162 36A0  
                                    l1170 11FA                                      l1171 115A  
                                    l1500 475C                                      l1164 36E4  
                                    l1252 4338                                      l1172 122A  
                                    l1157 24AA                                      l1181 42C4  
                                    l1173 118E                                      l1246 42EC  
                                    l1182 42C0                                      l1174 11C4  
                                    l1511 4FCC                                      l1503 477C  
                                    l1159 24D4                                      l1255 4348  
                                    l1247 42D4                                      l1271 5116  
                                    l1175 1348                                      l1504 4786  
                                    l1176 129A                                      l1505 4794  
                                    l1281 4FAE                                      l1169 123C  
                                    l1530 3BAE                                      l1602 41DC  
                                    l1194 2974                                      l1531 3BA4  
                                    l1611 2DD6                                      l1603 420C  
                                    l1267 5306                                      l1259 52E8  
                                    l1275 5204                                      l1195 28BA  
                                    l1620 51DA                                      l1612 2E08  
                                    l1533 3BE2                                      l1613 2E18  
                                    l1197 2974                                      l1534 3BCC  
                                    l1630 2CBA                                      l1615 2E30  
                                    l1295 4A82                                      l1536 3C0A  
                                    l1616 2E40                                      l1632 2D32  
                i2DigiPot_DataWrite@value 0001                                      l1537 3C00  
                                    l1561 1A10                                      l1609 2DAE  
                                    l1641 2D72                                      l1633 2D22  
                                    l1289 4A8E                                      l1297 4A88  
                                    l1570 1AA0                                      l1626 4EDA  
                                    l1650 4F3E                                      l1490 43B2  
                                    l1491 43BC                                      l1483 4364  
                                    l1492 43CA                                      l1484 4374  
              USBConfigureEndpoint@handle 0066                                      l1565 1A3A  
                                    l1645 4F20                                      l1638 2D56  
                                    l1646 4F1A                                      l1654 512C  
                                    l1750 4D9C                                      l1670 4438  
                                    l1486 4392                                      l1575 1A96  
                                    l1639 2D4A                                      l1655 5144  
                                    l1751 4D7A                                      l1671 4446  
                                    l1487 438A                                      l1743 4710  
                                    l1584 1AD4                                      l1576 1A8C  
                                    l1496 4742                                      l1744 46BC  
                                    l1585 1ACA                                      l1497 474E  
                                    l1649 4F36                                      l1745 4706  
                                    l1594 2F96                                      l1930 181A  
                                    l1666 4404                                      l1587 1AF8  
                                    l1931 1856                                      l1771 1D52  
                                    l1499 4764                                      l1667 43F8  
                                    l1596 2FBE                                      l1588 1B14  
                                    l1940 3250                                      l1932 1884  
                                    l1772 1DDC                                      l1756 50DC  
                                    l1597 2FFC                                      l1589 1B44  
                                    l1933 19AE                                      l1773 1DBA  
                                    l1757 50CA                                      l1598 3022  
                                    l1942 3278                                      l1934 1984  
                                    l1774 1E62                                      l1687 4AF2  
                                    l1943 32F4                                      l1688 4AE6  
                                    l1952 359E                                      l1928 17DE  
                                    l1768 1D3A                                      l1769 1D2A  
                                    l1954 35E8                                      l1970 2624  
                                    l1939 325E                                      l1948 4140  
                                    l1956 361A                                      l1972 2648  
                                    l1957 360E                                      l5325 42D4  
                                    l7103 10B0                                      l7111 10D8  
                                    l5423 3408                                      l5193 4238  
                                    l7025 0E74                                      l1978 33C6  
                                    l1979 3346                                      l7115 10E6  
                                    l7035 0ED4                                      l7045 0EFC  
                                    l7063 0F5C                                      l7055 0F38  
                                    l6247 4D7A                                      l5385 50CA  
                                    l6435 1984                                      l7171 22C0  
                                    l7075 0F9E                                      l7139 3E82  
                                    ?_exp 00AF                                      l7181 2306  
                                    l7149 3EB0                                      l6541 36DC  
                                    l6533 3698                                      l7325 2868  
                                    ?_log 00A8                                      l7183 230E  
                                    l7343 28AA                                      l7335 288A  
                                    l6297 4CDA                                      l8313 4AA8  
                                    l7361 4466                                      l6643 2BB0  
                                    l7355 296A                                      l8315 4AD8  
                                    l6655 2C50                                      l7551 47C2  
                                    l7651 39C8                                      l7723 3D96  
                                    l6843 201A                                      l7661 39EC  
                                    l5797 309A                                      l7663 39F4  
                                    l6871 207C                                      l7673 3A1A  
                                    l7489 1F62                                      l6983 38CC  
                                    l7785 46BC                                      ?_pow 00B8  
                                    _BRGH 007D62                                      _CREN 007D5C  
                                    _T0CS 007EAD                                      u5300 5466  
                                    u6120 2D5C                                      u5320 5436  
                                    u5400 5406                                      _PEIE 007F96  
                                    u5340 5496                                      u5260 547E  
                                    u5420 42FC                                      u6061 2C9E  
                                    u5510 3B96                                      u6150 4168  
                                    u5430 42FE                                      u6080 2CD8  
                                    u5280 544E                                      u5360 541E  
                                    u7121 4CF4                                      u5450 4318  
                                    _RCIE 007CED                                      u8100 0ED4  
                                    u5380 53EE                                      u5460 432A  
                                    u5700 5108                                      _RCIF 007CF5  
                                    _RCEN 007E2B                                      u6085 2CD0  
                                    u5461 4326                                      u5550 3C14  
                                    u6158 416C                                      u8030 392A  
                                    u5470 432C                                      u5630 345A  
                                    u6430 254E                                      u5800 1A02  
                                    u6440 257E                                      u5650 349C  
                                    u5715 510A                                      u5900 1AA8  
                                    u8220 1084                                      u8140 0F38  
                                    u8060 4C2E                                      u6460 25D0  
                                    u8045 4C0E                                      u5637 3450  
                                    u6437 2544                                      u5830 1A2C  
                                    u7270 185E                                      u8310 2306  
                                    u8230 1086                                      u8150 0F52  
                                    u5670 54CC                                      u8046 4C10  
                                    u6390 30CE                                      _RCIP 007CFD  
                                    u6447 2574                     ??_USBCtrlTrfTxService 0060  
                                    u7280 1860                                      u5728 5316  
                                    u5761 19CE                                      u6705 5036  
                                    u5657 3492                                      u5930 1ADC  
                                    u8250 10B0                                      u8170 0F9E  
                                    u5738 5334                                      u7450 3718  
                                    u8410 244A                                      u5771 19E2  
                                    u6467 25C6                                      u5860 1A6A  
                                    u6900 35BE                                      u8260 10D8  
                                    u8244 1098                                      u8180 0FB8  
                                    u8245 1094                                      u6741 4BBA  
                                    u8405 23FE                                      u8270 10E6  
                                    u8430 24BC                                      u7630 2C50  
                                    u7614 2C2E                                      u6751 4BD0  
                                    u7615 2C2A                                      u9231 47A8  
                                    _UCFG 000F6F                                      u7560 1DA0  
                                    u7624 2C40                                      u6680 0DB8  
                                    u9160 1FD8                                      u6761 2F7E  
                                    u8425 246C                                      u7625 2C3C  
                                    u6738 4B98                                      u8290 3EB0  
                                    u9410 3A1A                                      u5971 2D96  
                                    u6739 4BAC                                      u9251 47D0  
                                    u6860 326A                                      u6908 35C2  
                                    u7740 4768                                      u7820 4408  
                                    u8380 4872                                      u9260 47F4  
                                    u9180 409A                                      _UEP0 000F70  
                                    u6781 2FA6                                      u7581 4C46  
                                    _UEP1 000F71                                      u7590 2BA2  
                                    u5991 2DBE                                      u9271 47FE  
                                    u7680 4396                                      u7920 20E0  
                                    u8801 44C2                                      u9450 3DF8  
                                    _UEIE 000F6B                                      u7780 4F24  
                                    u8740 296A                                      u8724 2904  
                                    u8725 2900                                      u9390 39EC  
                                    u8734 2916                                      u9471 427A  
                                    u8735 2912                                      u8690 288A  
                                    u7890 203E                                      u8771 4474  
                                    u8668 529E                                      u8678 52BC  
                                    _UEIR 000F6A                                      _UCON 000F6D  
                                    u8794 44AC                                      u8795 44A8  
                                    u8788 4488                                      u8789 44B8  
                                    _SPEN 007D5F                                      _RSEN 007E29  
                                    _TXEN 007D65                                      _SYNC 007D64  
                                    _Load 396A                                      __Hub 013F  
                         _CDCDataInHandle 012E                                      Zip@i 00AB  
                                    Zip@j 00AF                             ??_InitDigiPot 00C9  
  USBStdFeatureReqHandler@current_ep_data 0077                                      _pDst 0130  
                           ?_ReadBitArray 007A                                      _main 08EA  
                            ___ftpack@arg 0060                              ___ftpack@exp 0063  
                        __end_of_I2C_Init 3CD6                          __end_of_I2C_Read 4FB6  
                        _Hub_DecodeSwitch 159E                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0114  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005F  
                        __end_of_I2C_Wait 434E                 i2Display_ClockWrite@value 0001  
                                    exp@x 00AF                                      log@x 00A8  
                        __end_of_I2C_Stop 530E            __size_ofi2_Sequencer_StopTimer 000E  
                                    pow@x 00B8                                      pow@y 00BB  
                        Midi_Init@LPeriod 0075                __size_of_Display_DataWrite 0018  
                                    prodh 000FF4                                      prodl 000FF3  
           __end_ofi2_Sequencer_StopTimer 5508                                      start 000E  
                           __CFG_IESO$OFF 000000                __end_of_USBCheckStdRequest 321E  
                  ??_USBCtrlTrfOutHandler 0062                           __end_of_ClockUp 532C  
              __end_of_DigiPot_ClockWrite 5422                             __CFG_MCLRE$ON 000000  
                            ___ftmul@cntr 007F                              ___param_bank 000000  
                            ___ftmul@sign 0080                 ??_USBStdFeatureReqHandler 0074  
                         __end_of_LatchOn 52B4                            ??_Hub_SetValue 000B  
                         __end_of_InitApp 4552                           __end_of_ReadBit 4BE2  
                         __end_of_InitPin 5590                               InitApp@test 00D6  
                ??_USBStdGetStatusHandler 0060                              ___fttol@exp1 009E  
                                   ??_Zip 00A1                                     ??_exp 00B2  
                                   ??_log 00AB                              ___fttol@lval 009A  
                                   ??_pow 00BE                            ?_USBDeviceInit 0001  
                             ReadBit@LBit 0079                             __CFG_PLLDIV$5 000000  
                                   ?_Load 0001                            __CFG_CCP2MX$ON 000000  
                                   ?_main 0001                                     _ACKEN 007E2C  
                                   _ACKDT 007E2D                         i2ReadBitArray@AIO 001D  
                         __end_of___awdiv 43D4                           __end_of___lbdiv 4F42  
                                   _EEADR 000FA9                           __end_of___ftadd 1B6A  
                         __end_of___awmod 479E                           __end_of___lbmod 514C  
       __size_of_USBCtrlEPServiceComplete 010A                           __end_of___ftdiv 3054  
                         __end_of___ftneg 51E8                           __end_of___lldiv 4458  
                                   u10101 097E                                     u10210 0B58  
                                   u10220 0B5A                                     u10241 0B8A  
                         __end_of___ftmul 2E7A                                     u10317 4850  
                                   u10190 0B06                                     u10327 42DC  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 1FDC  
                         __end_of___ftsub 4F04                           __end_of___fttol 2D84  
                                   _LATA2 007C4A                                     _LATA3 007C4B  
                                   _LATA4 007C4C                                     _LATA5 007C4D  
                                   _LATB3 007C53                                     _LATB4 007C54  
                                   _LATC2 007C5A                                     _T0PS0 007EA8  
                                   _T0PS1 007EA9                                     _T0PS2 007EAA  
               ?_USBCtrlEPServiceComplete 0001                               InitPin@APin 0060  
                         _Persistant_Init 53C2                                     i2l604 1C72  
                                   i2l605 1C90                                     i2l608 1C9E  
                                   i2l581 5264                                     i2l590 1C22  
                                   i2l591 1BFE                                     i2l593 1C10  
                                   i2l861 17C0                                     i2l597 1C66  
                                   i2l855 16B0                                     i2l599 1C60  
                                   i2l873 2ECA                                     i2l874 2ED8  
                                   _UADDR 000F6E                                     i2l868 498E  
                         ___awdiv@counter 0064                                     i2l869 49AA  
                                   _RCREG 000FAE                                     _TMR1H 000FCF  
                                   _TMR1L 000FCE                                     _SPBRG 000FAF  
                   main@LChannelSwitchOld 00DB                             __CFG_USBDIV$2 000000  
                                   _SSPIF 007CF3               __size_of_Persistant_Address 003A  
                        _Midi_ResetBuffer 3652                                     _USTAT 000F6C  
                                   Load@i 00C7                       _ConfigureOscillator 5590  
                           __CFG_PWRT$OFF 000000                          _InitDigiPot$4457 00D0  
                           __CFG_WRT0$OFF 000000        __size_of_USBCtrlEPAllowStatusStage 00CE  
                           __CFG_WRT1$OFF 000000                             __CFG_WRT2$OFF 000000  
                           __CFG_WRT3$OFF 000000                              ___lltoft@exp 0070  
    Persistant_WriteInternalMemory@LState 006D                                i2memcpy@d1 0001  
                          __CFG_EBTR0$OFF 000000                            __CFG_FCMEN$OFF 000000  
                          __CFG_EBTR1$OFF 000000                                i2memcpy@s1 0003  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                                   _UnZip 2B86           __end_of_USBCtrlEPAllowDataStage 3D76  
                                   _sd000 08E5                                     _sd001 084C  
                                   _sd002 08B9                             __CFG_WRTB$OFF 000000  
          ?_USBIncrement1msInternalTimers 0001                            ?_InitConnector 0062  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                             ___awtoft@sign 006B  
                      __size_ofi2_ClockUp 001E                __end_of_DigiPot_LatchWrite 53F2  
                                   _floor 321E                                     _ldexp 3584  
                                   _frexp 4116                                     _errno 0128  
                      __size_ofi2_LatchOn 001E                          ??i2_ReadBitArray 0029  
                           ___ftpack@sign 0064                        __size_ofi2_ReadBit 004E  
                       __end_of_I2C_Start 52F0                               ?i2_LatchOff 0002  
                       __end_of_I2C_Write 520C                                     pclath 000FFA  
                                   tablat 000FF5                            ??_ReadBitArray 0088  
                                   pow@yi 00C5                                     plusw0 000FEB  
                                   plusw1 000FE3                                     plusw2 000FDB  
                       __end_of_CDCInitEP 48E6                                     status 000FD8  
                                   wtemp6 0060                           ___lbdiv@divisor 0060  
                        __end_ofi2_memcpy 4E80                           ___lbdiv@counter 0062  
                            i2WriteChar@i 001D                              i2WriteData@i 002E  
                          __CFG_PBADEN$ON 000000                               exp@exponent 00B5  
                    ?_ConfigureOscillator 0001                                _Midi_Write 10F2  
                             ldexp@newexp 00AB              __size_of_USBStdSetCfgHandler 00E6  
                         __initialization 45CC                              __end_of_Load 3A22  
                             log@exponent 00AB                       __end_of_InitDigiPot 2268  
                i2Display_DataWrite@value 0001                              __end_of_main 0BA2  
                        __end_of_LatchOff 52D2                          __end_of_Hub_Init 3EB6  
                   _control_signal_bitmap 0135                         ?i2_Hub_ClockWrite 0001  
                               ??_I2C_Ack 0065                                    ??_Load 00BA  
                      ??i2_Hub_ClockWrite 0001                 __size_of_USBCtrlEPService 009A  
                 Hub_ReadSwitch@LBitArray 008B               __size_of_Display_ClockWrite 0018  
              __end_ofi2_Midi_ResetBuffer 37E4                          __end_of_PauseHub 54EC  
                                  ??_main 00D7                             ___fttol@sign1 0099  
                          WriteChar@AChar 007B                            WriteData@AData 007E  
                           __activetblptr 000002                           ?_USBDeviceTasks 0001  
                      __size_of_ClockDown 001E                            WriteData@ASize 0080  
                    _Sequencer_TimerEvent 5254                               ?_USBSuspend 0001  
                 Display_LatchWrite@value 0060                         _DigiPot_DataWrite 53F2  
                       ?i2_Hub_CopyBuffer 0001                                    ?_UnZip 009F  
                    i2_Display_ClockWrite 555C                              _cdc_mem_type 0136  
                 ??_Persistant_LoadBuffer 00AD                      __end_of_Display_Init 23A6  
                              __MidiInput 0584                        ?_DigiPot_DataWrite 0001  
                                  _ADCON1 000FC1                          _CDCDataOutHandle 005C  
                      ??i2_Hub_CopyBuffer 000C                                    ?_floor 009F  
                                  ?_ldexp 00A8                                    ?_frexp 0060  
                        __end_of___altoft 45CC                                    _EEDATA 000FA8  
             _Display_DataWrite$intlevel0 5458                                    _EECON2 000FA7  
                                  _T08BIT 007EAE                          ___awdiv@dividend 0060  
                        __end_of___awtoft 4FF0                          __end_of___ftpack 3C34  
                        __end_of___lbtoft 5174                           getsUSBUSART@len 006D  
                        ??_Hub_ClockWrite 0060                          __end_of___lltoft 4B3C  
                                  i2l1060 4DC8                                    i2l1062 4DF6  
                                  i2l1162 3768                                    i2l1170 144E  
                                  i2l1171 13AE                                    _T1SYNC 007E6A  
                                  i2l1164 37AC                                    i2l1172 147E  
                                  i2l1173 13E2                                    i2l1174 1418  
                                  i2l1175 159C                                    i2l1176 14EE  
                                  i2l1169 1490                                    i2l1750 4E6E  
                                  i2l1751 4E4E                         ?i2_Hub_LatchWrite 0001  
                                  i2l7601 2F60                                    i2l6807 4DB8  
                                  i2l7383 464E                                    i2l6819 4E4E  
                                  i2l7591 2F0E                                    i2l7851 37A4  
                                  i2l7843 3760                                    i2l7827 4908  
                      __size_of_Midi_Init 0130                        __size_of_Midi_Read 008C  
                                  _TMR0IE 007F95                                    _TMR0IF 007F92  
                                  _TMR1IE 007CE8                                    _TMR1IF 007CF0  
                                  _TMR1CS 007E69                                 ??_ClockUp 006D  
                                  _TMR0ON 007EAF                                    _TMR1ON 007E68  
                     ??_DigiPot_DataWrite 0060                                    _SSPADD 000FC8  
                                  _TRISA2 007C92                                    _TRISB0 007C98  
                                  _TRISA3 007C93                                    _TRISB1 007C99  
                                  _TRISB2 007C9A                                    _TRISA4 007C94  
                                  _TRISA5 007C95                                    _TRISB3 007C9B  
                                  _TRISC2 007CA2                                    _TRISB4 007C9C  
                                  _TRISC6 007CA6                                    _TRISC7 007CA7  
                                  _SSPBUF 000FC9                        ??i2_Hub_LatchWrite 0001  
                    _Sequencer_StartTimer 4B3C                                 ??_LatchOn 006D  
             __size_of_Display_LatchWrite 0018             Display_ProcessData@iDataIndex 0074  
                               ??_InitApp 00D5                     ??_ConfigureOscillator 0060  
                               ??_ReadBit 0079                                 ??_InitPin 0062  
                          __CFG_VREGEN$ON 000000                        Midi_Init@LBaudRate 0071  
                       _shortPacketStatus 00FB                            __CFG_XINST$OFF 000000  
                                  UnZip@i 00A7                                    UnZip@j 00A9  
                         USBDeviceTasks@i 007B                                    __Timer 0108  
                      __size_of_Interrupt 1CE6                               i2memcpy@tmp 000B  
                        ??_Hub_CopyBuffer 006B                                    _RunHub 549A  
             USBStdFeatureReqHandler@pUEP 0075                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0061                           ??_USBDeviceInit 0068  
                                  ___ftge 41AA                      __end_of_Hub_DataRead 54D0  
                            ?i2_ClockDown 0002                      i2_Display_LatchWrite 554E  
                       __end_ofi2_ClockUp 53A4                         ?i2_Hub_ReadSwitch 0001  
                                  ___wmul 5174                                 ??___awdiv 0064  
                               ??___lbdiv 0061                                 ??___ftadd 0096  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0068  
                               ??___lbmod 0061                                 ??___ftdiv 0087  
                 __end_of_Persistant_Init 53DA                                 ??___ftneg 0063  
                               ??___lldiv 0068                      __end_of_getsUSBUSART 4116  
                               ??___ftmul 0078                                 ??___ftsub 00A2  
                               ??___fttol 0094             Persistant_LoadBuffer@LChannel 00B8  
                       __end_ofi2_LatchOn 5368                         _USBEnableEndpoint 4DF8  
         __size_of_USBStdGetStatusHandler 00B2                         __end_ofi2_ReadBit 4CD0  
                                  _memcmp 46BA     Persistant_ReadInternalMemory@AAddress 0068  
                                  _memcpy 4D68                   ??_Persistant_SaveBuffer 00BD  
                      ??i2_Hub_ReadSwitch 002C                                    _memset 50C0  
                                  clear_0 45F4                                    clear_1 4606  
                                  clear_2 4612                                    clear_3 461E  
                                  clear_4 462A                          ___awdiv@quotient 0066  
                         ___awmod@divisor 0066                       __size_ofi2_LatchOff 001E  
                        ??_Hub_LatchWrite 0060                           ___awmod@counter 0068  
                Hub_SetValue@ASourceValue 0005                        ?_USBEnableEndpoint 0068  
               __end_of_DigiPot_DataWrite 540A                                    floor@i 00A2  
                                  floor@x 009F                     ___ftmul@f3_as_product 007C  
                   ?_Sequencer_TimerEvent 0001             __size_of_USBTransferOnePacket 0106  
             __end_of_Display_ProcessData 10F2                                 ?_I2C_Init 009F  
                               ?_I2C_Read 0001                           ??_InitConnector 0064  
                               ?_I2C_Wait 0001                                 ?_I2C_Stop 0001  
                   ?i2_Display_ClockWrite 0001                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0069  
                    __end_of_Hub_SetValue 49B8                               _CtrlTrfData 000438  
                        ??_Hub_ReadSwitch 008B                          ___lbdiv@dividend 0061  
                    _controlTransferState 00FA                          __end_ofexp@coeff 089E  
                        __end_oflog@coeff 08B9                           ___lbmod@divisor 0060  
                              __accesstop 0060                   __end_of__initialization 4636  
                              ___altoft@c 0068                           ___lbmod@counter 0062  
                            __pbssBIGRAMl 0440                        Display_Init@i_2656 00D3  
                   ?_Sequencer_StartTimer 009F                                ___ftadd@f1 0090  
                              ___ftadd@f2 0093                               _InitDigiPot 2124  
                      __size_of_WriteChar 0080                        __size_of_WriteData 006E  
                              ___ftge@ff1 0060                                ___ftge@ff2 0063  
                            eval_poly@res 00A5                             ___rparam_used 000001  
                       __end_of_ClockDown 534A               Persistant_ControlByte@ARead 0068  
                              ___ftdiv@f1 0081                                ___ftdiv@f2 0084  
                              ___ftdiv@f3 008B                  __size_of_USBStallHandler 0042  
            _DigiPot_ClockWrite$intlevel0 5410                                ___ftneg@f1 0060  
                             ?_Midi_Write 0060                                ___awtoft@c 0068  
                              ___lbtoft@c 006B                       __size_of_USBSuspend 0030  
                              ___ftmul@f1 0072                                ___ftmul@f2 0075  
                              ___ftsub@f1 009C                                ___ftsub@f2 009F  
                              ___fttol@f1 0090              _Display_ClockWrite$intlevel0 5470  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 4E3C  
                   ?i2_Display_LatchWrite 0001                             __end_of_UnZip 2C8C  
                           __end_of_sd000 08E9                             __end_of_sd001 0880  
                           __end_of_sd002 08D3                              __pidataBANK2 5584  
                              ___lltoft@c 0068          __size_of_USBCtrlEPAllowDataStage 00A0  
                           __end_of_floor 3302                             __end_of_ldexp 3652  
             __end_ofi2_DigiPot_DataWrite 5516                             __end_of_frexp 41AA  
           __size_of_USBConfigureEndpoint 0098               __end_of_USBCtrlTrfInHandler 38AA  
                        ___lbdiv@quotient 0063                         __end_of_Midi_Init 24D6  
                       __end_of_Midi_Read 42C8                     InitDigiPot@LTickCount 00C9  
                    __end_of_ReadBitArray 4D1C                              WriteChar@AIO 006D  
                            WriteData@AIO 0081                  __end_of_Hub_DecodeSwitch 17C4  
           __size_ofi2_DigiPot_ClockWrite 000E                                ??_I2C_Init 00A3  
                              ??_I2C_Read 0066                                ??_I2C_Wait 0060  
                 Display_SwapBuffer@LSwap 0001                                ??_I2C_Stop 0065  
                              _cdc_notice 0200                                 ?i2_memcpy 0001  
    Persistant_ReadExternalMemory@LResult 0071                     InitDigiPot@LPrescaler 00D3  
                              _cdc_rx_len 00F6                                _cdc_tx_len 005E  
                       ?_Hub_UpdateValues 0001                                   ??_UnZip 00A1  
            Persistant_LoadBuffer@ABuffer 00AB               __size_of_Display_SwapBuffer 0024  
                            ?i2_WriteChar 000E                              ?i2_WriteData 001F  
                       __end_of_Interrupt 1CEE                  ??_USBCtrlTrfSetupHandler 007A  
                 _USBTicksSinceSuspendEnd 0137                Persistant_Address@AAddress 006C  
                                 ??_floor 00A2                                   ??_ldexp 00AD  
                                 ??_frexp 0065                        ??_Hub_UpdateValues 0044  
                  _USBStdGetStatusHandler 3A22                            I2C_Init@LRatio 00A3  
                               ?_LatchOff 0061                                __pbssBANK0 00E4  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                 ?_Hub_Init 0001  
                      __size_of_eval_poly 00DC                     i2Hub_ClockWrite@value 0001  
                ??_Persistant_ControlByte 0069              Persistant_LoadBuffer@LResult 00AD  
                              WriteChar@i 007C                                WriteData@i 008D  
                         Midi_Write@AData 0069                                 ?_PauseHub 0001  
             __size_of_USBWakeFromSuspend 0038                               _pBDTEntryIn 00EA  
                __end_of_Midi_ResetBuffer 371C             __size_ofi2_DigiPot_LatchWrite 000E  
        __end_of_USBCtrlEPServiceComplete 2A80                  __size_of_Sequencer_Start 0012  
             __size_of_USBCheckCDCRequest 00B0              __size_ofi2_Display_DataWrite 000E  
                                 ?_RunHub 0001                      USBCtrlTrfRxService@i 0060  
                                 ?___ftge 0060                               UnZip@LIndex 00A6  
               i2DigiPot_LatchWrite@value 0001                                   ?___wmul 0060  
                             UnZip@LValue 00A5                          ?_Persistant_Init 0001  
  Persistant_WriteInternalMemory@AAddress 006A                                   _I2C_Ack 50F0  
                             __MidiOutput 0440                                   ?_memcmp 0060  
                               ?___altoft 0068                                   ?_memcpy 0060  
                                 ?_memset 0060                       i2ReadBitArray@AData 001B  
                              _device_dsc 08D3                                 ?___awtoft 0068  
                               ?___ftpack 0060                                 ?___lbtoft 0068  
                        _USBCtrlEPService 3EB6                    ??_Sequencer_TimerEvent 0001  
                              I2C_Write@b 0065                                _ep_data_in 0125  
                               ?___lltoft 0068                             ReadBitArray@i 0089  
              __size_of_DigiPot_DataWrite 0018                                   _T1CKPS0 007E6C  
                   __size_of_Display_Init 013E                         __end_of_WriteChar 44D8  
                       __end_of_WriteData 480C               __end_of_USBCtrlTrfRxService 2852  
                                 _T1OSCEN 007E6B                        _USBCheckStdRequest 313A  
                       _configDescriptor1 0809                        _DigiPot_ClockWrite 540A  
                  ??i2_Display_ClockWrite 0001                                ??i2_memcpy 0007  
             __end_of_USBCtrlTrfTxService 34B6                       _USBStdSetCfgHandler 3054  
                     __size_of_Midi_Write 0258              __size_of_Sequencer_StopTimer 000E  
        ??_Persistant_WriteInternalMemory 006D           ?_Persistant_WriteInternalMemory 006A  
                                 _SSPCON1 000FC6                                   _SSPCON2 000FC5  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 012E  
                     ?_DigiPot_ClockWrite 0001                                   _UIEbits 000F69  
                                 _SSPSTAT 000FC7                              ??i2_LatchOff 000E  
                              ??_LatchOff 006D                                   _UIRbits 000F68  
                              ??_Hub_Init 00A3                    ??_Sequencer_StartTimer 00A3  
                 Hub_DecodeSwitch@AIndex1 0004                   Hub_DecodeSwitch@AIndex2 0001  
                           _cdc_trf_state 00F5                                   _ClockUp 530E  
                                 _LatchOn 5296                     __size_of_Hub_DataRead 0012  
                               _I2C_Start 52D2                                   _InitApp 44D8  
                              ??_PauseHub 0060                                   _ReadBit 4B90  
                                 _InitPin 558E                                 _I2C_Write 51E8  
                                 __Digits 02EC                                   _pCDCDst 011C  
                                 _pCDCSrc 011F                                   __Config 02E0  
                   __size_of_getsUSBUSART 0096                                   __Hparam 0000  
         ??_USBIncrement1msInternalTimers 0060                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 487A                        _DigiPot_LatchWrite 53DA  
                  ??i2_Display_LatchWrite 0001                       i2Midi_ResetBuffer@i 0006  
                     i2Midi_ResetBuffer@j 0005                                   __Lparam 0000  
                                 Zip@AZip 009F                 Persistant_SaveBuffer@LZip 00BE  
                                 __Saving 00F4                     i2_Sequencer_StopTimer 54FA  
              __size_of_USBEnableEndpoint 0044                              _Display_Init 2268  
                         __size_of_RunHub 0012                      ??_USBCheckStdRequest 007A  
                         __size_of___ftge 0092             __size_of_USBCtrlTrfOutHandler 0066  
                    ??_DigiPot_ClockWrite 0060                                   ___awdiv 434E  
                                 ___lbdiv 4F04                                   ___ftadd 19BC  
                                 ___awmod 472C                                   ___lbmod 511E  
                                 ___ftdiv 2F6C                                   ___ftneg 51C2  
                                 ___lldiv 43D4                          ??_USBDeviceTasks 007B  
                         __size_of___wmul 0028                                   ___ftmul 2D84  
                                 ___ftsub 4EC2                                   ___fttol 2C8C  
                       ??_USBStallHandler 0060                 Display_ProcessData@i_2670 007B  
               Display_ProcessData@i_2672 0077                 Display_ProcessData@i_2676 007F  
                            __psmallconst 0800                           ReadBitArray@AIO 007C  
                              ??___altoft 006C                       ?_DigiPot_LatchWrite 0001  
                                 _iUpdate 0133                      __size_ofi2_ClockDown 001E  
                                 __pcinit 45CC       Persistant_WriteExternalMemory@AData 0074  
                         __size_of_memcmp 0072                        getsUSBUSART@buffer 006B  
                         __size_of_memcpy 0048                                ??___awtoft 006B  
                              ??___ftpack 0065                                ??___lbtoft 006B  
                       __end_of_eval_poly 33DE                           __size_of_memset 0030  
               __end_of_configDescriptor1 084C                                   __ramtop 0800  
              __end_of_Persistant_Address 4F7C                                ??___lltoft 006C  
                                 __ptext0 08EA                                   __ptext1 46BA  
                                 __ptext2 4080                                   __ptext3 479E  
                                 __ptext4 4458                                   __ptext5 5296  
                                 __ptext6 52B4                                   __ptext7 1E70  
                                 __ptext8 4FF0                                   __ptext9 5090  
                                 _inPipes 00E4                    Persistant_LoadBuffer@i 00B9  
                      __end_ofi2_LatchOff 5386               _USBDeferOUTDataStagePackets 0138  
                            ??_USBSuspend 0074                              __size_of_Zip 0124  
                   __size_of_Hub_SetValue 0068                              __size_of_exp 01F8  
                            __size_of_log 012A                              __size_of_pow 0182  
                        ___awmod@dividend 0064                        __end_of_USB_CD_Ptr 0809  
               __size_ofi2_Hub_ClockWrite 000E                              _Hub_DataRead 54BE  
                            __USBBufferIn 00FD           __size_of_USBCtrlTrfSetupHandler 0098  
          __size_of_Persistant_LoadBuffer 00C0                            __pintcode_body 1B6A  
           __end_of_Persistant_LoadBuffer 396A                      end_of_initialization 4636  
                            _getsUSBUSART 4080                        i2_Midi_ResetBuffer 371C  
                    ??_DigiPot_LatchWrite 0060                                   exp@sign 00B7  
                      __end_of_USB_SD_Ptr 0807                                   memcmp@n 0064  
                                 memcpy@d 0066                                   memcpy@n 0064  
                                 memcpy@s 0068                       _pBDTEntryEP0OutNext 00F0  
                 __size_ofi2_Hub_DataRead 000C                                   memset@c 0062  
                                 memset@n 0064                                   memset@p 0066  
                           __Lmediumconst 0000                   Display_ProcessData@LBit 0073  
                                 int_func 1B6A                           _USB1msTickCount 0118  
         _dummy_encapsulated_cmd_response 01E7           __size_of_Persistant_ControlByte 0036  
                               i2u1002_40 1C7E                                 i2u1003_40 1CA2  
                ?_USBStdFeatureReqHandler 0001                                ?_I2C_Start 0001  
                              ?_I2C_Write 0001                       ?i2_Midi_ResetBuffer 0001  
                   ??_USBStdSetCfgHandler 0074                 __size_ofi2_Hub_CopyBuffer 0024  
                         ___lldiv@divisor 0064                             ?i2_Midi_Write 0001  
                              ?_CDCInitEP 0001                                   pow@sign 00C4  
                         ___lldiv@counter 006C                        __end_of_USBSuspend 50C0  
                 _USBCtrlEPAllowDataStage 3CD6                                 _RCSTAbits 000FAB  
                                 postdec1 000FE5                                   postdec2 000FDD  
                   __size_of_ReadBitArray 004C                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
              __end_of_Display_ClockWrite 5482                              _Hub_SetValue 4950  
                _USBCtrlEPServiceComplete 2976                 __size_ofi2_Hub_LatchWrite 000E  
                       ??_Sequencer_Start 0060                _USBStatusStageEnabledFlag1 013B  
              _USBStatusStageEnabledFlag2 013A                        USBEnableEndpoint@p 0069  
                               i2_ClockUp 5386                                 _PORTBbits 000F81  
          __size_of_Persistant_SaveBuffer 00A0             __end_of_Persistant_SaveBuffer 3E16  
                               i2_LatchOn 534A                                 i2_ReadBit 4C82  
                      Hub_SetValue@LValue 000C                      ??i2_Midi_ResetBuffer 0003  
                _Hub_ClockWrite$intlevel0 5428                                 __I2CCount 012A  
                        ___lbmod@dividend 0061                            i2WriteChar@AIO 000E  
                          i2WriteData@AIO 0022                                main@LValue 00DE  
                      _BothEP0OutUOWNsSet 013C                   DigiPot_ClockWrite@value 0060  
               __size_ofi2_Hub_ReadSwitch 004C                         Hub_UpdateValues@i 0046  
                       __size_of_I2C_Init 00A2                         __size_of_I2C_Read 003A  
                       __size_of_I2C_Wait 0086                         __size_of_I2C_Stop 001E  
        ??_Persistant_WriteExternalMemory 0075           ?_Persistant_WriteExternalMemory 0072  
                               Hub_Init@i 00A5                 USBConfigureEndpoint@EPNum 0065  
             __end_of_ConfigureOscillator 5592                ?_USBCtrlEPAllowStatusStage 0001  
                    __size_ofi2_WriteChar 0076                      __size_ofi2_WriteData 006A  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0070                                 _USTATcopy 00FE  
              __end_of_Display_LatchWrite 5452                            Midi_Read@AData 0060  
                             ___lbmod@rem 0063                 i2Hub_ReadSwitch@LBitArray 002C  
            __end_of_USBTransferOnePacket 2B86                              ?_InitDigiPot 0001  
                     Hub_ClockWrite@value 0060                               ___ftdiv@exp 008E  
                            _ReadBitArray 4CD0                            ??i2_Midi_Write 0003  
               i2Display_LatchWrite@value 0001                              ??_Midi_Write 0062  
                  ?i2_Sequencer_StopTimer 0001                   __size_ofi2_ReadBitArray 0048  
                             ___ftmul@exp 007B                        InitDigiPot@LPeriod 00CD  
         ??_Persistant_ReadInternalMemory 006A                    _USBCtrlTrfSetupHandler 3F50  
                               _ClockDown 532C                            __end_of_RunHub 54AC  
                          InitApp@LResult 00D5                     __end_of_USBDeviceInit 2124  
                          __end_of___ftge 423C     __end_of_USBIncrement1msInternalTimers 5296  
  __size_of_USBIncrement1msInternalTimers 0020             _USBIncrement1msInternalTimers 5276  
                          __end_of___wmul 519C     Persistant_ReadExternalMemory@AAddress 006F  
                               i2memcpy@d 0007                                 i2memcpy@n 0005  
                               i2memcpy@s 0009                                ?i2_ClockUp 0002  
                  _Persistant_ControlByte 5028                            __end_of_memcmp 472C  
                          __end_of_memcpy 4DB0                            __end_of_memset 50F0  
                              ?i2_LatchOn 0002                                floor@expon 00A5  
                       _USBBusIsSuspended 013D                                ?i2_ReadBit 000E  
                       ?_Hub_DecodeSwitch 0001                                 _Midi_Init 23A6  
                               _Midi_Read 423C                       start_initialization 45CC  
                 ?_USBStdGetStatusHandler 0001                                eval_poly@d 009F  
                              eval_poly@n 00A1                                eval_poly@x 009C  
           USBCtrlTrfRxService@byteToRead 0061                        ??_Hub_DecodeSwitch 0002  
                     i2_Display_DataWrite 5540                                ldexp@value 00A8  
                   __end_of_InitConnector 5090                               __end_of_Zip 2976  
                             __end_of_exp 19BC                               __end_of_log 272E  
                             __end_of_pow 1E70                        __end_of_Midi_Write 134A  
                             _cdc_data_rx 0300                         __size_ofi2_memcpy 0044  
                             _cdc_data_tx 0340              __end_of_USBConfigureEndpoint 4080  
            __size_of_Display_ProcessData 02A0           __end_of_USBStdFeatureReqHandler 0E52  
           i2Midi_ResetBuffer@AMidiBuffer 0001         __end_of_USBCtrlEPAllowStatusStage 3584  
                               _Interrupt 0008                                frexp@value 0060  
                __end_of_USBCtrlEPService 3F50                                 UnZip@AZip 009F  
            __end_ofi2_DigiPot_ClockWrite 5532                         __size_of_LatchOff 001E  
                       __size_of_Hub_Init 00A0                               ??_I2C_Start 0065  
                             ??_I2C_Write 0065                 ??_USBCtrlEPAllowDataStage 0061  
                               __Modified 0134                               ??_CDCInitEP 006C  
                          USBDeviceInit@i 0068                 __size_of_Hub_UpdateValues 00F2  
          Persistant_ControlByte@AAddress 0066                         ?_Midi_ResetBuffer 0060  
                               Zip@LIndex 00AA                      ?i2_Display_DataWrite 0001  
                               Zip@LBytes 00A8                    _pBDTEntryEP0OutCurrent 00F2  
                       __size_of_PauseHub 000E                                  ??_RunHub 0060  
                 USBTransferOnePacket@dir 0060                    Persistant_SaveBuffer@i 00C8  
                 USBTransferOnePacket@len 0063                       _Sequencer_StopTimer 54D0  
                 __size_of_Hub_ClockWrite 0018                                  ??___ftge 0066  
                              ?_ClockDown 0061                                 Zip@i_3504 00AD  
                                ??___wmul 0064                        ??_Midi_ResetBuffer 0062  
                     _USBStdGetDscHandler 24D6                               __pdataBANK2 02EC  
                        __CFG_LPT1OSC$OFF 000000                                  ?_I2C_Ack 0001  
                                ??_memcmp 0066                                  ??_memcpy 0066  
                                ??_memset 0066                               I2C_Ack@AAck 0065  
                       __size_of___altoft 007A                             i2LatchOff@AIO 0002  
                  _USBActiveConfiguration 00FF            __end_of_USBStdGetStatusHandler 3AD4  
              __end_of_Display_SwapBuffer 5254              __end_ofi2_DigiPot_LatchWrite 5524  
                       __size_of___awtoft 003A                         __size_of___ftpack 00B0  
                 __size_of_Hub_CopyBuffer 0026                         __size_of___lbtoft 0028  
                       __size_of___lltoft 005E              __size_ofi2_DigiPot_DataWrite 000E  
                              ?_Midi_Init 0001                                ?_Midi_Read 0060  
                             __pbssCOMRAM 005C                             __pcstackBANK0 0060  
            __size_of_USBCtrlTrfInHandler 00C6                      ?_Sequencer_StopTimer 0001  
                               _WriteChar 4458                                 _WriteData 479E  
                        i2_Hub_ClockWrite 5532                      ?_USBStdGetDscHandler 0001  
                 __size_of_Hub_LatchWrite 0018                         ReadBitArray@AData 007A  
                              ?_Interrupt 0001                            i2_Hub_DataRead 5578  
              __end_of_USBWakeFromSuspend 5028                                  ?_ClockUp 0061  
                         _USBStallHandler 4E80                    DigiPot_DataWrite@value 0060  
                            _pBDTEntryOut 010E                                  ?_LatchOn 0061  
              __end_of_USBCheckCDCRequest 3B84                             I2C_Read@LData 0066  
                                ?_InitApp 0001                                  ?_ReadBit 006D  
                                ?_InitPin 0060                          i2_Hub_CopyBuffer 520C  
                   ??i2_Display_DataWrite 0001                                 _main$2436 00D9  
  __end_of_Persistant_WriteInternalMemory 4C32   __size_of_Persistant_WriteInternalMemory 0050  
          _Persistant_WriteInternalMemory 4BE2                   __size_of_Hub_ReadSwitch 0050  
             _DigiPot_DataWrite$intlevel0 53F8                                 __pintcode 0008  
         ??_Persistant_ReadExternalMemory 0071                                  ?___awdiv 0060  
                               __ptext100 2D84                                 __ptext101 4EC2  
                                ?___lbdiv 0060                                 __ptext110 5590  
                               __ptext102 19BC                                 __ptext103 51C2  
                               __ptext120 534A                                 __ptext112 48E6  
                               __ptext104 2F6C                                 __ptext121 5368  
                               __ptext113 4644                                 __ptext105 4FB6  
                               __ptext130 5516                                 __ptext122 4D1C  
                               __ptext114 54FA                                 __ptext106 4ADE  
                               __ptext131 5524                                 __ptext123 4E3C  
                               __ptext115 134A                                 __ptext107 3B84  
                               __ptext140 0000                                 __ptext132 5532  
                               __ptext124 4DB0                                 __ptext116 371C  
                               __ptext108 505E                                 __ptext133 5540  
                               __ptext125 4C82                                 __ptext117 520C  
                               __ptext109 558E                                  ?___ftadd 0090  
                               __ptext134 554E                                 __ptext126 5578  
                               __ptext118 5254                                 __ptext135 555C  
                               __ptext127 5386                                 __ptext119 2E7A  
                               __ptext136 556A                                 __ptext128 53A4  
                               __ptext137 4950                                 __ptext129 5508  
                               __ptext138 159E                                 __ptext139 5230  
                                ?___awmod 0064                                  ?___lbmod 0060  
                                ?___ftdiv 0081                                  ?___ftneg 0060  
                                ?___lldiv 0060                                  ?___ftmul 0072  
                                ?___ftsub 009C                                  ?___fttol 0090  
                        i2_Hub_LatchWrite 556A    Persistant_WriteExternalMemory@AAddress 0072  
                             ??i2_ClockUp 000E     __end_of_Persistant_ReadInternalMemory 54FA  
  __size_of_Persistant_ReadInternalMemory 000E             _Persistant_ReadInternalMemory 54EC  
                           i2ReadBit@LBit 001A                               ??i2_LatchOn 000E  
                 Display_ClockWrite@value 0060                      _USBTransferOnePacket 2A80  
                             ??i2_ReadBit 001A                               __smallconst 0800  
           __size_of_Sequencer_TimerEvent 0022                                  _I2C_Init 3C34  
                                _I2C_Read 4F7C                                  _I2C_Wait 42C8  
                               _eval_poly 3302                                  _I2C_Stop 52F0  
                __size_of_Persistant_Init 0018                    _Hub_DataRead$intlevel0 54C4  
                    __end_ofi2_Midi_Write 159E                         Midi_ResetBuffer@i 0065  
                       Midi_ResetBuffer@j 0064                     ??_Sequencer_StopTimer 0060  
           __size_ofi2_Display_ClockWrite 000E                            __size_of_UnZip 0106  
                              ?_WriteChar 006D                                ?_WriteData 007E  
                        i2_Hub_ReadSwitch 4D1C              __end_of_USBCtrlTrfOutHandler 4A1E  
                   ??_USBStdGetDscHandler 0060                               _ep_data_out 0122  
                          __size_of_floor 00E4                            __size_of_ldexp 00CE  
                  __end_ofi2_Hub_DataRead 5584                            __size_of_frexp 0094  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 0060  
                      _Persistant_Address 4F42              __size_of_USBCtrlTrfTxService 00D8  
                          ___wmul@product 0064             __size_of_Sequencer_StartTimer 0054  
              ??_USBCtrlEPServiceComplete 0061               Midi_ResetBuffer@AMidiBuffer 0060  
                         _Sequencer_Start 54AC                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                       ?_Persistant_Address 006C  
                    __size_of_InitDigiPot 0144                            i2_ReadBitArray 4DB0  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                i2u620_40 554A                                  i2u622_40 553C  
                                i2u630_40 5512                                  i2u624_40 5574  
                                i2u616_40 5566                                  i2u618_40 5558  
                                i2u626_40 552E                                  i2u628_40 5520  
                                i2u732_48 4C8A                                  i2u733_41 4CAA  
                                i2u732_49 4C9E                                  i2u734_41 4CC0  
                            ClockDown@AIO 0061                                  i2u930_41 2EBE  
                                i2u851_40 16A2                                  i2u861_40 17B2  
                                i2u853_40 16AC                                  i2u852_48 16A4  
                                i2u933_40 2F60                                  i2u846_40 161C  
                                i2u694_40 5580                                  i2u863_40 17BC  
                                i2u862_48 17B4                                  i2u856_40 172C  
                                i2u848_40 1626                                  i2u847_48 161E  
                                i2u695_48 538E                                  i2u696_48 53AC  
                                i2u785_41 4DD2                                  i2u929_41 2EA8  
                                i2u858_40 1736                                  i2u857_48 172E  
                                i2u962_40 37E0                                  i2u882_41 4D2E  
                                i2u890_48 5370                                  i2u955_41 48F0  
                                i2u884_41 465C                              i2ClockUp@AIO 0002  
                                i2u957_41 4916                                  i2u885_48 4670  
                                i2u958_40 4938                                  i2u885_49 469C  
                                i2u886_44 4692                                  i2u886_45 468E  
                                i2u887_41 46A6                                  i2u959_41 4942  
                                i2u992_41 1BDA                             ??i2_ClockDown 000E  
                                i2u889_48 5352                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F70                               ??_ClockDown 006D  
           __size_ofi2_Display_LatchWrite 000E                _USBDeferINDataStagePackets 0139  
             __size_of_USBCheckStdRequest 00E4               __size_of_DigiPot_ClockWrite 0018  
                                _UCONbits 000F6D                    Hub_SetValue@AIncrement 000A  
                    _USBConfigureEndpoint 3FE8                          I2C_Wait@LTimeOut 0062  
     Persistant_WriteInternalMemory@AData 006C                    Display_DataWrite@value 0060  
                        __size_of_I2C_Ack 002E          __size_of_USBStdFeatureReqHandler 02B0  
                       ___wmul@multiplier 0060                     ?_USBTransferOnePacket 0060  
                    i2_DigiPot_ClockWrite 5524                      ??_Persistant_Address 006F  
                             ??_Midi_Init 006D                                ?_eval_poly 009C  
                             ??_Midi_Read 0064                              _RemoteWakeup 013E  
                                i2_memcpy 4E3C                            Interrupt@LData 005B  
                      _Display_ClockWrite 546A                   __end_of_USBStallHandler 4EC2  
                         i2ReadBitArray@i 002A                           ?i2_Hub_DataRead 0001  
                               copy_data0 45E0               ??_USBCtrlEPAllowStatusStage 0060  
                   Midi_Write@AMidiBuffer 0060                                  _LatchOff 52B4  
                                _Hub_Init 3E16               __end_of_USBStdSetCfgHandler 313A  
             __size_of_DigiPot_LatchWrite 0018                               ??_Interrupt 0048  
                     ?_Display_ClockWrite 0001                                  __DigiPot 01D9  
                 ??i2_Sequencer_StopTimer 0001                     _Persistant_LoadBuffer 38AA  
                  __end_ofi2_ReadBitArray 4DF8                        __end_of_device_dsc 08E5  
                        __size_of_ClockUp 001E                     i2Hub_LatchWrite@value 0001  
                                __Display 020A                                 frexp@eptr 0063  
                              _EECON1bits 000FA6                                  _PauseHub 54DE  
                 ?_USBCtrlTrfSetupHandler 0001                          __size_of_LatchOn 001E  
              Display_ProcessData@ALoaded 006C                   USBStdGetStatusHandler@p 0061  
                        __size_of_InitApp 007A                          _Hub_UpdateValues 2E7A  
                                __Hrparam 0000                          __size_of_ReadBit 0052  
                        __size_of_InitPin 0002                      i2_DigiPot_LatchWrite 5516  
              Display_ProcessData@AValues 006A                                 memcpy@tmp 006A  
                                __Lrparam 0000                            _Hub_ClockWrite 5422  
                  USBTransferOnePacket@ep 0068                Display_ProcessData@APushed 006D  
  __end_of_Persistant_WriteExternalMemory 487A   __size_of_Persistant_WriteExternalMemory 006E  
          _Persistant_WriteExternalMemory 480C              _DigiPot_LatchWrite$intlevel0 53E0  
                                _SetupPkt 000430                        _Display_LatchWrite 543A  
                    Display_ProcessData@i 0079                      Display_ProcessData@j 007D  
                    Display_ProcessData@k 0075                   ?_Persistant_ControlByte 0066  
                   ?_USBConfigureEndpoint 0060                              i2LatchOn@AIO 0002  
                     _Display_ProcessData 0E52              _Display_LatchWrite$intlevel0 5440  
                        __size_of___awdiv 0086                          __size_of___lbdiv 003E  
                        __size_of___ftadd 01AE                          __size_of___awmod 0072  
                        __size_of___lbmod 002E                          __size_of___ftdiv 00E8  
                        __size_of___ftneg 0026                          __size_of___lldiv 0084  
                                ___altoft 4552                          __size_of___ftmul 00F6  
                        __size_of___ftsub 0042                          __size_of___fttol 00F8  
                    ??_Display_ClockWrite 0060                                  ___awtoft 4FB6  
                                ___ftpack 3B84                                  ___lbtoft 514C  
                                ___lltoft 4ADE     __end_of_Persistant_ReadExternalMemory 4A80  
  __size_of_Persistant_ReadExternalMemory 0062             _Persistant_ReadExternalMemory 4A1E  
                     __end_ofi2_ClockDown 53C2                               _line_coding 01EF  
                   ?i2_DigiPot_ClockWrite 0001                       ?_Display_LatchWrite 0001  
                          _Hub_CopyBuffer 519C                        I2C_Init@AFrequency 009F  
                                _exp$4460 00B2               __size_ofi2_Midi_ResetBuffer 00C8  
                   _Persistant_SaveBuffer 3D76            ?_Persistant_ReadInternalMemory 0068  
                 __size_of_USBDeviceTasks 016C                             ??i2_WriteChar 001A  
                           ??i2_WriteData 002E                               ??_WriteChar 0079  
                             ??_WriteData 008D                                  __ptext10 4E80  
                                __ptext11 5276                                  __ptext20 3A22  
                                __ptext12 1FDC                                  __ptext21 24D6  
                                __ptext13 3EB6                                  __ptext30 272E  
                                __ptext22 0BA2                                  __ptext14 3F50  
                                __ptext31 34B6                                  __ptext23 4A80  
                                __ptext15 2976                                  __ptext40 10F2  
                                __ptext32 37E4                                  __ptext24 3AD4  
                                __ptext16 3CD6                                  __ptext41 423C  
                                __ptext33 33DE                                  __ptext25 487A  
                                __ptext17 313A                                  __ptext50 51E8  
                                __ptext42 396A                                  __ptext34 54D0  
                                __ptext26 2A80                                  __ptext18 3054  
                                __ptext51 52D2                                  __ptext43 4BE2  
                                __ptext35 4B3C                                  __ptext27 4DF8  
                                __ptext19 50C0                                  __ptext60 53C2  
                                __ptext52 52F0                                  __ptext44 44D8  
                                __ptext36 549A                                  __ptext28 3FE8  
                                __ptext61 3C34                                  __ptext53 4F7C  
                                __ptext45 54AC                                  __ptext37 3D76  
                                __ptext29 49B8                                  __ptext70 4B90  
                                __ptext62 23A6                                  __ptext54 50F0  
                                __ptext46 480C                                  __ptext38 2852  
                                __ptext71 54BE                                  __ptext63 43D4  
                                __ptext55 42C8                                  __ptext47 4A1E  
                                __ptext39 54DE                                  __ptext80 546A  
                                __ptext72 530E                                  __ptext64 3652  
                                __ptext56 38AA                                  __ptext48 4F42  
                                __ptext81 5482                                  __ptext73 532C  
                                __ptext65 2124                                  __ptext57 434E  
                                __ptext49 5028                                  __ptext90 2604  
                                __ptext82 519C                                  __ptext74 53DA  
                                __ptext66 514C                                  __ptext58 2B86  
                                __ptext91 17C4                                  __ptext83 4D68  
                                __ptext75 53F2                                  __ptext67 3E16  
                                __ptext59 54EC                                  __ptext92 3584  
                                __ptext84 0E52                                  __ptext76 540A  
                                __ptext68 4C32                                  __ptext93 321E  
                                __ptext85 511E                                  __ptext77 5422  
                                __ptext69 4CD0                                  __ptext94 4116  
                                __ptext86 4F04                                  __ptext78 543A  
                                __ptext95 2C8C                                  __ptext87 472C  
                                __ptext79 5452                                  __ptext96 41AA  
                                __ptext88 2268                                  __ptext97 4552  
                                __ptext89 1CEE                                  __ptext98 3302  
                                __ptext99 5174                            _Hub_LatchWrite 5482  
                    ?_Display_ProcessData 006A                              i2ReadBit@AIO 000E  
                 __end_of_Sequencer_Start 54BE                                  _pow$4458 00BE  
                                _pow$4459 00C1                         ??_Persistant_Init 00A6  
                           __size_of_Load 00B8                      main@LEncSwitchPushed 00DC  
          __end_of_USBCtrlTrfSetupHandler 3FE8                             __size_of_main 02B8  
                       ?_USBCtrlEPService 0001                      ??_Display_LatchWrite 0060  
               __size_of_Hub_DecodeSwitch 0226                           ?i2_ReadBitArray 001B  
                  __end_of_Hub_ClockWrite 543A                     ?i2_DigiPot_LatchWrite 0001  
                      ??_USBCtrlEPService 007A              __size_of_ConfigureOscillator 0002  
                     i2_DigiPot_DataWrite 5508                            _Hub_ReadSwitch 4C32  
                     _USBCtrlTrfInHandler 37E4                         _Display_DataWrite 5452  
          __end_of_Persistant_ControlByte 505E                 i2DigiPot_ClockWrite@value 0001  
                   Hub_SetValue@AMaxValue 0008                                  _outPipes 0100  
                __end_ofi2_Hub_ClockWrite 5540                      _USBCtrlTrfOutHandler 49B8  
                   Hub_SetValue@AMinValue 0007                                  int$flags 005F  
                         I2C_Wait@LResult 0064                        ?_Display_DataWrite 0001  
               _USBCtrlEPAllowStatusStage 34B6                   InitConnector@AConnector 0062  
                  __end_of_Hub_CopyBuffer 51C2                    ??_USBTransferOnePacket 0064  
                           __USBBufferOut 0132                     __size_ofi2_Midi_Write 0254  
                           Display_Init@i 00D1                         _Display_Init$4455 00CB  
                       _Display_Init$4456 00CE                     __CFG_CPUDIV$OSC1_PLL2 000000  
                                exp@coeff 0880                                  log@coeff 089E  
                     ??_Display_DataWrite 0060                 _USBDeferStatusStagePacket 00F7  
                    ?i2_DigiPot_DataWrite 0001                                _INTCONbits 000FF2  
                __end_ofi2_Hub_CopyBuffer 5230                               ??_eval_poly 00A3  
               __size_of_Midi_ResetBuffer 00CA                                  memcmp@s1 0060  
                                memcmp@s2 0062                      ?_USBCtrlTrfInHandler 0001  
                  __end_of_Hub_LatchWrite 549A                                  memcpy@d1 0060  
                                memcpy@s1 0062             USBCtrlTrfTxService@byteToSend 0060  
                                memset@p1 0060                  Display_ProcessData@LData 0072  
                   ??_Display_ProcessData 006E                          ?_USBStallHandler 0001  
                USBStdFeatureReqHandler@p 0078                  __end_ofi2_Hub_LatchWrite 5578  
                                intlevel2 0000                    ?_Persistant_LoadBuffer 00AB  
               Sequencer_StartTimer@ALoop 00A2                    __size_of_USBDeviceInit 0148  
               Sequencer_StartTimer@ATime 009F   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4ADE  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0072  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 006C           _USER_USB_CALLBACK_EVENT_HANDLER 4A80  
                      _Display_SwapBuffer 5230                       __end_ofi2_WriteChar 46BA  
                     __end_ofi2_WriteData 4950                          ___lldiv@dividend 0060  
                  __end_of_Hub_ReadSwitch 4C82                 __end_of_Display_DataWrite 546A  
                         ?_Hub_ClockWrite 0001                              i2_Midi_Write 134A  
                              ClockUp@AIO 0061                       ?_Display_SwapBuffer 0001  
                           ?_Display_Init 0001                  __end_ofi2_Hub_ReadSwitch 4D68  
                  ??_USBConfigureEndpoint 0061                     ?_USBCtrlTrfOutHandler 0001  
                             i2_ClockDown 53A4                    __size_of_InitConnector 0032  
                     _USBCtrlTrfRxService 272E                        _USBWakeFromSuspend 4FF0  
                          i2ClockDown@AIO 0002                 Persistant_LoadBuffer@LZip 00AE  
                 _USBStdFeatureReqHandler 0BA2              Persistant_SaveBuffer@ABuffer 00B1  
                         ?_Hub_CopyBuffer 0001                        _USBCheckCDCRequest 3AD4  
                  ??i2_DigiPot_ClockWrite 0001                       _USBCtrlTrfTxService 33DE  
        Display_ProcessData@ADigitalValue 0071                     ??i2_DigiPot_DataWrite 0001  
                  ?_Persistant_SaveBuffer 00B1                       ?_USBWakeFromSuspend 0001  
                        ___lldiv@quotient 0068                     ??_USBCtrlTrfInHandler 0061  
                   _USBAlternateInterface 01F6                      Midi_Read@AMidiBuffer 0062  
                     ?_USBCheckCDCRequest 0001                           ?_Hub_LatchWrite 0001  
                    ??_Display_SwapBuffer 0001              Persistant_SaveBuffer@LResult 00BD  
          ?_Persistant_ReadExternalMemory 006F                       USBEnableEndpoint@ep 006B  
                         _endpoint_number 00F9                             ?_Hub_DataRead 0001  
                 i2Midi_Write@AMidiBuffer 0001                   DigiPot_LatchWrite@value 0060  
                    ?_USBCtrlTrfRxService 0001                             ?_getsUSBUSART 006B  
                        ?_Sequencer_Start 0001                        __CFG_FOSC$HSPLL_HS 000000  
                              i2_LatchOff 5368                  ?_USBCtrlEPAllowDataStage 0001  
                            Load@AChannel 00C6               __end_ofi2_Display_DataWrite 554E  
                    ?_USBCtrlTrfTxService 0001                             main@LMidiData 00DF  
            _USBStatusStageTimeoutCounter 00F8              __end_of_Sequencer_TimerEvent 5276  
                  ??i2_DigiPot_LatchWrite 0001                           ?_Hub_ReadSwitch 0001  
                    ??_USBWakeFromSuspend 0074                       Hub_LatchWrite@value 0060  
                        i2WriteChar@AChar 001C                USBTransferOnePacket@handle 0069  
                        i2WriteData@AData 001F                          i2WriteData@ASize 0021  
            __end_ofi2_Display_ClockWrite 556A                      ??_USBCheckCDCRequest 0060  
                              _USB_CD_Ptr 0807                                __I2CResult 012C  
                          ??_Display_Init 00C9                         i2Midi_Write@AData 000A  
